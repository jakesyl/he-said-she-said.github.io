--- Log opened Tue Jan 08 00:00:10 2013
--- Day changed Tue Jan 08 2013
00:00 < p_l_a_y> thanks
00:00 <@Nexxy> search for others here: https://npmjs.org/
00:00 < p_l_a_y> will do thank you sir
00:00 <@Nexxy> not a sir
00:00 <@Nexxy> but you're welcome
00:00 < p_l_a_y> :)
00:01 < p_l_a_y> sorry thank you maam
00:03 < Zak> npm is the greatest. programming js without it, is like walking around with no eyes
00:06 < styol> Virunga: was that bracket message for moi?
00:07 < Virunga> styol: unfortunately no. :(
00:08 < Virunga> oh, do you mean if that was for you... no.
00:08 < styol> Virunga: gotcha.. yeah regarding your query, the }{ before "time" is a little strange like its two json strings or something
00:09 < domo> I'm asking this here since the app is written in nodejs, but it's more of a general question about the storing of data. I have about 2mm incoming searches a day and I'd like to store the keywords of the search along with the user's IP and possibly some more small data (some cookie values, maybe some geo data about the user, etc). whats a good db to look at for something like this? the actual saving of data does not need to be real time (fo
00:09 < domo> anything that works nicely with node is definitely a plus
00:10 < CoverSlide> lotsa people like mongo
00:10 < Virunga> styol: yeah, i didn't think about that, maybe you're right. But how is it possible? 
00:12 < Zak> domo: there's lots of options. redis, mongo, one of Amazon's storage services
00:12 < Virunga> I'm sending literal objects through a tcp connection, is it ok stringify the obj and then parse it? Or this can create known problems like the one above?
00:13 < Zak> amazon is a great option, because it takes the entire burden of scaling, hosting, backup etc from you
00:13 < Virunga> stringify -> send -> parse
00:13 < domo> zak, yeah I was thinking that
00:13 < domo> I just need to weigh out cost
00:13 < Zak> Amazon somewhat recently took charge of the nodejs libraries too
00:13 < domo> can I interface with amazon remotely?
00:13 < Zak> domo: the amazon option will be pretty cost effective
00:13 < Zak> because you'll usually only pay for what you use
00:13 < domo> I don't host with amazon now - could I do something where I setup a queue and push the data to that
00:13 < Zak> now sure what you mean by interfacing with amazon remotely
00:14 < domo> then the queue flushes to amazon?
00:14 < Zak> you would need to run a node.js app somewhere
00:14 < domo> well I'm hosted with X right now.. that's where the node app is
00:14 < Zak> so it would be potentially in place with your existing infrastructure
00:14 < Zak> and it would talk to amazon
00:14 < Zak> you can sign up for a free account with amazon too
00:14 < Zak> so you can test all of this at a small scale
00:15 < domo> ok are you familiar with amazon?
00:15 < domo> the storage service
00:15 < domo> i used ec2
00:15 < Zak> i dabbled with it a while ago. it's not incredibly hard
00:15 < Zak> the nodejs libraries are written well and are intuitive
00:15 < domo> whats the name of the service you're referring me to .. dynamo? (if thats right)
00:15 < domo> dynamodb or something (going off memory here)
00:16 < Zak> yeah, dynamo is one of their nosql products
00:16 < Zak> i think there's another one called simpledb
00:16 < Zak> http://aws.amazon.com/simpledb/
00:16 < Zak> http://aws.amazon.com/dynamodb/
00:16 < Zak> you would have to figure out which is suitable for you
00:17 < Zak> or even if you want to use a sql for some reason in the future
00:17 < styol> Virunga: do you experience the same problem when sending / reading out a simple string?
00:18 < domo> yeah I think dynamodb is what id look at
00:18 < domo> given the featureset
00:18 < Zak> just sign up for a free account and give it a try
00:18 < domo> since im going to want to query the data
00:18 < Virunga> styol: no, i sent lots of other similar messages. I'm starting to thing it happened the client to send a message and a half (sorry for my english)
00:18 < domo> yeah I will.. I think I'll setup a queue on my current infrastructure to write to the db too
00:19 < Zak> all i would just say is, if you're looking at writing for large traffic, make sure you write your nodejs app so it can scale out
00:19 < domo> so my nodejs instances arent affected
00:19 < domo> because i have php apps writing to the db too
00:19 < Zak> ok cool
00:19 < domo> so sending all the data to the queue would create a central writer
00:19 < domo> perfect
00:20 < styol> Virunga: interesting indeed
00:21 < Virunga> I should find a options or mechanism to avoid to send more than one obj per time
00:22 < Virunga> But i don't have the minimum idea how ahahah
00:22 < styol> Virunga: or combine them into a single one
00:22 < Virunga> styol: mm, but the objs are like a stream
00:22 < styol> ah
00:25 < Virunga> god...
00:26 < Virunga> well, thanks for you support styol :)
00:27 < styol> Virunga: no worries, sorry I couldn't help more
00:39 < mAritz> Virunga: you could try using msgpack, that has a streaming api built-in and is faster than json for most objects. https://github.com/msgpack/msgpack-node
00:39 < Virunga> mAritz: hey, thank you!!
00:42 < Virunga> Awesome.
01:29 < manuelbieh> hey
01:29 < manuelbieh> anyone here using passport for authentication?
01:30 < manuelbieh> i'm wondering if there's a way to set a persistent cookie when using a localStrategy
01:42 < scuba323> Hey guys. Newbie here. I keep getting this error on install :/ any help?! :)  File "./configure", line 224     '''       ^ SyntaxError: invalid syntax
01:43 < livinded> can you provide some more context
01:43 < scuba323> I have Ubuntu 10.04
01:43 < livinded> what version of node/
01:43 < scuba323> Trying to build when I run ./configure 
01:43 < scuba323> v0.8.16
01:44 < SpNg> what is the best way to sync a websocket connection over multiple node.js processes on different servers? Say I wanted to scale a chat application
01:44 < scuba323> Latest i believe 
01:44 < livinded> scuba323: what version of python do you have?
01:44 < scuba323> hmm
01:45 < scuba323> hold on ill check
01:45 < scuba323> 3.1.2
01:45 < livinded> I think ''' syntax either either 2.x or 3.x only
01:45 < livinded> ya, try installing python 2
01:45 < scuba323> Alright. Hold on :P
01:45 < livinded> I've had issues with that in the past
01:46 < sufian_> Hey guys 
01:46 < sufian_> Anyone around
01:46 < scuba323> Ya. I have tried installing this before but i just gave up didn't realzize it could have been my py version. I'll change it quick 
01:46 < livinded> SpNg: you don't 'pass sockets'
01:46 < livinded> scuba323: ya it's annoying and something that took me a LONG time to figure out
01:46 < danyp> hey
01:47 < scuba323> Hmm. If I run python2 it gives me 2.6.5 can i run it by default? I am so new to python :D haha
01:47 < danyp> anybody uses flash media server?
01:47 < livinded> SpNg: use a pub/sub system to communicate between different node instances
01:47 < danyp> what would be a good practice for a cross-platform Chat application ?
01:47 < danyp> node.js good for it?
01:47 < SpNg> livinded: I understand you can't pass the socket, but how does one scale a chat server with node.js? When another server is necessary due to resource demands, how would you pass messages between clients connected on each server?
01:48 < livinded> scuba323: the way I fixed it was symlinking python2 to ~/bin/python and having $HOME/bin higher in the path
01:48 < SpNg> livinded: you said that faster than I could type. ;-)
01:48 < livinded> I'm sure there's a better way like python_select or something but I was lazy and it was easy
01:49 < SpNg> livinded: so with a pub sub system, I would need to setup master / slave replication
01:49 < scuba323> Thank yo so much livinded! Great great help
01:49 < livinded> scuba323: worked?
01:49 < scuba323> I have to figure out how to symlink it! :P haha I am newbie like i said haha
01:50 < livinded> SpNg: what? why? when messages come in just drop them into the the queue
01:51 < scuba323> ln -s /usr/bin/python2.4  /usr/bin/python gives me this : ln: creating symbolic link `/usr/bin/python': File exists
01:51 < livinded> scuba323: type this into your terminal "export PATH=$HOME/bin:$PATH;mkdir ~/bin;ln -s $(which python2) ~/bin/python;"
01:51 < scuba323> oh!
01:51 < scuba323> ill try that livinded 
01:52 < livinded> /usr/bin/python already exists and it for python3. You need to put the symlink somewhere else and just get node to use that
01:53 < scuba323> oh life saver! Thank you so much! :)
01:53 < livinded> scuba323: when it's done just run "rm -rf ~/bin"
01:54 < livinded> and make sure you don't forget the ~ otherwise bad things will happen
01:54 < SpNg> livinded: if a message is sent from server A and needs to be broadcast to a user on Server B, how would the pub / sub know what server it needs to send to? Wouldn't there need to be some sort of central messaging system?
01:54 < livinded> SpNg: that's what the pub sub is
01:55 < livinded> server A doesn't have to know about server B or that it needs to provide data to users on server B
01:55 < livinded> all it needs to know is that one if it's users said something that people with condition x need to see
01:55 < livinded> then you mark that message as having condition x and all subscribers who know about condition x will broadcast it out
01:57 < SpNg> livinded: so I must be confused, so where is the central broadcast happening? If you have 2 servers on a network, would you need a 3rd one to be your central pub/sub system?
01:57 < livinded> SpNg: yes
01:57 < livinded> but you don't need master/slave replication or anything
01:57 < SpNg> got it
01:57 < SpNg> that makes sense
02:00 < SpNg> livinded: so how could you scale the 3rd server, the pub./ sub system, if you needed to expand beyond a single server?
02:00 < livinded> you probably wont need to scale the pub/sub system
02:01 < livinded> and if you did you just add sharding/replication
02:03 < SpNg> livinded: got it. Thanks for the clarification, the logic makes a lot more sense
02:45 < MI6> joyent/node: Mike Harsch master * aeb030b : build: fail w/err msg when missing binutils  Building --with-dtrace requi - http://git.io/1cRFVA
03:35 < MI6> joyent/node: Ben Noordhuis v0.8 * ad6769f : dgram: don't assert on send('string')  Raise a TypeError when the argumen - http://git.io/DIp8aA
04:04 <@isaacs> rvagg: nice.
04:05 <@isaacs> rvagg: you know, you can probably use lru-cache as the MemoryStore module
04:05 <@isaacs> rvagg: then you could support proper timeouts
04:05 < rvagg> mmm, I guess that would make it safer for actual use; still a bit impractical though, it's more of an example
04:05 < rvagg> isaacs: perhaps lru-cache deserves another example!
04:06 <@konobi> cache::cache!
04:06 <@isaacs> rvagg: so, i'd suggest either a) use lru so that it's at least feasible to use irl, or b) don't provide a MemoryStore mechanism
04:07 <@isaacs> rvagg: b is probably the better option
04:07 < rvagg> mm, fair enough, I need something for tests at least though
04:07 <@isaacs> rvagg: one of the nice things about redsess is that there's not even the tempation to Do It Wrong and put your session data in memory
04:07 <@isaacs> rvagg: of course.
04:07 < rvagg> my functional test suite is basically a copy of yours
04:07 <@isaacs> testing redsess is a pita
04:07 <@isaacs> i have to spin up redis, etc.
04:07 <@isaacs> external deps
04:08 <@konobi> http://search.cpan.org/~jswartz/CHI-0.56/lib/CHI.pm
04:08 < rvagg> isaacs: and if a test fails you have to kill redis and clear its store, that's pretty annoying
04:08 <@isaacs> but you should really use a real persistent-ish database for sessions
04:08 < rvagg> mm, my next job is a LevelDB store
04:09 < jamesd_> hmm i guess its not the schwartz of sun cto  fame.... 
04:09 <@isaacs> konobi: isn't CHI kind of a DBO layer thingie for caches?
04:09 <@isaacs> konobi: that's like... the opposite of this.
04:09  * isaacs might be misunderstanding
04:10 <@konobi> isaacs: yup... though it allows you to stack them arbitrarily
04:11 <@konobi> yeah L1 cache, etc/
04:11 < MI6> joyent/node: Dean McNamee master * 3f75454 : typed arrays: don't declare as module  TypedArrays is not a module, it is (+2 more commits) - http://git.io/vnJdbA
04:18 <@konobi> and iirc it handles timeouts, etc. etc. from the API rather than per-backend
04:22 <@isaacs> i see
04:25 < MI6> joyent/libuv: Ben Leslie master * 56ed572 : unix: improve uv_guess_handle() implementation  uv_guess_handle is curren - http://git.io/BCdotw
04:33 < MI6> joyent/libuv: Tim Bradshaw master * bc0c61c : linux: ensure that all CPUs have model information (+1 more commits) - http://git.io/aqjfgw
04:35 <@konobi> isaacs: then again, it's been a few years since i was talking to johnathan about it
04:41 < MI6> joyent/node: Tim Bradshaw master * e6acfed : doc: os.cpus() returns times in milliseconds - http://git.io/IAb-qA
04:55 -!- Topic for #Node.js: Node.js - https://github.com/joyent/node/wiki/Api-changes-between-v0.8-and-v0.10 - http://logs.nodejs.org/node.js/ | http://meta.stackoverflow.com/questions/66377/what-is-the-xy-problem
04:55 -!- Topic set by konobi [~scott@aravis.narnia.org.uk] [Sun Dec 23 14:40:22 2012]
04:56 -!- isaacs changed the topic of #Node.js to: Node.js - free as in hugs - http://logs.nodejs.org/node.js/
05:06 < raphie> if I've got a bunch of models each in their own file which I want using the same db connection, what's the best way to do that? currently I have a file that literally just creates the connection and exports the mongoose object, and each model requires it. this feels unoptimized
05:06 < raphie> I do the same with my redis connection. is there an established pattern for this sort of thing?
05:06 < Nuck> ... that sounds like the pattern I always used
05:07 < Nuck> Each require-ing past the first will reuse it, so its a single shared connection
05:07 < Nuck> It's not a pretty solution, but it's definitely effective.
05:08 < avital> quick question -- is there a way to use browserify with specific versions of npm modules?
05:08 <@mbalho> install specific versions of npm modules in your require path
05:09 < raphie> Nuck: okay, just checking. definitely gets the job done, it just seemed a bit... counter to best practices, y'know what I mean?
05:10 < avital> ah, thanks. and what happens if two different modules i depend on each depend on different versions of a third module? (the diamond problem)? will it Do The Right Thing the way that npm usually does?
05:10 < Nuck> raphie: It might be now.  Last I checked was like a year ago, so practices might be different now.
05:11 < Nuck> All I can say is that it's effective — I'm too far detached from Node.js these days to judge best practices ;)
05:27 < trevnorris> bnoordhuis: have a moment to explain more about signalling NaNs?
05:28 < bnoordhuis> trevnorris: sure. what do you want to know?
05:29 < trevnorris> bnoordhuis: you said it's a problem that Buffer([0x7f,0xb0,0,0]) returns a signalling NaN, but that's how the current implementation works. What's the difference?
05:31 < bnoordhuis> trevnorris: nothing. but now might be a good time to consider fixing that
05:31 < bnoordhuis> it's not a showstopper though
05:34 < trevnorris> bnoordhuis: if it is a problem it can definitely be taken care of. Was just wondering where in the execution chain it would be a problem. Before the value it's returned it's cast to a double and wrapped in a Local<Number>.
05:35 < bnoordhuis> trevnorris: re where, just about anywhere. if fpu exceptions are enabled, a snan raises one with every operation, including loading and storing
05:35 < trevnorris> oh, so just storing that byte order to memory would signal?
05:36 < bnoordhuis> trevnorris: if it's done through a fpu instruction, probably yes
05:37 < Sly> bnoordhuis: to keep me from having to dig through commits...
05:37 < bnoordhuis> trevnorris: but like i said, not a showstopper
05:37 < Sly> Do you know any differences in readline between 0.9.4-pre and 0.9.6-pre?
05:37 < Sly> Seems that isaacs/read is having issues on 0.9.6-pre.
05:37 < bnoordhuis> Sly: well, for one streams2 landed
05:38 < trevnorris> bnoordhuis: it'd be easy enough to place an ->IsNaN() check in the assert area and just store a non-snan and return. if that'd be enough.
05:39 < bnoordhuis> trevnorris: i don't think that'd work but you can test it easily enough with that snippet i posted
05:41 <@konobi> trevnorris: ever get that buffer thing sorted?
05:43 < trevnorris> bnoordhuis: honestly I'm just trying to understand how all that craziness works, but seems i'm out of my league here. so you're talking about the snippet with `asm volatile` in it?
05:44 < bnoordhuis> trevnorris: yes. it turns on fpu exceptions, i.e. the SIGFPE-on-SNaN thing
05:46 < trevnorris> bnoordhuis: ok, and think it'd be enough in the assert area, or should the check be performed all the time?
05:46 < bnoordhuis> trevnorris: hm, good question. let's start with assert-only?
05:47 < davidbanham> So, I'm writing a plugin to a logging library (winston) that buffers a bunch of logfiles in a writeableStream then ships them up to S3 every so often. In the event the process closes, I want to ship the current file before the process dies.
05:47 < davidbanham> Listening for the 'exit' event, though, isn't really that useful since by that time the stream has been closed.
05:47 < davidbanham> Is there a better way to achieve this?
05:48 < Sly> bnoordhuis: thanks. That helped. It's mute-stream causing it.
05:48 < bnoordhuis> trevnorris: btw, you need a 32 bits build of node. x64 uses sse and that doesn't raise i387 exceptions
05:48 < bnoordhuis> Sly: no problem
05:49  * bnoordhuis is off to bed
05:49 < Sly> Later, bnoordhuis.
05:50 < trevnorris> bnoordhuis: thanks again.
05:51 < trevnorris> konobi: it's not technically a bug since they work as expected, and my script generated an edge case. but I'm going to check into how they can be improved.
05:52 < trevnorris> konobi: but i'm going to look into possible improvements. for example, check how v8 handles memory allocation of many small strings.
05:54 < trevnorris> davidbanham: by closes do you mean crashes?
05:55 <@konobi> trevnorris: i dunno, it seems like the c++ destructor should be tuning the allocated external memory down at a minimum
05:56 < davidbanham> trevnorris: Crashes would be nice, but I'm first trying to target graceful closures. Like, all the processes tasks are done and node is ready to close, but I want to ship these logs first.
05:56 <@konobi> davidbanham: seen node-panic ?
05:57 < trevnorris> konobi: you mean the destructor of the Buffer class?
05:58 < davidbanham> konobi: No, but it looks interesting. I'll take a spin through the source and check out how they're trapping closes.
05:58 <@konobi> trevnorris: yup
05:59 < trevnorris> davidbanham: by saying "current file" that could mean a lot of things. like how big is the file? the best I could imagine you achieving is finishing writing what's currently in your stream.
06:01 < davidbanham> trevnorris: The file size is variable, but potentially in the MB. If I can't get in before the event loop is closed then yeah, I'm possibly boned. What I really want is to get some advance warning that node is thinking about closing soon, so I can do some stuff.
06:03 < trevnorris> davidbanham: depends on what you want to do. can't do anything async or it won't fire before the process closes.
06:04 < davidbanham> trevnorris: Yeah I don't think there's any way to do what I want without async. It's a network function to go put a file in S3, after all.
06:04 < trevnorris> konobi: problem is I'm not sure if the destructor is called until after all references to the parent buffer are also destructed.
06:04 < davidbanham> Maybe the best I can offer people is a helper function to clean up any files before they kill whatever instance the job was running on.
06:05 <@konobi> trevnorris: could always add a debug statement in tehre =0)
06:05 < trevnorris> davidbanham: yeah. so anything over network is out. you can sync write a file to disk that contains needed information about the crash. and possibly have the process check for that on next startup.
06:07 < davidbanham> trevnorris: The process will check for stuff on next startup, but the use case I'm considering is someone that spins up a VM instance for a task, then shuts it down never to be heard from again. Those logs would be lost.
06:07 < trevnorris> konobi: heh, i'm in so over my head. is there like a standard debug statement in c++?
06:07 < davidbanham> What if I spawn a child process in process.on('exit') ?
06:08 < trevnorris> davidbanham: ask any CISO and they'll say storing important logs on the same server that's generating them is the wrong answer. If they're important they should be streamed directly to another box for processing.
06:09 < trevnorris> konobi: heh, nm. v8 has it's own suit for debugging.
06:10 < davidbanham> trevnorris: That's true. This won't be a guarantee of consistency, but it would be nice to at least get close to it. In our use case we'll be okay with this behaviour, I just don't want someone else picking up the project to get badly burned.
06:11 < davidbanham> You can set thresholds for "Ship logs every n seconds or when the file is n large" and you should be okay with losing any logs that aren't shipped, but I'd like them not to be lost too often.
06:11 < hnamkoong_> sup
06:13 < trevnorris> davidbanham: do you know how quickly the logs will aggregate?
06:13 < davidbanham> trevnorris: In our use case, I expect to be shipping every 5 to 10 minutes.
06:15 < trevnorris> davidbanham: if a user issues a `shutdown -P now` command then they're screwed. The process will receive a SIGTERM, which can be caught and prevented for a short time, but after that it's lights out.
06:16 < davidbanham> trevnorris: Oh yeah, I don't expect to be saving my users from all the possible kinds of stupid, just the ones they might reasonably have expected me to plan for.
06:16 < trevnorris> davidbanham: if you can provide the interface by which they shutdown the machine then you can control how that happens.
06:18 < davidbanham> trevnorris: I think that might be beyond scope for a Winston plugin. I feel pretty good about shipping a little utility that, when run, ships the last file present on the disk. I can then just say in the docs "If you shut down your machine programatically, run this first"
06:18 < davidbanham> trevnorris: "node s3logger.js && shutdown -P now" seems like a reasonable compromise.
06:19 < trevnorris> davidbanham: yeah. that sounds fine. could even wrap it up in a nice little bash script.
06:37 < chovy> i wrote a script that will start a node app when the machine boots up
06:41 < imrankhan> hi
06:42 -!- mode/#Node.js [+o konobi] by ChanServ
06:42 < mansoor-s> imrankhan just got off the cricket field o_O
06:43 < timeturner> lol
07:17 <@Nexxy> free hugs?!
07:17 < Sly> YES PLEASE!
07:17 <@Nexxy> this channel just keeps getting better and better
07:17 < Sly> <3
07:17  * Nexxy hugs Sly 
07:17  * Sly hugs Nexxy
07:17 < Sly> I was actually watching you at um... jsconf.eu, I believe..
07:17 < Sly> Earlier today..
07:17 < Sly> :3
07:17 <@Nexxy> God help you
07:17 < Sly> It was lulz.
07:17 <@Nexxy> yeah for sure
07:18 < Sly> "I guess that's something we should have prepared for."
07:18 < Sly> #lulz
07:18 <@Nexxy> I honestly don't even remember much of it
07:18 < someprimetime> who's the idiot who made jsconf.eu?
07:18 < someprimetime> the website; not the event
07:19 <@Nexxy> simmer
07:19 < someprimetime> when i go to speakers chrome goes to 90% CPU
07:19 < someprimetime> were those videos all trying to load at once?
07:19 <@Nexxy> probably
07:19 < someprimetime> jesus
07:22 < Sly> All in all, it wasn't that bad, Nexxy. :x
07:22 <@Nexxy> oh thanks
07:22 < Sly> I had many lulz from it.
07:22 < Sly> Even if shit did go wrong for you during it.
07:22 <@Nexxy> it always does
07:22 < Sly> Don't feel bad. It happens. xD
07:23 <@Nexxy> I don't anymore!
07:50 < bcave> hi
07:52 < bcave> quick question about the nodejs http client. the docs indicate that client responses emit 'data', 'end' and 'close' events. can the http response emit an 'error' event too?
07:53 <@Nexxy> bcave, the error events will emit from the request object
07:54 < bcave> ah, ok. thanks nexxy
07:54 <@Nexxy> :)
07:55 < superjoe> I'm looking for assert.deepEqual but one that gives a little bit of leeway on floating point numbers
07:58 < tuhoojabotti> how much
08:05 < superjoe> configurable
08:05 <@Nexxy> Dependencies (18209)
08:06 <@Nexxy> oh jesusabdullah 
08:06 <@Nexxy> lol
08:16 < mansoor-s> deadlines deadline deadlines....
08:17 < mansoor-s> I need a vacation
08:17 <@Nexxy> what you need... is to ship moar
08:17 <@Nexxy> go go go
08:17 < bcave> i love deadlines. especially the *whoooshing* sound they make as they fly past
08:17 < mansoor-s> But i have no need for a ship
08:18 < mansoor-s> bcave, hhahah
08:18 < Sly> 18,209 dependencies?
08:18 < Sly> What? O_O
08:19 <@Nexxy> Sly, jesusabdullah's hoarders module
08:19 < mansoor-s> Sly, looking at horders?
08:19 < mansoor-s> hoarders**
08:19 < lostlife> any news on nodejs?
08:31 < mansoor-s> lostlife, what do you mean
08:38 < [AD]Turbo> hi there
09:00 < poldur> what is the best choise to do http authentication with sessions ?
09:03 < mansoor-s> poldur, what kind of bear is best?
09:06 < mansoor-s> ( ͡° ͜ʖ ͡°)
09:07 < superjoe> humans are remarkable at distinguishing faces
09:13 < vikash> I am trying this for a few days and still I am not able to get it correct. https://gist.github.com/4482379 I have to use loop to get a chart but its not working. I am sure I am exploiting jade but I am not able to get it working so please help
09:15 < vikash> line 13-16
09:39 < Industrial> Does someone have an example of how to connect a website with a LOGIN to a REST API?
09:39 < Industrial> Logins are stateful, first you are not logged in, then you are. and rest authentication often is not (API keys pem certs what not)
09:39 < Industrial> it just doesn't make sense to me :( seems like all clients of a REST interface need a key before hand
09:46 < mansoor-s> Industrial, you can add a layer on top of it to make it statefull
09:47 < mansoor-s> for instance you can issue a unique identifyer
09:47 < mansoor-s> such as a cookie
09:48 < Industrial> mansoor-s: there are EU laws considering cookies. I don't want the ugly popup on my site, so I'm eschewing cookies :\
09:48 < mansoor-s> Industrial, I believe the EU law is in regards to tracking
09:49 < mansoor-s> i don't believe it says anything about login cookies
09:49 < Industrial> ok
09:49 < mansoor-s> but please double check me on that
09:49 < Doikor> as far as i know doing something like a login cookie you dont need the popup
09:49 < Industrial> ah, thats nice :)
09:49 < Doikor> but if you are tracking users for some other purpose (whatever they are logged in or not doesnt matter in this) then you need to inform them
09:50 < Industrial> so instead of requesting a POST /login or something, I take the username and password, hash it and send it with each request?
09:50 < mansoor-s> Industrial, you still make a POST request, you just send the username and password to the server
09:50 < mansoor-s> and you hash the password and check it against what is in the database
09:51 < mansoor-s> the HTTP POST request is how you get the data to the server
09:51 < RLa> Industrial, ignore those cookie laws
09:54 < Industrial> actually I don't have any example code, I should cook something up :)
09:55  * mansoor-s needs to read up on how to deal with caching and SSL
09:57 < bcave> let the login issue a token, and then use that token with an Authorization header to authentice requests
09:57 < bcave> read up on oauth 2
09:58 < bcave> s/authentice/authenticate/
09:58 < bcave> oh wait... by "login'
09:58 < bcave> do you mean HTTP authentication?
10:05 <@konobi> Industrial: in the EU you just need to give information about cookies, that's all.
10:07 <@konobi> there's a "consent" thing, but you can say, accept the terms or don't use the service
10:12 <@konobi> Industrial: also, session cookies were exempted
10:16 < Industrial> konobi: right
10:18 <@konobi> mansoor-s: orginally it was _all_ cookies... but it's been updated since then
10:19 <@konobi> Industrial: so?
10:20 < mansoor-s> konobi, for what? user identification?
10:20 < mansoor-s>  + authentication
10:21 <@konobi> mansoor-s: __all__ cookies
10:21 < mansoor-s> hu?
10:21 < mansoor-s> you lost me
10:23 <@konobi> the e-privacy act was for all cookies, since then there have been exemptions made
10:24 <@konobi> you can look up the UK ICO website for info about those exemptions
10:25 <@konobi> Industrial: so what's the issue?
10:27 <@Nexxy> konobi, is oatmeal raisin included as well?
10:28 <@konobi> Nexxy: yes, for it is the spawn of the devil
10:28 <@konobi> =0P
10:28 <@Nexxy> no wonder I love them so much
10:31 < substack> Nexxy: check it out! http://substack.net/projects/voxel-debris/
10:31 < substack> max and I got it all working pretty excellently
10:31 <@Nexxy> oh my god this is making me dizzy
10:32 < substack> in a good way?
10:32 <@Nexxy> m-maybe
10:32 <@Nexxy> but I think perhaps it is doing something it's not supposed to
10:32 < substack> space bar to jump
10:32 < substack> sometimes the player gets stuck in the ground
10:32 < substack> collision detection needs some work still
10:33 < narsic> hi, Node.js
10:33 <@Nexxy> http://i.imgur.com/cwgbV.jpg
10:33 <@Nexxy> it's doing that
10:33 < mansoor-s> konobi, ahh Ok, i thought you were talking keeping track of authenticated users. i got confused :p
10:33 < substack> Nexxy: oh it looks like you're under the ground
10:33 < substack> try refreshing
10:33 < mansoor-s> what is this witchcraft
10:33 < substack> oh actually it seems like you don't have webgl
10:34 <@Nexxy> I've always wanted a subterranean house
10:34 <@Nexxy> yeah what is that
10:34 < narsic> i wan't to connect to a soap xml web service, that server need self sertificate .cert file
10:34 <@Nexxy> I'm on an MBA
10:34 < substack> it's this thing that lets you do crazy stuff in a browser
10:34 <@Nexxy> lol yes I know that silly
10:34 < narsic> ho do i can attach cert file to my xml request?
10:34 < substack> what version of chrome?
10:34 < substack> or firefox
10:35 <@Nexxy> chrome 23.0.1271.101
10:35 < mansoor-s> I used to have driver issues with webgl + linux 
10:35 < mansoor-s> but no longer
10:35 < mansoor-s> maybe that is your issue as well
10:35 <@Nexxy> idk, I'm on OSX
10:35 < mansoor-s> ohh
10:36 <@konobi> substack: looked at libcinder at all? was wondering if it was something that might be awesome to use with node
10:36 < substack> konobi: what is "professional-quality creative coding in C++"
10:37 < substack> I don't know what this library is supposed to do
10:37 <@konobi> substack: have a look at some of the example videos
10:39 < narsic> i wan't connect to a soap xml web service, that server need self certification .cert file, how do i can attach cert file to my xml request?
10:40 < noderLeo> i would like to ask why node.js?
10:40 < Shinister> why not?
10:40 < noderLeo> any advantage?
10:41 <@konobi> noderLeo: moar js
10:41 < Shinister> fast, scalable, testable, great community, code reuse
10:41 < Shinister> insanely flexible
10:41 < substack> it has a package manager that has a lot of nifty modules published to it
10:41 <@Nexxy> noderLeo, node.js is rockstar badass tech
10:41 < Shinister> nodejs has a lot going for it
10:41 < noderLeo> how about python?
10:42 < noderLeo> for web development, what is the best??
10:42 < Shinister> Depends.
10:42 < Shinister> There isn't a 'best'
10:42 < Shinister> it depends how you work, what you prefer, what direction your web project will go
10:42 < noderLeo> easy to learn?
10:42 < noderLeo> of cos i prefer nodejs
10:42 <@konobi> noderLeo: tried any of the base level example tutorials?
10:43 < noderLeo> that's why i go into this chat room
10:43 < Shinister> I'd go follow some tutorials first
10:43 < noderLeo> not yet
10:43 < Shinister> then come back when you've more of an idea of the language
10:43 <@Nexxy> OMFG
10:43 <@Nexxy> substack, 
10:43 < Shinister> or at least read the wikipedia page
10:43 <@Nexxy> you never told me I could fall
10:43 < noderLeo> any suggestion?
10:44 <@Nexxy> substack, I got it working in chrome canary
10:44 < noderLeo> or some meterial
10:44 < bugabinga> i'd say nodejs is a lot like js itself, easy to learn, hard to master. also horribly insecure, if you're uninformed
10:44 <@Nexxy> substack, mbalho way cool!
10:44 <@Nexxy> gold star
10:44 < noderLeo> insecure@@
10:44 < noderLeo> how?
10:44 <@Nexxy> lol
10:44 < Shinister> almost everything is insecure if you don't know what you're doing with it.
10:45 < noderLeo> ...
10:45 < Shinister> Are you a developer already, noderLeo?
10:45 < noderLeo> ok, will go thru the base tutorial, then come back
10:46 < noderLeo> yes, front end developer
10:46 <@Nexxy> node is way secure
10:46 <@Nexxy> haven't you seen node-fusker?
10:46 < noderLeo> the backend language used to use asp.net
10:46 <@Nexxy> or I guess it's just fusker
10:47 < noderLeo> fusker only
10:47 < noderLeo> just search
10:47 < noderLeo> :-)
10:47 < Shinister> noderLeo: I'm an ASP.NET guy if you need anything explaining from a .NET dev perspective
10:47 < mansoor-s> ಠ_ಠ
10:47 < Shinister> but google first ;)
10:47 < noderLeo> of cos~~
10:48 < noderLeo> thank you Shinister
10:48 < noderLeo> go to study, then back~~~~
10:48 < noderLeo> see you guys
10:48 < medice> i should learn aspie.net some day, as i'm already all too familiar with c#
10:49 < Shinister> medice: take a look at asp.net mvc, it's pretty good.
10:49 < Shinister> Very rigid, no where near as hackable and fluid as node, but still useful
10:49 <@Nexxy> it's like node
10:49 <@konobi> substack: so yeah, really nifty visual stuff, that you can feed with realtime data, etc.
10:49 <@Nexxy> only instead of all javascript
10:49 <@Nexxy> it's all xml
10:49 < Shinister> there's also something called signalr, which is like socketio
10:50 < medice> yeah, i've googled around the subject
11:11 < Industrial> konobi: no issue, thanks :)
11:33 <@konobi> Industrial: even with your login-rest issue?
11:37 < Industrial> konobi: yeah I'll figure it out :) What I don't understand yet is what URL to call from the website when a user clicks on login. I can save the credentials then (if successful) and use them in each follow up request to authenticate that request, but the login still needs some server side handling right?
11:38 <@konobi> Industrial: xy
11:39 < Industrial> So I should have one REST resource just for checking credentials? :p
11:40 <@konobi> well, there's 2 aspects to it... authen and authz
11:40 < RLa> which part of rest is user authentication?
11:41 <@konobi> so authen, could be "here's my credentials, please give me back something that I can authenticate with (apikey, session cookie, etc)"
11:41 < Industrial> right
11:42 <@konobi> then when they come back with that apikey/cookie, you ensure it's valid and you know that it's "USER"
11:42 <@konobi> beyond that, it's authz... (is this user allowed to do this)
11:43 <@konobi> or if they're a plain rest client, they can just use the apikey directly
11:44 <@konobi> Industrial: make sense?
11:46 < Industrial> konobi: yes, thanks :)
11:47 <@konobi> cool
12:24 < dileep> having problem in node.js as getting error   events.js:71         throw arguments[1]; // Unhandled 'error' event                        ^ Error: write EPIPE     at errnoException (net.js:770:11)     at Object.afterWrite (net.js:594:19) 
12:25 < dileep> anybody here 
12:31 <@konobi> Disil: you're not handling an error event on an eventemitter
12:33 <@konobi> whoops
12:33 < noderLeo> Yoyo
12:36 < Shinister> yo noderLeo 
12:37 < noderLeo> U always be here.
12:37 < noderLeo> ?
12:55 <@Nexxy> noderLeo, we will always be here... for you
13:11 < Virunga> this is love
13:12 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:18 < Musk> moin
13:59 -!- mode/#Node.js [+o piscisaureus__] by ChanServ
14:30 < rmill> how the heck do you run forever with additional node flags?
14:30 < rmill> --harmony
14:30 < rmill> typically I do: `node --harmony script.js &`
14:31 < rmill> how would I use the --harmony flag with forever?
14:37 < scraping> modules can't be required even after npm install -g ...mac osx..some issue with the path?
14:37 < scraping> no errors while installing 
14:40 < scraping> curl https://npmjs.org/install.sh | sudo clean=yes sh
14:40 < scraping> hmm fixed
14:42 < shannonmoeller> scraping: https://npmjs.org/doc/faq.html#I-installed-something-globally-but-I-can-t-require-it
14:44 < scraping> shannonmoeller, i was not facing that, it cheerio, so it must have worked with require() 
14:44 < scraping> did work after sudo clean=yes 
14:44 < scraping> duh! no :(
14:44 < scraping> i did an npm install in ~/ now in /tmp 
14:45 < scraping> require can't find 
14:45 < scraping> :|
14:46 < shannonmoeller> scraping: Install it locally. If you require() a module in your code, then that means it's a dependency, and a part of your program. You need to install it locally in your program.
14:46 < scraping> aye aye captain 
14:47 < shannonmoeller> scraping: also, fyi, you don't need to install npm separatedly as it's now bundled right along with node itself
14:48 < scraping> shannonmoeller, yes aware of that, did this to clean up. from node 6 onwards npm was bundled right?
14:48 < scraping> .6 i meant 
14:49 < shannonmoeller> scraping: 0.6.3, yep!
14:52 < scraping> i'm looking for a sweet css3 selector 
14:52 < scraping> none is working in my case
14:54 < scraping> with cheerio : $('div.x.y.z').text() is not working; but the css selector is fine; works well in chrome console 
14:59 < scraping> shannonmoeller, any suggestions ?
15:01 < shannonmoeller> scraping: Not sure without seeing the actual code in question. That said, it also depends on what problem you're trying to solve. For scraping, PhantomJS might be a better solution.
15:03 < scraping> shannonmoeller, yes but this is pretty simple does not need a headless browser, pm?
15:20 < shannonmoeller> scraping: makeing a sandwich is simple if you have bread and cheese. If all you have is dirt and a cow, it's a little more complicated.
15:21 < scraping> shannonmoeller, very true, but the fun one gets in making sandwich from dirt and a cow would be awesome? :)
15:27 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:28 < baudehlo> isaacs: ping
15:33 < chrismatheson> afternoon all, i was wondering if there are any Express - semi experts in here ?? (dont worry i dont have a bug problem but just a general question)
15:34 < baudehlo> just ask the question - someone might know the answer
15:34 < ozette> whenever my script tries to do a obj.symlinkSync(target, dest); on a windows machine I get a operation not permitted error, can I prevent this?
15:35 < chrismatheson> Basicly i dont quite understand the next argument, i get that it 'passes' the request onto the next matching route
15:35 < baudehlo> it's how async stuff works.
15:35 < chrismatheson> but does it do this by calling the function and then the call stack would get one level deeper? or does it do this by starting a new call stack with process.nextTick() ??
15:36 < ozette> I can't create symlinks on windows with fs.
15:36 < baudehlo> if you call it immediately, the call stack would get one level deeper.
15:36 < baudehlo> but you call can it in process.nextTick(), or you can call it from (e.g) a database callback
15:36 < baudehlo> in which case the call stack has changed.
15:37 < chrismatheson> so I would be resposible for 'delaying' the call by assigning it to next tick thats not done by the express framework in the background?
15:37 < baudehlo> what do you mean "responsible"? I mean you can delay it or not.
15:38 < chrismatheson> yeah exactly, i wasnt sure if express did some majic in the background or not, but i couldnt find any (which is not to say its not there)
15:38 < bradleymeck> ozette example args you are passing? http://nodejs.org/api/fs.html#fs_fs_symlink_srcpath_dstpath_type_callback seems to imply something about Windows needing absolute paths? (also remote paths probably always going to fail)
15:40 < baudehlo> chrismatheson: well there's no need to delay the call if you don't have to, so express wouldn't do that.
15:40 < chrismatheson> baudehlo thanks for your help
15:41 < baudehlo> np
15:41 < chrismatheson> one of the bigest things im worried about is that my program works, but ive not written it well so its going to cause big problems later on
15:41 < chrismatheson> but there arent many guides on "good coding practice" that i can find :)
15:44 < baudehlo> Get it peer reviewed maybe?
15:45 < chrismatheson> Yeah when im finished i might see if anyone here would be free to take a looksie over it. I'm not part of a team or anything im just making stuff on my own
15:46 < bradleymeck> largely would depend on size of project but people will glance at least
15:47 < ozette> bradleymeck, thanks symlink() seems to work, I did use absolute paths.
15:48 < chrismatheson> well thanks for your help people :) much appreciated as always 
15:51 < carlocci> I'm having trouble building a package with node-gyp whereas node-waf works as expected: it seems node's headers are not included, so the build fails
15:53 < bradleymeck> carlocci, might be permissions, try node-gyp install $VERSION with same perms as your install
15:53 < carlocci> if I copy or link /usr/include/node/ to the directory where the c++ file is, everything builds as expected
15:53 < bradleymeck> also node-gyp list
15:54 < carlocci> I'm trying to build directly from the npm cache as this is part of a bigger broken installation (zombie)
15:54 < carlocci> so it's really all my user
15:55 < pohahontas> Hi guys, I'm getting warning: "Recursive process.nextTick detected. This will break in the next version of node. Please use setImmediate for recursive deferral." In my code there is no process.nextTick line. I think its mongoose who is causing this. What can I do to stop it?
15:55 < carlocci> bradleymeck: I'll try your suggestion, of course. As I'm not very familiar with node packaging at all
15:57 < bradleymeck> pohahontas: notify mongoose or whoever
15:57 < pohahontas> Ok I'll if there is no general solution to this problem. Thanks
15:57 < Tobsn> anyone an idea how to solve this: http://stackoverflow.com/questions/14217940/get-all-combination-key-codes-from-2d-array
15:57 < Tobsn> (doesnt have to be in php... as long as its solved ;))
15:59 < niggler> Tobsn you could do some really simple recursion
15:59 < Tobsn> yeah... i just couldnt come up with one yet
16:05 < carlocci> >> arr = [[0,1,2],[0,1,2],[0,1,2]]; function f(arr, key) {for(var i = 0; i < key.length; ++i) {return arr[i][key.charAt(i)]} f(arr, "021") // Tobsn 
16:05 < purr> carlocci: SyntaxError: Unexpected end of input
16:05 < carlocci> what did I just write :(
16:05 < Tobsn> carlocci, update the post, someone actually just solved it
16:06 < Sly> carlocci: you forgot }}
16:06 < Tobsn> you just forgot one }
16:07 < carlocci> Sly: I also forgot to accumulate the results
16:07 < carlocci> kinda half assed, but it was just to show some good will so that people help me with my issue :p
16:07 < Tobsn> but i also dont know what it does :P
16:07 < Tobsn> haha
16:08 < carlocci> >> arr = [[0,1,2],[0,1,2],[0,1,2]]; function f(arr, key) {var ret=[]; for(var i = 0; i < key.length; ++i) {ret.push( arr[i][key.charAt(i)])} return ret} f(arr, "021") // Tobsn 
16:08 < purr> carlocci: (object) [0, 2, 1]
16:08 < secutor> \w
16:08 < generalissimo> does anyone know of a javascript lib that would help me write my own markup language?
16:08 < Tobsn> what are you trying to do? ;)
16:09 < Tobsn> generalissimo, look into the source of coffeescript
16:09 < Tobsn> oh markup
16:09 < Tobsn> nevermind
16:09 < generalissimo> i was hoping for a standalone lexer/parser lib
16:10 < generalissimo> but obviously when you google for "javascript parser" etc., it's hard to find the relevant info
16:10 < RLa> generalissimo, what kind of markup?
16:10 < niggler> carlocci are you trying to do this:
16:10 < niggler> >> var x = [[1,2],[3,4,5],[6,7]]; function doit(array, base, bdy) {if(bdy.length == 0) { console.log(base, array); return; } for(var y in bdy[0]) { var a = array.slice(); a.push(bdy[0][y]); doit(a, base + "" + y, bdy.slice(1)); } } doit([],"",x); @ carlocci
16:10 < purr> carlocci: undefined; Console: '000', [1, 3, 6], '001', [1, 3, 7], '010', [1, 4, 6], '011', [1, 4, 7], '020', [1, 5, 6], '021', [1, 5, 7], '100', [2, 3, 6], '101', [2, 3, 7], '110', [2, 4, 6], '111', [2, 4, 7], '120', [2, 5, 6], '121', [2, 5, 7]
16:10 < RLa> es4 has inline-xml, for more xml you could use xslt and xsl stylesheets
16:11 < generalissimo> RLa: Basically want *to convert* some ##stuff like this## to #html that i define# and stuff **like that**
16:11 < RLa> xslt is natively supported by most browsers, including ie
16:11 < RLa> oh, you mean markdown or textile?
16:11 < carlocci> Tobsn: it's a meta problem, really. I was wanting to check out zombie, but the installation fails because the contextify build fails. It seems that node-gyp doesn't include node headers file (node-waf builds the package successfully)
16:11 < RLa> yeah, there are js libs for that
16:11 < bradleymeck> RLa: supported is a strong word, partially yes
16:11 < generalissimo> RLa: like those but not at all the same input/output
16:12 < RLa> not all the same input/output?
16:12 < bradleymeck> generalissimo: PegJS
16:12 < carlocci> niggler: I guess that was for Tobsn?
16:12 < niggler> carlocci that was for you struggling with js
16:13 < generalissimo> bradleymeck: THANKS!
16:13 < generalissimo> that looks like exactly what i need
16:13 < carlocci> niggler: I wasn't doing that then. You are wrong!
16:14 < niggler> ooh you were going the other way :/
16:15 < carlocci> generalissimo: I believe there is also PanPG
16:15 < thomasreggi> Can someone tell me why this is spitting out ""? crypto.createCipher("aes192", key).update(client_ref,"utf8","base64");
16:17 < bradleymeck> thomasreggi: im going to guess key or client_ref is not utf and v8 clobbered it
16:18 < carlocci> would you suggest a package out of the top of your head which needs to be compiled so that I can check the scope of my problem on my installation?
16:18 < Tobsn> niggler, nice, any way you can return that into an array instead of console log?
16:19 < thomasreggi> bradleymeck: I am converting it using .toString("utf8") before it hits crypto and its still "". Ideas?
16:21 < bradleymeck> thomasreggi: that may be what it represents as unicode… have you tried providing a buffer to these instead of strings
16:21 < bradleymeck> well for update you want to buff.toString('base64'), base64, base64 in your example
16:21 < bradleymeck> ah the fun of things expecting strings in a binary world
16:23 < Sly> https://gist.github.com/e99c5cb7af513e6ce7e1 @ Tobsn
16:23 < Sly> Er Shit.
16:23 < Sly> Replace the test[i][key] with arr[i][key]
16:23 < Sly> (Fixed in the Gist already)
16:29 < thomasreggi> bradleymeck: I'm pretty confused do both the key and "string" in the cypher need to be converted to buffer(s)?
16:30 < thomasreggi> or just the "string"?
16:30 < bradleymeck> `key` should be a buffer in your example, `client_ref` should be converted to a base64 string to avoid the clobbering that will rain down from utf coding
16:31 < thomasreggi> ok
16:31 < Tobsn> sly, that wasnt really the question :D
16:31 < Tobsn> Sly, http://stackoverflow.com/questions/14217940/get-all-combination-key-codes-from-2d-array
16:32 < Sly> You asked if the results that niggler was providing could be returned to an array...
16:32 < Sly> >_>
16:32 < Sly> That's what that script does.
16:32 < thomasreggi> bradlymeck: this is giving an error crypto.createCipher("aes-256-cbc", new Buffer(key, "binary")).update(client_ref.toString("base64"),"base64","base64");
16:35 < ThiefMaster> is there any particularly clean way to toString() data from a buffer that contains valid data that is right-padded with null bytes?
16:37 < bradleymeck> thomasreggi: oh fun input and output encodings dont match for valid values, unsure on decent fix
16:37 < bradleymeck> ThiefMaster: create a new Buffer or right size, .fill(0) and then tostring after?
16:37 < thomasreggi> bradleymeck: I'm going to avoid this whole thing, thanks for your time.
16:37 < ThiefMaster> hm .fill(0) would still contain null bytes - and at least in console.log() they still showed up in the final string
16:38 < bradleymeck> ThiefMaster: im not sure what you are asking...
16:39 < ThiefMaster> > new Buffer([102, 111, 111, 0, 0, 0, 0, 0]).toString('ascii')
16:39 < ThiefMaster> 'foo\u0000\u0000\u0000\u0000\u0000'
16:39 < ThiefMaster> i just want 'foo'
16:40 < bradleymeck> oh, you just want to strip the nul bytes
16:40 < ThiefMaster> hm, i guess i could use .replace(/\0+$/g, '')
16:40 < ThiefMaster> but yeah, that's what I want
16:41 < bradleymeck> sure .replace or iterate, be careful of null injection attacks though if this is coming from untrusted input
16:41 < ThiefMaster> won't be used for anything where it could cause problems
16:42 < ThiefMaster> i'm parsing a shoutcast mp3 stream where metadata is embedded in x*16 byte blocks which are padded with nul bytes
16:42 < TechnoCat> does nginx allow for websocket redirection yet?
16:51 < evanc_> Have an app using socket.io and have close to 500 concurrent requests to the app and I thought it would be able to handle that many request but after the app is running for 10 minutes I get this error: [ERROR] Error pipe(): Too many open files
16:52 < TechnoCat> that sounds like an os limit to me
16:55 < evanc_> @TechnoCat: I've also been getting this error every 10-15 requests mongo not updatedError: failed to connect to [linus.mongohq.com:10006]
16:55 < TechnoCat> that probably is also tied to open file handle limit
16:56 < evanc_> @TechnoCat: is there an easy way to increase that limit?
16:57 < TechnoCat> http://askubuntu.com/questions/162229/how-do-i-increase-the-open-files-limit-for-a-non-root-user
16:57 < TechnoCat> but you probably actually want to change your your program opens files
16:57 < TechnoCat> how your*
16:58 < evanc_> @TechnoCat: thanks!
17:03 < ozette> still experiencing problems with creating a symlink of a file in windows. Sync, I can only create junction type links not dir or file types.
17:03 < ozette> permission error
17:05 < ozette> the destination folder grants full acces, and also in a priviledged shell I get this error
17:06 < Virunga> ozette: are you using a virtual machine?
17:06 < ozette> when doing symlink (async), the operation is never succeeds
17:06 < ozette> yes
17:06 < Virunga> With?
17:06 < ozette> this is a vm
17:06 < Virunga> VirtulBox?
17:06 < ozette> yes
17:06 < Virunga> :D
17:06 < ozette> what about it? is that causing me trouble?
17:08 < Virunga> Is the destination folder a shared folder?
17:08 < ozette> no
17:08 < ozette> it
17:08 < ozette> it's a node_modules/ located in my user folder
17:09 < Virunga> What does the error say exactly?
17:10 < ozette> return binding.symlink(preprocessSymlinkDestination(destination, type) .. and then an Error about operation not permitted and a path
17:11 < Virunga> Because i experimented a similar error, and the cause was virtualbox doesn't allow link on shared folders... but that's not your case
17:11 < ozette> I see
17:12 < TechnoCat> yeah, a link to a shared folder would cause an orphaned junction i would think
17:12 < ozette> brb
17:14 < Virunga> It's disabled for security reasons
17:35 < kozero> i'm newbie nodejs. anyone knows the best resources for beginners? or any suggestion ?
17:36 < edmellum> Beginner to JS or just to Node.js?
17:40 < kozero> I know a little js, i'm learning about node.js but i don't know where start from?
17:43 < edmellum> kozero: http://nodemanual.org/ is nice
17:44 < edmellum> kozero: Other than something general like that I guess it really depends on what you want to build. There are a lot of nice open source projects out there to learn from.
17:46 < kozero> thanks edmellum
17:46 < edmellum> kozero: No prob :D
17:47 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:51 < niggler> hey Tobsn you just push to a results array and return it
17:58 -!- mode/#Node.js [+o ryah] by ChanServ
17:59 <@isaacs> baudehlo: pong
18:00 < baudehlo> Oh hey...
18:00 < baudehlo> Have you ever seen an issue with node's http client library if it gets Content-Length: length,length ?
18:01 < baudehlo> we're getting that back from Shaw Direct when downloading a PDF, and it causes node to drop the connection.
18:01 < othiym23> Corey: that sounds about right, proxy stuff always feels kinda like voodoo to me
18:01 < baudehlo> works in the browser.
18:01 < othiym23> baudehlo: the Node http parser is kind of an asshole about invalid HTTP header values
18:03 < baudehlo> that's fine if I can find a work-around
18:04 < vaxinate> do you need an npm server to host private node modules?
18:04 < vaxinate> or can you use them sans a hosted npm solution?
18:04 < baudehlo> vaxinate: just put them as git links in your package.json
18:05 < vaxinate> baudehlo: no hosting needed?
18:05 < vaxinate> aside from git
18:05 < sohcahtoa> I have a vax
18:05 < vaxinate> :)
18:05 < ozette> can't get http://nodemanual.org/latest/nodejs_ref_guide/fs.html#fs.symlinkSync to work on winows.
18:05 < bradleymeck> vaxinate: you want to create a private npm registry so you want a couchdb if you just want to do by name
18:05 < baudehlo> vaxinate: no hosting needed. Just put a dependency as: "project_name"                : "git+ssh://git@github.com:/organization/project_name.git",
18:06 < baudehlo> the syntax changed slightly for node 0.8 though, which is annoying if you need to support both platforms
18:06 < vaxinate> baudehlo: thanks man! that's what i needed to know. co-worker is advocating copypasta rather than a module b/c "we don't want to deal with the overhead of an 'npm server'"
18:06 < baudehlo> for 0.8 I think it's: "project_name"                : "git+ssh://git@github.com/organization/project_name.git",
18:06 < baudehlo> i.e. without the colon
18:07 < baudehlo> (I wish npm would just support both)
18:07 < segomos> ozette: are you using absolute paths or relative paths?
18:07 < ozette> absolute, using __dirname + additional string
18:08 < segomos> what is the resulting behavior or error?
18:10 < ozette> :q
18:10 < Ramone> hey all... can anyone recommend a mocking/stubbing framework that they actually use?
18:10 < ozette> i get the EPERM error
18:10 < ozette> I checked it and it says symbolic link creation is not supported
18:11 < ozette> in the windows filsystem
18:11 < othiym23> Ramone: have you tried SinonJS yet?
18:11 < ozette> why is that? I thought it's possible
18:11 < othiym23> it's sorta the de facto standard
18:11 < Ramone> yeah... I don't see how to unmock with that
18:12 < othiym23> it's got a nice enough interface, although I find myself not using mocking / stubbing / spies as much as in other languages, and just using straight monkeypatching in tests instead
18:12 < othiym23> Ramone: it's definitely there
18:12 < othiym23> mockedObj.restore(), I think
18:12 < Ramone> yeah that doesn't work well when you have 20 tests and only mock in some though
18:13 < othiym23> Ramone: then you probably need to change how you're thinking about mocking, and set up / tear down the mocking on a per-test basis
18:13 < cronopio> Ramone: maybe https://github.com/flatiron/nock ?? for mock HTTP requests fit very good
18:13 < Ramone> I've never seen a test framework that lets you teardown on a test by test basis
18:14 < Ramone> I need to mock a class that does some dns stuff
18:15 < othiym23> Ramone: mocha lets you add beforeEach / afterEach clause for tests
18:15 < othiym23> a bunch of other BDD frameworks let you do that as well
18:15 < Ramone> that's not a test-by-test basis though
18:15 < ozette> EPERM error is explained here: http://www.kernel.org/doc/man-pages/online/pages/man2/symlink.2.html, but according to the link I sent before this operation is possible on windows machines
18:15 < Ramone> it does the same thing for every test
18:15 < othiym23> right
18:16 < othiym23> you set up / restore the mocked objects in beforeEach, afterEach
18:16 < Ramone> the problem is objects that have a real method named restore() that I don't mock
18:16 < othiym23> and then set expectations on a per-test basis
18:16 < othiym23> aha
18:16 < othiym23> but the restore should be on the mock, not the object itself
18:16 < Ramone> I'm talking about when a real object has a method named restore()
18:16 < othiym23> oh it's not
18:17 < othiym23> yeah, I see your problem
18:17 < othiym23> Sinon behaves differently than how it probably should
18:17 < segomos> ozette: what vs of windows?
18:17 < Ramone> yeah...silly design by them
18:17 < othiym23> I guess the easiest thing to do is to wrap it yourself
18:18 < Ramone> I don't know... it seems like sinon doesn't fit node very well
18:18 < othiym23> var method = testObject.method; testObject.method = function () { /* etc */ }; testObject.__method = method
18:18 < ozette> win 7 home premium, running in virtualbox
18:18 < ner0x> Attempting to use rubies execjs with node.js. I've download, compiled, and installed it to my specific rails information. Anyone in here know how to point it to the correct folder/library etc?
18:19 < othiym23> Ramone: I find that I don't really use Sinon very much, but it's the most fully-featured of the mocking frameworks I've encountered for JS
18:19 < Ramone> othiym23: the problem is mocking the constructor of a dependency of my class under test
18:19 < Ramone> otherwise I would just mokey patch it
18:20 < Ramone> people tend to still like to put network access in ctors for some reason
18:21 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:21 < Ramone> bah maybe I'll just redesign and lazily construct that dependency as well
18:22 < othiym23> yeah, probably the easiest solution
18:22 < othiym23> constructors that do I/O are bad news for that reason among many others
18:22 < Ramone> yep
18:22 < Ramone> alright thanks for the ideas
18:22 < othiym23> sorry I wasn't more helfpul
18:23 < MI6> joyent/node: Fedor Indutny master * 4594181 : streams: set listener first, emit 'data' later  When switching into compa - http://git.io/9fEipw
18:23 < Ramone> no I think this is a better pattern... I can't very well bitch about ppl that do i/o in ctors and then turn around a put a class that does i/o in my ctor :)
18:39 < CoverSlide> usually I don't do any logic in my ctor
18:39 < CoverSlide> if I have a ctor, it'll have its own .initialize function
18:48 < ljharb> usually i don't use constructors. inheritance is icky.
18:53 < Ramone> inheritance and constructors are completely unrelated
18:53 < ljharb> that's not true.
18:53 < ljharb> if it uses "new", it's related to both. you just might not be explicitly relying on custom inheritance.
18:54 < Ramone> huh?  you can do a new without inheritence being involved, and you can do inheritence without a new
18:55 < ljharb> Object.prototype is always involved.
18:55 < ljharb> and __proto__ isn't standardized yet.
18:55 < ljharb> altho i suppose with Object.create you can
18:55 < ljharb> but that doesn't mean they're completely unrelated.
18:56 < othiym23> ljharb, wtf are you talking about
18:56 < othiym23> __proto__ will never be standardized
18:56 < Ramone> so how do achieve your non-inheritance then, if you count Object.prototype?
18:56 < othiym23> Object.getPrototypeOf is the standard way to extract an instance's prototype
18:56 < othiym23> and you can have bazillions of constructor functions and never once use inheritance
18:56 < ljharb> othiym23: check the es6 spec, section B.3.1
18:57 <@isaacs> ljharb: __proto__ is in for ES6
18:57 < ljharb> that's what i'm saying
18:57 < ljharb> but ES6 isn't finished.
18:57 <@isaacs> othiym23: ^
18:58 <@isaacs> ljharb: according to both brendaneich and awb, __proto__ is too established to remove.
18:58 <@isaacs> i'm not happy about that, personally
18:58  * isaacs would much prefer Object.setPrototypeOf(obj, proto)
18:58 < othiym23> yuck, that's gnarly
18:59 <@isaacs> to mirror Object.getPrototypeOf
18:59 <@isaacs> there are use cases you can't do without updating the proto
18:59 <@isaacs> we have some of them in node, actually
18:59 < othiym23> isaacs: +1 on that
18:59 < ljharb> yes, i agree with you - i'd rather them get rid of __proto__
18:59 <@isaacs> a magic propery name is very dangerous
18:59 <@isaacs> we have Object.create(null) to make a {} without stuff like hasOwnProperty toString et al
19:00 <@isaacs> but if you create a thing called __proto__ and put it in your cache, you're fuxked
19:00 < othiym23> in any case, you still don't need to think about inheritance to use constructors unless you're also doing dangerous things to constructors
19:00 <@isaacs> so bag o' data objects need to either check, or prefix every key with a 'x' or something equally stupid
19:01 < othiym23> isaacs: that seems far more dangerous than giving access to the call chain via arguments.caller
19:01 < othiym23> yet one is out and one is in
19:01  * othiym23 shakes his fist at the clouds
19:02 <@isaacs> speaking of which... lru-cache is broken if you use __proto__ as a key.
19:02 <@isaacs> well that sucks
19:02 < othiym23> has somebody webified the es6 draft the same way as es5.github.com?
19:02 < othiym23> isaacs: special-case it?
19:09 < othiym23> dang, went to benvie's github page to check out his es6 stuff and had my life forever changed by ultra-repl
19:09 < Benvie> hah
19:10 < Benvie> also if you didn't find it already, http://benvie.github.com/es-spec-html/
19:10 < Benvie> though it's a couple revisions out of date
19:10 < othiym23> Benvie: better than dealing with that horrific PDF
19:10 < othiym23> thanks!
19:11 < ins0mnia> what's the most efficient way to pipe a single readable stream into multiple writable streams? I'm trying to achieve something like fs.createReadStream(dummyfile).pipe(array if streams)
19:11 < Benvie> yeah, agreed. Been staring at that thing too much
19:11 < ins0mnia> if=of
19:12 < superjoe> Benvie, this is awesome! I've been trying to find good docs 
19:12 < Benvie> =D
19:13 < superjoe> I wonder what's coming first, harmony in v8 or nodejs 0.10
19:13 < superjoe> probably 0.10
19:13 < superjoe> and by harmony in v8, I mean, without the --harmony option
19:14 < CoverSlide> more like nodejs 10.0 before harmony
19:14 < othiym23> haha
19:15 < Benvie> I'm hoping to eventually be able to optimize my es6 vm to the point that it's usable in production, and then it'll be available in v8 =D 
19:15 < Benvie> I mean it technically is now, it's just not fast enough
19:16 < superjoe> Benvie, isn't that duplicate effort?
19:17 < Benvie> not really, it's nice to have js implemented in js, so yuo can add new features before the engine does
19:18 < superjoe> I see
19:19 < othiym23> plus it means that I don't have to look at narcissus source ever again
19:19 < Benvie> npm install continuum
19:22 < CoverSlide> what are you doing to profile it?
19:22 < Benvie> nothing yet, it's unoptimized
19:23 < Benvie> that's coming soon
19:23 < Benvie> now that I'm wrapping up implementing ES6
19:24 < reuf> hello - im installing a module and it fails it requests node-waf
19:24 < reuf> but node-waf was depracated
19:24 < reuf> what do i do
19:24 < reuf> ?
19:24 < CoverSlide> use a different module
19:25 < CoverSlide> contact the author
19:25 < CoverSlide> fork and pull
19:25 < CoverSlide> or use an older buggier version of node
19:25 < CoverSlide> those are your options
19:26 < segomos> roll your own is another
19:26 < segomos> what module is it?
19:26 < reuf> CoverSlide: thanks
19:26 < reuf> segomos: 
19:26 < reuf> thanks
19:26 < carlocci> isn't node-waf still provided by the current stable version of node?
19:28 < drudge> has anyone cross-compiled node 0.8.x for android?
19:29 < C0deMaver1ck> drudge: http://n8.io/cross-compiling-nodejs-v0.8/
19:33 < ozette> any way to create symlinks in windows? i don't understand why I gt the EPERM error
19:37 < Deathspike> ozette: Yeah you can with mklink on ntfs
19:40 < ozette> no way with nodejs?
19:51 < Deathspike> ozette: Using a system exec? I wonder why anyone would be making symlinks in nodejs tough. I expect you have a good reason..
19:52 < jcrugzz> ozette: http://nodejs.org/api/fs.html#fs_fs_symlink_srcpath_dstpath_type_callback
19:53 < jcrugzz> havent tried it in windows personally but i dont see why it wouldnt work 
19:54 < reuf> so node-waf even though depractaed is available in later version of node
19:54 < reuf> ?
19:55 < jocafa> does anyone know of a good js library that adds things like hyperbolic functions to Math?
19:57 < CoverSlide> jocafa: http://safalra.com/web-design/javascript/number-object-extensions/ << the googles show me this
19:57 < niggler> jocafa you will end up writing it
19:57 < CoverSlide> although it extends Number instead of Math
19:57 < CoverSlide> Number.prototype
19:57 < jocafa> CoverSlide:  download is broked. i ran into it earlier
19:57 < CoverSlide> really?
19:57 < CoverSlide> that's shitty
19:57 < ozette> Deathspike, yes, i made a small script which saves the path to the root folder of a certain repository using __dirname. this path can be shared among all files in the folder.
19:57 < niggler> what type of BS is this
19:58 < niggler> who uses the name 'cosech'
19:58 < niggler> its csch
19:58 < jocafa> found this though: http://www.math.rutgers.edu/~erowland/playground.html  functions are in the src
19:58 < ozette> Deathspike, I couldn't find any better way, I'm dealing with developers on different platforms, and the project must be cross-platform deployable. I couldn't find anything like a virtual environment
19:59 < jocafa> guess i'll have to write a micro lib for it *sigh*
19:59 < ozette> jcrugzz, I tried this asynchronous option, but the operation never succeeds
19:59 < niggler> jocafa you probably want something simple like http://hastebin.com/jemafisuqu.avrasm
20:00 < jocafa> *nod*
20:01 < niggler> why are you using hyperbolic functions anyway jocafa?
20:02 < jocafa> because i'm crazy
20:02 < jocafa> but more specifically, i'm trying to work out some stuff for a speaker horn design
20:05 < jocafa> … because ADD.
20:05 < niggler> hehe
20:07 < juboba> where can I get information about mysql module?
20:09 < ozette> anyone know how to use mklink on windows? it seems impossible
20:09 < juboba> does somebody know if connection.end() destroys the connection entirely?
20:09 < juboba> including the parameters?
20:09 < gnarf> ozette: a little
20:09 < gnarf> ozette: i've only used it to make "junctions"
20:09 < ozette> mklink src dst .. can you get this to work?
20:10 < ozette> o, I'm just trying to link a regular file
20:10 < ozette> a 60 line file, which I've had troubles with since 3 hours ago
20:10 < gnarf> ozette: its actually mklink dst src
20:10 < ozette> really?
20:10 < gnarf> ozette: --- link target
20:10 < jcrugzz> ozette: nothing is impossible, but microsoft likes to make things very hard hah
20:10 < ozette> omggg
20:10 < CoverSlide> juboba: https://github.com/felixge/node-mysql
20:11 < ozette> omg, you're a hero!
20:11 < gnarf> ozette: yeah, backwards, i know... ;)
20:11 < ozette> gnarf, jcrugzz thanks hahah
20:11 < ozette> :)
20:11 < gnarf> ozette: fyi - dropbox works with juncitons on windows, which is nice ;)
20:11 < juboba> CoverSlide, yes, but there's no docs there
20:11 < CoverSlide> the README kind of goes over everything
20:12 < CoverSlide> and there's always rtfs
20:12 < ozette> I see
20:12 < juboba> CoverSlide, I need to know about the behaviour of a function
20:12 < CoverSlide> RTFS
20:12 < juboba> CoverSlide, rtfs?
20:13 < juboba> source?
20:14 < CoverSlide> yes
20:21 < manuelbieh> is node caching require() calls?
20:21 < manuelbieh> or should i do that by myself?
20:21 < TJKrusinski> I believe you should do it by yourself
20:21 < manuelbieh> var foo = require('helpers').foo; var bar = require('helpers').bar;
20:21 < manuelbieh> == 2 filesystem operations or 1?
20:22 < Kakera> 1
20:22 < Kakera> manuelbieh, http://nodejs.org/docs/latest/api/modules.html#modules_caching
20:23 < TJKrusinski> touche, thanks
20:24 < manuelbieh> ok cool, thank yo :)
20:28 < Jimu> I wrote some simple python CherryPy server to handle XHR requests from my browser-based app. It works fine. Then I discovered the node-webkit project, and I'm wondering if it's worth it, performance-wise, to move off the CherryPy backend to a full node-webkit app instead. No idea what kind of delays or overhead is involved in making XHR requests to a localhost server. Any thoughts?
20:29 < Jimu> (the server which simply mostly passes these requests to an external site)
20:35 < Deathspike> Jimu: A node-webkit app?
20:38 < doughsay> is there any way to kill or break out of a running script from inside vm.runInContext ?
20:38 < AAA_awright> manuelbieh: By definition a module is a function that's executed once per process
20:38 < CoverSlide> node-webkit is a pretty fat download
20:40 < Jimu> It's just a single-user application
20:42 < manuelbieh> AAA_awright thanks :)
20:45 < owen1> is there any security benefit of using nginx on top of node?
20:45 < fermion> owen1 are you going to use SSL?
20:46 < draginx> Is there anyway to get expressjs to handle empty values when using an array input?
20:46 < draginx> like <input name="ids[]"> ?
20:47 < owen1> fermion: not at the moment. is ssl require it?
20:47 < fermion> anyone seen "Image given has not completed loading" using node-canvas? trying to load a remote GIF into memory and set a Canvas.Image's src
20:47 < fermion> works for some GIFs, works for JPEGs. certain GIFs seem to bork.
20:48 < fermion> cc tjholowaychuk — I know this error is probably generic and could mean a dozen different things
20:48 < fermion> owen1 no, but if you'll be using SSL it's, imho, easier to configure nginx for SSL termination
20:48 < fermion> owen1 plus it's probably better at serving static assets, can do load balancing, etc.
20:50 < fermion> owen1 my node servers are in AWS behind an ELB and don't serve HTML so I don't need nginx
20:50 < fermion> rather, didn't feel the need
20:52 < owen1> fermion: got it. i currently don't need ssl or static assets. and load balancing is done with F5.
20:53 < fermion> owen1 I wouldn't bother then, personally
20:54 < AAA_awright> draginx: Empty values?
20:54 < draginx> yeah
20:54 < AAA_awright> Oh, without value="" ?
20:54 < draginx> like i have a bunch of <input type="text" name="reference[]" value="">
20:54 < AAA_awright> I think it's the same as value=""
20:54 < draginx> no even with value=""
20:54 < draginx> right
20:54 < AAA_awright> That's a blank string
20:54 < draginx> and basically I *need* expressjs to take these blank strings into consdideration
20:55 < draginx> due to the way the entire form is ordered
20:55 < draginx> some entries will have values others wil not
20:55 < AAA_awright> It should be in the browser form submission
20:56 < draginx> so theres no way of doing this
21:01 < draginx> I need &refence=&ids[]=1 i need the &reference to equal '' or an empty string / get expressjs to know how crucial this is :P
21:04 < Jimu> so I write a file 'tank.js' that has var tool =  require('tool'). I write another file 'plane.js' that also has var tool = require('tool'). Is this okay or the wrong way to deal with dependencies?
21:05 < Jimu> i then write main.js to utilize both tank.js and plane.js, if that wasn't clear
21:05 < CoverSlide> Jimu: that's the write way
21:05 < CoverSlide> *right
21:05 < AAA_awright> draginx: How is this expressjs's issue? Node.js will expose that data for you
21:05 < Nuck> The write way to right it?
21:05 < CoverSlide> yep
21:05 < draginx> AAA_awright: nodejs does not in anyway expose it
21:06 < AAA_awright> draginx: Yeah it does, it returns an empty string
21:06 < draginx> You have a working example?
21:06 < draginx> reference: [ '18,19', '16,17', '16,17', '18,19', '10', '16,17', '18,19' ] <-- becuase I got this.. when it should be reference: [ '18,19', '16,17', '16,17', '18,19', '10', '16,17', '','','','','','18,19' ]
21:06 < AAA_awright> > require('querystring').parse('&refence=&ids[]=1')
21:06 < AAA_awright> {"":"", "refence":"", "ids[]":"1"}
21:07 < AAA_awright> draginx: You remember that "" is falsy, right?
21:07 < draginx> yes
21:07 < draginx> so expressjs maprecuces falsy? :/
21:08 < AAA_awright> Idk? How is this expressjs's issue?
21:08 < draginx> becuase im console.logging req.body
21:08 < AAA_awright> How are you parsing the incoming data?
21:08 < draginx> in expressjs
21:08 < draginx> ^
21:08 < AAA_awright> And what are you getting?
21:08 < draginx> please read above
21:08 < draginx> reference: [ '18,19', '16,17', '16,17', '18,19', '10', '16,17', '18,19' ] <-- becuase I got this.. when it should be reference: [ '18,19', '16,17', '16,17', '18,19', '10', '16,17', '','','','','','18,19' ]
21:08 < LennyLinux> Can anyone help me with a little problem with jade? The paragraph is bade rendered like this <p></p><ul>...</ul>  ---> http://pastie.org/5650324
21:09 < AAA_awright> draginx: A request body should be a string
21:09 < AAA_awright> What are you getting?
21:09 < draginx> well im using the bodyParser() middleware
21:10 < lohkey> on post req.body is an object in express
21:10 < lohkey> in regular node req.body doesn't exist, because req is a stream
21:10 < draginx> correct
21:10 < AAA_awright> That's why I'm asking about the request body
21:11 < draginx> so how do I get the raw string in expressjs?
21:11 < AAA_awright> You should be parsing that
21:11 < draginx> i will with querystring
21:11 < lohkey> AAA_awright: not sure if you can
21:11 < lohkey> if the stream is exhausted by the bodyParser and they don't save it anywhere then it's simply gone
21:11 < AAA_awright> What do you mean? Of course you can, it's the 'data' event of the request
21:12 < lohkey> AAA_awright: it's the data event, yeah, but bodyParser() already exhausted the stream
21:12 < gnarf> any suggestions for a gd/imagemagick style node lib?
21:12 < AAA_awright> You can have multiple events registered for a stream...
21:12 < lohkey> AAA_awright: yeah
21:12 < gkatsev> express itself, iirc, exhausts the stream before giving it back to you in the response
21:12 < AAA_awright> Other events shouldn't affect your ability to attach an event
21:12 < lohkey> you won't be able to do that from a "controller" in express though
21:13 < lohkey> you're probably going to have to write a middleware
21:13 < lohkey> also
21:13 < lohkey> in express/connect, the ordering of middleware matters
21:13 < lohkey> for this very reason
21:14 < lohkey> AAA_awright: the problem, is that the events are already exhausted
21:14 < lohkey> you can set listeners in an action, but nothing will get emitted
21:14 < AAA_awright> Well you're supposed to register the handler /before/ the first event is emitted
21:15 < lohkey> like i said though, the bodyParser() middleware is exhausting the stream before hand off
21:15 < ozette> too bad symlinkSync does not work out of the box on windows machines as far as I've tried. Now the W developers in my team have to make the link manually
21:15 < draginx> guys guys its cool ill just make a workaround thanks! :)
21:15 < draginx> just wanted to make sure i wasnt going crazy ;)
21:16 < bradleymeck> ozette: did you at least make an issue / test case in the issue tracker so we can get to it when we have chance
21:16 < gkatsev> winXP doesn't even have symlinks
21:19 < lohkey> draginx: http://www.senchalabs.org/connect/multipart.html << write an alternative body parser middleware
21:19 < lohkey> the provided middleware body parsers by connect/express clearly are exhausting the stream before you're receiving the request in the action :)
21:19 < draginx> it should just pas off rawData
21:20 < lohkey> the default body parser only supports json, urlencoded and multi-part form data
21:21 < lohkey> Writing a connect/express middleware is easy though
21:21 < lohkey> you just have to give express a function such as: function(req, res, next) {}
21:21 < lohkey> pipe data to a buffer, assign buffer to req.body, call next, ????, profit
21:22 < draginx> oh, I can send json data O_o
21:22 < lohkey> draginx, yup
21:22 < lohkey> thats mostly a RESTish thing though, you won't be able to do that from a browser
21:22 < lohkey> .. or can you?
21:23 < draginx> not sure
21:24 < lohkey> jquery seems to claim that you can
21:24 < lohkey> never tried it myself though so idk
21:26 < ThiefMaster> you can.. you just can't use methods besides GET and POST
21:26 < ThiefMaster> but express has methodOverride so you can use _method: 'PUT' etc in your post data or headers
21:27 < juca> hello
21:28 < ozette> bradleymeck, not yet, I will.
21:29 < ozette> funny thing is when googling: windows mklink only 180k hits, and googling: windows mklink acces denied 5k
21:29 < ozette> so symlinks in general are not huge on w
21:31 < ozette> so it seems
21:56 < othiym23> whoops: https://groups.google.com/forum/#!topic/rubyonrails-security/61bkgvnSGTQ/discussion
21:57 < othiym23> wonder how many of those are lying around in the Node world
21:58 < cainus> I don't see a lot of sql in the node world
22:08 < kv1> dumb question:
22:08 < kv1> for the node js mysql module
22:08 < kv1> i need an sql server right?
22:08 < kv1> mysql server running 
22:08 < kv1> yes?
22:08 < blazes816> that rails exploit has nothing to do with sql
22:08 < kuebk> kv1
22:09 < kuebk> yes
22:13 < CoverSlide> there was the old hash attack exploit that the node dev fixed in like 2 days
22:13 < CoverSlide> *devs
22:32 < paul__> Does anyone know of any npm modules that can efficiently look up an IP address against a blacklist? Assuming my blacklist is not individual ip addresses but blocks of IPs.
22:32 < paul__> Also assuming that there will be a large number of entries.
22:32 < Oddman> I don't even know if such a blacklist exists?
22:32 < Oddman> what would the blacklist be for?
22:32 < paul__> IP addresses that I want to block.
22:32 < paul__> I own the blacklist.
22:32 < paul__> Or, administer, tha tis.
22:33 < niggler> you just convert it to a number
22:33 < paul__> Convert it to a number and...?
22:35 < MI6> joyent/node: isaacs master * 18c9859 : stream: Override addListener as well as on  For the compatibility switch. - http://git.io/6Ae8QA
22:36 < trevnorris> I would just like to take a moment and share my giddy joy of really realizing how the v8 api works.
22:36 < Deathspike> paul__: Does it have to be in Node? Most Linux machines come with great solutions to block unwanted addresses on a OS level.
22:37 < paul__> Deathspike: Unfortunately it does :( I actually have some application logic that I have to run against it when it detects it.
22:38 < Deathspike> paul__: I see. This could actually be done in 3 lines of code or so. Are you using express?
22:38 < paul__> Yes.
22:38 < Deathspike> One sec, let me write a simple example.
22:39 < wookiehangover> is there any way to generate a package.json file from the currently installed node_modules #lazyweb
22:40 < SomeoneWeird> npm init
22:40 < wookiehangover> SomeoneWeird: that won't generate the dependencies object from what's currently installed tho? or will it?
22:41 < LowValueTarget> wookiehangover: yes... npm init
22:41 < Deathspike> paul__: http://pastebin.com/scjq9x8N
22:42 < Deathspike> paul__: It's probably better if you use redis (or something similar) if your list becomes huge :P
22:44 < paul__> Deathspike: Thanks, the list will become large :( I was hoping to figure out something that wasn't O(n) lookup against the blacklist because of this.
22:46 < Deathspike> paul__: Of course, this is naive. A database uses a variety of techniques to optimize resource usage. You could probably get away with it if you approach the array as a hashset instead.
22:47 < trevnorris> isaacs: i've been investigating how v8 can allocate memory for and store a string so quickly. have any tips how or where  I could look?
22:48 < Deathspike> Realistically speaking, tough, if you get a huge list and want to check every request against it you're doing to downgrade performance quite a bit. This is why I recommended doing it on OS level instead, but since that is not possible I guess you should make the most of redis, hashsets and so forth. Of course, changing the readable definition of a ip back to a int makes it infinitly faster.
22:48 < Deathspike> Let me whip that up.
22:49 < paul__> Yeah, also trying to conserve memory usage too :) i need to calculate how much it would be to store all of the individual ones in a hashset
22:49 < paul__> but, for instance, i have several entries with a /13 mask
22:50 < paul__> which I think is 524288 individual ip addresses
22:51 < Deathspike> paul__: http://pastebin.com/fkJRA1aF
22:51 < paul__> I will try to figure out how the OS level does it -- ipset in particular seems good -- claims good space efficiency and O(1) lookup somehow
22:51 < Deathspike> Well, this doesn't cover ranges yet.
22:52 < Deathspike> Ranges wouldn't be too hard to add, but that will be quite a bit slower.
22:52 < Deathspike> Of course, you want to use ranges instead of per-ip basis.
22:52 < Deathspike> If you have a huge range :P
22:52 < paul__> Thanks for the head start Deathspike, I'll try to add on to this
22:56 < Deathspike> paul__: And with ranges http://pastebin.com/kTAm5hnh
22:56 < Deathspike> That was fun.
22:57 < paul__> Hey cool, thanks!
22:57 < wookiehangover> you're all liars
22:57 < Deathspike> You're welcome :) hope this gets you started on your huge amounts of ips
23:00 <@isaacs> trevnorris: no clue
23:00 <@isaacs> trevnorris: you're the same person as tnorris, right?
23:00 < trevnorris> isaacs: yeah. just wanted the same handle as my github account. should have done it a while ago.
23:00 <@isaacs> trevnorris: i see
23:00 <@isaacs> makes sense
23:01 < tjfontaine> I would say berts string experience makes him a prime target for your questions trevnorris 
23:02 < trevnorris> storing a string is a about 10 times faster than creating  SlowBuffer, and they are all individually gc'd.
23:02 < trevnorris> trying to figure out a solution for the edge case mentioned in GH-4525
23:03 < trevnorris> tjfontaine: thanks. I'll hit him up.
23:05 < fermion> ping tjholowaychuk 
23:06 < tjholowaychuk> fermion hey
23:06 < fermion> tjholowaychuk yao. qq re: node-canvas, it's not clear if this is still an issue: https://github.com/LearnBoost/node-canvas/issues/195
23:07 < fermion> I've been struggling with this for a while now, still getting `Image given has not completed loading`
23:07 < fermion> I'm 99.99999% sure I'm doin it rite :-)
23:07 < tjholowaychuk> it has been working fine on our machines
23:07 < fermion> kk
23:07 < tjholowaychuk> i dont know much about gyp though
23:08 < fermion> tjholowaychuk any gotcha you can think of when fetching remote GIFs (using http.get), making a Buffer and setting it as the .src of a Canvas.Image?
23:09 < fermion> loads fine in a browser, I can fetch/save it to the file system and everything looks great
23:09 < tjholowaychuk> it should work fine you can use data uris as well
23:10 < dilip> Hello eveyone
23:10 < fermion> tjholowaychuk alrighty. I'll keep pounding. My code works fine for PNG/JPEGs and some other GIFs
23:10 < fermion> tjholowaychuk thanks for the help man, you rock!
23:10 < dilip> i need some help on NowJs istallation 
23:11 < dilip> anyone there ?
23:11 < tjholowaychuk> fermion some gifs work? maybe we have a different bug
23:11 < fermion> tjholowaychuk I can PM you the URLs if you'd like
23:12 < tjholowaychuk> yeah sure
23:12 < CoverSlide> maybe they have some weird header
23:12 < dilip>  i need some help on NowJs istallation and make it work on windows  anyone ?
23:12 < dilip>  i need some help on NowJs istallation and make it work on windows  anyone ?
23:12 < dilip>  i need some help on NowJs istallation and make it work on windows  anyone ?
23:12 < dilip>  i need some help on NowJs istallation and make it work on windows  anyone ?
23:12 < dilip>  i need some help on NowJs istallation and make it work on windows  anyone ?
23:12 < dilip>  i need some help on NowJs istallation and make it work on windows  anyone ?
23:12 < dilip>  i need some help on NowJs istallation and make it work on windows  anyone ?
23:12 < dilip>  i need some help on NowJs istallation and make it work on windows  anyone ?
23:12 < dilip>  i need some help on NowJs istallation and make it work on windows  anyone ?
23:12 < dilip>  i need some help on NowJs istallation and make it work on windows  anyone ?
23:12 < tjfontaine> sigh
23:12 < C0deMaver1ck> wtf?
23:12 < CoverSlide> NowJs is dead
23:12 < CoverSlide> don't use it
23:12 < dilip> so what is alive ?
23:13 < dilip> any suggestions please 
23:13 < CoverSlide> dnode
23:13 < sohcahtoa> could you be more obnoxious?
23:13 < segomos> can you repeat that 5 or 6 more times pls
23:13 < CoverSlide> dnode is alive and awesome
23:13 < ThiefMaster> dilip: are you somewhat retarded?
23:13 < CoverSlide> now is dead and was terrible when it was alive
23:13 < dilip> Ok 
23:14 < dilip> I have just started with nodejs and somehow i came to Nowjs 
23:14 < dilip> could you gimme some links where i can go though the sample for dnode ?
23:14 < segomos> google.com
23:14 < CoverSlide> http://lmgtfy.com/?q=dnode
23:15 < segomos> CoverSlide: i went to your link just cause i like watching the computer work for me 
23:15 < CoverSlide> hahaha
23:15 < shama> Does anyone know how I could neuter core libs when bundling with browserify?
23:16 < CoverSlide> most core libs are shimmed for browserify
23:16 < CoverSlide> why do you want to neuter them?
23:16 < shama> The lib uses dgram and repl... my script doesnt touch those but bundling fails.
23:16 < shama> ar-drone
23:17 < CoverSlide> maybe isolate the library
23:17 < CoverSlide> because what in ar-drone are you attempting to use on the browser?
23:18 < shama> The at command stuff... Im building a three.js drone simulator
23:21 < dilip> any ideas to install DNode windows 7?
23:21 < shama> The goal being one could use their existing ar-drone client script... but replace the udpControl with my simControl. To navigate the drone in the simulator instead.
23:22 < CoverSlide> dilip: npm
23:23 < dilip> CoverSlide  i have tried it but its failing 
23:23 < CoverSlide> shama: I'd maybe do a fork
23:23 < chovy> i read "Microsoft's SkyDrive" as "Microsoft's SkyDive"
23:23 < chovy> in reference to their freefall in the past year.
23:23 < shama> CoverSlide: ok, thanks for your help!
23:23 < CoverSlide> hahaha
23:24 < CoverSlide> does skydrive have an API? I hate the shitty SilverLight interface
23:25 < dilip> CoverSlide   thats the error message "gyp ERR! stack Error: Can't find Python executable "python", you can set the PYTHON env variable." 
23:25 < CoverSlide> dilip: do you have python?
23:25 < CoverSlide> dilip: if no, install it.
23:25 < dilip> i have only installed NodeJs from Nodejs.or.
23:25 < CoverSlide> dilip: http://lmgtfy.com?q=python+windows+installation
23:26 < dilip> Ok I install it 
23:27 < CoverSlide> you also need a version of visual studio to compile stuff
23:34 < s5fs> I'm having trouble compiling node on the beagleboard, it's giving a malloc error. Any ideas? I'm happy to pastie the error.
23:35 < s5fs> Here's the error:  http://pastie.org/5651632
23:36 < s5fs> Node version is 0.8.16 on a Beagleboard XM.
23:37 < CoverSlide> hm that doesn't look good
23:39 < s5fs> CoverSlide: yeah, i'm not jazzed by errors either. i'm compiling on another beagleboard xm, it too failed with a malloc error twice (but on different files). i kicked it off a 3rd time and it moved past the first errors and seems to be going okay now.
23:39 < CoverSlide> strange
23:39 < dilip> CoverSlide  I have installed python and  installed dNode with a warnign with some vcxproj 
23:39 < CoverSlide> malloc is pretty fundamental
23:39 < s5fs> Agreed! once this binary is built i'm gunna make a bunch of copies, haha!
23:40 < dilip> but i am still not able to call it in require('dnode')
23:40 < CoverSlide> dilip: did you install it local to your main script?
23:40 < dilip> what do you mean by local 
23:40 < s5fs> CoverSlide: also agreed. we've been building software all day, just compiled wxwidgets before node, no issues with any other builds. again, this problem exists with node on more than one beagleboard too. i'm happy to perform additional tests if you wish.
23:40 < CoverSlide> npm install dnode
23:40 < dilip> npm install dnode
23:41 < dilip> yes 
23:41 < CoverSlide> and you script is in the directory where you ran that?
23:42 < dilip> my script is in  a folder with other script 
23:42 < dilip> like i use require('http')
23:42 < CoverSlide> in other words, your main.js is where you have require('dnode') correct? in that same folder should be a node_modules folder, and in that folder should be a folder for dnode
23:42 < dilip> CoverSlide Do i need to specifically copy something 
23:42 < CoverSlide> no
23:44 < dilip> Do i always  install  this everytime i create anew folder ?
23:44 < CoverSlide> not in every new folder, just in each project
23:45 < CoverSlide> each project should have its own set of dependencies
23:45 < CoverSlide> dilip: http://nodejs.org/api/modules.html << read this. all of it
23:45 < CoverSlide> especially http://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders
23:49 < dilip> Ok 
23:55 < trevnorris> In the v8-docs I can't find where Isolate is shown as a function parameter, but it's used all over the place. are their docs I'm not finding?
--- Log closed Wed Jan 09 00:00:18 2013
