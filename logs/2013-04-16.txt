--- Log opened Tue Apr 16 00:00:08 2013
--- Day changed Tue Apr 16 2013
00:00 <@isaacbw> it depends on how your templating system works
00:00 < ChrisPartridge> Technodrome: well, the query should return an object/array of objects
00:00 < Technodrome> sure, inside of that function though ChrisPartridge 
00:00 < faceleg|work> dypsilon: it took weeks to get the taste out of my mouth
00:00 < Technodrome> isaacbw: why would the template system matter, its just getting sent some js objects? 
00:00 <@isaacbw> if you have a very basic templating system that requires you to pass plain values, you can do the conversion yourself pretty easily
00:01 <@isaacbw> Technodrome: because you may have a templating system that will let you make function calls within the template
00:01 < Technodrome> i'm saying, the query itself has its own scope, save the results to a variable outside of that function scope and just return it to the template? and then loop there? 
00:01 < ChrisPartridge> Technodrome: yes, so then you place the template rendering inside the query callback, if it starts getting messy, consider using a flow control package
00:01 < dypsilon> faceleg|work, please show me a good orm :)
00:01 < faceleg|work> dypsilon: none exist
00:02 < Technodrome> ChrisPartridge: actually do the sql call in the template? doesn't sound like the best idea :) 
00:02 < faceleg|work> dypsilon: I was on the SQL side
00:02 < ChrisPartridge> Technodrome: Nope, i didn't say that - render the template inside the query callback
00:02 < faceleg|work> forget templating, AngularJS
00:02 <@isaacbw> Technodrome: no
00:03 < ericelliott> "then you place the template rendering inside the query callback" -- is this ever good advice?
00:03 < dypsilon> faceleg|work, true sadly. I think that's the best argument for sql beeing a bad abstraction: you cant build any good abstraction on top of it. Also you need one! :)
00:03 < ChrisPartridge> ericelliott: it's a good start, i didn't say it was ideal
00:03 < Technodrome> ChrisPartridge: what if you got more than 1 query though that the template needs? rendering from inside makes sense i maybe if you only have one? but in many cases you need 1-4 queries to return a page
00:04 < ericelliott> ChrisPartridge: I guess it's direct. =P
00:04 < ChrisPartridge> Technodrome: well, i use the "async" package to excecute a bunch of queries
00:04 < Technodrome> and this is where i fire open python to complete my site :) 
00:04 < ericelliott> I use promises for that, but async works, too. =)
00:04 < Technodrome> hehe 
00:04 < Technodrome> but why does many node libraries have to do this 
00:05 < harrisonm> Is anyone working on a UI for the Boston room offering spreadsheet that maxogden posted/is there an IRC channel set up for these sorts of efforts? (https://twitter.com/maxogden/status/323941000106086400)
00:05 < dypsilon> are there actually any plans to bring promises to the node core?
00:05 < ericelliott> Technodrome: You'd have the same issues with Twisted or Tornado
00:05 < Technodrome> making something more complicated than it has to, you execute a query, and it should return an array
00:06 < ericelliott> dypsilon: a long time ago in a galaxy far, far away, yes.
00:06 < ChrisPartridge> Technodrome: asynchronously, in this case, instead of blocking an entire thread to wait for a query
00:06 < Technodrome> not execute the query inside of a anon function 
00:06 < dypsilon> ericelliott, are we talking more like 2.0?
00:07 < Technodrome> ChrisPartridge: its going to have to wait for my data anyways? 
00:07 <@isaacbw> dypsilon: never :P
00:07 < ericelliott> dypsilon: More like .2.0. See http://howtonode.org/promises
00:07 < Technodrome> ChrisPartridge: i thought the use of anon functions for such things, were just people trying to be slick ? :P 
00:07 < ChrisPartridge> Technodrome: yes, but what about user B who is accessing your site, do you want him to wait for user A's query to finish?
00:08 < Technodrome> ChrisPartridge: and so how does that relate to anon functions for queries?
00:08 < Technodrome> ChrisPartridge: that's a node feature after all (async stuff) 
00:08 < dypsilon> ericelliott, is the post where they tell us the story of ryan deciding to push promises out in the userland?
00:08 < ericelliott> dypsilon: yes.
00:09 < ChrisPartridge> Technodrome: that response was in respone to "its going to have to wait for my data anyways? "
00:09 < dypsilon> ericelliott, ah yeah, i hoped there are some new plans. sad panda.
00:09 < Technodrome> ah ChrisPartridge 
00:09 < ericelliott> dypsilon: it's not a big deal to require something like q or when
00:10 < Technodrome> ChrisPartridge: i just wish i could call a query function, and have it return an array, like all normal query api's  , i don't know how to send my data to a template, i guess bind it to a variable outside of the function and then send it 
00:10 < ericelliott> I don't mind that it's in userland... it also gives room for alternate paradigms, like the async library
00:11 < ericelliott> sometimes async feels like a more natural approach to me.. depends on my mood and the task, I guess. =)
00:11 < dypsilon> ericelliott, async is well and nice until you have to deal with eventemitter
00:12 < ericelliott> how do I add a new public key to browserling / testling?
00:12 < ericelliott> =P
00:14 < Technodrome> ChrisPartridge: http://pastebin.com/VGYKj85b something like this, minus my mistakes 
00:15 < ericelliott> Technodrome: Have you considered using express?
00:15 < dypsilon> techlife, why don't you just call res.render insed the callback?
00:16 < dypsilon> *insed=inside
00:16 < mscdex> node.js rules!
00:16 < Technodrome> dypsilon:  was that to me?
00:16 < Technodrome> ericelliott: i'm using express 
00:16 < faceleg|work> dypsilon: haha yes truth
00:16 < dypsilon> Technodrome, yeah, sorry
00:16 < Technodrome> dypsilon:  is that really a call back? 
00:17 < Technodrome> i've always thought of those as anon functions 
00:17 < nur> hello all
00:17 < ericelliott> Technodrome: If you set up your query in middleware, you can add the data to the request object and then call next() inside the query callback. Then when you get to the template processing middleware, you know your data is already there.
00:17 < nur> if I were to learn node.js... where do I start? do I need to become the master of javascript?
00:17 < dypsilon> Technodrome, callbacks and anon functions are not exclusive terms.
00:17 < ericelliott> middleware handles asynchronous flow for you by virtue of the middleware next() chaining.
00:18 < draginx> nur: it's a good start
00:18 < Technodrome> ericelliott: put the query in the middleware? talk about complicating things a bit :) 
00:18 < draginx> nur: you'll need to learn a bit more than that though.. its JS + async concept
00:18 < nur> <draginx> ok... can i not be a master of node.js
00:18 < nur> ok...
00:19 < draginx> I mean you dont technically have to do async but to understand how libraries work efficiently then yes
00:19 < ericelliott> Not really. Middleware keeps things very neat.
00:19 < Technodrome> dypsilon: and calling res.render inside is not an issue, but what if i have more than 1 query, i can't do that 
00:19 < nur> seems like it will take years?
00:19 < draginx> nur: Not at all, it also depends on what you plan on doing, is it web development?
00:19 < ericelliott> Technodrome: ^^
00:19 < Technodrome> i'm thinking of middlware in the python / django way 
00:19 < draginx> nur:  technically no one masters anything ;)
00:19 < nur> e-commerce
00:19 < draginx> so a website?
00:19 < Technodrome> and that got pretty complex quickly ericelliott  
00:19 < dypsilon> Technodrome, yeah, that's the point where you look at npm package "async"
00:19 < draginx> or an API?
00:19 < draginx> e-commcerce doesn't tell me much
00:19 < ericelliott> Technodrome: Think of middleware in the express way. Express *is* middleware.
00:19 < draginx> e-commerce can also mean POS systems and retina scanners for bar codes
00:20 < draginx> which tbh, both are also easy and awesome to do in NodeJS O_o
00:20 < ericelliott> If you don't take advantage of middleware, you're not taking advantage of express.
00:20 < JohnMcLear> mheh depends how much middleware you use
00:20 < Technodrome> dypsilon: so for multiple queries and i want all that data returned to the template, i have to use async? 
00:20 < nur> e-commerce: online retail
00:20 < dypsilon> Technodrome, thats the clean way, the dirty way is nested callbacks.
00:20 < draginx> nur:  yup very easy, start with expressjs (google will help)
00:20 < Technodrome> what does a nested call back look like dypsilon  ? 
00:21 < Technodrome> you mean literally calling one function in another for doing querying? 
00:21 < CoverSlide> Technodrome: http://callbackhell.com/
00:21 < dypsilon> Technodrome, you fire the next query inside the callback of the first query.
00:21 < Technodrome> f that
00:21 < nur> thank you <draginx>
00:21 < draginx> yessir
00:21 < dypsilon> Technodrome, async ;)
00:21 < CoverSlide> or promises
00:22 < Technodrome> how is async going to do this though? will i be able to send all those queries data to my template individually? 
00:22 < dypsilon> also you probably want to try to get all the data you need with one query.
00:22 < Technodrome> i've never done any async anything actually 
00:22 < Technodrome> dypsilon: yes, i always try for one query, but many times 1-3 queries is needed
00:23 < dypsilon> Technodrome, async will fire 5 queries in parallel and call 1 callback when everything is done with the results. What you do with that is up to you.
00:23 < tjholowaychuk> Technodrome that's just kinda the nature of node, it gets annoying when you're juggling queries
00:23 < ericelliott> Technodrome: It's so much easier than it sounds. Just start playing around with it, and you'll get the hang of it and start to wonder why you ever did things the synchronous way.
00:25 < dypsilon> or go use java :D
00:25  * ChrisPartridge laughs
00:26 < bendytree> anyone know of a good way to sync to/from couchdb from backbone?
00:26 < ericelliott> dypsilon: Oh yeah, because threaded concurrency is SO MUCH EASIER.
00:26 < ericelliott> =)
00:27 < harrisonm> Sorry to repost, but: Is anyone working on a UI for the Boston room offering spreadsheet that maxogden posted/is there an IRC channel set up for these sorts of efforts? (https://twitter.com/maxogden/status/323941000106086400)
00:27 < dypsilon> ericelliott, lol, true, but you know, it's old, so it has to be better, right?
00:27 <@mbalho> harrisonm: @jllord is (i'm @maxogden, she is my GF)
00:27 < ericelliott> ;)
00:27 < tjholowaychuk> node isn't better either :p
00:27 <@mbalho> harrisonm: http://cl.ly/image/3l0C112j0k1e
00:27 < tjholowaychuk> sync != blocking
00:28 < Technodrome> dypsilon: how does it separate the results? 
00:28 <@mbalho> harrisonm: ill get her to put it on github, one sec
00:29 <@mbalho> harrisonm: if you have time to help getting the columns to sort would be useful
00:29 < ericelliott> tjholowaychuk: I'd say sync == blocking sometimes, but sync !== blocking. ;)
00:29 < ChrisPartridge> bendytree: backbone-couch in npm?
00:29 < harrisonm> mbalho: sure thing
00:29 < ericelliott> </jsnerd>
00:29 < tjholowaychuk> ericelliott yeah :p
00:29 < tjholowaychuk> node is certainly not the best solution
00:29 < tjholowaychuk> in that respect though so
00:29 < tjholowaychuk> yeah
00:29 < tjholowaychuk> don't blame Technodrome for looking for better
00:30 < ericelliott> tjholowaychuk: what's the best solution?
00:30 < tjholowaychuk> subjective I suppose but
00:30 < dypsilon_> do you guys know of some good flatiron broadway alternative? looking on npm, but can't find anything good.
00:30 < tjholowaychuk> callbacks are definitely not them for me
00:30 <@mbalho> harrisonm: https://github.com/jllord/bostonstay
00:31 < ericelliott> tjholowaychuk: I like promises. I don't mind callbacks. =)
00:31 < dypsilon_> ericelliott, in my opinion promisses are.
00:31 < tjholowaychuk> haha
00:31 < tjholowaychuk> ew
00:31 <@mbalho> harrisonm: also since the spreadsheet link is flaky a cache would be useful
00:31 < ericelliott> I don't like callback pyramids, but those are easy to avoid. =)
00:32 < CoverSlide> i love callback pyramids
00:32 < dypsilon_> :D
00:32 < Cainus> dypsilon_: is that just for mixins?  kinda looks like it
00:32 < tjholowaychuk> callbacks are awful no matter how you hard you try to hide them
00:32 <@Nexxy> mbalho, sheetsee is so cool
00:32 < Hotroot> I find them kind of amusing, but they feel hacky
00:32 <@mbalho> Nexxy: shes writing a node version now
00:33 <@Nexxy> mbalho, that's awesome!
00:33 <@mbalho> Nexxy: which will be even cooler since it will be faster + more cross browser
00:33 <@Nexxy> link?
00:33 <@Nexxy> I want to star it
00:33 < dypsilon_> Cainus, not really, it's more for managing modules of the application. Like db connection, config and so on.
00:33 <@mbalho> Nexxy: https://github.com/jllord/sheetsee-cache is one part
00:33 < dypsilon_> Cainus, like Zend_Application, if you are, by chance familiar with it.
00:33 < Cainus> dypsilon_: I don't see anything that specific... looks like a monkey-patching framework to me
00:34 <@mbalho> tjholowaychuk: is 'awful' a technical term?
00:34 < tjholowaychuk> mbalho yes :p
00:34 <@Nexxy> which is also the technical term for the way I'd describe my experience with 'n' the other night
00:35 < dypsilon_> Cainus, it has it's place in the whole flatiron environment, probably hard to grasp without flatiron.
00:35 <@Nexxy> you should seriously put a warning on that hting
00:35 < Cainus> ahh
00:35 < Technodrome> so when you fire off 5 queries in async, all the results get returned into one callback right?
00:35 < dypsilon_> also one can use it without flatiron
00:35 < Cainus> probably not gonna find an alternative outside the flatiron framework then
00:35 < Technodrome> callback hell == stuff made for nightmares btw
00:35 < bendytree> ChrisPartridge: thanks/sorry, i meant client side backbone
00:35 < dypsilon_> Cainus, yeah :(
00:35 <@Nexxy> creationix, btw thank you for making a sane version manager for node
00:35 <@mbalho> harrisonm: oh she forgot to check in html
00:36 < CoverSlide> i like isaacs' nave
00:36 < dypsilon_> Technodrome, that's how async works, yes
00:36 < ericelliott> tjholowaychuk: What's a good alternative to callbacks?
00:36 < CoverSlide> i dig the whole subshell thing
00:37 < Technodrome> so how are all 5 results put into one call back? do the results each have different variable names or what? they can't put the result of all 5 into just one object? 
00:37 < dypsilon_> ericelliott, leave him alone already, he likes threads :D
00:37 < Technodrome> any of you ever do Java web dev?
00:37 < tjholowaychuk> ericelliott coroutines
00:37 <@Nexxy> everything I disagree with is awful
00:37 < tjholowaychuk> are much better
00:37 < tjholowaychuk> Nexxy pff :p
00:38 <@Nexxy> :P
00:38 < tjholowaychuk> dont be mad just because I'm not a node fanboy
00:38 < tjholowaychuk> it has many problems
00:38 < Technodrome> this is how Java web dev feels, you get a feeling of "why oh why" 
00:38 < harrisonm> mbalho: yeah just spotted the update
00:38 <@Nexxy> totally not!
00:38 <@isaacbw> the whole point of node is to work in an abstraction without a concept of threads
00:38 < dypsilon_> Technodrome, it puts the results into an array structure
00:38 < CoverSlide> that's not necessarily the point of node, it's just a limitation
00:39 <@isaacbw> if you're trying to look at it as a replacement for every other server development pattern, you're looking at it wrong
00:39 < CoverSlide> if v8 got native threads node would have them too
00:39 <@isaacbw> heh
00:40 < dypsilon_> but than they'll have to update nodejs.org
00:40 < CoverSlide> the point of node is JIFASNIF
00:40 < dypsilon_> "non-blocking and event-driven, and well, we support threads because v8 has ist :/"
00:40 < Technodrome> dypsilon_: don't like it the sound of it! 
00:41 <@mbalho> harrisonm: oh hahaha she accidentally deleted everything
00:41 < dypsilon_> Technodrome, what do you mean?
00:41 < ericelliott> isaacbw: do you need threads to get coroutines? 
00:41 < Technodrome> all of this for some sql queries, i mean , i really don't like callbacks for everything but that's just the "javascript way" 
00:41 <@mbalho> harrisonm: i have node code that fetches the spreadsheet though https://gist.github.com/maxogden/5391882
00:42 < tjholowaychuk> ericelliott no
00:42 < Technodrome> I've been having a *rough* web development month 
00:42 < Technodrome> had to do two Java projects, now trying to finally do something I wanna do :( 
00:43 < ericelliott> tjholowaychuk: That was a rhetorical question. =)
00:43 < dypsilon_> Technodrome, that's not the javascript way, I think you can even find some blocking mysql drivers for node out there somewhere, but you'll miss alot.
00:43 <@Nexxy> just what we need! more rhetoric!
00:43 < harrisonm> mbalho: hm okay you have next steps in mind?
00:43 < Cainus> tj: you waiting for generators to hit js then?
00:43 < ericelliott> tjholowaychuk: I was pointing out that you weren't necessarily arguing that threads are better than callbacks. =)
00:44 < Technodrome> dypsilon_: for a website where the data is crucial to move on, how does it really matter? i've never really thought to much on this? 
00:45 < Technodrome> i don't see how the whole blocking vs non blocking is really all that useful for a normal website backed by a db? I mean most of the time is spent on the db no matter
00:45 <@mbalho> harrisonm: not sure, i think a mobile friendly view would be the most useful
00:45 < Cainus> Technodrome: so the same thread can handle more connections while it waits for a response from the db
00:45 < dypsilon_> Technodrome, it's not really about moving inside one request, it'moving inside the server lifetime. While you are fething the data you can accept other requests with your server. Also yes, you could squeeze some io requests while your database requests are running and thereby make you app faster
00:46 < ericelliott> tjholowaychuk: Won't it be possible to use coroutines in Node when generators are supported? Can't you build coroutines on top of the generator's yield?
00:46 < Technodrome> dypsilon_: in a realistic situation though, would it make much difference?
00:47 < tjholowaychuk> ericelliott kinda, not quite the ideal solution but you can kinda half-ass it with trampolining
00:47 < tjholowaychuk> and of course sticking "yield" in front of everything
00:47 < dypsilon_> Technodrome, yes. Just think about it. While the database is getting your data the webb app just sits there doing nothing.
00:47 < harrisonm> mbalho: simple HTTP server that outputs formatted list, then add neighborhood filter and caching on top of that I'm thinking
00:47 < dypsilon_> Wasting cycles.
00:48 < Technodrome> dypsilon_: i do get that, i really do, but if the app is waiting for that long, and the app is still pushing queries, the db must really be getting pounded
00:48 <@isaacbw> generators in v8 will be interesting
00:48 < Cainus> Technodrome: then you know it's time to scale your db
00:49 < ericelliott> tjholowaychuk: Admittedly, I don't have any experience with real coroutines. Which language has the best implementation, in your opinion?
00:49 <@mbalho> harrisonm: http://jllord.github.io/bostonstay/
00:49 <@mbalho> harrisonm: google spreadsheets is slow though
00:49 < tjholowaychuk> ericelliott lua's are good
00:49 < dypsilon_> Technodrome, first of all, db is not your only possible bottleneck, second, even if you scale your db you will get some latency per request.
00:49 < tjholowaychuk> ericelliott erlang / go use similar
00:49 < Technodrome> if thats a problem in the short term for this app, I will be in a no question good situation 
00:49 < tjholowaychuk> but the implementations are obviously really different
00:49 < Technodrome> dypsilon_: sure
00:49 < tjholowaychuk> all non-blocking though with sync style
00:50 < tjholowaychuk> so that's a big win
00:50 < tjholowaychuk> ericelliott plenty of decent C implementations as well like libpth
00:50 < Cainus> how can it it be non-blocking and sync?
00:50 < tjholowaychuk> Cainus because you're only blocking a light-weight thread
00:50 < ericelliott> Cainus: sync != blocking
00:50 < tjholowaychuk> one of thousands
00:50 <@mbalho> harrisonm: jlord is in here now, i think a node server that cached the data from google would be cool, she was kinda working on that with https://github.com/jllord/sheetsee-cache
00:51 < tjholowaychuk> it's basically
00:51 < tjholowaychuk> the same thing as an event loop
00:51 < Cainus> sync means you wait for one instruction to finish before the next
00:51 < tjholowaychuk> you just yield control to a scheduler or another coroutine
00:52 < Cainus> ahh okay... I don't really consider that synchronous... it does look like it though
00:52 < harrisonm> mbalho jlord: Yeah, have bostonstay forked + cloned, looking through it.  What needs to be done on sheetsee-cache?
00:53 < Technodrome> web dev is just one big headache :) 
00:53 < Technodrome> i worked for a startup last year that made around 8 million a month, all PHP, code igniter actually, yet I sit here like I'm making life changing decisions 
00:53 < ericelliott> Technodrome: Oh.. I must be standing too close. From my perspective it looks like a million little headaches. ;)
00:54 < ericelliott> I see the tiny pixels glowing...
00:54 < Technodrome> at the last o'reilly conference i was surprised to see how many startups were all PHP, mostly because of all the hate of it on say here and even hacker news 
00:55 < dypsilon_> Technodrome, it doesn't really matter who uses what, you have a task and you get a tool.
00:55 < yogurt_truck> Cainus: I think non-blocking is a bad description. 
00:55 < dypsilon_> it's actually very simple
00:55 < jlord> harrisonm: today i realized that it needs to handle errors from google when fetching the data - like if it goes to google and gets 324 or 429 whatever, that it aborts and uses the last cached data
00:55 < ericelliott> yogurt_truck: a bad description for what? and what's a better description?
00:56 < jlord> harrisonm: also ps just fixed a typo in the email address link if you want to pull gh-pages branch again
00:56 < Technodrome> dypsilon_: i agree
00:56 < Technodrome> dypsilon_: al that matters is the end game, nothing more 
00:56 < Cainus> come on... php is silly in this day and age unless you're just hacking up something small
00:56 < ericelliott> I'm actually interested because I'm writing about Node in my book, and I described it's philosophy as "non-blocking by default" and I consciously thought, "non-blocking is an awkward phrase."
00:56 < Technodrome> http://robfig.github.io/revel/ i was looking at this 
00:56 < Technodrome> it was seriously giving me a headache to 
00:57 < Technodrome> Cainus: i'm not a huge fan of PHP, maybe the hate rubbed off, but, tons of startups use it, tons, and many defend it to the death it seems 
00:57 < yogurt_truck> Cainus: like, Erlang is "non-blocking with sync style" is just an unnecessary confused description, when one can just say it's a functional language with emphasis on concurrency
00:57 < Cainus> sure... it's easy to start with... it's 100 mph into a cul de sac
00:58 < Cainus> I've worked on 500,000 line php apps.  it's ridiculous.
00:58 < Technodrome> Cainus: PHP did many things right and many things wrong 
00:58 <@mbalho> harrisonm: i think something super simple would be most useful, or at least making modules that will be useful the next time something like this happens
00:58 < dypsilon_> Cainus, it all really depends on your environment. If you have a team of 20 pretty good php devs sitting in front of you, you won't be so crazy to use node.js or ror.
00:58 <@isaacbw> Technodrome: if you stare into madness long enough, it starts to look kind of okay
00:59 < yogurt_truck> ericelliott: if you define "non-blocking" to be exactly "it doesn't block X, Y and Z" in your book, then it's OK. but saying something like "Erlang is another non-blocking system" is just meaningless like that IMO.
00:59 < Cainus> dypsilon_: sure... but you're going to get an awful-to-maintain app about 6 months in 
00:59 < Technodrome> Cainus It uses a Java style OO (many will say right) and doesn't have issues like callback hell etc, but of course language consistency is a major issue to people who care a lot about api constructs 
00:59 < harrisonm> mbalho: Yeah, maybe get sorting working now and then turn focus to caching
00:59 <@mbalho> nice
00:59 < dypsilon_> Cainus, what if you are not even sure if your company will live in 6 month? :)
00:59 < Technodrome> isaacbw: java web dev, now *that* is madness
00:59 < ericelliott> yogurt_truck: I guess I was hoping you'd have a better word than "non-blocking"
00:59 < Cainus> of course it's not java style oop.... look at the standard library.  no objects and they rarely even throw exceptions.
01:00 < Technodrome> i literally spend 30 mins and i got 2 pages that output a string
01:00 < Technodrome> its insane! 
01:00 < Technodrome> with no benefit, none , zero 
01:00 < Cainus> dypsilon_: like I said, if you're hacking something small, it's fine
01:00 < harrisonm> mbalho: I know a lot of this sort of thing came out of #hurricanehackers a while back but none of it was pulling from spreadsheets in these accessible sorts of ways iirc
01:00 < yogurt_truck> ericelliott: see my previous message to Cainus. 
01:01 < Technodrome> Cainus: the PHP object system was modeled after Java, the syntax s almost 100 percent the same, the creators talked a lot about it, and james gosling gave a few talks about it 
01:01 <@mbalho> harrisonm: yea i dont think anyone was doing spreadsheet stuff. i actually wrote node support for tabletop.js last week
01:01 < Technodrome> Cainus: of course implementation wise it will never be 100 percent
01:01 <@mbalho> harrisonm: https://github.com/jsoma/tabletop/pull/18
01:01 < dypsilon_> Technodrome, oh come on, language inconsitensies is not the biggest php issue. At one point I had to think three times about introducing new small object in the request lifecycle in php. It's just silly.
01:01 < samholmes> In browserify, I have to do require('../../path/to'). Is there a way to get it to just be require('somemodule')?
01:01 < Cainus> Technodrome: that's largely irrelevant when the entire std lib doesn't use it
01:01 <@mbalho> harrisonm: i think modules that work with tabletop are going to be really useful for situations like this
01:02 < ericelliott> yogurt_truck: I think that describing node's non-blocking philosophy with "functional with an emphasis on concurrency" would be incorrect, and indirect.
01:02 < Technodrome> dypsilon_: to many people, language inconsistencies is the biggest issue
01:02 < yogurt_truck> ericelliott: better word for describing _what_? that's my point. what's this thing you want to describe that concurrent, asynchronous, synchronous, declarative, imperative, don't describe?
01:02 < samholmes> I guess I'd use node_modules directory, but could I have a node_modules directory for my front-end application modules, separate from my back-end module (express, mysql, etc)
01:02 < Technodrome> Cainus: again i have no agenda, i could careless about any of it, but the syntax is almost entirely the same 
01:02 < samholmes> Also, with stylus
01:02 < harrisonm> mbalho: for sure
01:02 < yogurt_truck> ericelliott: I explicitly said that was a description for Erlang, not node.
01:02 < Cainus> same as what?
01:03 < ericelliott> yogurt_truck: true enough.. maybe I should say "asynchronous by default" rather than "non-blocking by default"
01:03 < samholmes> Also, with stylus..are variables scoped to a declaration?
01:03 < ericelliott> "blocking calls are asynchronous by default"?
01:03 < Technodrome> i would rather write perl for web dev than I would Java at this point, which is crazy because java as a language itself is pretty good 
01:04 < dypsilon_> Technodrome, yeah, those are probably the same people who don't like javascript operator inconsitencies, tbh, how much time do language inconsitencies need on the daily basis pro dev? 15 mins? max.
01:04 < Technodrome> dypsilon_: sometimes its the feeling that you know its there and urks developers
01:04 < Technodrome> the developers have the biggest issues with things they don't use << classic pascal quote 
01:05 < Cainus> I still can't understand this synchronous != blocking idea at all
01:05 < dypsilon_> Technodrome, those devs need to see some numbers.
01:05 < ericelliott> dypsilon_: 15 mins is waaaay too much, but I don't spend any time on JavaScript inconsistencies on 9 out of 10 days. Sometimes I have to diagnose a bug that's caused by operator misuse, though.
01:05 < Technodrome> sometimes things are just like a burning fire internally that you can't stop, so then they jump to lisp, and go around meet ups in the bay area, talking about how stupid everyone is for not using Lisp and show a demo of a clever thing that is completely irrelevant to website dev dypsilon_  
01:06 < dypsilon_> Technodrome, and he doesn't go to those meetups, because he is busy building real stuff ;)
01:07 < Technodrome> I stay away from conferences heavily these days 
01:07 < Technodrome> dypsilon_:  what do you work on, you winning?
01:07 < Technodrome> that's truly the only thing I care about these days, winning 
01:07 < dypsilon_> Technodrome, not yet, but soon enough.
01:08 < Technodrome> but  a Java web project i was doing under a contract( reward was to good to pass) really tested me 
01:08 < Technodrome> even apache struts, a action based framework similar to them all, makes things so complicated, like you wouldn't believe
01:09 < yogurt_truck> Cainus: what about synchronous != asynchronous ?
01:09 < Technodrome> it's like once you master struts or any other framework, there is no way you will use anything else, its like the best way to create a developer for life 
01:10 < dypsilon_> Technodrome, is it a bad thing?
01:10 < Cainus> yogurt_truck, <Cainus> I still can't understand this synchronous != blocking idea at all
01:10 < harrisonm> mbalho jlord: okay have a good feeling for the code now, thinking setting onclick for all th elements and use element index to determine sort column
01:11 < Technodrome> dypsilon_: if you ever goto some companies and talk to the java dev teams, they have spent so much time learning java dev, that doing anything else is almost a foreign idea, including trying to find your own way in life 
01:11 < yogurt_truck> Cainus: I don't follow. What idea exactly? Is the idea literally that sync != blocking?
01:11 < Cainus> Technodrome, not to mention their IDE ;)
01:11 < ryanaz> After doing a fs.createReadStream(); do I need to close the readStream some how or does it close automatically? 
01:11 < Technodrome> the IDE is absolutely mandatory, without eclipse i would be powerless
01:11 < Cainus> yogurt_truck, yeah people keep repeating that like it's a fact
01:11 < Technodrome> for Java
01:12 < yogurt_truck> Cainus: that just might be a confusing way to express a _style_ of programming (rather than the actual workings of the language)
01:12 < Cainus> yogurt_truck,  yeah I guess :\
01:12 < Technodrome> if you hire java dev's , they will never leave you 
01:12 < dypsilon_> Technodrome, i don't agree with "find your own way in life", but i think everything else is ok, as long as you are happy and productive with your java jedi skills
01:12 < Cainus> it's pretty hard to call something that's non-deterministic "synchronous" though
01:13 < yogurt_truck> Cainus: in the sense that, for example, in functional reactive programming, one can code line by line and it _looks_ "synchronous" because it's not Continuation-based (callbacks) like Node. but it's still obviously asynchronous programming
01:13 < Technodrome> dypsilon_: by your own way in life, i meant a startup or something of some sort
01:14 < Technodrome> java dev's treat programming as a true job more or less, it sorta takes the fun out of it + makes it seem non inspiring, a hello world in a java app can literally take 15 mins to set things up
01:14 < samholmes> Did you guys know that stylus has variables that are scoped to declarations? Isn't that awesome?!
01:14 < heath> net = require('net'); what has net.getSockName been deprecated in favor of?
01:14 < Technodrome> dypsilon_: i don't know about you, but i'm ready to cash out, i'm getting tired
01:14 < Cainus> yogurt_truck, yeah... that's a strange definition of synchronous
01:15 < bnoordhuis> heath: net.Socket#address() and friends
01:15 < dypsilon_> Technodrome, than you are not your average java dev, good for you, you left.
01:15 < yogurt_truck> Cainus: yup. it shouldn't be used.
01:16 < Technodrome> dypsilon_:  you working on a startup?
01:17 < dypsilon_> Technodrome, yeah, bootstrapped, though
01:17 < ericelliott> dypsilon_ is winning.
01:17  * dypsilon_ winning
01:17 < Technodrome> dypsilon_:  by you?
01:18 < Technodrome> i hope so 
01:18 < dypsilon_> cofounded by me yes
01:18  * ericelliott bootstrapped some things
01:18 < Technodrome> making money yet?
01:18  * ericelliott slept in parent's basement
01:19 < dypsilon_> Technodrome, not from this startup, no.
01:19 < ericelliott> Bootstrapping is for the young or the rich. ;)
01:19 < dypsilon_> or the ones who are willing to work alot
01:19 < dypsilon_> and/or are smart
01:20 < Technodrome> well , see I was doing Drupal contracts , like government stuff, that paid really good, could easily get 50-100k for a quick 1 month website, but i hate serviced based businesses
01:20 < ericelliott> dypsilon_: I still work a lot, but now I get paid for it. ;)
01:21 < Technodrome> Drupal is so popular these days its almost insane 
01:21 < dypsilon_> Technodrome, why didn't you put some money aside and started your own thing?
01:21 < ericelliott> Technodrome: Drupal + Wordpress = most of the web.
01:21 < Technodrome> I'm trying 
01:22 < dypsilon_> i mean, 100k would last me 3 good years
01:22 < Technodrome> yes ericelliott  , and in the enterprise / non profit / government, its like 80 percent drupal 
01:22 < Technodrome> they are beginning to hate drupal 
01:22 < Technodrome> dypsilon_: yeah right, 2 years *max* and thats living sorta under budget 
01:22 < Technodrome> its expensive these days
01:22 < ericelliott> Technodrome: I can't say I blame them. I hate drupal.
01:22 < ericelliott> drupal's abstractions make me want to jump off a building.
01:23 < Technodrome> no sorry ericelliott  
01:23 < dypsilon_> Technodrome, well, a bootstrapped startup will bring income after 1,5 full time work if you are doing it right from the beginning.
01:23 < Technodrome> i meant to say hate java 
01:23 < Technodrome> ericelliott: they love drupal actually 
01:23 < harrisonm> mbalho jlord: bah about to lose power and can't plug in just yet will push what little I've got to my fork and come back when I'm powered again
01:23 < Technodrome> its the best CMS to ever exist, still uber shit for developers though 
01:23 < Technodrome> but there is no better CMS, the old Java ones used to be the best though 
01:24 < dypsilon_> so im off, cu
01:27 < Technodrome> ericelliott:  you got a startup?
01:27 < ericelliott> Technodrome: Oh yeah, well, the old Java CMS' are much, much worse... (and HUGE monoliths)... so the basis for comparison is garbage.
01:27 < Technodrome> you don't even know man, i literally had almost been crying in front of those things
01:27 < ericelliott> Technodrome: Right now I'm on the Creative Cloud team at Adobe.
01:27 < ericelliott> Technodrome: Oh, and this: http://ericleads.com/javascript-applications/
01:28 < Technodrome> you did that ericelliott ?
01:28 < phillydude> I am looking to use a template engine for a fairly basic web app, Any page where i can read about the tradeoffs
01:28 < ericelliott> Technodrome: I was researching Java CMS solutions for Zumba fitness a few years ago... trying to figure out if there was a good one we could "plug in" to our existing web applications.
01:28 < Technodrome> people write books now just to get jobs :\ 
01:29 < ericelliott> Technodrome: I did that, but no, not just to get jobs. =P
01:30 < ericelliott> I got it so I could find good people to hire. When I started that book, there were very few people on the planet that were any good at writing JavaScript applications... they could make things blink and fly around on the screen and do rollovers and stuff...
01:30 < ericelliott> but ask them to build an application, and they'd take a giant dump on your codebase.
01:30 < ericelliott> so I wrote a book to try to help that situation.
01:30 < Technodrome> I see
01:30 < Technodrome> how old are you ericelliott ?
01:30 < ryanaz> After doing a fs.createReadStream(); do I need to close the readStream some how or does it close automatically? 
01:31 < ericelliott> it's basically, "so you know javascript, but now you want to write something useful and robust in it? here's what you need to know"
01:31 < ericelliott> Technodrome: Old enough to know better. Young enough to do it anyway.
01:31 < Technodrome> i mean you over 30?
01:31 < Technodrome> just curious 
01:31 < ericelliott> Technodrome: I was writing JavaScript in the 90's. Do the math.
01:32 < Technodrome> i'm 26 
01:32 < deoxxa> i'm 23
01:32 < deoxxa> sup
01:32 < deoxxa> let's make a club of 20-somethings
01:32 < ChrisPartridge> asl?
01:32 < ericelliott> lol
01:32 < Technodrome> and running out of serious time if you ask me 
01:32 < substack> isaacs: this is for applications, which I don't publish
01:32 < Technodrome> all those investor meet ups, i feel like the old one 
01:32 < deoxxa> yawnt: you can't join yet
01:33 < ericelliott> substack: msg
01:33 < substack> isaacs: "prepublish" isn't relevant for applications, which never get published
01:33 < ryanaz> hey guys does fs.createReadStream need to be closed when it's done? 
01:35 < brycebaril> aww man, I'm too old to join your 20-somethings club... by a lot...
01:35 < ChrisPartridge> ryanaz: from the docs "If autoClose is false, then the file descriptor won't be closed, even if there's an error. It is your responsiblity to close it and make sure there's no file descriptor leak. If autoClose is set to true (default behavior), on error or end the file descriptor will be closed automatically."
01:36 < ChrisPartridge> brycebaril: you could always lie about your age
01:36 < ryanaz> ChrisPartridge: thank you
01:37 < brycebaril> ChrisPartridge: I just use hex to represent my age
01:39 < substack> isaacs: I could invent a new thing like scripts.deploy but I'd rather repurpose what already exists where possible
01:39 < substack> I'm already hacking around the postinstall issue by checking if process.getuid() === 0
01:43 < deoxxa> brycebaril: we can make exceptions
01:47 < master5o1|work> sql on node? wtf.
01:47 < master5o1|work> :P
01:49 < Havvy> master5o1: It works well.
01:51 < ericelliott> substack: I try to avoid running scripts after deploy... what do you need it for?
01:53 < ericelliott> substack: Postinstall gives me headaches. I don't use it anymore. =P
01:54 < deoxxa> need a duringInstall hook
01:54 < deoxxa> which starts your script at a random time during installation
01:55 < ericelliott> deoxxa: that's what postInstall is, really. =P
01:55 < deoxxa> ha
01:57 < ericelliott> try depending on a package that relies on postInstall to function properly. You'll see what I mean. ;)
01:59 < Technodrome> async is not so bad, thought it was going to be much more difficult 
02:01 < deoxxa> ericelliott: better! try relying on two separate packages which each rely on different versions of a single package that both rely on postinstall to function properly - wheeeeeeee!
02:14 < gaf> hi, is it possible to test nodemailer from  my local machine?
02:15 < aslant> anybody know what's stopping substack's bouncy from working with node 0.10.x ?
02:17 < deoxxa> aslant: there have been and are ongoing changes to the core http stuff - i ended up hacking up https://github.com/deoxxa/httppp to get around it
02:18 < ryanaz> gaf:  I'm new here but I'm guessing that whether or not you can test node mailer from your local machine would depend on whether or not your ISP blocks outbound port 25.
02:18 < ryanaz> gaf:  most ISP's block outbound port 25 (smtp) 
02:18 < deoxxa> aslant: httppp stands for "hypertext transfer protocol partial parser" :P
02:18 < ChrisPartridge> gaf: what OS?
02:19 < deoxxa> aslant: notably it doesn't handle invalid input or pipelined connections or a bunch of other stuff strictly correctly, but it does what i needed it to do at the time
02:19 < belak> Is there a good way of reading a config file and using it to determine what signals will be read by socket.io?
02:19 < aslant> deoxxa: ha - I've been getting tempted to write a partial parser myself. 
02:20 < belak> THe only way I can find for reading anything is with readline
02:20 < gaf> yo, ok ppl :). ubuntu
02:20 < belak> And that's async... so there's no way to do that on startup... afaik... and have that passed to socket.io
02:21 < ChrisPartridge> gaf: you could give http://mailtrap.io a shot, apparently free atm
02:22 < deoxxa> belak: nearly everything you just said was wrong
02:22 < belak> deoxxa: yeah, most likely... >_< I'm just learning...
02:22 < deoxxa> belak: 1) nothing stops you from doing async stuff at startup 2) readline is definitely not the only way to read a config file
02:23 < gaf> ok ty
02:23 < deoxxa> belak: 3) if you really want to, you can read a file synchronously in node (but you'd want to avoid that in any performance-critical code) using fs.readFileSync()
02:23 < belak> deoxxa: what's the recommended way to read a config file?
02:24 < deoxxa> belak: not sure i can speak for everyone else, but i've taken to reading JSON or .js files with require()
02:24 < belak> Ah, that makes sense
02:24 < Qbix1> hey guys
02:24 < Qbix1> anyone here use socket.io?
02:25 < Qbix1> what happens when a socket has 2 namespaces and I call ns.socket.disconnect() on one of them?
02:25 < Qbix1> if I disconnect both namespaces does socket disconnect? etc.
02:26 < duko> does anyone here know of a node.js utility for advanced shell output?
02:26 < belak> deoxxa: thanks and sorry for asking such stupid questions
02:26 < duko> I want to generate a progress bar in the shell
02:27 < substack> duko: https://github.com/substack/node-multimeter
02:27 < deoxxa> duko: https://github.com/deoxxa/legobox :>
02:27 < duko> substack: thanks
02:27 < duko> ah so many choices
02:28 < Qbix1> anyone?
02:28 < Qbix1> hey substack, how is browserstack going btw?
02:28 < belak> deoxxa: do you have any recommended ways of reading from stdin for a simple config file?
02:28 < Qbix1> it's been very helpful lately :)
02:28 < deoxxa> duko: i made http://d.pr/i/Jerm on the weekend with it
02:29 < substack> Qbix1: that's not us
02:30 < duko> deoxxa: substack's documentation means that he wins
02:30 < belak> deoxxa: I really just need a number of strings representing which events should be accepted in socket.io
02:30 < duko> I also just found this: https://github.com/visionmedia/node-progress
02:30 < deoxxa> duko: yeah i have like 0 docs on that thing
02:30 < Qbix1> for some reason I thought it was, I forgot the guy's name, he made dnode I believe
02:30 < Qbix1> wait, that is you substack :)
02:31 < Qbix1> and you drew lots of funky graphics everywhere
02:32 < passcod> Qbix1: that'd be browserling, right?
02:32 < gaf> bip bop
02:32 < Qbix1> yes, browserling
02:32 < Qbix1> sorry :)
02:33 < Qbix1> the stack confused me 
02:33 < aslant> js> ?
02:33 < purr> aslant: SyntaxError: Unexpected token ?
02:33 < aslant> js> beep
02:33 < purr> aslant: ReferenceError: beep is not defined
02:33 < aslant> should really respond BOOP ;)
02:34 < gaf> my robot is dumb sry, no ingress
02:46 < belak> How come when I set up an event to trigger when a readline interface (using stdin) recieves the 'close' event, it never triggers, but process.stdin's end closes?
02:46 < belak> *process.stdin's end triggers
02:46 < belak> The docs for readline's close say it should trigger when its stream recieves an end event
02:47 < gaf> receives*
02:48 < belak> gaf: yeah, my mistake
02:48 < gaf> :)
02:49 < gluxon> i before e except before c
02:49 < gluxon> Come on! That's first grade :)
02:49 < gaf> gist belak?
02:49 < belak> 1 min, I'll get a smaller example
02:49 < aslant> science
02:50 < aslant> weight
02:54 < belak> gaf: https://gist.github.com/anonymous/5392981
02:54 < belak> gaf: echo hello | node test.js
02:54 < belak> That outputs end, but not close
02:57 < gluxon> belak: What happens when you ^C the readline?
03:04 < belak> gluxon: I get close
03:05 < belak> gluxon: still, according to the docs, shouldn't I get a rl.close on stdin end?
03:05 < belak> gluxon: also ^D also generates close
03:05 < donCams> hi guys. anybody has experience with Sequelize? I'm having trouble implementing many-to-many relationship with junction table. Please look at my dummy code. http://pastebin.com/4PByb1AR
03:14 < gluxon> belak: You should.
03:14 < belak> gluxon: should I report this as a bug?
03:15 < gluxon> belak: If I had any guess though, std is being closed before rl gets a chance to write out to you.
03:15 < gluxon> belak: No, I'm going to do a quick test.
03:15 < samholmes> substack: Browserify just uses node_modules the same as node does?
03:15 < belak> gluxon: right now, my workaround is to call rl.close() when stdin ends...
03:16 < samholmes> substack: What if I wanted to write modular code without the commitment? I am looking for a simple directory like /lib I could place in my public directory and create modules around that.
03:17 < substack> samholmes: what do you mean commitment?
03:18 < substack> browserify uses the same algorithm as node to make require() calls work
03:18 < samholmes> instead of require('../../path/to/script').useMethods(), I'd like to be able to have cleaner code like require('global/popups').useMethod(). Which would be independent of where the accessor script is too.
03:18 < substack> use node_modules
03:18 < samholmes> substack: It feels like a big commitment to put my script files in node_modules.
03:18 < substack> why?
03:19 < samholmes> also, it's mixing my front-end code with backend code.
03:19 < substack> then mkdir -p browser/node_modules
03:19 < substack> then put your browser code in browser/
03:19 < samholmes> substack: because if I want to use a namespace in the back-end, and I've already created a namespace for the front-end, then there's a conflict.
03:19 < substack> what
03:19 < substack> a namespace?
03:19 < samholmes> substack: oh. You mean node_modules doesn't have to be at the top level dir?
03:20 < samholmes> substack: I'm mean a package namespace
03:20 < substack> samholmes: no, it works exactly the same as node
03:20 < substack> the most local node_modules directory wins
03:20 < gluxon> belak: I don't have a solution for you. Go ahead and submit it as an issue, I'd like to see the response as well.
03:20 < substack> what's what I mean by "exactly the same as node"
03:20 < substack> it works the same
03:20 < samholmes> oh ok cool
03:21 < samholmes> I wasn't every really aware of how node does it though
03:21 < samholmes> :P
03:21 < belak> gluxon: so, you're seeing the same thing?
03:21 < samholmes> So how does node do it?
03:21 < substack> the same as browserify
03:21 < gluxon> belak: Yes.
03:21 < samholmes> What's considered the most local node_modules?
03:22 < substack> samholmes: when you require('modulename') it looks in node_modules/modulename starting at the __dirname all the way up to /
03:22  * samholmes thinks node_modules was a poor naming choice for this directory, but oh well.
03:22 < substack> and the first module it finds wins
03:22 < substack> browserify doesn't care what the name is, it just works the same as node
03:22 < belak> gluxon: I'll submit one later tonight. Thanks.
03:22 < substack> it's the only way that reusing code for the browser and server through npm can actually work
03:22 < samholmes> So, could I put all my code in a /browser/node_modules dir?
03:23 < gluxon> belak: readline.js looks right.
03:23 < substack> don't put all your code in there
03:23 < gluxon> input.on('end', onend);
03:23 < gluxon>   function onend() {    self.close();  }
03:23 < chilts> samholmes: it's been noted that it was a poor name and it would be different if it was done again, but as it is we live with it ('coz really, it doesn't matter that much) :)
03:23 < substack> samholmes: just organize your code in such a way that it has the properties that you want
03:23 < samholmes> can you customize what browserify looks for; instead of "node_modules" it could look for "nomods" for example?
03:23 < substack> no
03:23 < substack> this will never ever happen
03:23 < gluxon> belak: That code is wrapped around a if (this.terminal) conditional.
03:23 < samholmes> ok
03:24 < substack> configuration is bad
03:24 < samholmes> nomods would have been a cool name though. :P
03:24 < samholmes> chilts: haha, I understand, just would have been better i guess
03:24 < gluxon> So close will not be emitted if this.terminal is true.
03:24 < belak> gluxon: I wonder why they chose to do that...
03:24 < substack> node_modules is a great name
03:24 < substack> not likely to cause conflicts
03:25 < substack> and ugly enough that other systems won't try to ruin it
03:25 < substack> like is currently happening with "component.json"
03:25 < samholmes> meh, it feels like one of those files/folders that you'd want to hide, like .git
03:25 < samholmes> not, one that you'd want to hack around with
03:26 < substack> unimportant
03:26 < substack> this has been decided years ago
03:26 < substack> it is a fixed property of the ecosystem
03:26 < substack> it is not mutable
03:26 < donCams> hello? anybody?
03:26 < faceleg|work> hello donCams !
03:26 < donCams> hello :)
03:26 < gluxon> belak: Try this.
03:27 < samholmes> Well, if I put /browser/node_modules/script.js and /browser/node_modules/global/tooltips.js, would I be able to get at the tooltips.js module from script.js file using require('global/tooltips.js')?
03:27 < donCams> anybody has experience with Sequelize? I'm having trouble implementing many-to-many relationship with junction table. Please look at my dummy code. http://pastebin.com/4PByb1AR
03:27 < faceleg|work> probably just write the sql yourself
03:27 < samholmes> substack: ^
03:28 < donCams> i'll probably do that
03:28 < substack> samholmes: yes that is how node works
03:28 < donCams> thing is, this is mentioned in sequelize docs. just don't know why my stuff doesn't work
03:28 < substack> samholmes: except don't put script.js in browser/node_modules that's dumb
03:29 < substack> samholmes: just put script.js in browser/
03:29 < belak> gluxon: ?
03:29 < gluxon> belak: https://gist.github.com/gluxon/5393130
03:29 < gluxon> belak: That took longer than I thought :(
03:29 < belak> gluxon: haha, that feels like cheating
03:30 < gluxon> belak: sshh..
03:30 < harrisonm> jlord: Just got back and saw your updates, didn't know about backgrid
03:30 < gluxon> belak: Something with piping through hello is causing Node.js to not recognize it as a terminal.
03:30 < gluxon> belak: Might not be a bug, but it is strange behavior.
03:30 < belak> gluxon: yeah, that works
03:31 < belak> should I still file something?
03:32 < gluxon> belak: Why not.
03:32 < gluxon> :P
03:32 < belak> lol, fair enough. We'll at least learn why that happens
03:32 < jlord> harrisonm: yeah, i can't get it to work though :/ 
03:34 < harrisonm> jlord: I considered http://www.datatables.net/index but I'm afraid it might be too heavy
03:39 < jlord> :/
03:40 < faceleg|work> implementing the datatables API is horrible, i've done it before
03:40 < faceleg|work> it's all get params with terrible hungarian notation names
03:40 < harrisonm> YEAH I remember now
03:40 < harrisonm> had to implement it once
03:40 < harrisonm> think I blocked it from my memory
03:40 < faceleg|work> it is truly bad
03:41 < faceleg|work> great for users, but terrible to implement
03:46 < duko> wow I can't believe this: https://github.com/visionmedia/node-progress/issues/19
03:47 < duko> why doesn't he just take his module out of npm
03:47 < duko> it hangs and his response is 'fuck ... I don't use this anymore'
03:47 < duko> wtf
03:50 < deoxxa> duko: it still works in 0.8 etc - if someone wants to take it over, tj'd probably be fine with that
03:50 < duko> using substack's module
03:51 < duko> yeah what's my problem sorry
03:51 < duko> surprised you know it works in 0.8
03:53 < deoxxa> oh, my bad
03:53 < deoxxa> i read that wrong
03:54 < deoxxa> duko: i thought it said a 0.10.0 regression, heh
03:57 < duko> if substack's module fails I'm using yours
03:58 < duko> a part of me love's this
03:58 < duko> tjhollowaychuk is not infallible
03:59 < duko> loves
03:59 < duko> wow
04:03 < Cainus> you should ask for your money back
04:05 < duko> I want my money back!
04:06 < duko> TJ is a critic of other modules -my criticism is fair
04:06 < Cainus> 2. hold breath  3. ????   4. profit!!11eleven
04:07 < Cainus> he has 200+ modules and doesn't care about this one.  ask to take it over
04:07 < Cainus> worst case scenario, you must fork
04:08 < Cainus> either way, you're better off than if you wrote it yourself
04:08 < duko> I don't want to fork someone else's modules
04:08 < duko> if he doesn't care why should I
04:09 < Cainus> and yet you do care
04:09 < duko> I don't care and that's why I'm using substack's module
04:10 < Cainus> my mistake... I guess somebody else cared enough to type all that complaining into irc for you ;)
04:10 < duko> I'm a big fan of TJHollowachuk
04:11 < duko> and so there was a reaction from me when I found that one of his modules was not perfect
04:11 < duko> don't take it the wrong way
04:11 < Cainus> doubt you can even remove a module from npm... that doesn't make a lot of sense
04:11 < gaf> i think tj is cool, but docs could be better
04:12 < duko> I have remove a module before its possible
04:12 < duko> you have to remove each version of the module
04:12 < Cainus> what about people using it?
04:12 < duko> I hadn't thought of that but I don't think its a big deal either way if you have known bugs that you don't care to fix
04:13 < duko> allowing them to use a buggy module or removing the module -it makes no difference
04:13 < Cainus> if they're still using it, they might not care
04:13 < Cainus> they might not be affected by the bug
04:14 < Cainus> + diskspace is cheap
04:14 < duko> Cainus: noise will hurt npm
04:14 < Cainus> what noise from a package that doesn't get more updates?
04:15 < Cainus> it just needs to remove its tags to get out of search
04:15 < duko> yes its noice when you look for a progress bar and see 10 packages listed -8 of which are buggy and un-maintained
04:15 < duko> I don't know if that is the case with progress bars but I am just making a point
04:16 < Cainus> the flipside is someone else's package stops working... that's what you need to weigh your side against
04:55 < owen1> I followed the steps here http://gofedora.com/how-to-configure-secure-ftp-server-vsftpd/ and setup vsftpd. I try to upload a file. i use the 'put' command and i see: '130 bytes sent in 00:00 (1.81 KiB/s)'.  When trying from node-ftp I get:  Error: OOPS: vsf_sysutil_recv_peek: no data.  here is the complete log and the code: http://hastebin.com/bafusagafu.tex
04:59 < mscdex> owen1: is the file uploaded successfully though?
04:59 < owen1> mscdex: i can't find anything in my /var/ftp/Upload
05:00 < owen1> it might be something with my cofiguration of vsftpd.
05:00 < owen1> some of the settigs that that tutorial mentioned where not available to me in the config file.
05:00 <@Nexxy> owen1, are you using selinux?
05:01 < owen1> oh. wait, it say 'add those lines or uncomment them.' i only uncomment but not added anything. give me a sec. i am on CentOs 5.8
05:01 < owen1> let me try to add the missing lines
05:02 < mscdex> from what i've seen those oops errors can be selinux-related
05:02 < mscdex> i've never used vsftpd though
05:03 < owen1> mscdex: i am ok to use whatever works
05:03 < owen1> but let me first add some lines
05:08 < owen1> mscdex: when i type ls inside the ftp console (on my laptop) i see drwxrwxrwx    2 14       50           4096 Apr 16 03:53 Upload
05:09 < owen1> mscdex: does it mean that i have some files in my Upload folder? sshing to the box shows me nothing on that folder
05:11 < owen1> now i get 503 could not create file (from the ftp console)
05:11 < owen1> and from node
05:13 < owen1> maybe it's the permissions on /var/ftp ? what user should it be? i did chown ftp:ftp Upload
05:13 < owen1> but maybe it should be the same permissions of the user that tries to upload?
05:14 < mscdex> why not use sftp?
05:14 < owen1> mscdex: how?
05:14 < owen1> is it a terminar command?
05:15 < mscdex> owen1: for fun try this on the server: `modprobe capability`
05:15 < owen1> ok
05:15 < mscdex> that seems to fix that specific error for some
05:15 < mscdex> on ec2 for some reason :S
05:15 < owen1> FATAL: Module capability not found
05:16 < owen1> mscdex: i think it's my permissions on the /var/ftp folder.  but i want to try sftp
05:16 < owen1> i have this command on Centos. let me read the man page
05:17 < mscdex> you shouldn't need to do any special configuring for sftp server, just openssh
05:17 < mscdex> you can use the 'ssh2' module for sftp from node
05:17 < jamilbk> can anyone recommend a good duplicate-code analyzer?
05:17 < mscdex> jamilbk: grep ?
05:18 < owen1> mscdex: wait. i want to setup an ftp on my box where i can upload files. i need to run sftp with some argument, no?
05:18 < jamilbk> mscdex: well yeah, but it'd be nice to see how DRY, if you will, my 50k LOC project is
05:18 < owen1> to tell it the user/password and maybe what folder to upload etc
05:19 < mscdex> owen1: sftp is done via ssh. so all you need is openssh-server installed on the remote system and either: 'ssh2' module from npm or use the command line client if you want
05:19 < mscdex> on the local system
05:21 < owen1> mscdex: oh. in my specific case i think i need regural ftp and not sftp.
05:21 < owen1> but thanks
05:21 < mscdex> well, ok :-)
05:22 < mscdex> owen1: as far as your vsftpd issue goes, try temporarily disabling selinux and see if that resolves the issue or not
05:23 < owen1> mscdex: sure. i'll google for that. but i suspect my issue is permissions on the public folder of my ftp server. right now it's chown by ftp. this is not the user i use to connect to the ftp.
05:24 < mscdex> could be that too
05:24 < owen1> drwxrwxrwx 2 ftp  ftp  4096 Apr 16 03:53 Upload
05:25 < ChrisPartridge> owen1: it looks like its 777 though
05:26 < owen1> ChrisPartridge: i just followed blindly this tutorial - http://gofedora.com/how-to-configure-secure-ftp-server-vsftpd/
05:27 < owen1> ftp is a user that is created when installing vsftpd. maybe the tutorial assumes that ftp is also the user that will upload files?
05:28 < mscdex> owen1: `setenforce 0` and try again
05:28 < ChrisPartridge> perhaps, can you actually login via ftp? just not transfer files?
05:29 < owen1> ChrisPartridge: yes. i can access it even from the browser
05:29 < owen1> mscdex: is that a command you want me to type on the server?
05:30 < mscdex> owen1: yes
05:30 < owen1> mscdex: command not found
05:30 < owen1> also not in /sbin
05:30 < mscdex> and you're running centos?
05:30 < mscdex> :S
05:30 < owen1> mscdex: yes
05:31 < mscdex> that's weird
05:31 < owen1> let me try the permissions - http://forums.fedoraforum.org/archive/index.php/t-144150.html
05:31 < owen1> i mean the ownership
05:31 < mscdex> `sudo setenforce 0` ?
05:32 < owen1> the same
05:33 < mscdex> what centos version?
05:33 < owen1> 5.8
05:34 < mscdex> no idea then
05:35 < owen1> wait. now i was able to upload from ftp console. let's try from node!
05:35 < johnnny22> is it normal that npm owner add username packagename takes very long ?
05:36 < chakrit> so some guy took my code (github.com/chakrit/uneval) and adds his own version of package.json and go ahead and put it on npm without even asking me first :/ what to do about that?
05:36 < johnnny22> chakrit: email him
05:38 < johnnny22> chakrit: npm owner ls <package name> to find his email, i think
05:38 < mscdex> chakrit: did you include a license?
05:38 < johnnny22> chakrit: or read the email at: https://npmjs.org/doc/disputes.html
05:38 < owen1> mscdex: Parsed response: code=553; buffer='Could not create file.'
05:38 < owen1> mscdex: how do i change it to ascii?
05:38 < johnnny22> read the description i meant, not the email, sorry.
05:38 < chakrit> mscdex: no, the readme is just todo list
05:39 < johnnny22> I believe I've done that with a package without realizing once :P
05:39 < mscdex> owen1: `conn.ascii(callback);` if you have the latest version
05:39 < chakrit> johnnny22: well he did send me a PR on github though, just thinking that isn't it a bit rude there :(
05:39 < johnnny22> the owner of the git package emailed me.. now i'm giving him ownership
05:39 < johnnny22> I did it once cuz I had no idea what i was doing... maybe the same happened to him.
05:40 < ChrisPartridge> chakrit: perhaps he just wanted to make it available via npm without delay
05:40 < chakrit> ah ok. just checking to make sure : ) thanks.
05:40 < chakrit> yeah but you can always use git:// . maybe he doesn't know about that. oh well.
05:40 < johnnny22> best is to ask him to add you as an owner of it too :)
05:40 < johnnny22> chakrit: like that you can keep the npm package up to date too :)
05:41 < johnnny22> or become a owner and unpublish it :P
05:41 < johnnny22> if thats possible.
05:41 < owen1> mscdex: wow. u update it 19 hours ago. let me get the recent stable version.
05:42 < mscdex> :-)
05:42 < johnnny22> I'm running npm owner add user package, is it normal it takes for ever ?
05:43 < johnnny22> node.exe is running for ever at like 15% cpu
05:44 < johnnny22> *ooh windows you are probably the cause of this....
05:45 < owen1> mscdex: i appolagize, but i am not sure how to use the .connect() in the example i see c.connect() and i read that i can pass an option object. and than i see "Required "standard" commands" where i see other stuff like .ascii .status etc.  what are they?
05:46 < owen1> so i can do c.connect(options).ascii(function...)
05:46 < owen1> ?
05:48 < johnnny22> how can i remove a user from a system ?
05:48 < mscdex> owen1: use connect(options), and then wait for the 'ready 'event to use ascii(callback)
05:49 < johnnny22> how can i remove a user from a system from npm ?
05:49 < mscdex> johnnny22: you can probably just edit your ~/.npmrc
05:49 < owen1> mscdex: so first ascii and inside it's callback the c.put
05:49 < owen1> let me try
05:50 < mscdex> owen1: pretty much
05:50 < johnnny22> good, i'll try that.
05:50 < johnnny22> worked, thanks.
05:51 < johnnny22> going to try owner add on linux instead of windows, might not be so buggy  :P
05:51 < johnnny22> wow, magic, it worked :P
05:54  * johnnny22 is happy
05:54 < johnnny22> i managed to pass ownership to the rightfull owner.
05:54 < owen1> mscdex: c.put throws 'could not create file' - http://hastebin.com/cisesulana.tex
05:55 < owen1> i know that the file is there i cat cat this path
05:55 < owen1> (unix cat command)
05:55 < mscdex> owen1: 553 is permission denied
05:57 < mscdex> owen1: do you have 'write_enable' set to true in your vsftpd.conf ?
05:58 < mscdex> owen1: also do you have the right permissions for every intermediate directory up through the one you're trying to save to?
05:58 < octalmage> does anyone know if a way to make my my client autodiscover my server in socket.io? or any other method  
05:58 < mscdex> octalmage: what do you mean exactly?
06:00 < owen1> mscdex: you are correct. when i try to 'put' from the ftp command line, i can only do that if i cd into the Upload folder!
06:00 < octalmage> well, i have a node.js server using socket.io  then a phonegap app that connects to it.
06:00 < octalmage> ive faked autodiscovery using a seperare webserver where the sever posts its ip address then the client looks it up  
06:00 < octalmage> but i was wondering if there was a better method.
06:01 < mscdex> owen1: ok, so do the same in your node script :-)
06:01 < belak> Is there a good way to read the next json struct from a socket?
06:01 < owen1> mscdex: how to traverse the tree on the server with node?
06:02 < mscdex> octalmage: SRV dns record?
06:02 < mscdex> owen1: cwd()
06:03 < octalmage> mscdex: is that something i should look up?
06:03 < chakrit> octalmage: yeah, use DNS.
06:03 < chakrit> or a subdomain with transparent redirect, if that'll be easier
06:04 < octalmage> can the client, just javascript look it up?
06:04 < mscdex> octalmage: i dunno with phonegap. if not, you'd have to write a java function to do it for you and call that from JS
06:04 < octalmage> alright cool thanks!
06:05 < mscdex> octalmage: or do what chakrit suggested
06:06 < octalmage> Id rather avoid native code where i can. but i know udp isnt avalible from javascript
06:06 < daslicht> i like to manage my assets such as client side scripts AND css on the server side and render them into a single file (1xcss, 1xjs) and serve it to the client
06:06 < daslicht> how would you approcah this task ?
06:06 < daslicht> approach
06:07 < owen1> mscdex: code=550; buffer='Failed to change directory
06:07 < owen1> mscdex: first i change to ascii, than cwd('/var/ftp/Upload' ...
06:08 < mscdex> owen1: you may only be able to change directories using relative paths
06:11 < p1ntu> when i use npm with https:// url as the registry, npm caching works and i see 304s when i install modules... however, when i switch to http:// , i no longer see 304s, only 200s ... does npm caching only work with https:// registry?
06:17 < owen1> mscdex: i changed to relative path -  c.cwd('Upload', function(err, currentDir){     and now the file was uploaded!    but i still get an error: '500 OOPS: vsf_sysutil_recv_peek: no data\r\n'
06:18 < samholmes> Why is BTC going so low?
06:18 < belak> Is there an automatic way of buffering json over a socket?
06:18 < p1ntu> isaacs: does npm cache only work with https:// registry url? 
06:23 < samholmes> Maaannn. Why didn't anyone tell me that BTC was going down to ~59, I would have waited on buying at 87
06:23 < samholmes> wrong chan
06:26 < owen1> mscdex: i also see code=500; buffer='OOPS: child died'
06:27 < mscdex> owen1: yeah, that stuff is common on vsftpd servers from what i've seen
06:27 < mscdex> owen1: i've always used proftpd for testing
06:29 < owen1> mscdex: is it safe to ignore 'child died' error? i am ok to do that as long as the data will be uploaded.
06:29 < mscdex> owen1: from my experience yes, but i cannot say for sure if it is safe to do so 100% of the time
06:30 < owen1> mscdex: so for now i should put some regex inside the error event?
06:30 < mscdex> owen1: you could
06:31 < owen1> code 500 sounds too generic. maybe it should be on 'child died'
06:38 < owen1> mscdex: thanks a lot for your help.  i noticed that if i don't call c.ent() there are no errors. if i plan to send a lot of files, is there a need for me to ever clone the end the connectino?
06:39 < owen1> mscdex: my plan is to have a few workers that pops messages from rabbitMQ and sending them to an ftp server.
06:41 < mscdex> owen1: no, as long as there is a keepalive set that is shorter than the server's idle timeout, you shouldn't really need to call c.end()
06:42 < owen1> mscdex: sweet.
06:44 < owen1> mscdex: also, i noticed that i don't have to change to ascii even when my file is a text file.
07:05 < mscdex> owen1: yeah, i only added those methods because someone needed them
07:07 < owen1> mscdex: cool. thanks again
07:13 < daslicht> http://stackoverflow.com/questions/16030800/how-do-i-programmatically-serve-css-and-js-files-to-the-browser-using-nodejs-e
07:40 < [AD]Turbo> hola
07:40 <@isaacbw> If you have a linode account, watch your credit cards: http://slashdot.org/firehose.pl?op=view&type=submission&id=2603667
07:43 < chakrit> is there a reason why eval('{ }') === undefined instead of { } ?
07:43 < ChrisPartridge> isaacbw: you would hope they were storing the cards with their processor :|
07:44 < booyaa> thanks for the heads up isaacbw
07:44 < booyaa> damn that' really annoying was looking to move over to those guys because they have some really nice upgrade options
07:47 < ChrisPartridge> "credit cards were encrypted, sadly both the private and public keys were stored on the webserver" - wow
07:48 < Lorentz> it's already some 10 hours old news
07:48 < Lorentz> and actual hack was appppppparently two weeks ago
07:48 < booyaa> Lorentz: orly?
07:49 < Lorentz> if you read the IRC logs, you'll read how "ryan", one who's assumed to be claiming things, is coming public because linode's broken "a deal"
07:50 < ChrisPartridge> yeah thats what I was just reading
07:51 < Lorentz> there's no actual proof other than their webroot being compromised though, as well as nmap/seclist site being compromised since they were also partly hosted on linode
07:52 < Lorentz> I've been sitting in their irc channel, maybe the staff would give a new update/report on what's happened and going to happen, but it's quiet for now...
07:53 < Lorentz> woop, COB, time to go home
08:04 < samholmes> I have this idea for a site that I'd like to collaborate with anyone online here with
08:05 < samholmes> I want to give my energy and time working with some _one_ or _more than one_ for a cool little site project idea
08:05 < samholmes> I just need to find someone honest and cool to work with and we could split the effort and potential company
08:06 < samholmes> split ownership
08:06 < samholmes> the only catch is that I need to get group funding for the domain. :P
08:06 < samholmes> The domain is up for auction and I think it's a good domain, but it's up around 700 bucks
08:07 < samholmes> Hit me up on twitter if anyone reading this is interested. I'd like to get a good group of people involved, it'll be a community driven thing
08:07 < samholmes> @sam_holmes
08:07 < samholmes> night!
08:42 < nanashiRei> morning everyone. Is there a good tutorial on how to profile and debug node.js apps? 
08:44 < jhgaylor> node inspector?
08:45 < nanashiRei> Does this work with remote debugging?
08:45 < jhgaylor> no idea.  I'm a total noob to node.  i just happen to have heard of that package.  at the very least it gives you something to google
08:46 < substack> profiling and debugging are pretty different
08:53 < niko2992> hi, i am looking for some help running node.js and socket,io
08:53 < daslicht_> npm is down ?
08:53 < Siyfion> daslicht_: Or at least *very* slow
08:53 < daslicht_> hehe
08:53 < daslicht_> get tons of errors
08:54 < Siyfion> daslicht_: Took me 25mins to get 2 pkgs!
08:54 < daslicht_> :)
08:54 < Siyfion> I would imagine that people are aware
08:54 < daslicht_> yeah
08:54 < Siyfion> But having just joined, can anyone comment if the people that need to know.. well... know!?
08:55 < niko2992> should I use apache to run http server and node for socket.io ? i read node can run http server as well but how to do please ?
08:56 < Siyfion> niko2992: If you're serving static files... I would use Apache or better still, ngix
08:57 < niko2992> ok, because in the tutorials they are using socket = io.connect() (client side) and server is listening on port 1337, so I just don't get how they get that working
08:58 < Siyfion> isaacs: I'm guessing you're either pulling your hair out, or working frantically, or asleep!? lol
08:58 < niko2992> me i need to use socket = io.connect(srv_ip:1337)
08:58 < Siyfion> niko2992: You can use ngix as a proxy to your node server
08:58 < Bunge_> pantsed while commando!
08:59 < Siyfion> niko2992: see: http://stackoverflow.com/questions/5009324/node-js-nginx-and-now http://dailyjs.com/2010/03/15/hosting-nodejs-apps/
08:59 < `3rdEden> niko2992: you can give socket.io a HTTP server instance instead of a port number and it will use that instead..
08:59 < niko2992> ok i'll look for that thanks
09:01 < theblackbox> hello anyone using restify? just wondering how I might start the service "silently" i.e. no trace output in the terminal
09:02 < jhgaylor> theblackbox: can't you just tack on the standard bash stuff?
09:17 < daslicht_> what could be [type] in here: http://nodejs.org/api/fs.html#fs_fs_symlinksync_srcpath_dstpath_type
09:17 < daslicht_> ?
09:19 < nihildeb> man 2 doesn't say a type option on BSD, but I would guess hard/soft
09:22 < nihildeb> from async docs: type argument can be either 'dir', 'file', or 'junction' (default is 'file')
09:22 < sunil_> hi
09:22 < Anuj> hello
09:22 < sunil_> anuj bhai aa gaye
09:22 < sunil_> :)
09:22 < Anuj> :D
09:25 < sunil_> yaar kitni janta hai idhar
09:26 < daslicht_> ok thanks
09:26 < theblackbox> jhgaylor: what do you mean sorry
09:28 < jhgaylor> theblackbox: i mean $ node myfile.js > /dev/null &  
09:29 < jhgaylor> my syntax may be way off.  i usually just google is when i need it.  the idea being 'send all output to nowhere and run in the background'
09:29 < theblackbox> jhgaylor: ahh I get you, but I'm talking specifically about the restify instance once inside node-land
09:30 < jhgaylor> theblackbox: okay.  i just noticed the channel was quiet, so i toss out something, maybe start a conversation
09:30 < theblackbox> it's so my test output doesn't get polluted when it needs to spin up the testify instance to check routes and so on
09:30 < theblackbox> no problemmo
09:32 < theblackbox> I was going to do just as you advise once the test scripts make it to the deployment stage, I'm just curious if I could have silenced the heartbeat and socket output 
10:04 < mainiak> Hi. I would like to convert code from 0.8 to 0.10: sock = require('dgram').createSocket('udp4');  sock.bind()
10:05 < mainiak> Should it be sock.bind(null, function()) ? to get random port?
10:06 < gildean> mainiak: bind to port 0 to get a random port
10:07 < mainiak> gildean, thank you :)
10:07 < mainiak> gildean, could it fail?
10:09 < mainiak> Another question - when I am trying to bind socket, which is already used - How it will fail? Exception rised, null returned in callback ... ?
10:13 < gildean> mainiak: it can't fail unless you're out of ports
10:13 < gildean> if it fails, then an error is thrown
10:14 < gildean> EADDRINUSE or something on those lines
10:14 < mainiak> gildean, thank you a lot
10:16 < gildean> np
10:16 < mainiak> And could somebody explain me - what is socket.unrerf() - compared to socket.close() - good for?
10:20 < JSON> .markov say
10:20 < JSON> bunge? :(
10:20 < JSON> .markov say
10:21 < JSON> .markov say
10:21 < Bunge_> promised i wouldnt reccomend tho.
10:38 < DaMorpheuS> hey guys I want to create a http server with a websocket so it can retrieve a get or put or psot over http and return data over the websocket. Is this easy to do?!?
10:40 < mainiak> DaMorpheuS, yeap - look at http://socket.io
10:44 < ElectricMaxxx> somebody out there that has used jade.js on client sit and knows how i can get variables into attributes ( (id="editFile_\#{id}") doesn`t work)
10:46 < chakrit> ElectricMaxxx just guessing, I think you are escaping the # sign there, try \\ instead
10:46 < ElectricMaxxx> lets have a try
10:46 < ElectricMaxxx> ;-)
10:47 < ElectricMaxxx> no
10:47 < ElectricMaxxx> i get editFile_\#{id} as id in my html
10:47 < Bunge_> pope perri, and they came out of perp?
10:47 < ElectricMaxxx> :-(
10:49 < ElectricMaxxx> i like this framework anything else is working so cool and very light to use
10:49 < ElectricMaxxx> but it`s only the attribute thing on client site, in node.js on server it works cool
10:51 < ElectricMaxxx> but otherwise i have to have a look at mustache.js in my lunch break 
11:01 < sdousley> Hi all, I'm trying ti install node from source, but getting a syntax error on ./configure.
11:02 < sdousley> it's on the line:
11:02 < sdousley>     fpu = 'vfpv3' if armv7 else 'vfpv2'
11:08 < LuckyBurger> can any1 recommend a code coverage package? I found a few but they look dead
11:10 < JSON> .markov say
11:10 < Bunge_> rally all night?
11:12 < mainiak> Could somebody, please, explain me - what is socket.unrerf() - compared to socket.close() - good for?
11:27 < MitchW> is there any process bindings or modules that expose enough V8/node internals s.t. I could expose to programatically expose/enable the internal Debug(gerAgent) of a context created by vm.createContext?
11:31 < niko2992> <VirtualHost *:80>
11:31 < niko2992>     ServerName nodetest.local
11:31 < niko2992>     <Proxy *>
11:31 < niko2992>         Order deny,allow
11:31 < niko2992>         Allow from all
11:31 < niko2992>     </Proxy>
11:31 < niko2992>     <Location />
11:31 < niko2992>         ProxyPass http://localhost:1337/
11:31 < niko2992>         ProxyPassReverse http://localhost:1337/
11:31 < niko2992>     </Location>
11:31 < niko2992> </VirtualHost>
11:31  * xk_id kicks niko2992
11:32 < niko2992> excuse me
11:32 < LuckyBurger> pastebin/hastebin/ ..etc
11:32 < mainiak> niko2992, use pastebin.com
11:33  * MitchW suspects it was an accidental paste
11:33 < niko2992> that is my httpd.conf from apache, and in my /etc/hosts i have "192.168.10.212  nodetest.local", but when i access nodetest.local I get 503 error, does someone know about that ?
11:33 < MitchW> or not
11:33 < niko2992> yes it was
11:33 < niko2992> but now it's there so ^^
11:36 < niko2992> btw 192.168.10.212 is the local address of my virtual machine i'm running apache and node.js on
11:36 < niko2992> can someone help me please :/ ?
11:36 < LuckyBurger> ?
11:36 < LuckyBurger> apache problem
11:36 < LuckyBurger> in node channel
11:36 < LuckyBurger> ?
11:37 < LuckyBurger> are you browsing from the server to nodetest.local?
11:37 < LuckyBurger> or your remote machine?
11:37 < LuckyBurger> and when u setup that config file, did you restart apache after
11:38 < niko2992> http://pastebin.com/9p6n6N8s
11:38 < LuckyBurger> see above queries.
11:38 < niko2992> yes i did
11:38 < niko2992> one second
11:38 < niko2992> i am browsing on my virtual machine
11:38 < niko2992> that is my server
11:38 < LuckyBurger> and what error do you get?
11:39 < niko2992> 503
11:39 < LuckyBurger> 503? is forbidden iirc
11:39 < LuckyBurger> are you actually serving any pages?
11:39 < niko2992> Service Temporarily Unavailable
11:39 < niko2992> The server is temporarily unable to service your request due to maintenance do
11:39 < LuckyBurger> what exactly are you trying to access?
11:39 < niko2992> hum i want to access my index.html that is in /var/www
11:40 < LuckyBurger> do you have php enabled?
11:40 < niko2992> and to have the serving for the socket.io.js
11:40 < niko2992> hum i don't use php for now i think ?
11:40 < LuckyBurger> try accessing nodetest.local/index.html
11:40 < niko2992> same 503
11:40 < LuckyBurger> you dont have a directory index setup in the apache config
11:41 < LuckyBurger> check the apache logs
11:41 < LuckyBurger> depending on OS and version they will be in one of a zillion places ;)
11:41 < niko2992> searching
11:42 < LuckyBurger> or
11:42 < LuckyBurger> add a few lines in the config
11:42 < LuckyBurger> ErrorLog "/home/httpd/httpd-error.log"
11:42 < niko2992> got the logs
11:42 < LuckyBurger> tail it
11:43 < LuckyBurger> tail -n 10 /some/log/file/
11:43 < LuckyBurger> then pastebin
11:43 < niko2992> which one ? access.log ?
11:43 < niko2992> error.log ?
11:43 < LuckyBurger> error
11:45 < niko2992> http://pastebin.com/CJcsMS88
11:45 < LuckyBurger> somethings wrong with ur proxy
11:46 < niko2992> hum
11:46 < LuckyBurger> no idea why your using one
11:46 < LuckyBurger> did you open the 1337 port on your firewall?
11:46 < niko2992> yes
11:46 < LuckyBurger> whats listening on 1337 ?
11:46 < MitchW> okay, I think I've gotten a bit farther.  Am I right in assuming the 'documentation' for the _debugger module, is the source code? (and of course being a private module, it's subject to change at any time?)
11:47 < LuckyBurger> (111)Connection refused: proxy: HTTP: 
11:47 < `3rdEden> wait, wtf
11:47 < `3rdEden> you are using apache as reverse proxy to node?
11:48 < LuckyBurger> it does appear that way lol
11:48 < `3rdEden> your either drunk or have no fucking clue what node is and how it work
11:48 < `3rdEden> works*
11:48 < LuckyBurger> rofl.
11:48 < LuckyBurger> now now.
11:48 < LuckyBurger> he could have a reason for it ?
11:48 < LuckyBurger> no idea what it would be...
11:48 < niko2992> tcp        0      0 nodetest.local:1337     *:*                     LISTEN 
11:48 < `3rdEden> LuckyBurger: as far as I can read back from the chat logs, he's adding socket.io behind apache
11:48 < Bunge_> school for now...
11:48 < LuckyBurger> @_@
11:48 < LuckyBurger> rofl
11:48 < `3rdEden> @_@
11:49 < niko2992> i have no fkg clue
11:49 < LuckyBurger> ok well thats a start.
11:49 < Bunge_> hear that actually works?!?
11:49 < LuckyBurger> what exactly are you trying to do niko2992 ?
11:49 < niko2992> i want to access my webpage using http://nodetest.local
11:49 < LuckyBurger> ok
11:50 < LuckyBurger> remove the reverse proxy crap from your conf
11:50 < niko2992> and that in my webpage i can have just only <script src="/socket/socket.io.js">
11:50 < `3rdEden> and what exactly runs on nodetest.local?
11:50 < LuckyBurger> yeah.
11:50 < LuckyBurger> remove the proxy garbage
11:50 < `3rdEden> if you run socket.io you are doing it wrong (tm)
11:50 < niko2992> and not "172.xxxxxxx:1337/socket/socket.io.js"
11:50 < LuckyBurger> niko2992
11:50 < LuckyBurger> Remove proxy
11:50 < niko2992> ok
11:50 < LuckyBurger> problem solved.
11:50 < niko2992> uh ?
11:50 < `3rdEden> apache doesn't even work with websockets ._., it's threaded and slower then node. It makes absolutely no sense to have node behind apache
11:51 < LuckyBurger> true
11:51 < `3rdEden> it makes more sense to have apache behind node.
11:51 < LuckyBurger> which is what im telling him to do
11:51 < LuckyBurger> lol
11:51 < `3rdEden> i'll stfu :D
11:51 < niko2992> so i empty httpd.conf right ?
11:51 < LuckyBurger> ;)
11:52 < LuckyBurger> not empty
11:52 < LuckyBurger> that apache config is so bare though
11:52 < niko2992> it was empty before
11:52 < LuckyBurger> bleh
11:52 < LuckyBurger> baddies empty them
11:52 < LuckyBurger> 1 sec
11:52 < LuckyBurger> ill dig up something more respectable
11:52 < niko2992> okay
11:53 < master5o1> -5
11:53 < master5o1> -9
11:53 < master5o1> -7
11:53 < master5o1> -3
11:53 < master5o1> -5
11:53 < master5o1> 9
11:53 < master5o1> 5
11:53 < master5o1> 1
11:53 < master5o1> 2
11:53 < master5o1> 4
11:53 < master5o1> 8
11:53 < Bunge_> you cone yourself and change the methodology
11:53 < master5o1> 7
11:53 < master5o1> 0
11:53 < master5o1> 2
11:55 < niko2992> having removed the proxy, now i access my web page but get error "GET http://nodetest.local/socket.io/socket.io.js [HTTP/1.1 404 Not Found 1ms]"
11:55 < niko2992> like before
11:55 < LuckyBurger> ok
11:55 < LuckyBurger> you need it to be in the /var/www/socket.io/ folder
11:55 < LuckyBurger> does that folder exist?
11:55 < mainiak> LuckyBurger, what about nginx?
11:55 < LuckyBurger> or rather the file/folder
11:55 < LuckyBurger> i only know apache
11:55 < LuckyBurger> sadly.
11:55 < niko2992> node_module is here
11:56 < LuckyBurger> ok then thats expected.
11:56 < niko2992> modules*
11:56 < LuckyBurger> http://nodetest.local/node_modules/socket.io/socket.io.js
11:56 < niko2992> yeah i can get the socket.io.js correctly, but i need to use localhost:1337 in my webpage
11:56 < niko2992> localhost:1337/socket/socket.io.js
11:56 < LuckyBurger> right now?
11:56 < niko2992> yes
11:56 < LuckyBurger> after u remove the proxy?
11:57 < niko2992> before and after
11:57 < niko2992> i used to do like that
11:57 < niko2992> but i want to change
11:57 < LuckyBurger> http://nodetest.local/node_modules/socket.io/socket.io.js
11:57 < LuckyBurger> that should work
11:57 < LuckyBurger> if what you told me is correct.
11:58 < niko2992> uh ?
11:58 < niko2992> i don't think so but i'll try
11:58 < niko2992> right now my web page has <script type="text/javascript" src="/socket.io/socket.io.js">
11:58 < niko2992> so i change to <script type="text/javascript" src="/node_modules/socket.io/socket.io.js"> ?
11:58 < LuckyBurger> yeah
11:59 < nodweber> is it safe to output unescaped JSON.stringify( POST_METHOD ) ?? so in source: <script>var some_var = !{unescapedJSON_POST} ?? (wondering about XSS Valnurability)
11:59 < mainiak> niko2992, I'm not sure if you have to include this line in your html
11:59 < niko2992> [20:54:49.166] GET http://nodetest.local/node_modules/socket.io/socket.io.js [HTTP/1.1 404 Not Found 4ms]
11:59 < LuckyBurger> hmm
11:59 < niko2992> else i get "io : undeclared" or smthg like that 
11:59 < mainiak> niko2992, because I think it somehow tries to inject socket.io.js by itself
12:00 < LuckyBurger> i havent a clue how it works ;)
12:00 < mainiak> I have seen it do this last weekend
12:00 < niko2992> -.-
12:00 < LuckyBurger> socket.io
12:00 < `3rdEden>  http://nodetest.local/socket.io/socket.io.js 
12:00 < LuckyBurger> i know how apache works lol
12:00 < Bunge_> special ops group.
12:00 < `3rdEden> is the correct path
12:00 < `3rdEden> socket.io serves the file for you from the server
12:00 < niko2992> yes
12:01 < mainiak> when you try this, you get some file?
12:01 < niko2992> but my problem is that the socket server runs on port 1337
12:01 < `3rdEden> related reading: https://github.com/learnboost/socket.io/wiki wiki
12:01 < `3rdEden> nodetest.local:1337/socket.io/socket.io.js
12:01 < `3rdEden> it's not rocket science :)
12:01 < niko2992> yes, that's what i used to do
12:01 < LuckyBurger> ah
12:01 < niko2992> but i want to change...
12:01 < LuckyBurger> you cant have them both listen on the same port
12:01 < LuckyBurger> unless you want to ditch apache
12:02 < LuckyBurger> end of story
12:02 < LuckyBurger> http://stackoverflow.com/questions/7682338/node-js-socket-io-apache
12:02 < niko2992> i was reading that you can have apache redirecting some flow to the socket.io server
12:02 < LuckyBurger> they have to run on different ports
12:02 < LuckyBurger> ^
12:02 < `3rdEden> don't run node behind apache, ever
12:02 < mainiak> `3rdEden, nginx?
12:03 < `3rdEden> the person who wrote that was clearly drunk.
12:03 < LuckyBurger> or dumb
12:03 < LuckyBurger> lol
12:03 < `3rdEden> :D
12:03 < LuckyBurger> or both.
12:03 < LuckyBurger> :D
12:03 < `3rdEden> mainiak: if you need proxying, you should either use nginx, haproxy or the node-http-proxy
12:03 < mainiak> `3rdEden, ok, htx
12:03 < `3rdEden> related reading; https://github.com/observing/balancerbattle
12:03 < niko2992> do i ?
12:03 < mainiak> *thank you
12:03 < niko2992> ^^
12:03 < LuckyBurger> i think he was looking at this... http://stackoverflow.com/questions/12424707/socket-io-with-apache
12:03 < `3rdEden> INCLUDES FANCY PANCY CONFIGS.
12:04  * LuckyBurger battles `3rdEden
12:04  * `3rdEden ducks
12:04  * LuckyBurger was not Super Effective
12:04 < niko2992> not this one but more or less the same yup
12:06 < niko2992> i read that run node-http-proxy will just add one more proxy to the line and it'll not be faster anyway than using apache directly
12:06 < mainiak> ouch
12:07 < niko2992> and i guess it'll be the same for nginx or any other, no ?
12:07 < DaMorpheuS> is socket.io the best lib to use websockets in node because i found like 5 simulair ones but don't know which one is best!
12:07 < mainiak> DaMorpheuS, it depends on what you want
12:07 < mainiak> i use ws directly instead of socket.io
12:07 < niko2992> socket.io or the official websockets seems the better to me
12:07 < mainiak> and there is also socksjs
12:07 < niko2992> the best
12:08 < mainiak> https://npmjs.org/package/ws
12:08 < mainiak> easy and works - without black magic
12:08 < Bunge_> want outright war
12:09 < niko2992> i chose mainly regarding the number of tutorials you can find
12:09 < niko2992> it's almost always socket.io or websocket
12:09 < DaMorpheuS> niko2992: what is the reason. Can they all do the same?
12:09 < niko2992> for the thing i'm doing
12:09 < niko2992> pretty much i think
12:10 < niko2992> some are more practical to use for syntax or things like that
12:10 < DaMorpheuS> the thing i want is to receive a http request from a session and return data over the websocket
12:10 < DaMorpheuS> so the request is not over the websocket
12:11 < niko2992> i think they can all do that, socket.io can, anyway
12:11 < mainiak> Sorry! I use websocket, not ws - because either socket.io depends on websocket
12:12 < DaMorpheuS> so socket.io is an extention on websocket
12:13 < DaMorpheuS> what is the gain. because i want to keep my code as clean as possible so not putting things in that i don't use
12:13 < `3rdEden> socket.io is a realtime framework that connects to you server using multiple transports, so when websockets are not available, it will use polling for example
12:13 < niko2992> i don't know this enough to answer you, sorry
12:13 < `3rdEden> it's not an "extension" on websockets
12:15 < mainiak> DaMorpheuS, `3rdEden is right - socket.io is covering you when websocket is not available - and hiding everything behind one API
12:16 < DaMorpheuS> so if i implement this on a client who isn't able to connect through websockets the still manage to get the data through polling but i don;t have to change my code for it!
12:17 < mainiak> DaMorpheuS, exactly
12:17 < DaMorpheuS> that sounds interesting and i can also choose server based a session to send data to saperatly
12:17 < DaMorpheuS> seperatly
12:17 < DaMorpheuS> something like that :P
12:19 < niko2992> such a pain to get the most little tutorial from socket.io working like they do..
12:20 < niko2992> ah i get it, in fact in the tutorial they don't host the webpage.. which makes it a lot easier
12:20 < niko2992> because you don't have to fight with this dumb port 80
12:21 < `3rdEden> niko2992: require('socket.io').listen(8080).on('connection', function(socket){ socket.emit('hi') });;
12:21 < `3rdEden> instant server.
12:21 < niko2992> that cannot serve you a /socket/socket.io.js
12:21 < `3rdEden> wanna bet?
12:21 < niko2992> can it ?
12:21 < Bunge_> and a gypsy for their BMI
12:21 < MitchW> noooooooooooo, think i dug my way to the core of what I wanted in node.js, but WrappedContext::GetV8Context isn't exposed in evals - not too big of a deal though (already have a fork with changes as is)... fingers crossed >.<
12:21 < niko2992> but need to specify the port
12:21 < `3rdEden> (I worked on socket.io)
12:22 < niko2992> i don't wanna specify the port because then you have to specify an address as well
12:22 < Bunge_> direction of our machines.
12:22 < `3rdEden> niko2992: that will just start the socket.io server for you and listen on port 8080
12:22 < niko2992> so to include in my html
12:22 < `3rdEden> so you can just go to localhost:8080 and see welcome to socket.io
12:22 < niko2992> i need to <script src=.....:8080/socket/socket.io.js> nope ?
12:22 < `3rdEden> if you want to serve static files, just make it listen to your node http server
12:23 < `3rdEden> require('socket.io').listen(server).on('connection');
12:23 < `3rdEden> http://localhost:8080/socket.io/socket.io.js will just work
12:23 < DaMorpheuS> `3rdEden: do you have some short examples of this because what i encounter every time again is that the websocket is working fine i tested some code functionality but when i send a normal get to the server i get those cross domain bs i don't know how to tackle this correctly. I send my response headers with allow origin and stuff but i don't know what i'm doing wrong here
12:24 < niko2992> require('socket.io').listen(server).on('connection'); is that on client side ?
12:24 < `3rdEden> no serverside
12:24 < `3rdEden> just spin up a node repl and try it out
12:25 < `3rdEden> DaMorpheuS: example of what?
12:25 < mainiak> DaMorpheuS, by default - you could only use websockets for domain you are serving web pages from - but because you write server - you can change it
12:26 < `3rdEden> it does cross domain by default actually mainiak
12:26 < niko2992> anyway, if i end up using  <script src=.....:8080/socket/socket.io.js> then it's not what i want
12:26 < DaMorpheuS> of a socket.io where a websocket connection is made and the server still can react on normal http get/put/post requests
12:26 < mainiak> `3rdEden, really - ok, sorry O:-)
12:27 < DaMorpheuS> i want to use the websocket just to return data on to the clients
12:27 < `3rdEden> niko2992: why is it not what you want?
12:27 < niko2992> i don't want to specify an address or domain naim in the <script src= > line
12:27 < `3rdEden> then don't?
12:28 < niko2992> then it doesn't work
12:28 < `3rdEden> yes it does
12:28 < niko2992> without
12:28 < niko2992> how
12:28 < `3rdEden> ._.
12:28 < `3rdEden> gimma a min,
12:28 < niko2992> that's all what i'm trying to since before so >.<
12:28 < niko2992> if you have solution please go ahead :P
12:29  * mainiak trying third time
12:29 < mainiak> Could somebody, please, explain me - what is socket.unrerf() - compared to socket.close() - good for?
12:30 < niko2992> don't know socket.unre(r?)f
12:31 < niko2992> and socket.close, closes your socket
12:31 < `3rdEden> niko2992: https://gist.github.com/3rd-Eden/5395511
12:32 < mainiak> sorry, it's socket.unref() - should be oposite to socket.ref() - but I don't know what to do with it // see http://nodejs.org/api/all.html#all_socket_unref
12:32 < `3rdEden> mainiak: socket.unref() removes the socket from the event loop
12:32 < `3rdEden> so if you have 1 socket connected to your server
12:32 < `3rdEden> and you want to quit
12:32 < `3rdEden> you can unref it
12:32 < `3rdEden> and node will stop because theres nothing left to run in the event loop
12:32 < `3rdEden> (as far as I understand it)
12:32 < `3rdEden> niko2992: run that example
12:32 < `3rdEden> go to localhost:8080
12:32 < `3rdEden> check your network panel
12:32 < mainiak> `3rdEden, ok thanks - but why do I have close() and when should I use unref() and when should I use close()
12:32 < `3rdEden> and it works fine.
12:33 < `3rdEden> you don't need unref
12:33 < `3rdEden> close will just close the socket
12:33 < `3rdEden> and do the same
12:33 < `3rdEden> well, not really the same..
12:34 < `3rdEden> because socket.close() actually closes the socket connection.. unref removes the reference out the event loop, it doesn't close the connection
12:35 < mainiak> `3rdEden, I would like to say I got, but no. Some example could help, but I could live without so thanks
12:36 < mainiak> *I got it, *without it
12:36 < Bunge_> respect there is clear as hell because no one wants to play by yourself :D
12:37 < niko2992> ok i'll try
12:38 < `3rdEden> niko2992: I did make some small change to line 5, as it said socket.io/socket.io instead of /socket.io/socket.io.js
12:38 < `3rdEden> updated the gist.
12:38 < niko2992> for mainiak, I would say that unref would be used if you want to "pause" your connexion and stop receiving things, without really closing, right ?
12:40 < mainiak> that would make sense - for live reload or something - thx
12:40 < `3rdEden> no it's not
12:40 < `3rdEden> unref does not pause the connection
12:40 < mainiak> :D
12:40 < `3rdEden> it removes the internal references out of the event loop as i said before
12:40 < `3rdEden> so you app can close when that's the only socket that is left open
12:41 < `3rdEden> the event loops that keeps node running stays alive as long as it references to sockets, timers, servers etc
12:41 < niko2992> doesn't work better..
12:41 < `3rdEden> so if you can unref() on those, it will eventually just quit your app
12:41 < `3rdEden> niko2992: it works fine here
12:41 < `3rdEden> i just copy paste that shit in my node repl
12:41 < `3rdEden> go to localhost:8080
12:42 < `3rdEden> open the terminal and see it all loaded
12:42 < `3rdEden> for bonus points you can just open your console and type; x = io.connect(); x.on('pong', function () { console.log('pong'); setTimeout(function () { x.emit('ping') }, 2000); }); x.emit('ping');
12:43 < niko2992-2> re
12:43 < niko2992-2> if i go to http://localhost i have GET http://localhost/socket.io/socket.io.js [HTTP/1.1 404 Not Found 1ms]
12:43 < `3rdEden> but the server is listening on port 8080
12:44 < `3rdEden> so why go to http://localhost
12:44 < `3rdEden> instead of http://localhost:8080
12:44 < niko2992-2> and if i go to localhost:8080 i have : unabled to connect
12:44 < niko2992-2> i tried both
12:44 < mainiak> niko2992-2, are you running it on localhost or still trying behind apache?
12:44 < niko2992-2> localhost for now
12:45 < niko2992-2> just the webpage is hosted on apache
12:45 <@isaacbw> when did apache get openoffice
12:45 < niko2992-2> Firefox can't establish a connection to the server at localhost:8080.
12:45 < niko2992-2>   The site could be temporarily unavailable or too busy. Try again in a few
12:45 < niko2992-2>     moments.
12:46 <@isaacbw> looks like you didn't start your server correctly
12:46 < niko2992-2> oops indeed
12:46 < mainiak> niko2992-2, git clone <gist url>; cd hash; npm install socket.io; node app.js
12:46 < niko2992-2> it's better
12:47 < niko2992-2> <gist url> ?
12:47 < `3rdEden> git clone https://gist.github.com/5395511.git && cd 5395511 && npm install socket.io && node app.js
12:49 < niko2992-2> it's ok i got the page working
12:49 < niko2992-2> but it's just blank
12:49 < niko2992-2> i need to find how to launch my index.html now
12:50 < `3rdEden> niko2992-2: open your console
12:50 < `3rdEden> and play with it
12:50 < `3rdEden> there enough tutorials on how to serve static files
12:50 < niko2992-2> i'll i'll
12:50 < `3rdEden> if not, read the node documentation
12:54 < theblackbox> `3rdEden: sorry to butt in, I'm looking for a way to silence web socket output in my server trace(I'm using a lot of base 64 encoded images and they clutter up the log stream), was wondering if you knew of anything?
12:54 < `3rdEden> io.set('log level', -1)
12:54 < theblackbox> you star
12:55 < `3rdEden> or require('socket.io').listen(server/port, { 'log level': -1 });
13:12 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:23 < Qalqi> people still using nodejs!!!
13:24 < sambarino> Qalqi: i know! why can't nodejs be more like latin!
13:26 < wolfspraul> Qalqi: what do you use?
13:26 < niko2992-2> ok, i see more clearly now, but your solution doesn't fit to me `3rdEden
13:26 < Qalqi> i use javascript
13:26 < sambarino> lol
13:26 < petecoop> :D
13:26 < niko2992-2> your solution makes me use nodejs as http server, right ?
13:26 < niko2992-2> but i need to use apache for this
13:28 < niko2992-2> my problem, in fact, is that nodejs and apache are on the same server, so i would like to say in my webpage, "get socket.io.js from the current server, on port 1337 (since this is my nodejs port)"
13:28 <@isaacbw> that's called a reverse proxy
13:29 < niko2992-2> hum yeah that's what i was trying to do first
13:29 < niko2992-2> i think
13:30 < niko2992-2> can you explain me more on that reverse proxy pls ?
13:30 <@isaacbw> https://www.google.com/search?q=apache+reverse+proxy
13:31 < niko2992-2> when i said i'm doing that i got told people must be drunk to right this -.-
13:31 < niko2992-2> write*
13:31 < JohnMcLear> https://github.com/ether/etherpad-lite/wiki/How-to-put-Etherpad-Lite-behind-a-reverse-Proxy
13:31 < JohnMcLear> you can copy/paste the apache config from there and just change the port to whatever port node runs on
13:31 < petecoop> so you're not using nodejs as a http server but trying to get socketio.js from it? that's not going to work
13:32  * JohnMcLear ponders why that wont work
13:32 < JohnMcLear> Are you sure it wont work?
13:32 < Madwill> wait what
13:32 < Madwill> you can't get socket.io to work from reverse proxy apache/nginx
13:32 < niko2992-2> petecoop it's not going to work ? that's what I need to do thought..
13:32 <@isaacbw> niko2992-2: you can get the socket.io client library from github and server it yourself through apache
13:33 <@isaacbw> *serve
13:33 <@isaacbw> nginx apparently supports websockets in master
13:33 < JohnMcLear> isaacbw: I think it now handles upgrades gracefully, yea
13:34 < sandfox> use chris lea's nginx PPA if you're on ubuntu ppa:chris-lea/nginx-devel
13:34 < Madwill> what's the state of websockets ? are they blocked by firewalls, do they use standard ports. are they reliable ?
13:34 < JohnMcLear> madwill: no yes no
13:34 < sandfox> Madwill: they use port 80/443 but some proxies block the upgrade attempt
13:34 < JohnMcLear> you use a library to handle graceful fallback
13:35 < Madwill> thanks
13:35 <@isaacbw> that's the great thing about socket.io
13:35 < JohnMcLear> see engine.io, sock.js, socket.io and others
13:35 < JohnMcLear> isaabw: I'm stillc confused if guillermo wants us to use engine io or socket io tho
13:35 < petecoop> socket.io few, makes it so simple
13:35 < petecoop> ftw*
13:36 <@isaacbw> heh
13:36 < sambarino> except when you use iis :P
13:38 < petecoop> :/
13:39 < marshall> .exit
13:39 <@isaacbw> JohnMcLear: oh, I just noticed that engine.io's github links to socket.io :/
13:39 < JohnMcLear> yep
13:39 < JohnMcLear> there different between the two is easy to explain
13:40 < JohnMcLear> one does xhr and negotiates up to ws, the other the opposite way around (afaict)
13:40 < JohnMcLear> Why that couldn't be a core change under a switch (socket.io even provides an array of transports) I have no idea
13:40 < rhussmann> Can I maintain a counter in ejs? I basically need a variable I can mutate and render in ejs. Is that possible?
13:40 < JohnMcLear> I'm guessing guillermo wanted to pretend 100+ issues on github didn't exist...
13:44 < freon> see also express.io
13:44 < petecoop> what do you mean rhussmann 
13:45 < rhussmann> petecoop: I need to render a paragraph number in ejs. However, some paragraphs are only output conditionally (they may or may not render)
13:46 < rhussmann> petecoop: So, I need to maintain a "paragraph_counter" variable within ejs that I can increment as paragraphs are included
13:46 < petecoop> yeah should be easy enough
13:46 < rhussmann> petecoop: So I need a variable internal to ejs that I can increment. Is that possible?
13:46 < petecoop> it's just like normal js between the <% %> tags
13:46 < nanashiRei> rhussmann: angularjs :P (well 50/50 just kidding but it's possible)
13:47 < petecoop> <% paragraph_counter++ %> then echo it out with <%= paragraph_counter %>
13:47 < Bunge_> put your thing-thing, but I'd imagine they'd be our BITCH.
13:48 < rhussmann> petecoop: nanashiRei : Crap. Sorry. I was testing and thought I tried that, but it turns out I left out the =: part when I was rendering after incrementing.
13:48 < Bunge_> should stick to .txts, bleh.
13:48 < petecoop> nanashiRei, but I imagine that this is templated server side, why use angular
13:48 < rhussmann> petecoop: nanashiRei: Thank you for the guidance. Much appreciated!
13:48 < petecoop> no probs
13:48 < nanashiRei> server sided? angular?
13:48 < nanashiRei> what?
13:49 < petecoop> also you can just play around on the site here http://embeddedjs.com/
13:49 < nanashiRei> why does that matter anyway i wonder
13:49 < petecoop> o.O
13:49 < nanashiRei> He can implement angular there anyway.
13:49 < nanashiRei> it is a possibility :D
13:50 < nanashiRei> (but quite overkill)
13:50 < geNAZt> hi
13:50 < geNAZt> does someone build c++ addons for node ?
13:51 < geNAZt> i get this error when it try to include: Error: Symbol addon_module not found.
13:51 < JohnMcLear> no one does.
13:51 < JohnMcLear> ever.
13:51 < petecoop> I was not aware angular had a server-side component
13:51 < geNAZt> binding.gyp => http://hastebin.com/qefanoxoyu.js
13:52 < geNAZt> addon.cc
13:52 < geNAZt> http://hastebin.com/xebegovuga.cpp
13:57 < armin> hi, what's a good place to read about how to analyze a variable object in node? say i do something like: foo = require("something"); - how can i find out about attributes or the type of foo and what's a good place to read about this? thanks.
13:57 < pachet> the documentation for the module you're requring is a good place to start
13:59 < pachet> armin: for builtin modules: http://nodejs.org/api/
13:59 < armin> pachet: i think about this in a more general way. like, what's the correct term for such a variable, what to look for in the docs to find out about what attributes such one has, etc. :)
13:59 < armin> pachet: thanks.
13:59 < pachet> a) 'module'
14:00 < zot> anybody know how to add a per-part header (content-type) when generating a multipart/form-data request via the request library?  (which in turn uses form-data for this, and afaict, i would have to generate my own header.  which seems … crazy.)
14:00 < pachet> b) if the documentation's put together correctly it should give you a sense of what properties are exposed on that 'foo' object
14:00 < pachet> within the module these are enumerated as module.exports
14:00 < pachet> so you could call those the exported methods and properties of that specific module
14:01 < armin> pachet: excellent information. thanks a lot.
14:06 < DaMorpheuS> `3rdEden: i tried to get some server/client test working with socket.io but when i try the client it says that io.connect is noth a method because io is unknown
14:06 < DaMorpheuS> i use this as a lib : http://cdn.socket.io/stable/socket.io.js
14:06 < `3rdEden> DaMorpheuS: cdn is out of date
14:06 < DaMorpheuS> `3rdEden: the example is from the socket.io site
14:06 < `3rdEden> it's running 0.6
14:06 < `3rdEden> latest version is 0.9.x
14:06 < `3rdEden> it's not compatible in any way
14:07 < DaMorpheuS> so how do i import the module into my client where to install socket.io
14:07 < DaMorpheuS> if i use npm it puts it there in a node format ofcourse
14:08 < RLa> what socket.io alternative you suggest that doesn't use native modules?
14:09 < geNAZt> RLa, all use the native modules
14:09 < geNAZt> since socket.io doesnt have them
14:09 < `3rdEden> DaMorpheuS: just use the client provided by socket.io
14:09 < geNAZt> ws the websocket implementation brings it
14:09 < `3rdEden> just download it from /socket.io/socket.io.js from your server
14:09 < `3rdEden> or from the socket.io-client github repo
14:09 < DaMorpheuS> yes i did and it works :)
14:09 < DaMorpheuS> thanks
14:10 < `3rdEden> also, ws doesn't require native modules
14:10 < RLa> geNAZt, i meant extensions that need compiling
14:10 < `3rdEden> it's optional in them
14:10 < `3rdEden> it tries to compile it
14:10 < DaMorpheuS> how do i send a message to a specific client?
14:10 < `3rdEden> and when it fails, it uses a JS version of oit
14:10 < RLa> i wonder why is that necessary, does it modify node internals?
14:10 < `3rdEden> as far as I remember it only uses it for speed and message validation
14:10 < geNAZt> RLa: its a bit faster 
14:11 < `3rdEden> it had something to do with utf-8 validation RLa
14:11 < RLa> oh
14:11 < JohnMcLear> DaMorpheuS
14:11 < JohnMcLear> Read the manual
14:11 < RLa> websocket stuff must be valid utf-8?
14:11 < geNAZt> no
14:11 < `3rdEden> RLa: RFC3629 makes 5 & 6 bytes UTF-8 illegal
14:11 < geNAZt> but in most of the cases it is
14:11 < DaMorpheuS> JohnMcLear: thanks :P
14:12 < `3rdEden> so it indeed checks if it's valid utf-8
14:12 < `3rdEden> see https://github.com/einaros/ws/blob/master/src/validation.cc
14:12 < geNAZt> what about 1 byte UTF-8 ?
14:13 < `3rdEden> geNAZt: if it's valid then it should be fine ;p
14:14 < geNAZt> well aü` should be valid utf8
14:14 < geNAZt> :D
14:14 < context> whats the difference between legal and valid utf8
14:14 < geNAZt> valid can be any chars in the utf8 encoding table
14:14 < RLa> geNAZt, that is not valid utf8?
14:14 < geNAZt> it can be
14:15 < geNAZt> legal or not decides the application or the standart it belongs to
14:19 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:28 < bajtos> can somebody please advise why event-loop exits too soon in this code: https://gist.github.com/bajtos/a6e7a5705d4847802ae8
14:29 < bajtos> when run with count=10, I can see 10x tick but only 5 results reported
14:30 < Bergle_1> bajtos - async problems
14:31 < Bergle_1> your calling req.end() 
14:34 < bajtos> ok, so the correct solution is to create all requests first and then start calling req.end()?
14:34 < bnoordhuis> bajtos: what would you expect it to do?
14:35 < bnoordhuis> bajtos: also, keep in mind http.request() uses a pool of http agents
14:35 < bnoordhuis> with a default limit of, tadum, 5 agents
14:35 < MI6> joyent/libuv: Miroslav Bajtoš v0.10 * 09ff510 : windows: make timers handle large timeouts  Fixes a bug where timers with - http://git.io/u7SfWg
14:35 < aleray> hi, is there a package for jquery-ui
14:35 < bajtos> well I want to run 10 GETs as quickly as possible
14:36 < aleray> ?
14:36 < bnoordhuis> bajtos: try { agent: false }
14:38 < bajtos> bnoordhuis: I don't mind using connection pooling, it should work with it too, right?
14:41 <@isaacbw> Nexxy: what's that graph-based database you like?
14:41 < bajtos> bnoordhuis: ok, agent=false solved the problem
14:43 < Madwill> there seems to be a widely spread opinions about the fact that few people/books/tutorial truly understand node.js as its so new and different.. 
14:44 < lbriggy> hello
14:50 < merpnderp> Madwill: streams, callbacks, and events....what else is there to know? (Yes I stole that from horse_js)
15:01 < kokotron> anyone mess with canvas/node game dev? i'd love to see anyones demo
15:04 < pachet> kokotron: you should hang out in #bbg
15:06 < kokotron> pachet: will do, thanx
15:07 < merpnderp> kokotron: I have a (currently broken) planet rendering engine in three.js. But I create heightmaps on the GPU and having trouble mapping them to the polar coords (and probably a couple of other issues). But that's all on the browser and I only use node for socket.io requests.
15:09 < kokotron> merpnderp: that sounds very cool
15:10 < kokotron> merpnderp: i'll most certainly take a look at three.js 
15:11 < DaMorpheuS> `3rdEden: still have a question about socket.io if you don't mind
15:12 < radvieira> we're looking at node-releasetools for cutting releases of our node webapp.  Does anyone have experience with this?
15:12 < `3rdEden> sure
15:13 < `3rdEden> what's on your mind DaMorpheuS
15:13 < DaMorpheuS> is there some good explaination over how i send data to a specific client?
15:13 < DaMorpheuS> or can you tell me how to do that
15:13 < DaMorpheuS> because what is on the socket.io site is not that specifiv
15:13 < DaMorpheuS> c
15:13 < Bunge_> 'religion' to be corps
15:14 < `3rdEden> DaMorpheuS: socket.send(message)
15:14 < `3rdEden> socket.json.send({ object })
15:14 < `3rdEden> socket.emit('event', data)
15:14 < MI6> joyent/node: Stanislav Ochotnicky v0.10 * 7592615 : test: preserve process.env after test-init exec  When LD_LIBRARY_PATH is  (+1 more commits) - http://git.io/vo4BKg
15:14 < `3rdEden> all socket.send methods trigger the `message` event
15:15 < DaMorpheuS> so i have to store my sockets in a sort of array to access them by session id
15:15 < `3rdEden> DaMorpheuS: serverside? no, socket.io stores everything for you
15:15 < `3rdEden> io.sockets.clients = the object
15:15 < JohnMcLear> DAmorpheus REad the documentation
15:15 < JohnMcLear> It will take you an hour or so but it will be well worth it
15:15 < `3rdEden> you can also do io.sockets.socket(id) to get a socket by id
15:16 < `3rdEden> or read http://www.packtpub.com/socketio-realtime-web-application-development/book
15:16 < DaMorpheuS> oh ok and JohnMcLear either tell where to find that documentation but tell me time on tie that i have to read THE documentation that no use man!!!
15:17 < `3rdEden> DaMorpheuS: have you read the wiki
15:17 < JohnMcLear> Cause search engines nowadays are so difficult to find right?
15:17 < `3rdEden> https://github.com/learnboost/socket.io/wiki
15:17 < `3rdEden> or.. https://github.com/LearnBoost/socket.io/tree/0.9.14
15:17 < DaMorpheuS> thanks `3rdEden i will read that
15:18 < Bunge_> the 2nd most popular factoids, run !factoids search <yoursearchterm>
15:18 < JohnMcLear> TIL you can pay youtube to stop displaying thumb downs *isn't surprised
15:20 < sambarino> lol
15:36 < gest> Hi all
15:36 < gest> does anyone know of a software or library that can be used to create PDF templates
15:42 < LuckyBurger> pdfs... yes i dunno about templates 1 sec
15:43 < LuckyBurger> wkhtmltopdf
15:43 < LuckyBurger> iirc takes html5 then converts it to pdf
15:58 < CoverSlide> who the fuck wants pdf?
16:01 < petecoop> fucking everyone
16:06 < CoverSlide> petecoop: are you Cooper Press?
16:08 < petecoop> nah, same name. We've met though
16:09 < CoverSlide> oh ok
16:11 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:23 < bingomanatee> question - I am saving a significant stream of integers to a binary file; what is the best number of integers to write at any one time. 
16:24 < bingomanatee> Also, how do you convert a standard positive JS integer to an unsigned int?
16:25 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:25 < bnoordhuis> bingomanatee: bigger chunks are usually better
16:26 < bnoordhuis> so 8 kb or more
16:26 < bingomanatee> thx
16:26 < bnoordhuis> btw, what do you mean convert to an unsigned int?
16:27 < bnoordhuis> if the js number is > 0 and not fractional, it's already an unsigned int
16:27 < bingomanatee> well I have a number (3, 125226) and I want to write it as an unsigned int (because values are 0…?)
16:27 < bnoordhuis> (3, 125226)?
16:27 < bingomanatee> okay so buf. writeUInt16LE(10000) is legitimate?
16:28 < bnoordhuis> you mean you have a tuple of numbers?
16:28 < bingomanatee> no just a number. 
16:28 < bingomanatee> its an array index.
16:28 < bnoordhuis> you want to write the binary presentation of a number?
16:28 < bingomanatee> yeah
16:28 < bingomanatee> I am probably over thinking things.
16:28 < bnoordhuis> possibly
16:29 < bnoordhuis> but yes, the buf.write* functions are what you want
16:29 < bnoordhuis> the 16 bits versions are of course limited to numbers < 65536
16:42 < wangbus> does anyone know if socket.io-client is still being worked on
16:53 < zip_> does anyone remember the name of a node project which intended to replace the routing infrastructure on the net with a hash based system that handled abuse through relationships at the link level?
16:54 < jonsherrard> ls
16:55 < dukedave> I need to keep making a request until the response is empty, essentially like iterating though 'pages' until I'm at the end. Is there a 'pattern' I can use here?
16:56 < wangbus> response is empty? not sure what you mean dukedave.
16:56 < dukedave> I'll be carrying a 'page number' from one request to the next, but I don't know how many pages there are (I'll just get the aforementioned empty response when I've reached the last one)
16:57 < dukedave> wangbus, ^ does that help?  :)
16:57 < wangbus> sounds like a rest design issue
16:57 < wangbus> maybe you need an endpoint that feeds the metadata for the length.
16:58 < dukedave> wangbus, unfortunately there is not such end point :(
16:58 < wangbus> hmm
16:58 < wangbus> maybe you can queue up the next page in jquery or something
16:58 < wangbus> then if the last page is blank, disable the next page link
16:58 < wangbus> lol that's ghetto
16:58 < wangbus> but it sounds like you don't have access to the endpoints.
16:59 < dukedave> wangbus, it's the Google Latitude API: https://developers.google.com/latitude/v1/using#WorkingLocationHistory
17:00 < dukedave> The problem is complicated even more because I can't generate a query for the next page, until the current one has returned 
17:00 < dukedave> Let me write up some pseudo code of what I'm worried about :)
17:00 < wangbus> maybe you can get all of the data back and paginate using javascript
17:01 < wangbus> instead of server side refreshes.
17:01 < dukedave> wangbus, unfortunately not, because it'll return a maximum of 1000 locations per request
17:02 < wangbus> interesting.
17:06 < belak> Is it possible to run node.js programs from the v8 interpreter, without calling the node binary?
17:11 <@isaacbw> belak: 1) no 2) why
17:12 < belak> isaacbw: I'm working on an app in Go and I'm trying to make a way of running plugins... javascript would be optimal because there's a v8 package for Go
17:12 < edude03> Hello everyone, I'm trying to get my head around map with async callbacks so if I have something like var a = array.map(function(e) { e.success(function() { return someVal}); my problem is of course the success callbacks fire after map is done
17:13 < belak> isaacbw: meaning, I can make a small api in Go for my app and still have all the power of nodejs
17:14 < mscdex> or just write it all in node in the first place!
17:14 < mscdex> ;-)
17:14 <@isaacbw> back in the day I wrote a bunch of string manipulation funtions for go's stdlib
17:15 <@isaacbw> and they led me on until the end when they said "we don't really think we should have that kind of thing in the stdlib afterall"
17:15 <@isaacbw> last I checked they ended up adding them without me :(
17:15 <@isaacbw> bastards
17:16 < belak> Go's been making pretty large steps forward in the last year
17:16 < belak> There aren't many strongly typed garbage collected languages
17:17 <@isaacbw> Go sits in an awkward place between C and python
17:17 < belak> I like it... though that may be because I like both C and python
17:18 <@isaacbw> I only have room for one systems language in my life
17:19 < belak> Well, anyway, that's the reason. Most of it's in a pretty good place, apart from the plugin api
17:20 < wangbus> what's the advantage of writing the api layer in go
17:21 < belak> wangbus: It's a lot easier to keep it closed source, as I plan on marketing this. It's easier to deploy (just throw up a single binary).
17:21 < wangbus> oh you're talking about rest api or...?
17:21 <@isaacbw> neither of those are very compelling reasons
17:22 < belak> wangbus: the core of the software
17:22 < wangbus> idk not sure what's there to be gained other than closed source
17:22 < wangbus> i don't think deployment is an issue in node.
17:23 < belak> Not always an issue... just easier with Go. I'm not here to get into an argument on Go vs Node. They're both good for networked applications. They just follow different mindsets.
17:24 < wangbus> when you said api, i assumed http. you're suggesting go for a static lib?
17:24 <@isaacbw> it just seems weird to be writing a go application which you want to host node applications
17:25 < belak> The Go app is meant for server statistic collection... I'm just trying to find a good way of doing plugins for data collection
17:25 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:25 < belak> I was already using socket.io as a proxy between Go and the web frontend, so I was looking into using node for the plugins as well
17:26 < wangbus> i said static not statistic
17:26 < belak> wangbus: go would be a static application
17:26 <@isaacbw> belak: what about having "plugins" be system processes which communicate via stdio
17:27 < wangbus> i see.
17:27 < zip_> belak: server statistic collection - https://github.com/cobianet/cobia-collect/wiki might be useful to you
17:27 < belak> isaacbw: I suppose that makes sense... could run whatever you feel like then...
17:27 < Bunge_> coins, bigger then facebook
17:27 <@isaacbw> yea, and you could write apis for a number of platforms (including node.js) to wrap the stdio
17:27 < wangbus> not sure what go buys you other than closed source.
17:28 <@isaacbw> wangbus: it sounds like he just likes it 
17:28 < belak> wangbus: static typing. Dynamic typing is one of the things that makes js powerful, yet I'm not good with it.
17:30 < belak> zip_: yeah, that looks useful. thanks.
17:31 < zip_> belak: np
17:31 < belak> zip_: it's a pretty similar architecture to what I'm working on...
17:31 < zip_> I built it for us, we monitor thousands of openwrt nodes with it all over the place
17:32 < zip_> even a little rrd engine in there :)
17:32 < rmg> after submitting a pull request, is there anything needed that isn't covered by the contribution guide? Or is it just a matter of waiting until someone has time?
17:32 < zip_> which has since had multiple data point support added, however I have yet to put it into collect
17:32 < belak> zip_: ah, you just use POST as your transport between the clients and the main server?
17:33 < belak> Well, between client and the listener
17:35 < dukedave> wangbus, if you're curious, here's that pseudo code: https://gist.github.com/dukedave/5397829
17:35 < dukedave> ^ others welcome to look, TLDR: Node.js newbie, trying to express something in async style
17:36 < zip_> belak: yes
17:37 < zip_> that api is kept seperate and simple belak
17:37 < belak> Anyone have any recommendations for this? Ways to make it better? https://gist.github.com/belak/5397861
17:37 < belak> zip_: so, each server has a number of things that POST to the main server? You don't have a single listener POSTing from each server?
17:38 < zip_> the server sits and waits for each client to push data to each
17:38 < zip_> each client (which could be a server from it's viewpoint), runs a cron job or other scheduled process
17:38 < zip_> and sends said json dump to the collect server on 5m intervals
17:39 < belak> Ahhhh
17:39 < belak> Ok
17:39 < zip_> because snmp way, that is to say fetching, sucks
17:39 < Bunge_> are butt men
17:39 < zip_> in a nat world
17:56 < psnider> I'm new to nodeunit, and am looking for a test for comparing floating point numbers
17:57 < psnider> There isn't one in the main asserts, and I'm fine with writing one if I must,
17:57 < psnider> but I haven't yet found how to extend the assert system...
18:05 < yields> i need some help https://gist.github.com/yields/5398085
18:05 < yields> i'm using node v0.10.4
18:06 < CoverSlide> yields: line 13 happens before your server starts listening
18:06 < rmg> psnider: doesn't === cut it? (via assert.strictEqual)
18:07 < CoverSlide> oh wait nevermind that's the working one
18:07 < psnider> my problem is that if I test for equality, floating point may be off
18:07 < CoverSlide> yields: HTTPServer does not emit a 'connection' event
18:07 < psnider> for example 2.0 might be represented as 2.0000000001
18:08 < psnider> so I'm looking for something like: almostEqual(actual, expected, epsilon, message)
18:08 < rmg> oh, you want the fuzziness.. hm..
18:09 < psnider> I'm trying to see if I can add this now as:   Math.abs(actual - expected) <= epsilon
18:09 < CoverSlide> yields: wait, i think i'm wrong about that too
18:09 < rmg> yields: you have 2 connection listeners on your server
18:10 < yields> ok, i changed it a bit, still nothing
18:10 < yields> https://gist.github.com/yields/5398085
18:11 < CoverSlide> yields: it won't call the callback without a valid http header
18:12 < yields> CoverSlide: that makes sense haha! thanks!
18:13 < yields> CoverSlide: how come it doesn't emit any error event?
18:14 < CoverSlide> yields: listen for 'clientError'
18:15 < yields> thanks!
18:15 < CoverSlide> yields: err, actually, that's for socket errors, hold on ..
18:15 < CoverSlide> yields: https://github.com/joyent/node/blob/master/lib/http.js#L1911-L1914
18:15 < CoverSlide> looks like it just destroys the socket if it doesn't parse
18:16 < yields> CoverSlide: yeah but it doesn't actually destroy it for me.
18:17 < CoverSlide> on the server side it should
18:17 < CoverSlide> if you what's the client do?
18:19 < CoverSlide> if you do a nexttick, and try to write
18:21 < CoverSlide> yields: see if it emits a 'close' event
18:22 < yields> CoverSlide: i tried abort, end, data, close
18:22 < yields> nothing
18:22 < rmg> yields: doesn't destroy what for you? you won't even have a reference to the server side socket to notice
18:25 < JohnMcLear> Are there any public stats on whcih version of nodes different OS/distros come with "native" support for?
18:25 < JohnMcLear> IE ubuntu == node 6
18:25 < JohnMcLear> We(Etherpad) want to drop the message we have that states Etherpad doesn't work on Node v6, but we want to know how gerat the fallout will be
18:26 < rmg> yields: are you trying to do something like this: http://nodejs.org/api/http.html#http_event_upgrade_1 ?
18:26 < roaddriver> How can I use this project? -> https://github.com/rushis/Wunderlist2ApiJS The readme doesn't really specify.
18:27 < yields> no i'm just trying to catch `readable` event.
18:28 < yields> rmg: https://gist.github.com/yields/5398085
18:29 < rmg> yields: I know you're trying to catch 'readable', I'm just not sure why..
18:31 < rmg> yields: it looks like you're trying to hijack your http server's socket
18:35 < rmg> yields: what are you trying to gain by using http.createServer instead of net.createServer?
18:36 < psnider> @rmg: I have a workaround in coffee script:
18:36 < psnider> almostEqual = (actual, expected, epsilon = 0.000005) ->
18:36 < psnider>     (Math.abs(actual - expected) <= epsilon)
18:36 < psnider> exports.HelpersTest =
18:36 < psnider>     'should mapToRange': (test) ->
18:36 < psnider>         test.ok(almostEqual(2.0, 2.000001), "should be almost equal")
18:38 < yields> rmg: i need to proxy requests to node servers.
18:38 < rmg> psnider: now get it to take in a message and call assert.fail on failure and it'll fit right in
18:39 < psnider> @rmg: didn't figure that out
18:39 < yields> rmg: i went on to implement it it's simple, after lots of debugging i found that `readable` is never called.
18:40 < yields> rmg: it's never called even if i listen to it inside `connection` event of the server.
18:40 < psnider> Couldn't figure out how to attach it to the test object
18:40 < rmg> psnider: http://nodejs.org/api/assert.html#assert_assert_fail_actual_expected_message_operator
18:40 < rmg> asserts just throw exceptions
18:41 < yields> rmg: socket.bytesRead stays 0
18:41 < rmg> yields: that's because you're never getting an http conection
18:42 < yields> rmg: `connection` event is emitted with the socket as the single argument.
18:42 < tiCeR_> hello
18:42 < yields> http://nodejs.org/api/http.html#http_event_connection
18:42 < tiCeR_> is someone here who can help me on a little thing ?
18:43 < psnider> @rmg, I looked at that page earlier, but I don't understand the connection between the parameter in my tests and the assert object
18:44 < rmg> yields: I see now. I don't see docs for what arguments the http.Server() constructor takes, though.. did you mean to use http.createServer()?
18:44 < Bunge_> of clark moody is not a big black Irish cock in my pants. 
18:45 < yields> rmg: here you go, https://gist.github.com/yields/5398085
18:45 < tiCeR_> Hello together, i am on creating a litecoingame and want to use the nodejs for the rpc calls, the linux server is running also the nodejs installed but when i try to run a js is gives me an error. is someone here who can help me to set that up? Please ? this is the error root@server:~/node/node_modules# /root/node/bin/node /root/node/node_modules/getinfo.js
18:45 < tiCeR_> Error: { [Error: Invalid params, response status code: 401] code: -32602 }
18:45 < yields> rmg: i don't understand why `readable` isn't emitted, weird because if i use `net.Server` it works...
18:46 < rmg> yields: it doesn't make sense to my why it _would_ work, but at least your code matches the docs now.. time to dig through the source!
18:49 < tiCeR_> no one here who want to get some litecoins for helping me ? xD
18:49 < yields> rmg: `connection` event is over here https://github.com/joyent/node/blob/master/lib/net.js#L1163
18:50 < yields> rmg: readable is here https://github.com/joyent/node/blob/master/lib/_stream_readable.js#L392
18:53 < rmg> yields: and here's where http add's its own listener: https://github.com/joyent/node/blob/master/lib/http.js#L1822
18:55 < diminoten> is there a command I can use to check the version of zlib node was built with?
18:57 < rmg> yields: it sets socket.ondata, which looks like it might intercept the socket's buffering: https://github.com/joyent/node/blob/master/lib/net.js#L510
18:58 < yields> rmg: do NODE_DEBUG=net node server.js
18:59 < yields> rmg: this is the output i get https://gist.github.com/yields/5398558
18:59 < yields> it doesn't even try to emit `readable` it just reads the data and then closes the socket.
19:03 < yields> rmg: i think i'm gonna open an issue on github.
19:03 < rmg> yields: `readable` would be emitted by self.push(), which doesn't get called because http.Server sets socket.ondata https://github.com/joyent/node/blob/master/lib/net.js#L510-L511
19:03 < Goles> Hey guys, has anyone done Evernote integration with a node.js back-end ?
19:04 < yields> rmg: so it's a bug ?
19:04 < rmg> yields: it seems to me like a documentation error, since the observed behaviour makes sense
19:07 < rmg> yields: I'd consider it a bug.. it'll be up to the devs whether it's a bug in http or a bug in the docs
19:07 < yields> rmg: thanks, what's you'r name on github ?
19:07 < rmg> yields: rmg ;-)
19:08 < rmg> good timing, I'm off to lunch
19:11 < geoous> someone who used social networks for login and then show your app?
19:12 < tiCeR_> i need a nodejs crack to help me on something !! pls private message me
19:12 < tiCeR_> ^
19:14 < tiCeR_> waht kidn of error is that ? Error: { [Error: Invalid params, response status code: 401] code: -32602 }
19:19 < t4w> Question: I run a site on node.js that uses cluster to spawn the server over multiple cores, and up until today it worked fine. Now, however, it seems every process besides the main one is throwing errors about something already being bound to the address, even though it worked fine in 0.9.*
19:21 <@Nexxy> t4w, what's the question?
19:22 < t4w> Lol, I suppose I forgot that.
19:22 < t4w> Were there any changes that happened that makes my site fuck up, or is this just a bug?
19:27 < allyraza> hi folks
19:27 < allyraza> quick one guys I have table adverts i have been using this for some time now but now i need to add some extra attributes in the table but my problem is not all adverts have same attributes
19:28 < timoxley> allyraza do they need to be searchable?
19:28 < allyraza> timoxley: yea
19:28 < timoxley> allyraza i.e. can you just serialise the meta information into a "meta" column as json or something
19:30 < allyraza> timoxley: might cause problem in future my app is reasonably big
19:30 < timoxley> allyraza other option is to complexify your schema or add a bunch of optional columns, rails "polymorphic inheritance" style
19:31 < timoxley> allyraza or you could store all that kind of stuff in a schema-less db
19:31 < allyraza> timoxley: example would be great
19:31 < Bunge_> people would stop putting flowers and nectar in that pic!
19:32 < timoxley> allyraza leveldb/redis/mongo/whatever
19:32 < dshaw_> [ANN] We'll be starting #nodeup shortly. Come stop by.
19:33 < hackedy> oh sweet
19:33 < hackedy> I'm always in class but today i'm sick and I can go to nodeup yay
19:33 < allyraza> timoxley: you mean nosql
19:33 < timoxley> allyraza I think postgres has some schemaless stuff these days, perhaps check that out
19:33 < timoxley> whatever you want to call it
19:34 < allyraza> timoxley: yea postgres has key value store I am postgres person but my client is using mysql
19:34 < timoxley> allyraza perhaps make a simple key value store using mysql then
19:35 < timoxley> additional table called meta or something
19:35 < timoxley> reddit style.
19:35 < hackedy> posgres supports arrays. you could toss an array of attrs on the table
19:35 < hackedy> though if it's mysql in production idk
19:35 < timoxley> hackedy <allyraza>	 timoxley: yea postgres has key value store I am postgres person but my client is using mysql
19:35 < hackedy> yeah ok
19:36 < hackedy> I don't think you need to leave postgres for this, though
19:36 < allyraza> timoxley: that is what i had initially then i ended up adding a separate table for all the attributes
19:36 < hackedy> well then you would need a table of advert <-> attr relations
19:36 < allyraza> hackedy: that is what i have currently
19:36 < allyraza> but I am on look out something better
19:37 < allyraza> perhaps I sould tell you more about my current schema
19:37 < hackedy> hmmmm
19:38 < allyraza> I have a classified app with ads table but not all ads have same fields for instance jobs have (posted by, etc) cars have ( year, model, make ) 
19:39 < hackedy> do you know all the possible tags right now
19:40 < hackedy> because you could just have a table for car ads and a table for job ads etc
19:40 < allyraza> hackedy: yea I do for instance all my ads have title, details, created_at but the jobs, cars, and some other categories have some extra attributes
19:40 < hackedy> if you know all the categories you could make a table for each category :/
19:40 < timoxley> allyraza just use different tables then
19:40 < allyraza> hackedy: that is where my problem is i dont know if i must ad a sep table for each one of em
19:41 < timoxley> I'm not sure what solution you're looking for man
19:41 < hackedy> eh that's probably the best option here
19:41 < allyraza> timoxley: sorry buddy If i confused you 
19:42 < hackedy> though that's gonna make querying for all ads with the same created_at or whatever tough
19:43 < allyraza> hackedy: but then i will end up with lot of meta tables
19:43 < hackedy> why do you need meta tables
19:43 < allyraza> hackedy: have you seen ebay classifieds
19:43 < hackedy> no. let me go look
19:44 < hackedy> ok now I have
19:44 < hackedy> oh ok there are a lot of categories. oh.
19:45 < inspiron> what are good checks to see if a module must be installed globally? This should be a obvious one right: When a module must be installed and in the system PATH
19:45 < allyraza> hackedy: what would you suggest now
19:47 < allyraza> hackedy: 
19:47 < hackedy> I don't know, I'm not very good with sql. If there's a mysql irc you could ask there??
19:47 < hackedy> this seems like a perfect stackoverflow question though
19:50 < dshaw_> #nodeup live now
19:50 < allyraza> hackedy: thanks buddy
19:50 < cjm> http://nodeup.com
19:56 < hackedy> allyraza: np ^__^
20:01 < master5o1> .markov say
20:01 < Bunge_> { private: long member; }
20:04 < Sven_vB> see also: JavaScript - the private parts
20:05 < Sven_vB> and still to be discovered: JavaScript - the fine arts
20:06 < GOMADWarrior> sometimes my game doesn't load properly
20:06 < GOMADWarrior> like, it doesn't load the inventory
20:11 < hydrozen> is there a node version management utility out there that allows to have a hidden file in the project or something that specifies which version of node you want to use?
20:12 < ljharb> hydrozen: there's nvm
20:12 < ljharb> but it doesn't specify the auto version. that'd be the "engines" field in package.json
20:13 < hydrozen> yeah, thats what i use right now
20:13 < hydrozen> its just annoying because i always forget to change the version the first time around..
20:13 < hydrozen> would be nice if it could figure it out :D
20:21 < ljharb> hydrozen: you could have your "npm start" script do "nvm use"
20:21 < hydrozen> yeah that’s one option
20:22 < hydrozen> i see theres a discussion on nvm to add a new command that would parse the package.json file to try to figure out the node version
20:22 < hydrozen> but parsing json in bash doesnt sound like much fun
20:22 < ljharb> you could use shelljs
20:23 < allyraza> timoxley: still here
20:23 < timoxley> uhuh
20:23 < timoxley> allyraza
20:23 < allyraza> timoxley: hey buddy still struggling with that 
20:24 < timoxley> allyraza what about it
20:24 < allyraza> I need help with restructuring the tables
20:24 < hydrozen> ljharb: yeah but i mean, nvm is all bash I think
20:24 < allyraza> timoxley: can you help
20:24 < ljharb> tables? that doesn't sound like node :-p
20:24 < timoxley> doesn't.
20:25 < timoxley> allyraza is the issue that you are trying to share columns between the tables
20:26 < timoxley> e.g. createdAt etc
20:26 < allyraza> timoxley: no buddy i have a table ads and the each ad has diff attributes 
20:29 < timoxley> allyraza perhaps go do some research on schema design, this is a fairly common problem, should be lots of good solutions online
20:29 < Sven_vB> a strange database that calls that a table when the attributes are all different
20:29 < allyraza> timoxley: thanks buddy
20:29 < timoxley> Sven_vB not that strange, you can't always know all attributes up front
20:29 < allyraza> timoxley: if you come across anything let me know
20:30 < Sven_vB> timoxley, i know. but the databases i'm used to call that a collection, not a table.
20:31 < Sven_vB> allyraza, in case you're not being paid enough and are interested in slightly evil schema designs, I could help you BOfH-ing.
20:31 < timoxley> Sven_vB heh, yeah allyraza  it doesn't sound like a great match for relational db
20:32 < allyraza> timoxley: I am lost here 
20:33 < timoxley> allyraza i.e. use a 'nosql' database if you can
20:34 < allyraza> timoxley: I am out of luck buddy cannt
20:34 < Sven_vB> considering it is likely to be used for advertisements, BerkeleyDB could be a good choice
20:35 < timoxley> allyraza this is off topic. PM me if you want
20:47 -!- Topic for #Node.js: Why can't Node.js be more like Node.js? - http://nodejs.org - http://logs.nodejs.org - http://stackoverflow.com/questions/tagged/node.js
20:47 -!- Topic set by Nexxy [~emily@unaffiliated/nexxy] [Mon Apr 15 03:04:35 2013]
20:47 [Users #Node.js]
20:47 [@isaacbw         ] [ crescendo       ] [ GOMADWarrior    ] [ lanceball     ] [ PaulCapestany   ] [ sordina3        ] 
20:47 [@konobi          ] [ crodas          ] [ goraxe          ] [ langdon       ] [ paulfryzel      ] [ sorensen        ] 
20:47 [@mbalho          ] [ cronopio        ] [ gorillatron     ] [ LanyonM       ] [ paulwe          ] [ spiffxp         ] 
20:47 [@Nexxy           ] [ csurap          ] [ Gottox          ] [ Lee-          ] [ pcarrier_       ] [ Spudly          ] 
20:47 [@TooTallNate     ] [ cTIDE_          ] [ gozala          ] [ Leeol         ] [ percival        ] [ SpX             ] 
20:47 [ [1]habva2013    ] [ CTPAX           ] [ grantbow        ] [ LeftWing      ] [ petecoop        ] [ squeakytoy      ] 
20:47 [ \mSg            ] [ culturelabs     ] [ greg5green      ] [ legind        ] [ peterbraden1    ] [ sriley          ] 
20:47 [ ^esc            ] [ cxreg           ] [ Grephix         ] [ LeoAtWork_    ] [ petschm         ] [ st_luke         ] 
20:47 [ _6a68           ] [ d-snp           ] [ Grun1           ] [ leonardo      ] [ ph8             ] [ stagas          ] 
20:47 [ __main__        ] [ D4RK-PH0ENiX    ] [ gsf             ] [ leoncamel     ] [ ph^             ] [ stalled         ] 
20:47 [ _janne          ] [ d_d_d           ] [ gshipley        ] [ leptonix      ] [ PhilK           ] [ standoo         ] 
20:47 [ _marvin         ] [ dabarnes        ] [ Guest1617       ] [ levi501d      ] [ phI||Ip         ] [ stbuehler       ] 
20:47 [ _marvin_        ] [ daekano         ] [ Guest67138      ] [ lihnuz_       ] [ Phunky          ] [ stef            ] 
20:47 [ _sri            ] [ Daiz            ] [ Guest90000      ] [ Lions         ] [ pib1959         ] [ stephank        ] 
20:47 [ `3rdEden        ] [ dak             ] [ Guest9627       ] [ liorix        ] [ pickpuck        ] [ StephenS        ] 
20:47 [ AAA_awright     ] [ daleharvey      ] [ guilleiguaran_  ] [ liwen         ] [ pig_            ] [ stevenbenner    ] 
20:47 [ AaronMT         ] [ Damn3d_         ] [ gulian_         ] [ ljharb        ] [ Pilate          ] [ Steve|4D        ] 
20:47 [ aboudreault     ] [ DaMorpheuS      ] [ guor            ] [ lmatteis      ] [ pinja           ] [ strax           ] 
20:47 [ abstractj       ] [ dan_johnsin     ] [ guybrush        ] [ lmjabreu      ] [ plains          ] [ stride          ] 
20:47 [ acdaniel        ] [ danheberden     ] [ gwoo            ] [ locherm       ] [ plato           ] [ Stuk            ] 
20:47 [ acidjazz        ] [ DanielDJ        ] [ gyaresu         ] [ Lorentz       ] [ polyrhythmic    ] [ stutter         ] 
20:47 [ adambezemek     ] [ danmactough     ] [ gyre007         ] [ lovek323      ] [ PonyPonyPony    ] [ stylus          ] 
20:47 [ addisonj        ] [ darach          ] [ hackedy         ] [ lpin          ] [ postwait        ] [ styol           ] 
20:47 [ adrianF         ] [ darjeeling      ] [ hackygolucky    ] [ lrvick        ] [ pquerna         ] [ substack        ] 
20:47 [ AdrienBr_       ] [ DarkArgon|away  ] [ hagbard_celine  ] [ LuckyBurger   ] [ prawnsalad      ] [ sugyan          ] 
20:47 [ aeberlin        ] [ darkc0met       ] [ hakunin         ] [ luisbrandao   ] [ prettyrobots    ] [ superjoe        ] 
20:47 [ Aikar           ] [ daurnimator     ] [ halfhalo        ] [ luisbug       ] [ PrgmrBill       ] [ supersym        ] 
20:47 [ ajostergaard    ] [ dauterive       ] [ hallas          ] [ Lunar_Lamp    ] [ prismatictrail  ] [ sveisvei        ] 
20:47 [ ajpiano         ] [ davidsklar      ] [ HankHendrix     ] [ luruke        ] [ Proditor        ] [ Sven_vB         ] 
20:47 [ akshayms        ] [ davve_          ] [ happyface       ] [ lushious      ] [ prosquare       ] [ SvenDowideit    ] 
20:47 [ alek_b_         ] [ dawolf          ] [ harrisonm       ] [ lwicks        ] [ ProXy           ] [ svnlto          ] 
20:47 [ alekibango      ] [ dazoe           ] [ hatch           ] [ m0            ] [ przemoc         ] [ swaagie         ] 
20:47 [ aleray          ] [ dch             ] [ Havvy           ] [ M2Ys4U        ] [ psino           ] [ swaj            ] 
20:47 [ alexhancock     ] [ dcrouse         ] [ hcoplestone     ] [ Mack          ] [ purr            ] [ switz           ] 
20:47 [ alexwhitman     ] [ deadalus        ] [ hdon            ] [ madscientist- ] [ pvankouteren    ] [ Swizec          ] 
20:47 [ AllStruck       ] [ dec             ] [ hdoshi          ] [ Madwill       ] [ pyykkis_        ] [ system64        ] 
20:47 [ allyraza        ] [ deepy           ] [ heath           ] [ Maelstrom     ] [ qbit            ] [ T-Co            ] 
20:47 [ alvaro_o        ] [ deetb           ] [ Hebo            ] [ majek         ] [ qmx             ] [ t4w             ] 
20:47 [ Amfy            ] [ defaultro       ] [ hellopat        ] [ manacit       ] [ qos|away        ] [ tahu            ] 
20:47 [ aMoniker        ] [ defunctzombie_zz] [ HeN             ] [ mandric       ] [ queequeg1       ] [ talntid         ] 
20:47 [ andree          ] [ dekz__          ] [ herbnerder      ] [ ManneW        ] [ qwerty|         ] [ tanepiper       ] 
20:47 [ andrew12        ] [ denysonique     ] [ herki1          ] [ manuelbieh    ] [ r0tha           ] [ tassmjau        ] 
20:47 [ andrewhodel     ] [ Derander_       ] [ heroux          ] [ mape_         ] [ RA13            ] [ taterbase       ] 
20:47 [ anildigital_work] [ dested          ] [ herzi           ] [ mappum        ] [ Radhad          ] [ tauren          ] 
20:47 [ AntelopeSalad   ] [ devaholic       ] [ hhuuggoo        ] [ maqr          ] [ radiodario      ] [ tboyt           ] 
20:47 [ antiparticle    ] [ devdazed        ] [ hij1nx          ] [ marcooliveira ] [ rads            ] [ teadict         ] 
20:47 [ arduix          ] [ devsharpen      ] [ hipertracker    ] [ marienz       ] [ raffer          ] [ tec27           ] 
20:47 [ arlolra         ] [ dguttman        ] [ hipsterslapfight] [ marlun        ] [ raj             ] [ techlife        ] 
20:47 [ armin           ] [ dhpe            ] [ Hosh            ] [ maru_cc____   ] [ raja            ] [ TechnoCat       ] 
20:47 [ asherkin        ] [ didiergm        ] [ hotch           ] [ mary5030      ] [ ralphholzmann   ] [ TehShrike       ] 
20:47 [ ashoshi         ] [ digiwano        ] [ hydrawat        ] [ masch         ] [ ralphtheninja   ] [ tellnes         ] 
20:47 [ aslant          ] [ diminoten       ] [ iain_           ] [ master5o1     ] [ Ralt            ] [ terietor        ] 
20:47 [ asterick        ] [ dingdreher2     ] [ iaincarsberg_   ] [ master5o1|work] [ ramitos         ] [ terinjokes      ] 
20:47 [ atatsu          ] [ diogogmt        ] [ ianjm           ] [ matjas        ] [ randallagordon  ] [ TeslaTest       ] 
20:47 [ augustl         ] [ Dioksid         ] [ iapain          ] [ matt_c        ] [ random-jellyfish] [ texinwien       ] 
20:47 [ aus             ] [ djazz           ] [ icebox          ] [ mattdawson    ] [ Rantanen        ] [ tg              ] 
20:47 [ automata        ] [ djcoin          ] [ ickyb0d         ] [ mattly        ] [ Rapiere         ] [ thanpolas_      ] 
20:47 [ average         ] [ DjMadness       ] [ idletom         ] [ mattmueller   ] [ rawtaz          ] [ thealanwattsriot] 
20:47 [ averyquery      ] [ djoot           ] [ igl             ] [ max_weller    ] [ rax0            ] [ thedaywi1lcome  ] 
20:47 [ AvianFlu        ] [ dKc             ] [ iksik           ] [ maxani        ] [ Raynos          ] [ TheFuzzball     ] 
20:47 [ AviMarcus       ] [ dkpi            ] [ ill0            ] [ mbroadst      ] [ rcaskey         ] [ TheGallery      ] 
20:47 [ avital          ] [ dlt             ] [ ilteris         ] [ Mchl          ] [ rcombs          ] [ thejefflarson_  ] 
20:47 [ avro            ] [ dnyy            ] [ im0b            ] [ mdel          ] [ rcrowley        ] [ TheJH           ] 
20:47 [ awkorama        ] [ doffm           ] [ inarru_         ] [ mdevolving    ] [ rcs             ] [ TheLink         ] 
20:47 [ awoxp           ] [ Domenic_        ] [ IncipLTN        ] [ meckanism     ] [ redir           ] [ TheMoonMaster   ] 
20:47 [ azend           ] [ dominictarr     ] [ Industrial      ] [ med_          ] [ redshado1hero   ] [ therealkoopa    ] 
20:47 [ azhwkd|away     ] [ don_jones_      ] [ infynyxx        ] [ medice        ] [ ree             ] [ thinkt4nk       ] 
20:47 [ b1eedr          ] [ donghee_        ] [ inolen1         ] [ mekwall       ] [ regality        ] [ thl0            ] 
20:47 [ b1rkh0ff        ] [ DoniRS          ] [ ins0mnia        ] [ melter        ] [ reid            ] [ thomblake       ] 
20:47 [ b2l             ] [ DonOtreply      ] [ Interactive_away] [ mephux        ] [ remysharp       ] [ thread          ] 
20:47 [ Baastrup        ] [ DonRichie       ] [ Internet13      ] [ merlin83_     ] [ rendar          ] [ threesome       ] 
20:47 [ balgarath       ] [ dook            ] [ irclogger_com   ] [ MerlinDMC     ] [ retornam        ] [ tiCeR_          ] 
20:47 [ balishag        ] [ doowb           ] [ ircretary       ] [ merpnderp     ] [ retrostyle|me   ] [ tilgovi         ] 
20:47 [ balupton        ] [ DORNER          ] [ isaacs          ] [ merrihew      ] [ revnoah         ] [ Tim-_-          ] 
20:47 [ baranaby        ] [ doug            ] [ Iuz             ] [ mertimor      ] [ reybango        ] [ tim_smart|away  ] 
20:47 [ barneybook      ] [ dpemmons        ] [ ivan\           ] [ meso          ] [ rgmarcha        ] [ timmywil        ] 
20:47 [ bartt           ] [ Draggor         ] [ ivan`           ] [ metadaddy__   ] [ rhussmann       ] [ timoxley        ] 
20:47 [ Bass10          ] [ draginx         ] [ jabberwo_       ] [ Metal3d       ] [ RichardBronosky ] [ tjfontaine      ] 
20:47 [ bastinat0r      ] [ dreamdust       ] [ jackcviers      ] [ metellus      ] [ rideh           ] [ tjh             ] 
20:47 [ bbloom          ] [ drey            ] [ jagoda          ] [ mferranti_    ] [ riku            ] [ tklun           ] 
20:47 [ bdemers         ] [ DriverDan       ] [ jaha            ] [ mfrauenh1ltz  ] [ rioter          ] [ tmpvar          ] 
20:47 [ bear            ] [ drodger         ] [ jakkm           ] [ MI6           ] [ RLa             ] [ tockitj         ] 
20:47 [ beatpanic       ] [ drpcken         ] [ jalcine         ] [ mickhansen    ] [ rmg             ] [ togge           ] 
20:47 [ beau-_          ] [ DrPizza         ] [ jammsen         ] [ mikeal        ] [ rmill           ] [ tokuhirom       ] 
20:47 [ beawesomeinstead] [ drspin          ] [ jamsyoung       ] [ mikegerwitz   ] [ robinson1k      ] [ tomaw           ] 
20:47 [ beeeviz         ] [ drudge          ] [ jan____         ] [ mikey_p       ] [ robinson_k      ] [ tomb            ] 
20:47 [ beeyah          ] [ dscape          ] [ janmower        ] [ mikl          ] [ roger_rabbit    ] [ TommehM         ] 
20:47 [ belak           ] [ dshaw_          ] [ jaredrhine      ] [ mikolalysenko ] [ roger_raymond   ] [ tomtomaso       ] 
20:47 [ ben_alman       ] [ dukedave        ] [ jareiko         ] [ mirkok        ] [ Rolken          ] [ toothrot        ] 
20:47 [ benatkin        ] [ duncanbeevers   ] [ jasonrm         ] [ Mitar         ] [ rom1504         ] [ topaxi          ] 
20:47 [ bencevans_afk   ] [ dwierenga       ] [ JasonSmith      ] [ MitchW        ] [ romainhuet      ] [ topi`           ] 
20:47 [ bengl           ] [ dypsilon        ] [ jayk            ] [ mjr84         ] [ romainneutron   ] [ torgeir         ] 
20:47 [ benjaminbenben  ] [ earthquake      ] [ jayne           ] [ mmalecki      ] [ RORgasm         ] [ Torsten         ] 
20:47 [ Benvie          ] [ echo|           ] [ jayrobot        ] [ mnaser        ] [ rounce          ] [ tpatja          ] 
20:47 [ beuk            ] [ ed209           ] [ jb_             ] [ MobCat        ] [ roxlu           ] [ track7          ] 
20:47 [ bigkevmcd       ] [ edr             ] [ jbpros          ] [ molnarg       ] [ rphillips       ] [ treaki          ] 
20:47 [ Bilge           ] [ edude03         ] [ jbueza          ] [ monokrome     ] [ rtimmins        ] [ trepatudo       ] 
20:47 [ billy           ] [ eff             ] [ jcrugzz         ] [ Morkel        ] [ Rubennn_        ] [ trevnorris      ] 
20:47 [ bingomanatee    ] [ efoster         ] [ jdelgado        ] [ MoRn          ] [ rudasn          ] [ Trieste         ] 
20:47 [ Bioshox         ] [ eighty4         ] [ jden            ] [ Mortchek      ] [ rudolfrck       ] [ trippeh         ] 
20:47 [ bitfed_         ] [ einaros         ] [ jdolitsky       ] [ mossplix      ] [ ruff            ] [ trodrigues      ] 
20:47 [ bitZero__       ] [ eins78          ] [ jdunck          ] [ motaro_       ] [ runningskull    ] [ truedat101      ] 
20:47 [ BlackMagik      ] [ ejnahc          ] [ jefferai        ] [ mp_           ] [ rurufufuss      ] [ trygve          ] 
20:47 [ Blorb           ] [ El_Angelo       ] [ jeffmjack       ] [ mpajor_op5    ] [ RushPL          ] [ tuhoojabotti    ] 
20:47 [ blueadept       ] [ eldios          ] [ jesseproulx     ] [ MrDHat        ] [ russell_h       ] [ Tux             ] 
20:47 [ bnoordhuis      ] [ elijah-mbp      ] [ jesster7        ] [ mrkurt        ] [ russfrank       ] [ tvw             ] 
20:47 [ Bob_Gneu        ] [ elliottcable    ] [ jesusabdullah   ] [ MrMaksimize   ] [ rvagg           ] [ txdv            ] 
20:47 [ Bob_Work        ] [ elux            ] [ jetienne        ] [ MrNibbles     ] [ rwaldron        ] [ tyler_          ] 
20:47 [ bodisiw         ] [ emilsedgh       ] [ jez0990         ] [ mrpibb        ] [ rworth          ] [ tylersmith      ] 
20:47 [ BombStrike      ] [ empee           ] [ jgaui           ] [ mrvisser      ] [ ry4nn           ] [ TypoAway        ] 
20:47 [ Bonuspunkt      ] [ enekoalonso     ] [ jgornick        ] [ mscdex        ] [ ryanaz          ] [ Umren           ] 
20:47 [ booo            ] [ enoex1          ] [ jhgaylor        ] [ msucci        ] [ ryanclancy000   ] [ Validatorian    ] 
20:47 [ booyaa          ] [ epa_            ] [ jibay           ] [ mtcrutch      ] [ ryanseddon      ] [ VesQ            ] 
20:47 [ bradgignac      ] [ Epeli           ] [ jimbot1         ] [ munichlinux   ] [ rybnik          ] [ vicapow         ] 
20:47 [ bradleyprice    ] [ ePirat          ] [ jimmyff         ] [ munro         ] [ s00pcan         ] [ vitsaus         ] 
20:47 [ brainproxy      ] [ er1c_           ] [ jimt            ] [ mykul         ] [ s2g             ] [ Voting          ] 
20:47 [ breck7          ] [ ereslibre       ] [ JJMalina        ] [ myndzi        ] [ s4muel          ] [ vsayer          ] 
20:47 [ brettlangdon    ] [ Erriond         ] [ jjore           ] [ n0cturnal     ] [ s5fs            ] [ vwoo            ] 
20:47 [ brianc1         ] [ eschnou         ] [ jkarsrud        ] [ nackjich_     ] [ sadtaco         ] [ Wa              ] 
20:47 [ brianloveswords ] [ euforic         ] [ jlord           ] [ nail_         ] [ salazr__        ] [ wagtag          ] 
20:47 [ brocken         ] [ euoia           ] [ jmanoto         ] [ Naked_        ] [ salsamontes     ] [ wang            ] 
20:47 [ brycebaril      ] [ eventualbuddha  ] [ jmaugue         ] [ nanashiRei    ] [ Sam-T           ] [ wangbus         ] 
20:47 [ Bulk            ] [ EvilJStoker     ] [ jmoney          ] [ naquad        ] [ sambarino       ] [ wankdanker      ] 
20:47 [ Bunge_          ] [ EvRide          ] [ jmstout         ] [ ndngvr        ] [ samholmes       ] [ wao             ] 
20:47 [ buritica        ] [ ewalker         ] [ JmZ_            ] [ necolas       ] [ satyr           ] [ wedgeV          ] 
20:47 [ Bwild           ] [ Ezku            ] [ joaojero1imo    ] [ Ned_          ] [ sawrubh         ] [ WeeJeWel        ] 
20:47 [ bytemask        ] [ Fabryz          ] [ jocafa          ] [ netj          ] [ sbeam           ] [ wereHamster     ] 
20:47 [ c4milo          ] [ faceleg|work    ] [ Joefish         ] [ newUser1234   ] [ schredder       ] [ wesbos          ] 
20:47 [ Cainus          ] [ fastman         ] [ joel__          ] [ nicholasf     ] [ scott_gonzalez  ] [ whyhankee       ] 
20:47 [ calvinfo        ] [ faulkner        ] [ JohnMcLear      ] [ niclone       ] [ screamingbanshee] [ willwh          ] 
20:47 [ candlejackson   ] [ fcoury__        ] [ johnnny22       ] [ nielsbusch    ] [ sdboyer         ] [ willwhite       ] 
20:47 [ CaptainBlaze    ] [ felixge         ] [ jolo2           ] [ niftylettuce  ] [ sdi             ] [ Will|           ] 
20:47 [ carif           ] [ fermion         ] [ jonaslund       ] [ niggler       ] [ seb_            ] [ wivlaro         ] 
20:47 [ carlyle         ] [ fibric          ] [ JonathanMcClare ] [ nihilista     ] [ SebastianFlyte  ] [ wizonesolutions ] 
20:47 [ carolyns_       ] [ fikst           ] [ Jonghwan        ] [ nikkimccavee  ] [ sebmck          ] [ wolfeidau       ] 
20:47 [ cce             ] [ filleokus       ] [ joschi          ] [ nikola        ] [ SecretAgent     ] [ wolfspraul      ] 
20:47 [ celogeek        ] [ flagg0204       ] [ joshfinnie      ] [ niloy         ] [ Secutor         ] [ wookiehangover  ] 
20:47 [ cemt            ] [ Fli-c           ] [ joshie          ] [ NimeshNeema   ] [ segomos         ] [ WorkingClassDev ] 
20:47 [ cfq_            ] [ flock3_         ] [ joshontheweb    ] [ ninegrid      ] [ Segrel          ] [ wramthun        ] 
20:47 [ cgfuh           ] [ fluffy_bunny    ] [ joshthecoder    ] [ nkohari       ] [ seich-          ] [ wycats__        ] 
20:47 [ cha0s           ] [ flyth           ] [ JPT             ] [ nkr           ] [ seismo          ] [ xat-            ] 
20:47 [ chaobin         ] [ FMJaggy         ] [ jrdn            ] [ nlf           ] [ Sembiance       ] [ xerora          ] 
20:47 [ ChaoticJorge    ] [ Fofr_           ] [ jslatts         ] [ no9           ] [ sent_hil        ] [ xfo_            ] 
20:47 [ chapel          ] [ forzan          ] [ jso             ] [ NoFaTe        ] [ sente           ] [ xonev1          ] 
20:47 [ charuru         ] [ fpuc            ] [ jtwalters       ] [ nooga         ] [ ser             ] [ xorox90         ] 
20:47 [ chayin          ] [ Franz__         ] [ julianduque     ] [ notalexgordon_] [ seric           ] [ xorspark        ] 
20:47 [ Cheery          ] [ frd|afk         ] [ juliangruber    ] [ notmypudding  ] [ serious_mo      ] [ xSmurf          ] 
20:47 [ cheese1756      ] [ fredsted        ] [ jvolkman        ] [ npmbro        ] [ Seventoes       ] [ xue             ] 
20:47 [ chilts          ] [ freeside        ] [ jxson           ] [ npx_          ] [ Shadda          ] [ xxblakefailxx_  ] 
20:47 [ chjj            ] [ freethenation   ] [ k1ng            ] [ nsm           ] [ Shadowized      ] [ Xymon-Sinclair  ] 
20:47 [ chmac           ] [ freewil         ] [ ka2n            ] [ nuba          ] [ shama           ] [ yacks           ] 
20:47 [ chomwitt        ] [ Frippe          ] [ Kai`            ] [ Nuck          ] [ shanlar         ] [ yankhates       ] 
20:47 [ chridal         ] [ funkbox         ] [ kaichanvong     ] [ nym           ] [ shanse          ] [ yawnt           ] 
20:47 [ chrisbuchholz   ] [ FunnyLookinHat  ] [ Kaimei          ] [ nzjames_      ] [ shiftins        ] [ yellah          ] 
20:47 [ chrisdickinson  ] [ Furai           ] [ Kakera_         ] [ o^_^o         ] [ shihan          ] [ yhpark_talk     ] 
20:47 [ Christian87     ] [ fusiongrokker   ] [ Kaltiz          ] [ obind         ] [ Shrink          ] [ yogurt_truck    ] 
20:47 [ christopherdb   ] [ Fuu             ] [ kam187-rMBP     ] [ odyniec       ] [ sideshowcoder   ] [ yorick          ] 
20:47 [ chuckpreslar    ] [ fwg             ] [ kanyl           ] [ ofan          ] [ siksia          ] [ yorn            ] 
20:47 [ chunhao         ] [ FX80            ] [ kanzure         ] [ ohcibi        ] [ simewn_         ] [ YoY             ] 
20:47 [ chxane          ] [ Gabriel403      ] [ kardioid        ] [ olegp_        ] [ simius          ] [ Yuffster_fun    ] 
20:47 [ cjm             ] [ gabriel_1       ] [ karupanerura    ] [ OliverJAsh    ] [ sindresorhus    ] [ yuwang          ] 
20:47 [ ckknight_       ] [ ganzuul         ] [ kaspertidemann  ] [ omni5cience_  ] [ sir_tyrion      ] [ yzap            ] 
20:47 [ clarkk          ] [ garann          ] [ Katafalkas      ] [ oon_          ] [ sirecote        ] [ zadark          ] 
20:47 [ ClaudioAlbertin ] [ garciawebdev    ] [ kborchers       ] [ ootje         ] [ SirFunk         ] [ zagamqt         ] 
20:47 [ clone1018       ] [ Garo__          ] [ keeto           ] [ optixx        ] [ sirkitree       ] [ zaheera         ] 
20:47 [ coaster         ] [ garren          ] [ kelabot         ] [ Or1on         ] [ sivoais         ] [ zaleb           ] 
20:47 [ codelahoma      ] [ Garrick         ] [ kesla           ] [ Orbitrix      ] [ siyb            ] [ zanea           ] 
20:47 [ codepal         ] [ gavinr          ] [ Kester          ] [ oreth         ] [ sk8ball         ] [ Zauberfisch|idle] 
20:47 [ codingkevin     ] [ gdbz            ] [ kevinfagan      ] [ orospakr      ] [ Skaag           ] [ zavier          ] 
20:47 [ codycraven      ] [ gde33           ] [ kevireilly      ] [ othiym23      ] [ skylerri_       ] [ zdwolfe_        ] 
20:47 [ Codynyx         ] [ geb             ] [ kevwil          ] [ Outsider_     ] [ slajax          ] [ zedas           ] 
20:47 [ colinsullivan   ] [ geilt           ] [ Kexoth          ] [ over_         ] [ Slashbunny      ] [ zeekay          ] 
20:47 [ conne           ] [ generalissimo   ] [ kinabalu        ] [ owen1         ] [ Slaytorson      ] [ zemm            ] 
20:47 [ Connorhd        ] [ geoous          ] [ Kingdutch       ] [ owenb         ] [ slicky          ] [ zenazn          ] 
20:47 [ conradev        ] [ gf3             ] [ KiNgMaR         ] [ oxy_          ] [ Slipo           ] [ zenodub         ] 
20:47 [ context         ] [ ghoti           ] [ klobucar        ] [ oz            ] [ slipstream      ] [ zeroz           ] 
20:47 [ CookieNomster   ] [ gildean         ] [ kornnflake      ] [ p0wn3d        ] [ slurp           ] [ zivester        ] 
20:47 [ coolnalu        ] [ gim50           ] [ kppullin        ] [ pachet        ] [ smango          ] [ zmanfx          ] 
20:47 [ copongcopong    ] [ Giusuppe        ] [ kraft           ] [ Pagan         ] [ smeranda        ] [ zodiak          ] 
20:47 [ CorbinDallas    ] [ gkatsev         ] [ krishna         ] [ pandark_      ] [ smtudor         ] [ zokeber         ] 
20:47 [ CornishPasty    ] [ GlitchMr        ] [ Kruppe          ] [ papachan      ] [ sneakyness      ] [ zomg            ] 
20:47 [ couchquid       ] [ gluxon          ] [ Kudos           ] [ par           ] [ snuglepuss      ] [ zorzar          ] 
20:47 [ Couto           ] [ gmadole         ] [ kuja            ] [ parasight     ] [ Snugug          ] [ zz_angrysock    ] 
20:47 [ CoverSlide      ] [ gnarf           ] [ kzrl            ] [ passcod       ] [ so              ] [ zz_silvers      ] 
20:47 [ creationix      ] [ Goles           ] [ L_star          ] [ pats_Toms     ] [ SomeoneWeird    ] [ |Gobo|          ] 
20:47 -!- Irssi: #Node.js: Total of 1110 nicks [5 ops, 0 halfops, 0 voices, 1105 normal]
20:47 -!- Home page for #node.js: http://nodejs.org/
20:47 -!- Channel #Node.js created Sat Jan 30 07:48:24 2010
20:47 -!- Irssi: Join to #Node.js was synced in 22 secs
20:54 < doug> try https://github.com/novelys/node_chat
21:05 < ser> doug: thanks for the hint, i found a lot of examples on github, cheers
21:13 < nanashiRei> That moment when you present a finished AWS setup to your customer and say "This is very unlikely to crash.". And then amazon has an outage, just at this moment.
21:13 < nanashiRei> That was just so arkward -_-
21:14 < jjore> I'm looking at the ECMAScript spec for when to inject a semi-colon in: `"abc"\n+"def"` and it looks like a semi-colon *isn't* inserted because the `+` of `+"def"` isn't a restricted production like `++`
21:15 < Hoverbear> Hey all, anyone know how I could use Karma (Testacular) for unit testing my server & client at the same time?
21:15 <@mbalho> correct, it assumes you are doing a multiline string 
21:16 < jjore> I read the spec incorrectly a couple times and thought it was saying there *should* be an injected `;` because it wasn't a restricted production.
21:16 < jjore> Dang.
21:23 < MI6> joyent/node: Ben Noordhuis v0.10 * ccd3722 : handle_wrap: fix NULL pointer dereference  Fix a NULL pointer dereference - http://git.io/Z37utA
21:23 < MI6> joyent/node: Ben Noordhuis v0.8 * 0801a18 : handle_wrap: fix NULL pointer dereference  Fix a NULL pointer dereference - http://git.io/l_DRQg
21:28 < s5fs> I've got a simple stand-alone module I wrote for client-side messaging parsing. I'd like to re-use this module within node. How can I do this quickly and easily?
21:31 < Heyokah> Howdy Daekano
21:31 < Heyokah> Hey y'all
21:38 < Heyokah> I'm trying to install acs on WIndows...
21:38 < Heyokah> What is this crap? http://pastebin.com/raw.php?i=cRsP5j0i
21:38 < ljharb> s5fs: put it on npm
21:39 < dypsilon> s5fs, use npm link
21:39 < dypsilon> https://npmjs.org/doc/link.html
21:39 < gluxon> Heyokah: What's wrong with that? It just uses a lot of modules.
21:39 < gluxon> Which is "good".. 
21:40 < Heyokah> Don't get me wrong, I'm all for modules. But this a bigass error at the end. It fails.
21:41 < ljharb> dypsilon: that doesn't make it reusable to anyone else tho
21:41 < dypsilon> ljharb, true, but it's quick
21:42 < Heyokah> So ya see, "npm install -g acs" fails with a cryptic error.
21:42 < Heyokah> http://pastebin.com/raw.php?i=cRsP5j0i
21:42 < gluxon> Heyokah: I see. Do you have a C++ build system? It's trying to compile a module.
21:43 < Heyokah> Naw, I've just got Windows, node.js, and python. Do I need a C++ build system?
21:44 < gluxon> Heyokah: Yes.
21:44 < gluxon> Heyokah: For that particular module.
21:46 < Heyokah> gluxon: Thanks, I'll give that a shot.
21:46 < merpnderp> An OS without a C/C++ build system is like like sitting down to a spaghetti dinner without a fork. What's the point?
21:48 < MI6> joyent/node: Ryan Graham v0.10 * b02b93b : doc: note a gotcha with http.Server sockets - http://git.io/Gv3ahA
21:48 < mmalecki> merpnderp: you can always hit the plate face-first and bang your head against it until some spaghetti manages to fall into your mouth
21:50 < Heyokah> merpnderp: I dunno, I'm a chopsticks guy myself
21:50 < Heyokah> By the way, can anyone recommend a suitable fork for my spaghetti?
21:51 < MobCat> ziiiiing
21:51 < merpnderp> mmalecki: I've seen that youtube video :P
21:52 < mmalecki> merpnderp: I actually didn't, care to link :) ?
21:52 < kez_> hey guys , anyone around ?
21:53 < Heyokah> mmalecki: https://www.youtube.com/watch?v=qnydFmqHuVo
21:53 < dypsilon> kez_, lots of people, if you want to talk about spaghetti
21:53 < Alex___> hey y'all
21:53 < Heyokah> Howdy Alex Underscore
21:53 < kez_> spaghetti , that's all I know !
21:54 < Heyokah> Hi Kez
21:54 < Heyokah> I wanted to know about forks, actually.
21:54 < Heyokah> And if you haven't been paying adequate attention, that means C++ build environments for Windows
21:55 < kez_> so I'm a newb in node.js , ofcourse , what I'm trying to do is serve dynamic content using mustache and socket.io , with the heavy lifting coming from the server side
21:55 < kez_> no frameworks and all that , low level for now since I want to actually understand all this
21:55 < kez_> problem is I'm not sure how to manipulate the DOM from the server side
21:56 < dypsilon> kez_, there modules for that in npm
21:56 < dypsilon> *are
21:57 < dypsilon> not sure how they are called, but they exist
21:57 < ljharb> domjs, phantomjs
21:57 < ljharb> kez_: but why do you need DOM on the server for that?
21:57 < ljharb> kez_: the server doesn't send down a DOM, it sends down html.
21:57 < kez_> I agree , that's the issue
21:57 < dypsilon> kez_, i would think twice before you do dom on the server
21:58 < kez_> for the server that's just dum text
21:58 < dypsilon> except you are doing headless testing
21:59 < kez_> another issue is that once I'm done serving my template ,basically I'm done with the http response , can't add anything to it, so I'm forced to implement frontend DOM logic
21:59 < kez_> but I don't want that right ?
21:59 < kez_> :D
21:59 < mmalecki> Heyokah: this is possibly the best video I've ever seen
21:59 < rmg> bnoordhuis: is there a way to help with pull requests other than submitting them?
21:59 < mmalecki> I just finished laughting
22:00 < dypsilon> kez_, dom is for browser, why don't want that?
22:00 < dypsilon> *you
22:00 < ljharb> kez_: why would you want to manipulate it? the template should be all you need
22:00 < kez_> it's just experimenting man , I know it's a bad idea what I'm trying to do
22:01 < kez_> DOM should have its own logic , separated from the server side logic
22:01 < merpnderp> mmalecki: http://youtu.be/qnydFmqHuVo
22:02 < kez_> is it possible to load a mustache template , and then add stuff to it (after response.end(content)) from server side ?
22:02 < kez_> just a wild guess
22:02 < ljharb> kez_: no, i'm saying don't do that.
22:02 < merpnderp> oh hah, Heyokah beat me to it.
22:02 < ljharb> kez_: your mustache template should represent the final state.
22:02 < ljharb> kez_: if you need two states, make two mustache templates.
22:02 < Heyokah> Bam! :)
22:03 < Heyokah> Give it a blast with the spice weasel. Bam! :D
22:03 < kez_> I see , but won't I get to the same issue ? where I actually have to initiate an HTTP request in order to refresh the content ?
22:03 < kez_> (assuming we don't have any frontend logic implemented ofcourse )
22:04 < Alex___> anybody want to see a funny video?
22:04 < ljharb> kez_: yes, of course
22:04 < ljharb> kez_: if you want client-side stuff, then when the client supports it, you render the appropriate mustache on the client without calling the server.
22:05 < kez_> so if I want realtime DOM manipulation , I need client logic , no way around it
22:06 < kez_> I can't keep an HTTP response 'open' and keep serving content to it lol
22:07 < rmg> kez_: you could try using dnode to blur the line between client and server.. but that doesn't seem like a good idea
22:07 < kez_> so what I'm trying to do is bad practice , generally speaking 
22:07 < kez_> ok
22:07 < kez_> got that
22:08 < kez_> another question (thanks btw)
22:08 < kez_> I have a model (object , DOM element on client etc..)
22:08 < kez_> I want logic for this model on both server side and client side
22:08 < MI6> joyent/node: Kelly Gerber v0.10 * 36503b5 : docs: update path.join() example for v0.10  The current example shows the - http://git.io/A13CgQ
22:09 < kez_> how would I go about this ? 
22:09 < kez_> I mean client side logic is exposed , server side isn't
22:09 < kez_> but we're talking about the same model  , so some connection should exist 
22:09 < kez_> am I being clear ?
22:11 < kez_> MessageBox.update('with some content') , would update the DOM as well as a database . how would I write something like this ?
22:12 < kez_> I know in Meteor those guys managed to expose server side logic in the client , but I have no idea how they've done it
22:12 <@Nexxy> kez_, by ignoring things like security :)
22:13 < happyface> what's a simple http client that can do a lot for me? Like decoding gzip automatically
22:13 <@Nexxy> happyface, curl?
22:13 < happyface> Nexxy: I'm dumb, I meant to say node module
22:14 <@Nexxy> happyface, request?
22:14 < rmg> kez_: is that the part you are trying to learn?
22:14 < kez_> rmg: yes
22:14 <@Nexxy> happyface, you may have to pipe gzipped responses through gzip but I think it shows you an exampe
22:14 < kez_> I'm coming from other server side languages (Ruby , PHP) , this stuff is pretty hard for me
22:15 < happyface> Nexxy: alright, I'll check it out thanks
22:15 < kez_> callbacks ,sync , asyng , all that , jesus
22:15 <@Nexxy> I haven't used jesus myself yet
22:15 <@Nexxy> but I hear good things about it
22:15 < rmg> kez_: there's a bunch of little bits you have to line up, but basically you're going to have objects representing your model on both sides
22:15 < kez_> yeah , apparently it can perform miracles
22:16 < kez_> rmg to these objects know about each other ?
22:16 < kez_> how could I save to db when a DOM event is dispatched ? with security in mind lol
22:16 < rmg> once you add in all the ajax to keep them in sync, yes
22:17 < rmg> kez_: this is the main problem all the client-side MV* frameworks solve for you
22:17 < rmg> at least on the client side, once you provide a server they can talk to
22:17 < kez_> I know man ,but I want to learn the low level stuff first, how it all really 'should' work
22:19 < rmg> kez_: keep it simple.. add a DOM event handler for a form element that posts the value to your http server
22:19 < rmg> then write the server side of that
22:19 < MI6> joyent/node: Timothy J Fontaine master * 951e0b6 : http: split Client into _http_client.js (+5 more commits) - http://git.io/VMNRwA
22:19 -!- mode/#Node.js [+o TooTallNate] by ChanServ
22:19 < kez_> or might as well dispatch io events that do server side stuff  , and keep it even more simple
22:20 < rmg> then rinse and repeat.. eventually you'll see patterns in the implementation where you can generalize the functions
22:20 < kez_> and in this case the server side has no idea about the client side , which I think it's the 'good way' right ?
22:20 < kez_> and viceversa
22:20 < kez_> yeah guess I just need to keep trying
22:21 < kez_> most of the guides I found are .. I don't know , bad I think
22:21 < rmg> kez_ well you don't want the server and client to know much about each other's state, at least
22:23 < kez_> thanks guys
22:23 < kez_> great help
22:23 < cjm> NodeUp:42, scaling websockets - http://nodeup.com/fortytwo
22:23 < rmg> cjm: from 2 hours ago?
22:23 < cjm> yup
22:23 < cjm> :)
22:24 < rmg> awesome, I only caught the second half
22:24 < rmg> (which was excellent, of course)
22:25 < cjm> thanks rmg, glad i could get it up quick for ya
22:26 < __Alex__> anyone from Austin, TX?
22:26 < screamingbanshee> maybe
22:26 < screamingbanshee> :D
22:26 < s5fs> ljharb: I solved my module issue. I don't want it in NPM, I didn't want to user browserify.
22:27 < ljharb> s5fs: browserify's got nothing to do with it. you can still put it in npm, and use it without browserify.
22:27 < s5fs> ljharb: how do I access it from a browser?
22:28 < s5fs> ljharb: I ended up doing this, http://caolanmcmahon.com/posts/writing_for_node_and_the_browser/
22:28 < ljharb> s5fs: that works. altho you should use browserify if you have node :-p
22:28 < s5fs> ljharb: but.. but.. i don't wanna use browserify for this one-off need
22:28 < __Alex__> is it ok to use a lot of modules on a project? I'm relatively new to node.js but my cofounder says we shouldn't
22:28 < ljharb> s5fs: nothing's one-off.
22:29 < ljharb> __Alex__: of course it's ok
22:29 < ljharb> __Alex__: lots of modules is infinitely better than writing code yourself.
22:29 < niggler> false ljharb 
22:29 < kez_> is there TDD in node.js ? what's the most common testing framework ?
22:29 < s5fs> ljharb: I'm 8mo into this project and it's the first time I've needed to share a module. you're right though, I'll probably float a bit more code across to the client but I'll cross that bridge when I get to it :)
22:29 < ljharb> niggler: which part.
22:29 < niggler> lots of modules is better if those modules are indeed better than what you would write __Alex__ 
22:30 < substack> __Alex__: your cofounder *wants* you to write everything from scratch yourself instead of using tested reusable components?
22:30 < ljharb> niggler: if yours is better, then you should make a module. period.
22:30 < substack> kez_: "TDD" is a bullshit term
22:30 < doug> what's The Best template system?
22:30 < kez_> why dude
22:30 < substack> kez_: you don't need "TDD" to write tests
22:30 < substack> you just write them
22:30 < substack> pow, done
22:30 < niggler> "lots of modules is infinitely better than *writing code yourself*." implied you were referring to others' modules 
22:30 < ljharb> SHAZAM
22:30 < substack> ideology not necessary
22:30 < niggler> TDD is the agile of 2013
22:31 < kez_> yeah but there's a difference between writting them before or after
22:31 < kez_> you get a better idea of how your code should look if you write them tests first
22:31 < s5fs> kez_: depends depends depends
22:33 < s5fs> kez_: if you've got enough spec work done up front you can probably get away with writing a bunch of tests and then writing code to pass, but otherwise I tend to kinda code a bit, rock some tests, rinse and repeat.
22:33 < __Alex__> yeah the modules are much better than we can write, but he's just not as open as me to downloading lots of them
22:34 < kez_> is mocha the 'best' testing framework ?
22:34 < kez_> I'm confused
22:34 < kez_> there's so many already
22:35 < ryannielson> Hey, I'm beginning with node and looking for a good, up to date, book to read. Any suggestions? Node.js in Action is in early access now, anyone read through that one yet?
22:35 < __Alex__> I'll have to ask him more about it—maybe he's just trying to push me to learn how to do it 
22:35 < ljharb> __Alex__: put as much of your code as you can into small modules. whether you write them or not. and try to put the ones you write on github and npm.
22:35 < rmg> kez_: if you want to use one, mocha will do the job
22:36 < __Alex__> ljharb ok
22:37 < kez_> have any of you had a rought start with node.js ?
22:38 < kez_> or am I the only village idiot ?
22:38 < s5fs> kez_: it was hard for me too, I think that's normal.
22:39 < paulbohm> hey any ideas what might make a readstream get stuck on an empty file? doesn't emit readable, end, close, or error, just gets stuck
22:39 < paulbohm> (not every time either...)
22:42 < kez_> is it a problem if I have custom modules that are not fully abstractive ? used more like to organize my code ?
22:42 < kez_> should any module that I write be 'npm ready' ?
22:44 < rmg> kez_: it's cleaner if your modules are able to stand on their own.. "npm ready" is a pretty good way of encouraging such design
22:45 < kez_> ok, thanks a lot for the help , really appriciate it
22:46 < kez_> but f**k me , it's hard for me
22:46 < kez_> need to get into a node.js junior position
22:46 < ryannielson> I'll try again, in case someone here now can answer: I'm looking for a good Node.js book to start learning. I'm thinking either Smashing Node.js or Node.js in Action, any recommendations?
22:46 < kez_> can't learn all this shit in my spare time only
22:46 < s5fs> kez_: just gotta write a ton of code, then it'll be easy
22:47 < s5fs> kez_: haha, I spent a few months writing node on my own before landing real node work. gotta pay to play and all that.
22:47 < kez_> what were you before that ?
22:48 < happyface> anyone know why this callback doesn't trigger? (4 lines of code) http://paste2.org/JjCdmVUx
22:48 < CoverSlide> male escort
22:48 < s5fs> CoverSlide: close, consultant
22:48 < ryannielson> Don't worry kaz_: I'm with ya. I'm just starting to learn myself. Redoing an app I did in Rails to be more realtime, so I figured it was as good a time as any to learn Node.
22:48 < ryannielson> kez_ *
22:48 < kez_> cool
22:48 < s5fs> kez_: i've been working mainly in java and c# for the past 2-3yrs, lots of jquery and light js mixed in. before that, more of the same and a boatload of php when that was still hotnezz.
22:48 < kez_> learned a few languages by myself , np , but node , OMG
22:48 < kez_> so hard
22:49 < ryannielson> kez_: It's really because it's another way of thinking. Callback driven code can get confusing sometimes.
22:49 < s5fs> kez_: how's your core javascript?
22:49 < s5fs> ryannielson: sure, but that's less of a node-specific concern and more just javascript in general
22:49 < kez_> s5fs: decent I would say , but not good enough to emite good node code , that's for sure
22:50 < ryannielson> s5fs: Oh most definetely. But most people that do JS dabble in a bit of simple client-side interaction, mainly with jQuery on top.
22:50 < ryannielson> s5fs: Whereas with node the apps will probably be larger and/or more complicated.
22:50 < s5fs> kez_: I strongly recommend reading some foundational javascript stuff first, shore up your knowledge of how the language functions. I recommend "javascript the good parts" by douglas crockford.
22:51 < kez_> I read that
22:51 < kez_> as I've said , I'm decent
22:51 < kez_> I'm not an jquery developer
22:51 < kez_> 'developer'
22:51 < s5fs> ryannielson: agreed, but I made the mistake of thinking I "knew javascript" from doing some light scripting and jquery work, but was pretty far from a "real" js developer.
22:51 < kez_> callbacks still give me pain though
22:51 < s5fs> kez_: ah good deal, you'll probably fare well then. my next suggestion is to read all the node api documentation, it's quick and fun to read.
22:52 < s5fs> this will help ground you, it's useful knowing what's in node core and what's coming from a module (like express)
22:52 < ryannielson> s5fs: Ya, I was in the same boat. I read the good parts and realised there were so many things I really didn't understand. I'm still not a huge fan of JS as a language, but I'm interested enough in giving Node a shot I can deal with it.
22:52 < s5fs> ryannielson: i don't know how I feel about js anymore, haha!
22:53 < s5fs> on one hand, you can really fly if you get comfortable, but otoh I miss the compile-time safety of java/c#
22:53 < zivester> does the `colors` package have a property that just returns the unmodified string?  say I want to do 'mystring'.[ someFlag ? 'inverse' : '???' ]
22:53 < ryannielson> s5fs: Ya, can't say the lack of compile-time safety will bug me too much, considering Ruby is my goto at this point. But I could see that being iffy from a C# perspective.
22:53 < s5fs> ryannielson: if anything, it seems really easy to write shitty js that breaks in mysterious ways. i've got a guy on my project who isn't as experienced with js and he's jamming shit into global scope all the time for convenience sake, because he can't be assed to learn node proper, haha!
22:54 < ryannielson> s5fs: ew :(
22:54 < kez_> I was that guy once :)
22:54 < s5fs> kez_: we all were at some point, haha
22:55 < kez_> I don't know , javascript might not be awsome or even a good language , but at least it's different
22:55 < kez_> I have fun learning it
22:55 < s5fs> kez_: same, i'm really enjoying myself as well. it's way more fun than java dev, that's for sure
22:55 < owen1> nodeup guys, pleases send an email in advance. maybe a few hours or even a day. i hate to miss the podcast.
22:56 < dypsilon> s5fs, no language will save one from beeing an idiot
22:57 < s5fs> dypsilon: true, you can write bad code in any language
22:57 < kez_> issue is I'm still trying to write Ruby/PHP/Python in Node
22:57 < kez_> I'm pretty sure I don't fully get the whole async deal
22:57 < s5fs> dypsilon: but forgetting a semicolon or a var statement or not using parens when creating a new object can have pretty wild results. that's not being an idiot, that's just being human.
22:58 < kez_> ok , I'll get to coding , have a nice night/day/whatever
22:58 < kez_> good chat room
22:58 < dypsilon> s5fs, that's what linting is for
22:58 < s5fs> dypsilon: right now i'm relying on jshint and different patterns for creating objects to avoid most of these issues, but that's a band-aid over the lang itself
22:58 < dypsilon> kez_, have fun
22:58 < s5fs> kez_: keep hacking, take care!
22:58 < dypsilon> s5fs, haha lets talk about bandaids: java eclipse!... I win!
22:59 < s5fs> dypsilon: ultimately, js is really powerful and with great power comes great responsibility or something, haha!
22:59 < s5fs> dypsilon: oh man, no doubt. you can't hardly write java nor c# without tooling, it gets hellish quickly
23:03 < happyface> (repost) anyone know why this callback doesn't trigger? (4 lines of code) http://paste2.org/JjCdmVUx
23:05 < dypsilon> happyface, request timeout?
23:06 < happyface> dypsilon: yeah if I set a timeout it times out, but in a browser it instantly responds
23:08 < dypsilon> happyface, ok i dont really know. wild guess: https problem?
23:10 < CoverSlide> crazy
23:10 < s5fs> happyface: doesn't work for me either, if that helps
23:10 < CoverSlide> maybe try curl
23:10 < s5fs> wget totally works
23:11 < CoverSlide> curl too
23:11 < CoverSlide> odd
23:11 < s5fs> indeed
23:11 < jdelgado> @s5fs Just joined, what are you trying to do?
23:12 < s5fs> jdelgado: happyface is having trouble with the request module, here's the code https://mtgox.com/api/2/BTCUSD/money/depth/
23:12 < happyface> s5fs: CoverSlide: I know right, super weird
23:12 < ryannielson> For node versions management, you you guys recommend n or nvm?
23:12 < s5fs> whoops
23:12 < s5fs> jdelgado: sorry, heres the link: http://paste2.org/JjCdmVUx
23:13 < CoverSlide> happyface: try adding a user-agent header
23:13 < jdelgado> @happyface I'm looking right now, sec.
23:14 < jdelgado> @ryannielson nvm
23:14 < CoverSlide> yep, user-agent it is
23:14 < Remy> .
23:14 < s5fs> ,
23:14 < happyface> interesting
23:14 < happyface> yeah, that seems to work
23:14 < jdelgado> @coverslide good call
23:14 < ryannielson> jdelgado: Okay, thanks for your input.
23:15 < CoverSlide> odd that it doesn't just send an error
23:15 < CoverSlide> just hangs there
23:16 < CoverSlide> but oh well, that's their problem
23:16 < jdelgado> Their server must have a bug when processing agents
23:16 < CoverSlide> yeah
23:17 < happyface> mtgox has some pretty questionable APIs, so I'm not surprised
23:17 < jdelgado> indeed
--- Log closed Wed Apr 17 00:00:37 2013
