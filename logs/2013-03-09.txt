--- Log opened Sat Mar 09 00:00:00 2013
--- Day changed Sat Mar 09 2013
00:00 < distilledchaos> sevenup: what exactly are you trying to do?
00:00 < ericelliott> I have a bunch of data that I want to inject into an index template that's rendered for every request. I've made middleware that builds up a req.data object that gets injected into the page template at render time. Is this a good strategy?
00:00 < sevenup> npm install jsdom 
00:00 < sevenup> getting error
00:00 < sevenup> python missing
00:02 < tester_testing> sevenup, if you set the path using the shell and set, the changed variable are only provided for the shell the variables are edited in, I recommend chaning the variable using the gui, and close and reopen the shells you have so that they may refresh the content of the variables
00:03 < tester_testing> FYI, you do know that you have to configure and install VS2010Express C++ as well for JSDOM to compile(AFAIK)
00:03 < tester_testing> get a VM and install jsdom in node under linux, is way easier
00:03 < tester_testing> no toolchains to configure, but use a vm
00:05 < sevenup> @tester_testing: working
00:05 < distilledchaos> ericelliott: what rendering engine are you using?
00:05 < distilledchaos> i usually just build up the data in the request handler
00:06 < distilledchaos> i assume expressjs or connect, too
00:06 < sevenup> thanks to distilledchaos and tester_testing , made my evening great 
00:06 < distilledchaos> occasionally, if there's a lot of data i'll do that
00:06 < distilledchaos> sevenup :D
00:06 < distilledchaos> i tried
00:06 < sevenup> :)
00:06 < ericelliott> distilledchaos: hulk-hogan
00:08 < ericelliott> distilledchaos: If I packaged all the different data pieces that need to be figured out into the same file it would be several hundred lines long and a little unwieldy to find your way around in.
00:08 < distilledchaos> ericelliott: yeah, i'd say that's a fine strategy
00:09 < ericelliott> cool. =)
00:09 < ericelliott> is it nutty to call it req.data? Seems like something that would be easy for any other middleware to stomp all over. =)
00:10 < ericelliott> maybe it should be req.appname instead? =)
00:14 < distilledchaos> yeah, you could do that
00:49 < zarac> Oh yeah! : )
00:59 < nicholasf2> hey isaacs Im trying to find a blog you posted, late last year I think, about how Node is focussed on building small modules using the callback pattern
01:44 < mikolalysenko> it is done!   https://github.com/mikolalysenko/cwise
01:44 < mikolalysenko> (well kind of anyway)
01:44 < mikolalysenko> higher dimensional array operations for JavaScript
01:50 < samholmes> How, with a very limited budget, can I test other platforms for browser support in my application?
01:59 < OTBS4Life> samholmes: crossbrowsertesting.com
02:03 < poincare101> Hey everyone. I'm working on my first Node app, and I'm confused as to when to block. Can I block on writing my response to the browser? Or, can I somehow use a callback for that too? 
02:15 < digitalfire> yo is it possible to install node.js on a shared server?
02:31 <@Nexxy> poincare101, never block
02:31 <@Nexxy> poincare101, unless you specifically need/want to
02:35 < MI6> joyent/node: isaacs windows-test-fixing * b98ccd4 : test: Fail faster in simple/test-cluster-bind-twice-v2  Crashing on windo - http://git.io/IgnvCw
02:58 < andrewreedy> Is there any database agnostic rest api for node
03:00 <@Nexxy> andrewreedy, you want a framework for building restful APIs?
03:00 < Sly> Nexxy: <3
03:00 <@Nexxy> Sly, <3
03:00 <@Nexxy> Sly, !
03:00 <@Nexxy> guess what I got today ;o
03:00 < andrewreedy> Nexxy, yes exactly
03:00 < Sly> What'd you get today?
03:00 <@Nexxy> andrewreedy, check out node-restify
03:00 < andrewreedy> okay i will thanks :)
03:00 <@Nexxy> http://instagr.am/p/Wm4hA7E7uf/
03:00 < MI6> joyent/node: isaacs master * 6e34dfd : test: Fail faster in simple/test-cluster-bind-twice-v2  Crashing on windo (+9 more commits) - http://git.io/NBz2aQ
03:01  * Sly pouts.
03:02 <@Nexxy> the coolest part is knowing that it shipped across the world with software I wrote on it!
03:02 < Sly> lolol
03:02 <@Nexxy> it's like a part of me is floating all over the earth
03:02 < Sly> LOL
03:03 < andrewreedy> Nexxy.. how about a framework that links the client to a database through a rest api .. like a rest api for mysql and mongo 
03:03 < MI6> joyent/node: isaacs master * 061a7dd : Merge remote-tracking branch 'ry/v0.8' into master  Conflicts: 	AUTHORS 	 (+7 more commits) - http://git.io/yVMZXw
03:22 < SBoudrias> andrewreedy: You mean like CouchDB ?
03:23 < andrewreedy> i don't mean a database .. i mean a rest api to access any database
03:24 < SBoudrias> well, I mean, CouchDB is communicating through rest API
03:32 < cloudbender> gnite
03:43 < rogd> is there any good online documentation about making a nodejs webserver that can serve static and php files url rewrite etc?
03:52 < AAA_awright> rogd: You mean using Nginx?
03:52 < rogd> no, not as proxy, if possible ?
03:53 < AAA_awright> What do you mean "not as proxy"?
03:53 < rogd> nodejs calling php directly
03:53 < andrew12> why do you want node to run php scripts
03:53 < AAA_awright> ... would involve forking a cgi
03:54 < rogd> node i dont have to bother rewiting lots of things
03:54 < AAA_awright> That's what e.g. Nginx is for
03:54 < AAA_awright> So you don't have to bother with that stuff
03:54 < andrew12> or some other web server
03:56 < rogd> so i can use nodejs to serve normal get and post requests though nginx  and do other scripts on nodejs in the same connection?
03:57 < AAA_awright> That's what a gateway is, it accpets requests and forwards them to another HTTP server or process like PHP, Node.js
03:57 < AAA_awright> Or serve static files
03:59 < rogd> node-php ?
03:59 < rogd> http-server
04:00 < AAA_awright> What?
04:00 < rogd> npm packages
04:00 < AAA_awright> Sentences please
04:01 < rogd> sorry, you can install node-php and http-server with npm, is that another way?
04:01 < AAA_awright> I'm not sure
04:02 < AAA_awright> Generally Nginx is the most efficent at serving files and handling requests
04:02 < AAA_awright> And then you can load-balance between Node.js processes
04:03 < Guest57896> mongo expert out there?
04:04 < AAA_awright> Guest57896: No but ask anyways
04:04 < Guest57896> need to dynamically create collections in mongo 
04:04 < Guest57896> I have been using mongoose
04:04 < Guest57896> but mongoose seems better suited for 'hard coded' schemas/collections
04:10 < andrew12> http://sackheads.org/~bnaylor/spew/away_msgs.html
04:22 -!- mode/#Node.js [+o TooTallNate] by ChanServ
04:25 -!- mode/#Node.js [+o piscisaureus__] by ChanServ
04:31 < MI6> joyent/node: isaacs master * 7c9ff8e : lint (+1 more commits) - http://git.io/30MFvQ
04:50 < fusiongrokker> anyone here using nano for couchdb and doing bulk deletes? trying to figure out what I'm doing wrong...
05:13 < fusiongrokker> nevermind, got it working
05:14 < MelkorNemesis> shit, it's weekend and I am getting off the bed so early because of stupid conference
05:21 < jguerrero> Anyone have a rough idea of how long v0.10 has been in development? - Rumor has it's going live Monday.
05:22 < harrisonm> jguerrero: see topic
05:23 < Havvy> jguerrero: Months?
05:23 < jguerrero> harrisonm: * jguerrero face palms self* :)
05:23 < Havvy> Right after 0.8.0 was released.
05:24 < jguerrero> havvy: thanks - 9 months then
05:25 < Havvy> Nine months? Really?
05:27 < jguerrero> havvy: 0.8.0 dropped on June 25, 2012
05:29 < Havvy> Then yeah...9 months.
05:30 < GoddeR> So I'm getting some errors when trying to install jsdom
05:30 < GoddeR> can anyone help? I'm pretty new, on windows using cygwin
05:31 < GoddeR> gypnpm ERR! error rolling back Error: ENOTEMPTY
05:31 < GoddeR> is the error i saw
05:44 < JamesMGreene> Heeeeeey Node.js core devs
05:44 < JamesMGreene> err
05:44 < JamesMGreene> NPM core devs
05:45 < JamesMGreene> How does NPM manage to successfully display colors in the Windows command prompt?
05:45 < JamesMGreene> Most people try to use ASCI colors or whatever and then I just get a bunch of annoying garbage characters w/o color
05:46 < JamesMGreene> But npm pulls it off with flying colors (oh snap)
05:46 < gluxon> JamesMGreene: https://github.com/marak/colors.js/
05:46 < dxeh> not just any colors, flying colors
05:47 < JamesMGreene> Yeah, I saw colors.js
05:47 < JamesMGreene> That's what Grunt uses
05:47 < JamesMGreene> but npm does not
05:55 < JamesMGreene> Looks like npm probably uses the "ansi" module from TooTallNate
05:56 < MI6> joyent/node: isaacs master * 43c1830 : Now working on 0.11.0 - http://git.io/TAex2g
05:57  * isaacs just forked v0.10 branch ^
05:58 < gluxon> JamesMGreene: isaacs would know :D
06:02 < JamesMGreene> isaacs What is npm's color voodoo magic to make it work on Windows command prompts?
06:02 <@isaacs> JamesMGreene: node translates \033[m style color codes to windows magic
06:02 <@isaacs> JamesMGreene: that's all in node, though
06:02 <@isaacs> JamesMGreene: also does \r, etc.
06:03 < JamesMGreene> Can you point me toward a reference?
06:03 < JamesMGreene> isaacs ^
06:03  * isaacs sleepytiem
06:03 <@isaacs> JamesMGreene: start in on tty.js and src/*.cc
06:06 <@TooTallNate> JamesMGreene: it happens in libuv
06:14 < JamesMGreene> oh shitty
06:15 < JamesMGreene> I wonder if Qt supports colors
06:15 < JamesMGreene> hmm
06:20 < squeakytoy> urgh!
06:20 < squeakytoy> Why cant i find a very easy websocket module for node.js
06:20 < squeakytoy> im getting burned all the time
06:24 < substack> squeakytoy: http://github.com/substack/shoe
06:24 < substack> it's just streams
06:24 < substack> I haven't even touched that code in months because it just works
06:25 < SomeoneWeird> squeakytoy, ws?
06:25 < Havvy816> substack: You should have called it stockit...
06:32 < squeakytoy> ws?
06:36 < Havvy816> Err, sockit
06:39 < squeakytoy> this what i hate
06:40 < squeakytoy> http://socket.io/#home <-- they have a 6 row example of a client
06:40 < squeakytoy> but when you implement it, you get a js error saing: require is not defined
06:40 < squeakytoy> [Break On This Error] 	
06:40 < squeakytoy> var client = require('socket.io-client');
06:41 < ningu> cool, so 0.10 was coming sooner than I thought...
06:42 < Stephen> squeakytoy: What version of node are you running?
06:42 < ningu> I wonder why the bufferSize option was removed.
06:42 < SomeoneWeird> <squeakytoy> [06:37:00] but when you implement it, you get a js error saing: require is not defined < dafak
06:43 < squeakytoy> Stephen, why wonder?
06:43 < Stephen> squeakytoy: Because require is a built in function in nodejs, so your comment makes no sense
06:43 < SomeoneWeird> ^ this
06:43 < squeakytoy> Stephen, but this is for the client? it has nothing to do with node
06:44 < SomeoneWeird> then you're doing it wrong
06:44 < squeakytoy> how come
06:44 < Stephen> Because the example you are pointing at is a node-based client
06:44 < SomeoneWeird> the example you're following is not for the client
06:44 < ningu> aha. highWaterMark is the functional equivalent of bufferSize.
06:44 < Stephen> not a browser based one
06:45 < squeakytoy> Stephen, really. Their example has HTML code like </script> and you saying this is client is node.js client?
06:45 < Stephen> squeakytoy: This can get a bit confusing at first, but remember that a "client" in node terms just means another instance of node. Typically you have to look specifically for "browser" when you want that kind of code
06:46 < ningu> there *are* browser implementations of require()
06:46 < Stephen> Indeed, there are
06:46 < ningu> but yeah, node != browser :)
06:46 < squeakytoy> this is obviously an example for a webpage http://pastebin.com/jaLkruta
06:47 < Stephen> substack (author of socket.io) does a damn good job at documentation. When reading his notes, when in doubt, you are doing it wrong.
06:47 < squeakytoy> You guys are smocking, if you think HTML and <script> is used in node.js applications
06:47 < squeakytoy> its obvious it should be on a web page
06:47 < lohkey> uhhh … pretty sure substack didn't write socket.io
06:48 < Stephen> Your right, my mistake
06:48 < Stephen> I confuse that and dnode sometimes
06:48 < squeakytoy> Stephen, you are doing it wrong
06:48 < SomeoneWeird> squeakytoy, no, you're doing it wrong
06:48 < Stephen> squeakytoy: The code on the left is for the server
06:49 < Stephen> squeakytoy: The code on the right goes in a browser
06:49 < squeakytoy> Stephen, i know that, i even said "client" in my message
06:49 < Stephen> The code on the right doesn
06:49 < SomeoneWeird> but you're using the wrong code
06:49 < Stephen> doesn't use the command "require"
06:49 < squeakytoy> <squeakytoy> http://socket.io/#home <-- they have a 6 row example of a client
06:49 < SomeoneWeird> there's no require() in the client code
06:50 < squeakytoy> probably
06:50 < squeakytoy> sometimes i just want to curl into a ball
06:51 < zarac> : )
06:51 < squeakytoy> take another profession.. ive heard.. being a doctor is less frustrating
06:51 < Stephen> LOL
06:51 < Stephen> squeakytoy: It's all good
06:52 < Stephen> as diskish as we may come off, we're here to help
06:52 < squeakytoy> computer developers can easily become doctors, its a downgrade for us :P
06:53 < Sven_vB> > diskish
06:53 < Sven_vB> interesting word :)
06:53 < SomeoneWeird> curl squeakytoy -o ball
06:54 < Havvy> squeakytoy: Doctors and Software Engineers use a different set of skills.
06:54 < Havvy> I could not become a doctor as easily as I became a software engineer.
06:54 < zarac> SomeoneWeird: lol ; )
06:54 < squeakytoy> whats so difficult with being a doctor? really?
06:55 < squeakytoy> its basically.. just to know a lof to things?
06:55 < ningu> um, you have to worry about whether the people you're treating die or are otherwise fucked up?
06:55 < lohkey> doesn't the average modern doctor spend more time reading charts then they do with their clients anyways?
06:55 < squeakytoy> thats the moral point. If i screw my module up, people can die as well.
06:55 < AAA_awright> A physician or a doctor?
06:55 < ningu> and if you think being a doctor is just about knowing information then you are confused
06:55 < squeakytoy> medicine
06:56 < ningu> squeakytoy: who is using your module that might die if it doesn't work?
06:56 < squeakytoy> ningu, tell me more
06:56 < ningu> nah, I don't feel trolls
06:56 < squeakytoy> ningu, whos gonna visit a doctor that might get you killed :P
06:56 < ningu> feed, even
06:56 < ningu> I suppose I don't feel them either
06:56 < Sven_vB> the most important parts seem to be mixed greek and latin vocabulary and being able to concentrate even if the state of a patient is really messy, esp. (partially) deceased
06:56 < ningu> hehe
06:57 < Stephen> someone remind me, what's the correct permissions to make /tmp read/write everyone but no execute?
06:57 < Sven_vB> also, test-driven treatment should not an option ;)
06:57 < ningu> 666
06:57 < ningu> well, you want the directory to be 777 cause if you can't exec the directory you can't create a file in it
06:57 < ningu> I don't think you can prohibit people from creating files that are +x in /tmp
06:57 < Stephen> well hell
06:58 < ningu> I may be wrong
06:58 < Havvy> If the directory is +w, you can write files to it.
06:58 < zarac> Isn't +x is for listing the contents of a directory.. ?
06:58 < ningu> can you open them if it's not +x?
06:58 < ningu> and if it's only +rw can you create +x files?
06:59 < Sven_vB> you could do evil smbfs to localhost tricks to make a directory where chmod +x on files has no effect
06:59 < Havvy> ningu: Yes.
06:59 < ningu> well, on OS X I just tried creating a directory chmod 666 and I can't create a file in it.
06:59 < Havvy> Just chroot the directory to itself.
07:00 < ningu> chroot doesn't work either
07:00 < ningu> unless I'm missing something
07:01 < ningu> chroot would be a fun word to pronounce out loud
07:02 < Havvy> ningu: Then pronounce it out loud.
07:02 < Havvy> What's stopping you?
07:02 < ningu> I was just making everyone else aware of the fact for their edification
07:03 < Havvy> Then s/would/is/  ;)
07:10 < Stephen> :-) I just got cloud9 working locally again
07:10 < Stephen> Thank god
07:20 < fusiongrokker> am I missing something or does nano not have a method to udpate a document? https://github.com/dscape/nano#table-of-contents
07:25 < fusiongrokker> I guess I can shoe-horn it in through bulk docs...
07:25 < fusiongrokker> o_O
07:26 < samholmes> I'm logging UA strings from visitors to my site, but how do I know which browser the UA strings are for?
07:35 < mgt576> samholmes: there are many modules for parsing UA strings in node.. e.g. https://github.com/3rd-Eden/useragent
08:41 < noocx> hi
08:51 < faceleg|sleep> best way to test for numeric-ness in node?
08:51 < faceleg|sleep> still !isNaN(parseFloat(n)) && isFinite(n);?
08:53 < Havvy> Change parseFloat to +
08:53 < Havvy> >> !isNan(parseFloat("5a"))
08:53 < Havvy> Where's the bot?
08:54 < faceleg|sleep> is it supposed to slap me for pasting code?
09:04 < Havvy> faceleg|sleep: No. It's supposed to evaluate the expression...
09:31 < deoxxa> i posit that the http module is broken
09:31 < deoxxa> or at least crazy
09:31 < deoxxa> see https://gist.github.com/deoxxa/5123616 for how
09:33 < deoxxa> note that there's no req or res errors
09:33 < deoxxa> seems like there should be
09:33 < deoxxa> that's 0.9.12, btw
09:35 < nanhapark> npm install nodeman -g
09:35 < nanhapark> node.js doc @Command-Line
09:35 < nanhapark> $ nodeman http
09:35 < nanhapark> that's it
09:36 < deoxxa> awesome, but i already kind of know most of the manual back and forwards
09:36 < deoxxa> http.IncomingResponse : stream.Readable, thus http.IncomingResponse should emit error when something goes wrong with the transport
09:37 < deoxxa> sorry, IncomingMessage
09:37 < deoxxa> unless http://nodejs.org/docs/v0.9.12/api/all.html#all_event_error or http://nodejs.org/docs/v0.9.12/api/all.html#all_http_incomingmessage are wrong
09:37 < deoxxa> in which case, the docs have a bug
09:37 < deoxxa> i'd say "the socket closed, leaving the request in a syntactically invalid state" counts as an "error receiving data"
09:43 < deoxxa> nanhapark: any more pearls of wisdom or snide remarks for me?
09:47 < nanhapark> asdfsadf
09:48 < lohkey> no way, thats your password too!?!?!??!
09:48 < lohkey> brb, wishing i had the statistics of the people trying to /ghost me right  now
10:11 < deoxxa> ok, so this seems a bit weird
10:11 < ganzuul> Stream all the things!!
10:11 < genazt> ?
10:12  * deoxxa amends example of broken-ass error handling
10:16  * deoxxa tries to reproduce
10:16 < deoxxa> (lol)
10:16 < SargoDarya> hey guys, any idea on how to fake http requests inside node.js? I tried sinon.js but apparently it fakeServer won't work there
10:17 < genazt> why would you try to fake a http server ? or an http client ?
10:17 < deoxxa> genazt: i'm not - i'm dealing with requests getting "lost" when network links drop
10:17 < deoxxa> oh
10:17 < deoxxa> my
10:17 < deoxxa> you weren't asking me
10:17 < SargoDarya> genazt: Because I have to
10:18  * deoxxa hides
10:18 < Ralt> SargoDarya: for testing purposes? or what?
10:18 < SargoDarya> Yes
10:19 < SargoDarya> I basically want to test the library I'm building without using real credentials for the API
10:22 < SargoDarya> Ok, just stumbled over nock. I'm going to give it a try
10:23 < simonx> need help with something real fast if someone can assist please and thank you
10:23 < SargoDarya> simonx just ask
10:23 < simonx> i need to insert specific code into an area but don't know how to do it right
10:23 < simonx> i have the code needed just need to know where to put it
10:24 < simonx> can I pm y ou SargoDarya?
10:24 < simonx> you*
10:24 < SargoDarya> Just put it on pastebin and ask in here
10:24 < simonx> its priv code
10:24 < simonx> ;/
10:24 < SargoDarya> hm..
10:24 < Ralt> generalize it. The "algorithm" isn't private
10:25 < simonx> i will upload the one script to pastebin
10:25 < simonx> and then another pastebin of what lines i want to include and where
10:25 < simonx> ok
10:29 < simonx> ok ready?
10:29 < simonx> I will pm it 
10:32 < simonx> ;/
10:32 < simonx> anyone else able to help maybe?
10:32 < simonx> Ralt?
10:32 < Ralt> no pm, too scared
10:33 < SargoDarya> seriously just keep it short and ask directly in the channel
10:33 < simonx> nobody is really active though
10:34 < simonx> [05:26] <simonx> http://pastebin.com/m5APCU1s
10:34 < simonx> [05:26] <simonx> I want to insert
10:34 < simonx> [05:26] <simonx> http://pastebin.com/hnYvMk0d
10:34 < simonx> [05:26] <simonx> into the first one
10:34 < simonx> [05:26] <simonx> I want the second want to be available by public use
10:34 < simonx> [05:26] <simonx> there's a lsting where it says "public command" where anyone can issue the cmd and it'll respond. that's what I want for the second url
10:34 < simonx> ^
10:35 < simonx> second one/url*
10:38 < genazt> someone works with the stackexchange api inside nodejs ?
10:39 < genazt> i get correct responses but the encoding is unknown (header says it should be plain)
10:39 < genazt> when i try to trigger the api call in the browser i get a gzip response which is displayed correct (json)
10:39 < faceleg|sleep> give us code example genazt 
10:41 < genazt> https://gist.github.com/geNAZt/5123785
10:41 < genazt> gives me by console.log(body): �......
10:41 < genazt> unknown chars
10:41 < genazt> but the headers says it should be application/json mime with utf8 encoding
10:43 < genazt> if i wrap a zlib gunzip call around it i get a zlib header error (incorrect gzip header)
10:44 < iksik> is it possible that these first chars are BOM?
10:44 < faceleg|sleep> genazt: add example body output to gist?
10:44 < genazt> in a response ?
10:45 < iksik> yup
10:45 < faceleg|sleep> So *is* running on IIS with full MS stack AFAIK
10:46 < genazt> output: http://www7.pic-upload.de/09.03.13/hd6pp2mgffav.png
10:47 < genazt> cant copy it since it isnt any valid encoding
10:47 < faceleg|sleep> site won't let me see the pi
10:47 < faceleg|sleep> pic*
10:49 < genazt> http://fabs-nas.dyndns.org:8080/node.png
10:49 < iksik> it looks like compressed or something :D
10:50 < genazt> i the browser (chrome) the api tells me it uses gzip 
10:50 < genazt> but it isnt gzipped (since zlib throws an error if i try to decompress it with it)
10:50 < genazt> i cant be deflate
10:50 < simonx> genazt
10:51 < simonx> are you knowledgeable with nodejs?
10:51 < genazt> yes
10:51 < simonx> i need to place something in an area which is probably really basic to you
10:51 < faceleg|sleep> genazt: Additionally, all API responses are compressed. The Content-Encoding header is always set, but some proxies will strip this out. The proper way to decode API responses can be found here.
10:51 < faceleg|sleep> http://api.stackexchange.com/docs/compression
10:51 < simonx> can you please help me for 1min in a pm?
10:52 < faceleg|sleep> simonx: no-one will help via pm (99% sure)
10:52 < simonx> i've had people help via pm
10:52 < simonx> just really varies on the person
10:52 < genazt> it isnt deflate (i doesnt error but it also produces a unknown encoding)
10:53  * faceleg|sleep drops jaw to the floor
10:54 < simonx> hah
10:57 < faceleg|sleep> genazt: seen this? http://stackoverflow.com/a/14793614/187954
11:01 < genazt> even if i tell the oauth to use the Accept Encoding header it is wrong oO
11:01 < faceleg|sleep> ask question on SO
11:01 < faceleg|sleep> with your code + screenshot
11:05 < genazt> first i will try the gzip things with the request lib
11:05 < genazt> then i will ask it on so
11:05 < genazt> thanks for your help
11:06 < faceleg|sleep> np good luck
11:09 < Ralt> is st-luke on irc?
11:11 < simonx> nm figured it out
11:13 < bmcgee> hey guys, i'm a bit of noob playing around with express. I'm working on a single page app with angular for the frontend. What I want to do is intercept all requests. If they're for a html page then regardless of the path I want to render the same index page (angular will detect the path and render view accordingly), otherwise let the request pass on through and get picked up by the router. Should i be looking at middleware for this?
11:14 < bmcgee> is this along the right lines? http://stackoverflow.com/questions/11038830/how-to-intercept-node-js-express-request
11:15 < genazt> the first example (with the app.use) would be the best for u
11:17 < bmcgee> genazt: cool thx
11:38 < asdf12> hey
11:54 < genazt> it works :D
11:54 < genazt> https://npmjs.org/package/passport-stackexchange
11:54 < genazt> many thanks :D
12:14 < faceleg|sleep> nice
12:15 < faceleg|sleep> were you using that before?
12:28 < djazz> A rubik's cube solver module. Why not? https://github.com/daniel-j/node-two-phase-algorithm
12:33 < asdf12> i thought the way the solve those were to peel off the color stickers and restick them on right
12:43 < Sven_vB> i'm trying to migrate my gitosis server, good time to change software. any recommendations?
12:51 < roxlu> hey guys!
12:52 < roxlu> I'm trying to setup a npm module. In my source dir I do: `npm link`, then I go into my application dir where I want to use this module and do: `npm link [name of module]` 
12:52 < roxlu> but it can't find my module somehow. How can I debug this?
13:03 < djazz> aw, github is down ;\
13:04 < djazz> http://www.isup.me/github.com
13:05 < genazt> okay then its not only me :D
13:06 < genazt> https://status.github.com/messages
13:06 < genazt> "Anything okay" :D:D
13:07 < genazt> is back again
13:09 < genazt> what is the best way to ask a user for his email ? with passport ?
13:09 < genazt> i have a twitter auth which doesnt give me the users email
13:09 < genazt> but i need the email to merge the accounts together
13:19 < be5invis> Hey
13:19 < be5invis> Is Anyone here?
13:22 < be5invis> I'd like to make a javascript code-generation library, IL based.
13:22 < be5invis> Are there any information about generating SOURCE from IL?
13:26 < mscdex> darn... no mac addresses for 0.10
13:32 < asdf12> for native modules , is there a way to get argument values other than int or double?
13:32 < asdf12> (ie: a string)
13:45 < FesterCluck> Hey hey
13:46 < FesterCluck> So v0.9 is running on par now... streams too?
13:46 < Mariam> Hello, I want to make a multiplayer game ( server / clinet(mobile) )  that needs to search a big database on the server and then send results to mobiles and so on,  I am searching for solution I don't know Node.js yet,  will it be suitable for me ??
13:47 < FesterCluck> Sounds like the db is the bi=ottleneck
13:47 < FesterCluck> Node could definitely do this.
13:48 < FesterCluck> Can you explain more about the db?
13:52 < BlackFate> Mariam, mongodb and mysql have non-blocking drivers for node
14:00 < zarac> Anyone got experience with dust.js using partials? If i specify the template _show_ it resolves to _"show.dust"_ and not _"show.dust.html"_, which is what they resolv to using res.render(<name>, ..). (I'm using express + consolidate).
14:01 < zarac> In other words.. {>show/} tries to find template show.dust as opposed to show.dust.html.
14:11 < Industrial> Say I write tiny services some of which may represent websites/hostnames. How do I manage starting/stopping whole environments and versions of environments/servers (dev/test/acc/prod/etc) and also manage what happens when services fail. I guess the correct way to respond there is to short cirquit to a 500 response?
14:13 < Industrial> It'd be nice to have a cmdline program that parsers a json config of an environment and acts on it (start/stop/restart). I'm not sure what happens if a network is supposed to span multiple hosts.
14:13 < Industrial> parses*
14:19 < genazt> you can use nconf for this
14:20 < genazt> and you switch the files or the env variables if you want other envs
14:20 < genazt> nconf takes care about files, args and env variables if you want
14:22 < genazt> but when a service fails you need a fallback (infront of the application node) so it can catch any request even if the node application isnt up (crashed)
14:32 < mikolalysenko> Out of curiosity, is there any standard implementation of network flow on npm?
14:34 < jasper^off> hej guys, what would be the best way to split a .js file so it won't become 1 huge file?
14:36 < genazt> mikolalysenko, no there is no "standard" but some "good to go"
14:36 < genazt> a reverse proxy like haproxy or nginx or varnish infront of node is a good way to go
14:41 < genazt> jasper^off, a good way to split up js files is to use classes in javascript
14:41 < genazt> and for each class one file
14:41 < genazt> and a file which includes the classes and builds up the application with it
14:42 < jasper^off> yeah that's what I figured...but for example...I'm using socket.io...and I wanna define a lot of listeners... to these sockets..
14:42 < jasper^off> but I don't want to add all the listeners in 1 big file
14:43 < genazt> then you should use a pattern that is called dependecy injection
14:43 < genazt> so you move the listeners out into files
14:43 < genazt> per listener one file
14:43 < genazt> and you create the socket.io server and then you di them into the listener files
14:43 < jasper^off> or per group of listeners?
14:43 < jasper^off> is taht also possible?
14:43 < genazt> yes it is
14:44 < genazt> how you split it up its up to you
14:44 < jasper^off> genazt what is common practise?
14:44 < jasper^off> to do this nicel?
14:45 < genazt> well the best would be a folder named listeners
14:45 < genazt> and in this a index.js which exports a function which takes the socket io app as parameter
14:46 < genazt> and in this function you require the other listeners in which you di the socket io app
14:46 < genazt> and in the listeners you append your code into the socket io app
14:47 < jasper^off> hmm
14:48 < jasper^off> genazt do you know if there are examples somewhere of how I should set that index.js file up?
14:48 < jasper^off> I'm still discovering node :P
14:48 < genazt> its easy :D
14:49 < jasper^off> maybe for you :P
14:50 < jasper^off> but genazt....some listeners should be added dynamically as soon as another listener is succesfully called...
14:51 < jasper^off> for example my listener called login will add other listeners to the socket on succes...including a logout listener
14:51 < jasper^off> as soon as the logout listener is pressed these 'new' listeners should be removed again
14:52 < genazt> http://hastebin.com/menomulome.js
14:54 < jasper^off> genazt that looks really interesting
14:54 < jasper^off> and like a perfect way to set it up
14:54 < jasper^off> but would what I mentioned be possible with it?
14:54 < jasper^off> to have a function in test.js ..add more listeners which might be in a different file again?
14:54 < genazt> why would you try to dynamicly add listeners ?
14:55 < genazt> you mean to have many event listeners to you socket.io events ?
14:55 < jasper^off> genazt like I want to add listeners for all kind of socket commands issued
14:55 < genazt> but you use socketio namespaces ?
14:55 < genazt> or you dont use them ?
14:56 < genazt> even if not its not a porlbme
14:56 < genazt> you can use this pattern for events also
14:56 < genazt> i have built a namespace loader with it in this gist
14:56 < jasper^off> I do it like this: 	io.sockets.on('connection', function(socket) { socket.addListener('user:login', function(data, callback) {}); }); 
14:56 < jasper^off> for example
14:56 < jasper^off> and where that socket.addListener is...there are like 20 more atm
14:57 < genazt> io.sockets.on('connection', function(socket) { socket.addListener('user:login', require('listener/user/login.js'); }); 
14:57 < genazt> and you are ready :D
14:57 < genazt> module.exports = function(data, callback) {}; in listener/user/login.js
14:58 < jasper^off> hmm :P
14:58 < jasper^off> that's even easier yes..
14:58 < jasper^off> but then I would have a seperate file for each listener
14:59 < jasper^off> and there would be no way to group them
14:59 < jasper^off> or I would have to make multiple exports?
15:00 < genazt> http://hastebin.com/lecimuyava.js
15:00 < genazt> it would look like this
15:00 < genazt> you can name your exports
15:02 < genazt> like this: http://hastebin.com/pepuwiyoke.js
15:03 < jasper^off> the actual splitting into multiple files is rather nicely though
15:03 < jasper^off> if you can use subdirectorys like that :P
15:03 < genazt> you can
15:03 < jasper^off> I'll try to set it up
15:03 < jasper^off> thanks for the help so far genazt
15:03 < genazt> np
15:04 < MI6> joyent/node: isaacs v0.10 * 80472bc : domain: Fix double-exit on nested domains  Minor oversight in fix for #49 - http://git.io/lfEFVw
15:04 < jasper^off> btw if you require a file it always searches for the index.js genazt ?
15:05 < genazt> only if the target is a directory
15:05 < genazt> first node tries to append a .js
15:06 < genazt> then a /index.js
15:06 < genazt> then it throws and error :D
15:06 < jasper^off> ah ok
15:09 < jasper^off> but genazt would there be a possibility to dynamically add listeners then?
15:09 < jasper^off> in  my 'login listener' ?
15:09 < jasper^off> or is that a weird way to set it up?
15:09 < jasper^off> I considered it an extra layer of security..
15:09 < jasper^off> but maybe that's wrong..
15:09 < genazt> well you should add all listeners
15:10 < korilo> just donated to ternjs can't wait to see that editor out!
15:10 < genazt> and then if a listener gets called where the user doesnt have rights to give it a error back
15:10 < asdf12> link?
15:10 < korilo> asdf12, http://www.indiegogo.com/projects/tern-intelligent-javascript-editing
15:10 < genazt> so you know the listener is there and you know what will happen if you call al listener that you havent enough rights for
15:11 < genazt> and you can prompt the user
15:11 < korilo> that's the most amazing js editor ever seen so far..imo of course
15:11 < jasper^off> yeah that's true genazt
15:12 < asdf12> just to point out in genazt example
15:13 < asdf12> you shouldn't require('login') over and over again
15:14 < genazt> and why ?
15:14 < jasper^off> asdf12 how would you do it then?
15:14 < genazt> you could cache it in an variable
15:15 < genazt> but its shitty cause nodejs has an cache for required modules
15:16 < asdf12> it saves you a look up
15:16 < asdf12> on the require.cache
15:16 < genazt> which costs nothing :D
15:32 < codingstream> does anyone have any recomendations for online js docs for things like String and Array
15:33 < DarkArgon> https://developer.mozilla.org/en-US/docs/JavaScript
15:35 < jasper^off> genazt I guess I could do it the same way if I wanted to make database functions available..
15:39 < genazt> you can do it with whatever you want
15:39 < genazt> i use it for express routes, socketio namespaces, database connections, configure scripts
15:43 < jasper^off> hm genazt....but now you will have several socketio.addListener("connection", function(socket) { calls...
15:43 < jasper^off> while this socket object be shared throughout these files now or?
15:44 < genazt> no
15:44 < genazt> normally you only have one connection listener
15:45 < genazt> and when a new connection establishes you append the new listeners to them
15:45 < jasper^off> yeah exactly..
15:45 < jasper^off> so this will still work then?
15:45 < jasper^off> with multiple listeners?
15:45 < genazt> yes
15:45 < genazt> wait
15:46 < jasper^off> I used to set some socket.variables....which I could use throught all listeners...
15:46 < genazt> how would you setup a listener ?
15:46 < jasper^off> but I guess this aint possible anymore then?
15:46 < genazt> can you show me a example ?
15:46 < jasper^off> sure
15:46 < jasper^off> I set it up the way you said
15:46 < genazt> yes but i think you have a little "error" in it
15:47 < jasper^off> http://paste.ubuntu.com/5599214/
15:47 < genazt> if you append more than one connection listener
15:47 < jasper^off> and I have another file that does this :P
15:47 < genazt> no that should be ok
15:47 < jasper^off> http://paste.ubuntu.com/5599215/
15:47 < genazt> it appends one connection listener
15:47 < jasper^off> that's another file..
15:47 < jasper^off> no it appends 2
15:47 < jasper^off> :P
15:47 < genazt> okay now i know what you mean
15:48 < genazt> that is wrong
15:48 < genazt> how does your index look like ?
15:48 < jasper^off> yeah..that's what I figured also
15:48 < jasper^off> those are my 2 index.js in the subdirs
15:48 < genazt> you should accept connections and then load all listeners
15:48 < jasper^off> http://paste.ubuntu.com/5599219/
15:48 < jasper^off> that's my main index.js
15:48 < jasper^off> ah ok...so I should add it there..the addconnection listener
15:48 < genazt> one moment
15:48 < jasper^off> and then require those 2
15:48 < jasper^off> I see what you mean
15:49 < genazt> i will correct it for you so you will see what i mean
15:49 < jasper^off> I fixed it
15:49 < jasper^off> :P
15:49 < genazt> http://hastebin.com/nubefoqeye.js
15:50 < jasper^off> http://paste.ubuntu.com/5599224/
15:50 < jasper^off> that's how I made it
15:50 < genazt> http://hastebin.com/tunocujepo.js
15:50 < genazt> and so on
15:50 < genazt> now it right :D
15:50 < genazt> its*
15:50 < jasper^off> yeah...and now all listeners have the same socket object
15:51 < genazt> but you must fix the variable names
15:51 < genazt> yes
15:51 < jasper^off> which variable names?
15:51 < genazt> function(socketio) {
15:51 < genazt>     socket.addLis
15:51 < genazt> unction(socket) {
15:51 < genazt>         require('./system')(socketio);
15:51 < jasper^off> ah yes
15:52 < genazt> but the flow is right now
15:52 < genazt> if you fix this it will run like a harm :D
15:52 < jasper^off> I also need to add more variables genazt ...because all these listeners have access to database functions :P
15:53 < genazt> yes but that shouldnt be a problem :D
15:54 < jasper^off> I also need to pass the socket variable now :P
15:55 < jasper^off> oh it was wrong still genazt :P
15:56 < jasper^off> hmm genazt one last question
15:56 < jasper^off> if I have socket.addListener("user:create", require("./create"));
15:56 < jasper^off> how can I then supply socket as a variable..so I can use it in that other module?
15:57 < jasper^off> I can'tjust add (socket) behind it right?
15:59 < genazt> you can but then you have to change the export of the create file
15:59 < jasper^off> what would it look like then?
15:59 < jasper^off> because the other 2 variable are supplied by the socket
15:59 < jasper^off> data and callback
16:00 < genazt> module.exports = function(socket) { return { "login": function(data, callback) { } } };
16:00 < genazt> for example
16:00 < jasper^off> ah 
16:00 < jasper^off> ugly :(
16:00 < genazt> better than one big file :D
16:01 < jasper^off> why does it need the "login": genazt ?
16:03 < jasper^off> can't it look like this genazt: http://hastebin.com/cedoguvowu.lua ?
16:04 < genazt> the login thing is your key to use
16:04 < genazt> but now you should cache the file
16:04 < genazt> like var create = require('./create')(socket);
16:05 < genazt> socket.addListener("create:login", create.login);
16:05 < genazt> or something like that
16:09 < jasper^off> why is that genazt ?
16:09 < jasper^off> that it should be cached now?
16:10 < genazt> well if you dont cache it up you can run into a memory leak cause you create many references on the socket object
16:10 < genazt> and it runs a bit faster then
16:11 < jasper^off> ah I see what you mean genazt....the require returns a create function..
16:11 < jasper^off> which you can then call
16:11 < genazt> exactly
16:12 < jasper^off> I'll have to give it some fancy name then genazt
16:13 < jasper^off> otherwise you'll get create.create...
16:13 < jasper^off> which is fugly :P
16:13 < genazt> :D
16:13 < jasper^off> create.fire!
16:14 < jasper^off> sounds good :P
16:14 < genazt> module.exports = function extremeAwesomeCreator()
16:14 < genazt> :D
16:15 < jasper^off> :p
16:15 < genazt> afk
16:23 < MI6> joyent/node: Andreas Madsen v0.10 * 7becf15 : timers: consistent this keyword in setImmediate  When calling setImmediat - http://git.io/0TybVg
16:46 < Arkkis> What would you recommend for generating documentation of your module?
16:47 < Arkkis> I've tried jsdoc, and I cant get my head wrapped around how it's supposed to handle requires and such. I have no "Class" structure ala Java, this is JavaScript.
16:47 < Arkkis> I've checked out dox, but it only generates json files with no html documentation, wtf?
16:47 < Arkkis> I've tried docco, but it's not for documenting the API really, it's for documenting the full code and I do not think that I need that
16:49 < Arkkis> So, what is it that you recommend for generating documents on "public" functions that your node.js module serves?
16:50 < MI6> joyent/node: hc v0.10 * 5757ce4 : http: check if incoming parser has already been freed  Fix #4948  This ad - http://git.io/ZW4grw
16:52 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
17:07 < spolu> Hi! I'm looking to pass a C++ function as callback to a javascript function from an add-on. Anybody know good resources to do so?
17:25 < Eigen_> is there any way
17:25 < Eigen_> I can add nxc syntax highlighting to sublime text?
17:25 < MI6> joyent/node: isaacs v0.10 * 12713c3 : win/msi: Fix typos (+1 more commits) - http://git.io/CKmrxQ
17:29 < MI6> joyent/libuv: Bert Belder master * f59dc22 : win: fix potential HANDLE corruption due to incorrect cast  Closes #738. - http://git.io/9prfZg
17:33 < shmoon> i need to get documents on UNIQUE user_id, i want to get ALL fields. it doesnt matter, can choose random unique documents, how do i do it ? - mongoose
17:34 < sevenup> hi there, we tried: npm install -g jsdom                    and get the following :      npm ERR! contextify@0.1.4 install: `node-gyp rebuild`                  npm ERR! `cmd "/c" "node-gyp rebuild"` failed with 1
17:43 < sevenup> we try : npm install contextify                   and get the following :      npm ERR! contextify@0.1.4 install: `node-gyp rebuild`                  npm ERR! `cmd "/c" "node-gyp rebuild"` failed with 1
17:45 < sevenup> hey poorman, I am looking for a rich woman
17:52 < sevenup> did anyone install jsdom recently ( using up to date node.js version)?
17:56 < sevenup> do we have to downgrade node.js when we want to install jsdom?
18:04 < sevenup> g2g    cya later   bye, bye          ciao
18:13 < lacrymology> hello, I'm about to start my first node project, an internal browser-based app based on backbone, mongoose, and express. But I've never really used node before. I've got some browser-side js experience, and I'm not afraid of new languages, but I'm missing some essentials.
18:13 < lacrymology> sorry, not start my node project. Start working on an existing one
18:14 < jasper^off> ok
18:14 < jasper^off> good luck :P
18:15 < jasper^off> you got a question also lacrymology ?
18:15 < lacrymology> so I see this: express = require('express'), I understand what's the use of this, but I'd like to understand what's going on. Where is this `require` defined, why is it globally present, and how does it know what 'express' is?
18:18 < jasper^off> only if the target is a directory
18:18 < jasper^off> <genazt> first node tries to append a .js
18:18 < jasper^off> <genazt> then a /index.js
18:18 < jasper^off> <genazt> then it throws and error :D
18:18 < lacrymology> is there a way to get help from the REPL?
18:18 < lacrymology> jasper^off: ok, so this works because node_modules/express/index.js works, and that's standard.
18:19 < lacrymology> s/works/exists/
18:19 < lacrymology> and require? is it an extension, or is it core? do you call core functions `stdlib` or `stl` or something similar in node.js?
18:20 < shesek> lacrymology, see http://nodejs.org/api/modules.html
18:20 < jasper^off> The core modules are defined in node's source in the lib/ folder. Core modules are always preferentially loaded if their identifier is passed to require()
18:21 < rickibalboa> If the modules installed via npm then you don't need a direct folder name or a .js file, if the module has a proper package.json require will pick up the name and use the main file defined in the package.json
18:22 < shesek> lacrymology, require is defined in the "module" module, and "magically" exposes everywhere
18:22 < lacrymology> fantastic. Thanks
18:22 < rickibalboa> In that case express, if you were just including the express js code without it being installed by npm you'd probably have to do something like require('lib/express/main.js') or whatever express's main file is
18:22 < shesek> the docs I linked to explain it pretty well
18:22 < lacrymology> shesek: I'm on that
18:23 < shesek> rickibalboa, './lib/express/...'
18:23 < rickibalboa> yeah, that rather.
18:23 < rickibalboa> I always forget the ./
18:24 < lacrymology> one last question. The project I'm running is based on Node Cellar http://nodecellar.coenraets.org/ and it seems to be working (showing empty dbs, but not throwing errors) even though I haven't installed mongodb yet. Can someone explain that?
18:24 < lacrymology> no
18:24 < lacrymology> one more
18:24 < lacrymology> how does one debug?
18:24 < lacrymology> server side
18:25 < lacrymology> I come from python so I'm used to insert breakpoints in the code. I imagine it's got something to do with that
18:25 < mrvisser> lacrymology: I've used node-inspector before, but nothing has beat good 'ol console.log for me personally
18:26 < lacrymology> mrvisser: but I want breakpoints and in-frame inspection! printing is not *really* debugging
18:26 < mrvisser> not to say I don't like debuggers, but too many moving parts in node-inspector has just made console.log easier for my use. When using java, I use a debugger instead of System.out
18:26 < rickibalboa> Aye you're going to end up all over the place with breakpoints with it being async I'd imagine
18:26 < mrvisser> lacrymology: right, I know. Which is why I offered node-inspector, which will give you that
18:26 < lacrymology> mrvisser: thanks, I'll look into that
18:26 < mrvisser> np
18:27 < mrvisser> rickibalboa: yea it can be tricky
18:27 < lacrymology> rickibalboa: that's how debugging js on the browser side ends up being, yes.. you need to figure out the right callback where you want your breakpoints to be. In my experience learning how to do that makes a quality leap in programmer productivity
18:28 < rickibalboa> Especially when your coming from python you really need to keep that in mind, as a beginner a while back I was sometimes stumped for hours wondering why code doesn't work, because I was writing in a synchronous manner
18:28 < rickibalboa> Yeah true
18:29 < lacrymology> rickibalboa: I know, but I've debugged my fair share of browser-side js and I can imagine how it's going to be. Your stacktraces never really tell you anything, and you've got to figure stuff out from context =)
18:29 < lacrymology> anyways, I'm gonna read that, thanks all
18:29 < rickibalboa> Yea seems like you should be okay if you've wrote javascript before then.
18:30 < lacrymology> I've never seen (and always missed) a modular system, though. I think I'm gonna like this `require` thing
18:32 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:32 < lacrymology> I'm using an O'Reilly book "Building Node Applications with MongoDB and Backbone.js" and while it glosses over everything, and even maybe says where stuff is coming from, it's hard to keep track what comes from where when everything's new
18:37 < korilo> is there a book for that too?
18:37 < korilo> lol
18:38 < lacrymology> what happens if I don't use the `var` keyword in a module? does the var become global?
18:38 < lacrymology> korilo: yeap. It's.. quick.
18:38 < korilo> nice
18:39 < korilo> angular rocks btw! :D
18:39 < lacrymology> it guides you through building a.. twitter, kind of thing?
18:39 < lacrymology> angular?
18:39 < korilo> oh
18:39 < korilo> angularjs
18:56 < lacrymology> what's the point of the 'name' element in a package.json, if it's require name is defined by it's path? http://nodejs.org/api/modules.html#modules_folders_as_modules
18:58 < lacrymology> typeof({} + 0) >> string?
19:00 < DarkArgon> >> typeof({} + 0)
19:00 < DarkArgon> hm.. where is the bot?
19:00 < iksik> coffe break -_-
19:13 < lbdremy> hi, does anyone know a tool generating a website based on the code source (JSdoc, package.json, README, CHANGELOG etc) of a module?
19:21 < pyrotechnick> substack: \o/ https://github.com/substack/coffeeify
19:21 < pyrotechnick> TYVM
19:23 < jasper^off> hej guys, getting the following error:
19:23 < jasper^off> throw new Error('addListener only takes instances of Function');
19:23 < jasper^off> is this not allowed: http://paste.ubuntu.com/5599841/ ?
19:23 < pyrotechnick> socket.addListener("system:read", read.exec);
19:24 < pyrotechnick> drop the ()
19:24 < jasper^off> pyrotechnick ? what if it accepts parameters?
19:24 < jasper^off> pyrotechnick does that really make a difference?
19:24 < jasper^off> () or not?
19:24 < pyrotechnick> yes
19:25 < pyrotechnick> without () the method itself becomes the callback
19:25 < pyrotechnick> with (), the return of the method becomes the callback
19:25 < pyrotechnick> comprende?
19:25 < jasper^off> hmm
19:25 < jasper^off> yeah I get it
19:27 < Sven_vB> pyrotechnick, i like your nick, ingenious. =D
19:29 < MI6> joyent/libuv: Bert Belder master * 5462dab : win/tcp: don't enable iocp sync bypass when iocp emulation is used  When  - http://git.io/aWTPPg
19:30 < Sven_vB> so is coffeeify just browserify for coffeescripts? i hoped it would translate my ecmascript to coffeescript
19:30 < pyrotechnick> js2coffee.org
19:31 < Sven_vB> thanks!
19:31 < pyrotechnick> yw
19:33 < high5> just installed n :                    npm install -g n
19:34 < high5> install looks good
19:34 < high5> but command n doesn't work
19:34 < pyrotechnick> high5: do other global npm binaries work?
19:34 < pyrotechnick> did you restart your terminal, etc?
19:34 < Tobsn> anyone here with an US itunes account on a mac? need 5 seconds ;)
19:35 < Tobsn> high5, sudo?
19:35 < high5> socket.io works (when that is an example here, don't know so much about binaries)
19:35 < pyrotechnick> socket.io doesn't have a binary
19:35 < high5> windows xp
19:35 < pyrotechnick> oh i have no idea about windows
19:35 < JamesMGreeneAway> npm uses a local cache, right? e.g. if I already installed the latest version of a module, it is just going to copy the npm-cached copy into my local dir
19:35 < pyrotechnick> GLHF
19:36 < high5> ok thx man
19:36 < pyrotechnick> on OSX you might get that problem from either npm's install dir not being in your path or not restarting terminal
19:36 -!- mode/#Node.js [+o TooTallNate] by ChanServ
19:36 < pyrotechnick> JamesMGreeneAway: npm cache ls
19:37 < JamesMGreeneAway> And, if that holds true, then will the `install` script hook in a `package.json` file run (again)? I'm assuming yes. If so, is there another script hook that will allow me to do something just the first time the module is pulled down rather than every time it is installed into a local dir
19:37 < pyrotechnick> https://npmjs.org/doc/cache.html
19:38 < pyrotechnick> https://npmjs.org/doc/scripts.html
19:39 < pyrotechnick> JamesMGreene: doesn't look like it. but you might be able to hack some kind of lock file you know?
19:40 < JamesMGreene> cuz preinstall sounds like it would run before the install, so the package's folder wouldn't exist yet
19:40 < pyrotechnick> something like this
19:40 < JamesMGreene> basically I want to download something on the first machine install but not when npm gets 304 and just copies the cached one
19:41 < JamesMGreene> cuz downloading it on every install when it is already downloaded is really annoying
19:41 < pyrotechnick> read that last link - https://npmjs.org/doc/scripts.html - it talks about this
19:41 < pyrotechnick> though depending on what you're actually trying to achieve you might need to hack something up
19:42 < pyrotechnick> it's sort of a violation of npm though
19:42 < pyrotechnick> is this a public package?
19:47 < JamesMGreene> yup
19:47 < JamesMGreene> Well
19:47 < JamesMGreene> sorry, no, not published yet due to trying to resolve a name conflict
19:48 < Jake562> hello fellas, can anyone point me in a good direction to learn some javascript so i can contribute to the node.js project?
19:48 < JamesMGreene> But basically it works the same as the "phantomjs" published package: on install, download the parallel version of the PhantomJS executable for this OS, unzip it, and put it into a sub-dir; then the module just offers up a path to that binary
19:48 < pyrotechnick> webplatform.org
19:48 < pyrotechnick> yeah im using that
19:49 < JamesMGreene> exactly
19:49 < pyrotechnick> havent looked into how it works
19:49 < JamesMGreene> but every time you install it into another repo it downloads AGAIN
19:49 < pyrotechnick> although its written kinda dodgy i had to patch it a bunch
19:49 < JamesMGreene> Really? Works solid for me
19:49 < pyrotechnick> is this "phantom"
19:49 < JamesMGreene> no
19:49 < pyrotechnick> the wrapper?
19:49 < JamesMGreene> "phantomjs"
19:49 < pyrotechnick> ahh
19:49 < pyrotechnick> the little wrapper one
19:49 < pyrotechnick> like just for installing it?
19:49 < JamesMGreene> yup
19:49 < JamesMGreene> bb in a few, gotta run an errand
19:50 < jasper^off> guys, what is wrong with this: http://paste.ubuntu.com/5599935/ ?
19:50 < jasper^off> I'm getting the error:  has no method 'getDates'
19:50 < Tobsn> exec a function?
19:50 < Tobsn>  /method
19:50 < genazt> re
19:51 < genazt> jasper^off, :D
19:51 < genazt> how is the file being written ?
19:52 < jasper^off> hej genazt!!!
19:52 < jasper^off> :P
19:52 < jasper^off> genazt I'll make a pasty of it...with the files I use
19:53 < genazt> i dont know if node lowercases all modules
19:53 < Tobsn> i think it did
19:53 < genazt> cause i havent seen a modulename with captial letters
19:54 < jasper^off> http://paste.ubuntu.com/5599945/
19:54 < jasper^off> hmm genazt...i wanted to keep it the same as my vars...first letter small...afterwards capital...
19:55 < genazt> does it work for the sqlFunctions ?
19:56 < jasper^off> yeah I think it does
19:56 < jasper^off> actually
19:56 < jasper^off> http://paste.ubuntu.com/5599952/
19:56 < jasper^off> that's the error
19:56 < genazt> i have a problem with the error
19:57 < jasper^off> I think i found it genazt
19:57 < jasper^off> give me 1 second
19:57 < jasper^off> see if it's the case
19:57 < genazt> a
19:57 < genazt> i see the error
19:57 < genazt> its not in this file
19:57 < genazt> its how you access the getDates function
19:57 < jasper^off> that's what I thought
19:57 < genazt> or how you try to resolve it
19:58 < genazt> at Object.module.exports.exec.functions.dates (/home/jasper/server/listeners/system/read.js:85:32)
19:58 < genazt>     
19:58 < jasper^off> statics.system.getDates(function(result) { asyncCallback(null, result); });
19:58 < genazt> this function does try to do something like require('xyx').getDates
19:58 < jasper^off> that's what it does
19:58 < genazt> how does it get set ?
19:58 < genazt> the statics.system ?
19:59 < jasper^off> I'll make  pasty
19:59 < genazt> kk
20:00 < spolu> Hi! I'm looking to pass a C++ function as callback to a javascript function from an add-on. Anybody know good resources to do so?
20:00 < jasper^off> genazt: http://paste.ubuntu.com/5599960/
20:00 < jasper^off> the actual call is on line 121
20:02 < MI6> joyent/node: isaacs windows-test-fixing * 2098c4b : uv: Upgrade to 5462dab8 - http://git.io/7bYzcg
20:03 < genazt> i think the statics.js is where the error comes from
20:03 < genazt> cause it sets the system variable wrong
20:03 < genazt> it doesnt do require('./getDates')();
20:03 < genazt> it only does require('./getDates');
20:03 < genazt> i think
20:03 < jasper^off> hmm
20:04 < jasper^off> but genazt...the index.js in statics exports a named function?
20:04 < sshaginyan> Hey guys I'm trying to do this example http://dailyjs.com/2011/05/27/lwebgl-jsonselect/ JSONSelect but when I require jsonselect my object does not contain the function .match. Am I doing something wrong?
20:05 < jasper^off> return { "getDates": getDates.exec }
20:05 < genazt> and how is the getDates is set ?
20:06 < jasper^off> in which file do you mean?
20:06 < genazt> statics
20:06 < jasper^off> that should be in here: http://paste.ubuntu.com/5599945/
20:07 < genazt> var getDates = require('./getDates');
20:07 < genazt> var getDates = require('./getDates')();
20:07 < genazt> and it works :D
20:07 < genazt> in //statics/system index.js
20:09 < jasper^off> weird
20:09 < jasper^off> I don't understand why..
20:09 < genazt> because you do module.exports = function() { return { "kewq
20:09 < genazt> if you do module.exports = { "jkejwk"
20:10 < jasper^off> actually it didn't fix it genazt
20:10 < genazt> you dont need to require('./getDates')();
20:10 < jasper^off> still same error :P
20:10 < JamesMGreene> pyrotechnick No additional thoughts on that pre-but-not-so-pre-install?
20:10 < genazt> what oO
20:10 < pyrotechnick> does pre-install/install run on link?
20:11 < jasper^off> ah genazt...because you also wanna run the function...not only require it...
20:11 < jasper^off> that's why the () I guess
20:11 < genazt> yes
20:13 < jasper^off> but it's still the exact same error
20:13 < JamesMGreene> pyrotechnick: yes, apparently so https://github.com/isaacs/npm/issues/1573
20:13 < jasper^off> http://paste.ubuntu.com/5599993/
20:13 < genazt> but i dont understand why
20:14 < genazt> its not the excact same error
20:14 < genazt> its the same problem but in another file
20:14 < jasper^off> hm?
20:14 < jasper^off> is it?
20:14 < genazt> yes
20:15 < genazt> /statics index.js
20:15 < genazt> module.exports.system = require('./system');
20:15 < genazt> module.exports.system = require('./system')();
20:15 < jasper^off> yes you are right..
20:15 < pyrotechnick> JamesMGreene: it says it doesn't - https://github.com/isaacs/npm/blame/master/lib/link.js#L133
20:16 < pyrotechnick> 2011-04-29
20:16 < jasper^off> genazt THANKS!
20:16 < BlackFate> is there any good library to print human readable dates?
20:16 < pyrotechnick> that file's really scary
20:16 < jasper^off> I think I got it fully funcional again
20:16 < BlackFate> or is it better to write my own?
20:16 < genazt> np
20:16 < genazt> BlackFate, moment.js
20:16 < genazt> its pretty good
20:16 < jasper^off> genazt I split 1 file up into 31 files :P
20:16 < BlackFate> genazt, thanks
20:16 < jasper^off> so it was quite the challenge :p
20:17 < genazt> yes but now it is nice and clean
20:17 < jasper^off> all in 1 go...
20:17 < genazt> and easy to extend
20:17 < jasper^off> yeah...but it's probably still gonna be full of bugs :P
20:17 < jasper^off> from all the var changing and stuff
20:17 < jasper^off> but thanks a lot...really appreciate it
20:17 < genazt> yes but you see that time after time :D
20:20 < jasper^off> it's actually really nice genazt
20:20 < jasper^off> I split all my sql functions....all my listeners
20:20 < jasper^off> it's really neat :P
20:22 < genazt> if you are a really pro you can build an autoloader for this :D
20:22 < genazt> if a file changes
20:22 < genazt> but it far beyond this :D
20:22 < genazt> its*
20:23 < jasper^off> hehe true genazt
20:23 < jasper^off> I'm still learning..
20:23 < jasper^off> I'll leave that to the pro's
20:23 < high5> juast installed     visionmedia / n
20:23 < high5> command n doesn't work
20:23 < genazt> well for the file change i use forever or nodemon
20:24 < genazt> so if a file changes the whole app gets restarted
20:28 < BlackFate> is fs.writeFile async?
20:28 < jasper^off> anyways, I'm off for a movie
20:28 < jasper^off> thanks genazt
20:28 < jasper^off> will probably be more in here next few days :P
20:28 < AviMarcus> BlackFate, if it's got a callback, it's async... the FS that are sync have "sync" in the name
20:29 < AviMarcus> erm what I really meant to say is "everything is async unless otherwise noted"
20:29 < genazt> i am here forever
20:29 < BlackFate> thank AviMarcus 
20:29 < genazt> trapped :D (no i love to help) :D
20:42 < Zamarok> ls
20:45 < Zamarok> Anyone know much about Stylus in here? Does it allow multi-line arrays? If so, what is the syntax?
21:01 < istvan> hello everyone is anyone using express?
21:02 < istvan> Im trying to export a module using module.exports[model] = function(){}
21:02 < istvan> but im not able to access it in my app
21:05 < JamesMGreene> isaacs TooTallNate et al: If an NPM package will be cached at the machine/NPM level, will its NPM `preinstall` hook only run the first time it is downloaded? i.e. NOT when installed into local dirs or linked.  I'm thinking so but I need to verify. Thanks!
21:05 <@isaacs> JamesMGreene: don't use preinstall
21:05 <@isaacs> JamesMGreene: like, for anything, ever.  that was a terrible idea of mine and i apologize for implementing it
21:06 < rmg> istvan: are you able to load any part of the module?
21:06 < istvan> I am
21:07 < istvan> in my main app.js i have var user= app.get('models').User; return undefined 
21:07 < istvan> in the app config i set app.set('models', require('./models')); 
21:07 < rmg> what does app.get('models') return?
21:08 < istvan> it returns an boject
21:08 < istvan> returns an object
21:08 < istvan> I am using sequalize 
21:08 < istvan> this is what Im trying to do http://architects.dzone.com/articles/sequelize-javascript-orm
21:10 < istvan> this is what is returned http://pastebin.com/y3q6VYxp
21:10 < istvan> is that object a sequalize object?
21:11 < rmg> that doesn't look like the result of a require() call at all
21:11 < istvan> am I calling to from the wrong place
21:12 < istvan> var testuser= app.get('models');
21:12 < istvan> console.log(testuser);
21:12 < istvan> app.get('/', routes.index);
21:12 < BlackFate> If i wait for a var to get a value from a file, how do i tell node to wait for this value for another function to start? should i user async module?
21:13 < rmg> sorry, I'm not actually that familiar with express.. but from a pure JS/node angle, I'd say that's likely
21:18 < cloudbender> Anyone using 'Venkman' ?
21:23 < harrydog> anyone know how I can go about doing user authentication through a socket connection (socket.io)
21:49 < JamesMGreene> isaacs I'm understand that `preinstall` shouldn't be used for your average NPM module but it seems like it's probably the perfect hook for my needs
21:49 <@isaacs> JamesMGreene: ok
21:49 <@isaacs> JamesMGreene: preinstall will run in the install target location.
21:49 <@isaacs> JamesMGreene: cached or not, makes no difference
21:49 < JamesMGreene> Ah f
21:49 <@isaacs> JamesMGreene: there's no "only when adding to cache" hook
21:50 <@isaacs> JamesMGreene: on purpose.
21:50 < JamesMGreene> bummer
21:50 <@isaacs> JamesMGreene: since that's not deterministic anyway
21:50 <@isaacs> if you need that, your needs are wrong, and you should rethink how you got to need the wrong things ;P
21:50 < deoxxa> {"scripts":{"preinstall":"make"}} // "my module used to work but now i can't make it compile what's wrong?!??!?!?!???"
21:51 < JamesMGreene> Sorry, I'm an NPM newbie: Now if a module is installed _globally_ and I need to reference that module in a local dir, will NPM automatically link it to the global one or only if I do `npm link`?
21:51 < gluxon> Node.js 0.10 in 2 days.. :D <-- The realization hasn't hit me yet...
21:51 < deoxxa> that functionality would be a recipe for disaster and headaches
21:51 < zarac> Woohoo, i published my first npm module. ; )
21:52 < JamesMGreene> deoxxa Yes yes, preinstall/install are bad in most cases but, for a very small number of packages, they are exactly the right solution
21:52 < Havvy> JamesMGreene: If it is installed globally, it'll be found without needing to link it.
21:52 < istvan> where do i go for express.js related questions
21:53 < zarac> ooOo a celebrity in the house.. can i get a hi5? ; )
21:53 < deoxxa> zarac: now you only have to do ~250 more to take over from tj: https://npmjs.org/browse/author/tjholowaychuk
21:53 < zarac> deoxxa: amagad
21:54 < JamesMGreene> Havvy And it doesn't copy that global copy into the local, it just links it. Correct?
21:55 < Havvy> Yes.
21:55 < Havvy> If you have module A doing require('global-module') and module B doing require('global-module'), both calls will return the same object.
21:57 < JamesMGreene> Havvy I meant more: it won't copy the package dir into the local node_modules dir. Correct?
21:57 < Havvy> Correct.
21:58 <@isaacs> JamesMGreene: only if you `npm link`
21:58 <@isaacs> gluxon: INORITE!?
21:58 < gluxon> isaacs: :D
21:58 < istvan> has anyone tried to set a module with express.js using app.set('models', require('./models')); 
21:58 <@isaacs> Havvy: require() is not for globally installed modules.
21:58 <@isaacs> JamesMGreene: run `npm faq`
21:59 < Havvy> isaacbw: It's not?
21:59 < Havvy> I swear I've required global modules before.
21:59 <@isaacs> Havvy: maybe way back in the day
21:59 <@isaacs> Havvy: or if you set your NODE_PATH up to do that.
21:59 <@isaacs> Havvy: but it's not encouraged, or supported./
21:59 < Havvy> Ah. I'll keep that in mind.
22:03 < Industrial> substack: can I get fleet do do a clone --recursive ?
22:03 < Industrial> to do *
22:06 < alexparker> hello noders
22:07 < alexparker> i'm having a hard time decoding the data with my nodejs-serialport setup - I've posted it here: http://stackoverflow.com/questions/15287984/nodejs-serialport-data-tostring-failing-encoding
22:28 < FesterCluck> Morning all
22:32 < sshaginyan> Has anyone worked with jsonselect? If yes, are there any examples? I'm completely lost. The documentation sucks
22:43 < JamesMGreene> isaacs et al: If an `install` script hook fails, will the install of that package fail? I'd assume so. But doing so in `postinstall` would still have "successfully" installed the package even if the `postinstall` script failed therafter.
23:08 < ganzuul> server got: 0.463465            -0.463465               8.96032 from 88.148.24x.xxx:38916
23:08 < ganzuul> \o/
23:17 < jnpetersen> hey, I got a question regarding how to render a page after data is received
23:17 < ganzuul> Callbacks.
23:17 < chapel> yo jnpetersen 
23:17 < jnpetersen> hey chapel
23:18 < jnpetersen> ganzuul: I've been trying, but I guess I'm just not handling it right
23:18 < ganzuul> I'm about to start solving the same problem. Chacha got?
23:20 < jnpetersen> ganzuul: I'm working on site to handle RSVPs
23:20 -!- mode/#Node.js [+o TooTallNate] by ChanServ
23:23 < sshaginyan> Hey guys can someone please help me make sense of this http://jsonselect.org/#docs/grammar. I just need an example of one of these selectors in javascript. for example jsonselect(obj, ".two.three") <-- this does not work for this example http://pastie.org/6435030
23:25 < Samuel_Roldan> i just deployed my first node app and notice very slow response time from what seems to be static files. i added a maxAge and, though it seems to help, randomly i'll get a very slow response time (10-15sec) any suggestions?
23:25 < Samuel_Roldan> btw, I'm using express.static()
23:26 < sshaginyan> Yup have no idea how to make sense of anything happening with jsonselect
23:26 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
23:26 < ganzuul> Samuel_Roldan: I believe nginx is the canonical answer.
23:27 < Samuel_Roldan> @ganzuul. i thought so yeah. my hosting company is nodejitsu and I'm not sure they allow nginx or varnish
23:31 < ganzuul> hmm... Not familiar with hosting companies. I'm just working on a toy project or two.
23:31 < ganzuul> now, bedtime
23:34 < eighty4> Is there any kind of stream solution that would handle a connect/disconnect solution and save data to database while disconnected?
23:35 < BlackFate> eighty4, socket.io?
23:36 < eighty4> BlackFate: I'm currently using socket.io but can't find any info about how big buffer it would use, nor how it would save the data
23:55 < Industrial> What documentation system can I use to generate documentation from markdown formatted comments?
23:56 < sorensen> Industrial: try docco
23:57 < sorensen> http://jashkenas.github.com/docco/
--- Log closed Sun Mar 10 00:00:47 2013
