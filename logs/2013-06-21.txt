--- Log opened Fri Jun 21 00:00:02 2013
00:04 -!- mode/#Node.js [+o piscisaureus__] by ChanServ
00:14 < tlrobinson> what's the best way to detect you're on node.js vs the browser (NOT typeof "require" !== undefined, since I'm using browserify)
00:15 < gildean> tlrobinson: idk what's the norm, but you can always check for window
00:15 < gildean> node doesn't have it, browsers do
00:16 < josephg> So - about the new streams API
00:16 < josephg> are there any modules yet which wrap a byte stream in an object stream? 
00:16 < josephg> (and do framing and all of that?)
00:17 < josephg> - its a super easy module to write - but I'd like to avoid writing it if I can.
00:55 < owen1> anyone here was able to 'npm install nodeconf2013'? i get errors on johnny-five - http://pastebin.com/88fGa3FV   can anyone try installing it as well?
01:22 < jasonkuhrt> bnoordhuis: back...
01:26 < killfill> tjfontaine: hi, you still there?
01:58 < Foxhoundz> Hello node!
01:59 < ChrisPartridge> hiho
01:59 < Foxhoundz> I have come with a question
02:00 < Foxhoundz> ....and stackoverflow answered it!
02:00 < Foxhoundz> Thank you anyways
02:00 < ChrisPartridge> Any time!
02:22 < timetocode> I'm sending json objects from a mobile app to a node+express server. What is the correct way to recieve these objects? app.get? app.post? sometign else?
02:24 < Havvy> timetocode: Your choice.
02:25 < timetocode> i read that express will do some things automagically if my requests are sent with content-type: "application/json; charset=utf-8"
02:27 < ChrisPartridge> timetocode: if you've got the body parser, it will simply parse it into an object, iirc
02:31 < timetocode> sweet, thx
02:35 < Louis11> If I write an algorithm entirely in JS, and again as a C++ module, (in most cases) would there be any performance benefit?
02:35 < Havvy> Louis11: Yes.
02:36 < Louis11> I see now my question was slightly vague, I presume you mean C++ would be more performant? 
02:36 < Havvy> It would be more performant in C++ than JS.
02:37 < Louis11> Cool - So what prevents everyone from simply writing their application as C++ modules?
02:37 < Havvy> Expressiveness.
02:37 < Havvy> Also, having to learn C++.
02:38 < Louis11> Ah - Great, thanks :)
02:38 < Havvy> See also: What prvents everyone from simply writing their application as Assembly?
02:47 <@tjfontaine> killfill: so as crazy as this sounds, that's actually a good sign, the -1 and undefined mostly mean that the socket has been fully closed so there's no fd associated
02:48 < killfill> tjfontaine: same applies to the remoteAddress? as its already close, its not there anymore?
02:48 <@tjfontaine> killfill: right, I'm going to try your test case locally, but I'm 90% positive that's what is happening
02:49 < killfill> hm..
02:50 < killfill> tjfontaine: so how does one then calculate the latency of http-client requests?.. was trying to do something like hash[args[1]->fd] = timestamp in the request and use it on the response with timestamp - hash[args[0]->fd]
02:53 <@tjfontaine> killfill: for comparison, with your dtrace running, with that newly built node do: ./node test/simple/test-http-client-get-url.js
02:57 < killfill> oh
02:58 <@tjfontaine> this basically has to do with when this probe is fired, at the end of the whole request, in the case where the http request fits all in one packet you're getting the finish/fire event after everything has been torn down
03:00 < killfill> tjfontaine: so if i make that test respons 200 with some big string, it should be -1 again?
03:04 < killfill> tjfontaine: not sure if im understanding :S
03:05 <@tjfontaine> killfill: hang on I'm looking into some stuff
03:05 < Foxhoundz> Does Node.js support SQLite?
03:07 < overra> Foxhoundz: there are modules to work with sqlite
03:07 < overra> Foxhoundz: i've been using https://github.com/dresende/node-orm2 lately
03:08 < Foxhoundz> excellent thank you
03:41 -!- mode/#Node.js [+o TooTallNate] by ChanServ
03:42 < killfill> tjfontaine: found something?.. :)
03:42 <@tjfontaine> just reminding myself that I shouldn't bother doing this on osx, and that I hate gdb
03:42 < killfill> heh
03:42 < Foxhoundz> I get weird errors when npm installing sqlite3
03:42 < Foxhoundz> :(
03:43 < Foxhoundz> on Windows
03:43 < Foxhoundz> does it try to compile it on Windows?
03:43 <@tjfontaine> Foxhoundz: the sqlite3 module does require compilation on all platforms
03:43 < Foxhoundz> I see
03:43 < Foxhoundz> well
03:43 < Foxhoundz> it outputted something
03:43 < Foxhoundz> a .node file
03:43 < Foxhoundz> I assume it's successful, right?
03:43 < Foxhoundz> I should*
03:44 <@tjfontaine> theoretically
03:44 < Foxhoundz> "theoretically"
03:44 < Foxhoundz> That doesn't sound reassuring
03:44 < killfill> tjfontaine: so the patch works ok?
03:44 <@tjfontaine> killfill: hm, so ya the underlying uv handle hasn't either been created or was already destroyed by the time we fire the probe
03:44 < ChrisPartridge> Foxhoundz: did it error?
03:44 <@tjfontaine> killfill: the patch works yes
03:45 < Foxhoundz> I got compiler warnings
03:45 < Foxhoundz> "no definition for function: v8::persistent()"
03:45 < killfill> tjfontaine: but that is a problem, right?
03:46 < Foxhoundz> ChrisPartridge: http://puu.sh/3kB3T.png
03:46 < Foxhoundz> list of compiler warnings
03:46 < Foxhoundz> as for error, I don't know. It finished and did output something
03:47 < ChrisPartridge> Foxhoundz: try it, i guess
03:47 < ChrisPartridge> I remember having issues on windows with sqlite, was a pita, but that was >12m ago
03:48 < sinclair|net> ChrisPartridge: sqlite is still pretty awesome
03:49 < sinclair|net> ChrisPartridge: done any mongodb?
03:50 < sinclair|net> ChrisPartridge: you know, there is a lot of benefit in nosql datastores
03:51 < sinclair|net> ChrisPartridge: the document store suits some types of applications really really well
03:51 < sinclair|net> CRM systems spring to mind
03:51 <@konobi> mscdex: still about?
03:52 < ChrisPartridge> sinclair|net: used mongo for a few things, in the earlier days, but performance wasn't there, so we moved back to hstore in postgre
03:52 < sinclair|net> ChrisPartridge: well, the biggest issue i have with mongo "might not still be a problem" is lack of transactions, and in memory caching prior to writes
03:53 < Foxhoundz> I guess I'll try MongoDB
03:53 < sinclair|net> anything in memory is volatile and unsafe
03:53 < ChrisPartridge> sinclair|net: might be worth looking at toku then
03:53 < sinclair|net> ChrisPartridge: not another one...
03:54 < sinclair|net> ChrisPartridge: one thing tho, if it were possible to cache writes outside the datastore, it would make up for in memory caching in mongo, so long as mongo could tell you when crap had failed
03:55 < sinclair|net> ChrisPartridge: and lets be honest, in applications where that is liable to be an issue, chances are, you would probably already have some caching tech floating around anyway
03:55 < sinclair|net> (notably some back end queue, like redis)
03:55 < sinclair|net> or in my case, the Azure Service Bus
03:56 <@tjfontaine> killfill: I'm still looking into what the right thing to do here
03:59 <@konobi> postgres ftmfw!
04:00 <@tjfontaine> amen.
04:00 < ChrisPartridge> ^^
04:01 < ChrisPartridge> konobi, tjfontaine - you guys seen wal-e from heroku?
04:02 <@tjfontaine> cute name
04:02 < ChrisPartridge> re-wrote it in node, "walter" in npm
04:03 < ChrisPartridge> need to re-work to use MPU for s3, so >5gb hot backups work, and a README - but yeah, PITR rocks
04:04 <@konobi> ChrisPartridge: nope, what is it?
04:04 < killfill> tjfontaine: greate. btw, noboady seems to be interesting in http-client performance.. 
04:04 < killfill> was just learning dtrace and found this.. :P
04:04 <@konobi> ugh
04:05 <@tjfontaine> killfill: ya the client is generally not as interesting as the server, but if you're doing a rest client
04:05 < Zolmeister> off topic: Is the font size on my blog too small? http://zolmeister.com/
04:05 <@konobi> ChrisPartridge: so you're holding up active queries for pushing stuff to s3?
04:05 < killfill> yeah.. my server actually calls other servers.. :P
04:05 < ChrisPartridge> konobi: no
04:05 < ChrisPartridge> konobi: it does a hot back up
04:05 < ChrisPartridge> pg_start_backup(), pg_stop_backup()
04:06 < underbyte> the font looks fine
04:06 <@konobi> ChrisPartridge: mkay... seems reasonable
04:06 < ChrisPartridge> then tar | lzop | gpg | s3
04:07 <@konobi> ChrisPartridge: gimme native zfs objects for postgres!
04:07 < ChrisPartridge> pretty much allows you to constantly stream your wal files to s3, and then restore using "restore_command" after using "backup-fetch" to pull down a base backup
04:07 <@konobi> =0P
04:07 <@tjfontaine> killfill: hm so I wonder if this is actually keep alive defeating me
04:07 < ChrisPartridge> konobi: haha, sure .. no problems ;)
04:08 <@konobi> ChrisPartridge: actually, it shouldn't be too tricky... the main issue is with updating the surrounding tools it seems
04:09 <@konobi> zfs is just a transactional object store at heart
04:09 < ChrisPartridge> konobi: tbh, that's probably outside of my expertise, but if pg is running ontop of zfs, what would the benefits be with native zfs objects in pg?
04:10 < ChrisPartridge> konobi: you could possibly use the FDW stuff for that actually
04:10 <@konobi> ChrisPartridge: faster... no FS overhead...
04:10 <@konobi> also, snapshots and clones would be free
04:10 <@konobi> incremental backups too
04:12 <@konobi> ChrisPartridge: oh... did i mention sqitch to you?
04:12 < ChrisPartridge> konobi: yeah, i think that could be wrapped up in a FDW, but definately outside of my knowledge
04:12 < ChrisPartridge> konobi: you did!
04:13 <@konobi> cool cool
04:13 < ChrisPartridge> definately using it on our next decent sized project
04:16 <@konobi> cool, it's written by david wheeler, a regular at pgcon
04:16 <@konobi> pgtap is also pretty fun
04:17 < ChrisPartridge> there's so much being done around pg, i've already got about 20 bookmarks to read
04:18 < ChrisPartridge> new json stuff in 9.3 looks awesome too
04:32 < Franz_> so im trying to send a object to client by node/socket.io
04:33 < Franz_> io.sockets.socket(user).emit('end', JSON.stringify(u1));
04:33 < Franz_> i tried too io.sockets.socket(user1).emit('game end', lut1);
04:33 < Franz_> but wasnt show the object, somebody can help me?
04:43 < tweed> i'm new to IRC; is this basically a free-for-all chat about Node?
04:43 < Havvy> Basically.
04:44 < seeker> up to u
04:44 <@konobi> tweed: well, assuming it follows the guidelines... but yes
04:45 <@konobi> we really need to get that up in a sane place... isaacs PING
05:14 < Franz_> somebody can help me with sending a object to client-side with node/socket.io ?
05:16 < ddod> franz_: JSON.stringify(object)
05:19 < Franz_> ddod i tried but the result in client side is only -> {}
05:19 < ddod> what object are you passing
05:20 < ddod> and how are you parsing it clientside
05:20 < Franz_> in client-side only socket.on('end', function(data){ and console.log data..
05:20 < Franz_> in server-side console.log its showing
05:21 < Franz_> { id: 101, name:john }
05:21 < ddod> i dont really get why you need a function in the event listener
05:21 < ddod> since it's a function in itself
05:22 < ddod> wait lemme look it up
05:22 < ddod> i havent used socket in a while
05:22 < Franz_> i tried use stringify and parse in server-side
05:23 < Franz_> and the result is only {} 
05:23 < ddod> ok so on serverside, you're stringifying { id: 101, name:john }
05:23 < ddod> and on client
05:23 < ddod> you're parsing it
05:24 < Franz_> in client i tried using nothing
05:24 < Franz_> using parse
05:24 < ddod> socket.emit('end', JSON.stringify({ id: 101, name:john }) on server
05:24 < Franz_> and nothing...
05:24 < ddod> client: socket.on('end', function(data){ msg = JSON.parse(msg)
05:24 < Franz_> let me check
05:26 < Franz_> ddod the result is Object {}
05:27 < ddod> are you console.dir()ing
05:27 < ddod> console.dir(JSON.parse(data))
05:28 < Franz_> Object
05:28 < Franz_> __proto__: Object
05:30 < ddod> i think you're at the limit of my ability to help you
05:30 < ddod> i'd advise you try this IRC again in the daytime EST/PST
05:30 < Franz_> ;/
05:30 < Franz_> i didnt understand why this problem ;/
05:30 < ddod> if you want to
05:30 < ddod> you can try showing me your whole code
05:31 < ddod> or a simplified case of it not working
05:32 < Franz_> ddod i think the problem is with the object
05:33 < Franz_> i dont know explain why but the structure i think its error
05:33 < Franz_> its wrong
05:33 < ddod> try it with simply just sending it like {id: 'hello'}
05:33 < ddod> the john part
05:33 < ddod> from what you pasted
05:33 < ddod> could screw it up
05:33 < ddod> by not being in quotes
05:33 < Franz_> yesss
05:33 < Franz_> let me see
05:34 < Franz_> i will write manually the object
05:36 < ddod> franz_: im gonna go to sleep now, but if you need more help, email me at benwasser@gmail.com and i'll work with you tomorrow
05:41 < virused> pircbot is dead ? :X
05:48 < owen1> it looks like johnny-five require xcode. i only have OSX GCC Installer. is there any alternative or do i have to install xcode?
05:48 <@tjfontaine> you can use the cli tools installer, but ymmv
05:49 <@tjfontaine> newer gyps try harder at sdk selection choices
05:49 < neeky> Amazon Elastic Beanstalk devs have their heads up their asses
05:49 < jesusabdullah> I'm sorry to hear that!
05:49 < neeky> node.js on eb is 0.8.18
05:50 < virused> :S
05:50 < jesusabdullah> neeky: I mean, that's not too ridiculous, upgrading to 0.10 is a whole thing and they probably didn't have upping the minors on their priority list
05:51 < neeky> and documentation is scattered everywhere - i just wasted 4 hours getting my app BACK running after being in development mode for a month
05:51 < jesusabdullah> neeky: I wouldn't say "heads up asses" at least
05:52 < virused> u guys ever heard of pircbot?
05:53 < neeky> the node ami has security updates that need to be done, there's 3 conflicting ways to configure an environment, one of wich is only documented in ONE forum post by an aws guy
05:53 < jesusabdullah> sounds familiar virusd?
05:53 < neeky> and 0 way to even report an issue outside of the forum
05:53 < jesusabdullah> neeky: okay, that is pretty crappy
05:53 < virused> #pircbot :[ seems like it died?
05:54 < jesusabdullah> no idea
05:54 < jesusabdullah> I don't remember much about pircbot but
05:54 < jesusabdullah> like
05:54 < jesusabdullah> why?
05:54 < jesusabdullah> it's not a node project
05:54 < jesusabdullah> in fact I'd guess it's really old
05:54 < Havvy> virused: Try Supybot or Node-IRC
05:54 < jesusabdullah> or, shit, hubot?
05:54 < Havvy> jesusabdullah: Yeah. Pircbot is Perl I think.
05:55 < virused> mehh
05:55 < owen1> tjfontaine: thanks, i'll google for cli tools installer
05:55 < virused> pircbot is java :S
05:55 < Havvy> Supybot is Java I think.
05:55 < Havvy> virused: Ah.
05:55 < virused> im just stuck at trying to find some commands and the lib doesnt have them ;[
05:55 < virused> been bashing my head all day
05:55 < jesusabdullah> yeah, just write your own bot, hook the methods to a cli parser, figure out that stupid command everyone says freenode bots need for some reason, g2g
05:56 < Havvy> o.0 What command do freenode bots need?
05:56 < Havvy> CTCP Version reply?
05:56 < virused> i am too novice to be here D:
05:56 < yalamber> Hello, I am trying to write to a file with data from database. Right now i am doing fs.appendFile for each row of records. Is there other better way to do it?
05:57 < ChrisPartridge> yalamber: fs.createWriteStream perhaps
05:57 < jesusabdullah> uhhh one sec Havvy 
05:58 < yalamber> ChrisPartridge: How does fs.createWriteStream work?
05:58 < Havvy> :/ I need to get nrc building again.
05:59 < ChrisPartridge> yalamber: you create a write stream, then on each wrote, write your data to the writestream
05:59 < jesusabdullah> Havvy: well it's nothing critical, none of my bots needed anything special
05:59 < ChrisPartridge> once complete, close it
05:59 < jesusabdullah> Havvy: then again they don't auth either
05:59 < ChrisPartridge> yalamber: that way you are not opening and closing the fd on each row
05:59 < yalamber> hmm i will give that a try thanks ChrisPartridge 
06:00 < ChrisPartridge> yalamber: yw, if you get stuck, gist/pastebin your code
06:02 < yalamber> sure thanks, I am trying to program a export functionality for my web app users. I have one more confusion. when doing file write should i use process.nextTick or setImmediate or child process ?
06:02 < yalamber> or are they not needed at all?
06:02 < ChrisPartridge> yalamber: you shouldn't need them
06:03 < yalamber> please review this gist
06:03 < yalamber> https://gist.github.com/yalamber/4cac3445ffef84947bf6
06:03 < yalamber> what i am trying to do is allow users [there can be multiple users trying to export their data at once]
06:04 < yalamber> to export their data
06:04 < Zak> yalamber: you've got SQL injection there, unless i'm mistaken by some sort of wrapper
06:05 < Zak> https://github.com/felixge/node-mysql#escaping-query-values
06:05 < ChrisPartridge> yep, always pass the paramaters through the second argument in conn.query
06:05 < Zak> do that
06:06 < ChrisPartridge> does mysql support query->csv? i know pg does
06:07 < yalamber> I guess not
06:07 < yalamber> Zak: i will escape them once i test it 
06:07 < jesusabdullah> yalamber: just do it now
06:08 < yalamber> thank you for letting me know
06:08 < jesusabdullah> yalamber: it'll be easy, probably more readable, and then you won't forget
06:08 < yalamber> jesusabdullah: thanks will update now
06:08 < Zak> yalamber: i would just do it right the first time around; the right way looks trivial to do
06:08 < Zak> it just looks like you need to change it to ? and pass through an array
06:08 < Zak> it even reads better imho
06:09 < ChrisPartridge> most certainly does
06:09 < ChrisPartridge> and no string concat crap
06:09 < jesusabdullah> is that what happens if you eat a ball of yarn?
06:09 < yalamber> yes passing array is better 
06:10 < ChrisPartridge> jesusabdullah: haha
06:10 < ChrisPartridge> took me a moment to get that
06:10 < yalamber> So apart for sql injection should i worry about anything blocking?
06:11 < ChrisPartridge> looks OK, i would still create a writestream in exportConnect, and pass it down the line, will most likely be quicker
06:12 < yalamber> Thanks will update code with createwritestream
06:18 < Zogot> Ahoy all
06:23 < ChrisPartridge> Ahoy me matey
06:28 < yalamber> ChrisPartridge: please check update gist https://gist.github.com/yalamber/81665b1eb7879fb1d058
06:29 < yalamber> Should i pass query functions inside callback of ws.write?
06:57 < mscdex> anyone else dislike the new google groups layout?
07:01 < jesusabdullah> idk mscdex I just read the emails
07:12 -!- mode/#Node.js [+o TooTallNate] by ChanServ
07:30 < saanplus> HI guys, how can i manage my data from db in Models in ExpressJS and what library should i use for databinding???
07:32 < timoxley> saanplus what is databinding
07:37 < jesusabdullah> ooh! ooh!
07:37 < jesusabdullah> angular
07:37 < jesusabdullah> idk shit about angular or data binding but I hear those in the same sentence sometimes
07:38 < gildean> angular seems to be pretty good, i've tried it a bit but it's also pretty big and requires a shitload of reading to get anywhere
07:38 < gildean> it's not like you can just pick it up and start using
07:39 < jesusabdullah> well that's a problem
07:39 < jesusabdullah> I listened to an early talk about angular
07:39 < jesusabdullah> and by "listened" I mean I hung out with substack and dshaw in the back and got in trouble for talking too loud
07:40 < jesusabdullah> "BRO some of us ACTUALLY CARE about CLIENT SIDE DEVELOPMENT"
07:40 < gildean> haha
07:40 < jesusabdullah> that's what they get for going over capacity and talking about brongodb first
07:41 < gildean> idk if it's really a problem, you just have to spend the first day just reading or watching some tutorials
07:41 < gildean> or maybe you're just that smart that you can start using it right away, but it's unlikely
07:42 < jesusabdullah> haha, local trivia nite is looking for quizmasters
07:42 < jesusabdullah> I should be like, "sure I'll do one" and then make it all about software and webstuff so nobody can answer the questions
07:42 < ChrisPartridge> jesusabdullah: you were looking for a job were you not? :p
07:42 < jesusabdullah> Yeah
07:42 < jesusabdullah> I'll be going to taproot on Saturday, should ask
07:43 < jesusabdullah> see, thing is, trivia nerds like questions about TV and shit I don't know about
07:43 < jesusabdullah> "this webserver was originally developed at Yandex" "what's a yandex"
07:45 < gildean> jesusabdullah: even i wouldn't know the answer to that one
07:47 < jesusabdullah> gildean: nginx no?
07:47 < Franz_> somebody can help me with a problem with node/socket.io?
07:47 < gildean> jesusabdullah: iirc it was first developed for some other company
07:47 < jesusabdullah> possible. I have to double-check all my trivia questions
07:47 < gildean> jesusabdullah: it was https://en.wikipedia.org/wiki/Nginx#Usage
07:48 < jesusabdullah> rambler, my bad
07:48 < Franz_> so
07:49 < Franz_> im a trouble i cant solve this if you can help me to solve
07:49 < gildean> jesusabdullah: yeah, a russian company anyways
07:49 < jesusabdullah> gildean: lol SAME DIFFERENCE
07:49 < Franz_> the problem is i have in begin: lut1 = exports.lut1 = {}
07:49 < jesusabdullah> okay
07:49 < jesusabdullah> go on
07:49 < jesusabdullah> Franz_: https://gist.github.com btw
07:50 < gildean> Franz_: you're missing var from in front of that, there's your first problem
07:50 < gildean> tho' it doesn't really matter, you shouldn't still skip it
07:50 < jesusabdullah> yes indeedy, lut1 is a global
07:50 < Franz_> sure
07:51 < gildean> if you're declaring that on the topmost scope of the module, the var doesn't matter afaik, but still you should always use it so you don't accidentally skip it where it matters
07:51 < jesusabdullah> anyways, franz, go on?
07:53 < Franz_> https://gist.github.com/anonymous/5829611
07:53 < Franz_> gildean jefferai https://gist.github.com/anonymous/5829611
07:54 < Franz_> if i run the socket.io command within the function RUNNING FINE!
07:54 < jesusabdullah> not enough deets Franz_ 
07:55 < Franz_> but outside it does not recognize ...
07:55 < Franz_> ?
07:55 < gildean> Franz_: you shouldn't export an empty object and try to fill it out later on, instead export the function that returns a callback with the data inside
07:55 < jesusabdullah> I can't make heads or tails of the situation you're describing. Show us full, complete code.
07:56 < jesusabdullah> Chances are you fucked up scope.
07:56 < Franz_> gildean but console.log function with success
07:56 < jesusabdullah> That, or you fucked up timing.
07:56 < Franz_> gildean how should I do?
07:56 < gildean> Franz_: well we need a bit more code to know what you're actually doing
07:56 < jesusabdullah> That query is asynchronous, if you're doing something like, db.query(some_query, function (err, whatever) { lut1 = whatever; }); io.sockets.socket('bro').emit('hey', lut1)
07:57 < jesusabdullah> That will NOT work
07:57 < jesusabdullah> because the function (err, whatever) executes after the io.sockets.socket mess
07:57 < Franz_> ahhhhhhh
07:57 < Franz_> BINGO!
07:57 < Franz_> and how should i do then?
07:57 < Franz_> ;
07:57 < Franz_> ;/
07:58 < jesusabdullah> mofe the io.sockets mess inside the callback
07:58 < Franz_> There is no other solution?
07:58 < jesusabdullah> fundamentally, no
07:58 < jesusabdullah> there are variations of this solution
07:58 < jesusabdullah> ones that look very different
07:59 < jesusabdullah> but at the end of the day, you need to wait for the query to get executed before you can emit the data
07:59 < Franz_> shit
08:00 < gildean> well not wait per se, but call the function to emit the data after the query returns, so it's more like reacting than waiting
08:01 < gildean> or that's how i think of it
08:01 < jesusabdullah> yeah, I mean that's the event model interpretation
08:01 < Franz_> yes
08:01 < Franz_> i will try
08:01 < Franz_> the code will be very confuse
08:01 < Franz_> but is the solution
08:01 < jesusabdullah> Franz_: http://callbackhell.com
08:01 < Franz_> ;/
08:03 < Franz_> i will emit more time
08:03 < Franz_> its better for now
08:04 < Franz_> later i try optimize because will be very confuse
08:04 < gildean> Franz_: more time? as in just do it later and hope the query doesn't take longer than usual?
08:05 < Blkt> good day everyone
08:05 < gildean> you should really check up on how the async model works instead, or you'll have a bad time at some later point
08:06 < Franz_> yes
08:07 < Franz_> gildean i have many querys in db
08:08 < Franz_> i can run db.query { .... db.query... { db.query socket.emit }}}
08:08 < nikhilranjan> how to think async?
08:08 < Franz_> its correct this method?
08:08 < nikhilranjan> async operations with loop
08:09 < gildean> Franz_: yes, just check for errors after each query, and if the queries aren't dependent on eachother, then do them in parallel instead
08:09 < Franz_> because i need result of all querys
08:09 < ChrisPartridge> are they select queries?
08:09 < Franz_> to send to client-side the result
08:10 < gildean> Franz_: to control the flow more easily, check out the async module: https://github.com/caolan/async
08:11 < Franz_> like cool
08:11 < Franz_> but its difficult to me to understand how can be use
08:12 < ningu> Franz_: you will have to understand it, if you want to code in node.js
08:13 < Franz_> i would use a php socket
08:13 < Franz_> ;/
08:13 < Franz_> with node , and use php /mysql
08:13 < Franz_> but now...
08:17 < Franz_> gildean but i didnt understand one thing
08:18 < Franz_> the console.log later socket.emit its ok
08:18 < Franz_> ah
08:18 < ningu> console.log is not async
08:18 < Franz_> its all async
08:18 < Franz_> and no mysql right?
08:18 < Franz_> socket.io its async?
08:18 < ningu> any i/o is async
08:18 < Franz_> then...
08:19 < Franz_> explain this then ;/
08:19 < ningu> explain what?
08:19 < Franz_> i have
08:19 < Franz_> socket.emit .... lut1
08:19 < Franz_> console.log(lut1...
08:19 < Franz_> console.log its ok
08:19 < Franz_> and socket.emit no
08:19 < ningu> I have no idea what you mean by "it's ok"
08:20 < Franz_> its running fine
08:20 < r04r> youre not making a lot of sense
08:20 < Franz_> retrive the object
08:20 < Franz_> correct
08:20 < r04r> can you give a code example of what is not going like you expect
08:20 < ningu> Franz_: gist.github.com
08:20 < r04r> and put it on pastebin, gist, pastie, etc
08:20 < ningu> put an example up there
08:22 < jesusabdullah> I thought we went over this already
08:23 < ningu> probably
08:24 < jesusabdullah> console.log writes asynchronously but all this means is that there's a tiny delay between when you call console.log and the text appears on the screen
08:24 < ChrisPartridge> fabiocaseri from github, are you here?
08:24 < Franz_> jesusabdullah thanks
08:24 < ningu> personally I like goathub
08:26 < Franz_> i understood now jesusabdullah
08:26 < Franz_> the other consoe.log was in db.query
08:26 < jesusabdullah> yes
08:26 < Franz_> then the result was fine
08:26 < Franz_> because run later other querys
08:27 < Franz_> mysql querys isnt async
08:27 < Franz_> together
08:27 < Franz_> but js...
08:27 < ningu> Franz_: mysql queries are definitely async.
08:28 < Franz_> no
08:28 < Franz_> if i have in order
08:28 < Franz_> will be run in order
08:28 < ningu> ok, that's probably true. but it doesn't mean the queries are not async from the point of view of your program's control flow.
08:28 < Franz_> if no was impossible
08:28 < gildean> the language is procedural, the actual call to the database is async
08:29 < ningu> gildean is right
08:29 < Franz_> yes
08:29 < Franz_> but the queue of mysql querys 
08:29 < Franz_> are in orders right
08:30 < ssafejava> Franz_: they get sent in order but there's no guarantee they will return in order
08:30 < ningu> Franz_: I assume that the mysql module keeps a queue and makes sure to run them in the order they were called in.
08:30 < Franz_> hmm
08:30 < ssafejava> that's why you want to chain callbacks if you require things to execute one after the other.
08:31 < rvanzon> hi, does anyone know a good way to implement the Repository Pattern in Node? Or at least a way to separate data storage and business logic.
08:33 < Franz_> i will put the most important part of the code
08:33 < Franz_> in function of query
08:33 < Franz_> i will sleep now 
08:33 < Franz_> thank you guys
08:33 < Franz_> see you tomorrow ;)
08:45 < abraxas> come on, github....
08:45 < Zogot> down again?
08:46 < alterve> abraxas: it looks up from here?
08:46 < abraxas> looks down from here.. odd
08:46 < alterve> hmmm
08:46 < alterve> I guess it's their CDN
08:46 < alterve> check githubstatus.com
08:46 < alterve> abraxas: I mean http://status.github.com/
08:47 < alterve> It's showing all green
08:47 < alterve> What error are you getting?
08:47 < abraxas> Connecting .............
08:47 < alterve> I see
08:47 < ningu> must be the goats
08:47 < alterve> It may just be your browser. Try to curl the page
08:47 < abraxas> but their status page I can see
08:49 < abraxas> $ curl -v http://www.github.com  * About to connect() to www.github.com port 80 *   Trying 204.232.175.90... 
08:49 < abraxas> then nothing
08:49 < alterve> hmmm
08:49 < alterve> I can curl that IP
08:50 < ningu> alterve: are you canadian? they're good at curling
08:50 < alterve> ningu: Haha nah
08:50 < alterve> * About to connect() to github.com port 80 (#0)
08:50 < alterve> *   Trying 204.232.175.90...
08:50 < alterve> * connected
08:50 < alterve> * Connected to github.com (204.232.175.90) port 80 (#0)
08:50 < alterve> > GET / HTTP/1.1
08:50 < abraxas> alright.. may have something to do with me being all the way in tokyo
08:51 < abraxas> I'll just wait, she'll be back
08:51 < alterve> abraxas: It does not seem to be a problem with github. Can you curl just the IP
08:51 < abraxas> tried, didn't work either
08:51 < alterve> hmmm
08:51 < alterve> abraxas: I really have no answers then… I guess just wait it out
08:51 < abraxas> yeah
08:52 < alterve> If it is urgent just connect through a VPN or proxy
09:02 < abraxas> working again
09:09 < noel_v> helloo 
09:10 < alterve> noel_v: Hey
09:12 < Wraithan> Is it just me or is npm publish taking forever?
09:49 < dam1r89> hi guys, does anyone have a little time, i have a few questions?
10:47 < ome> Can someone suggest a decent asset optimizer to use with Connect? I use Coffeescript and LESS as well.
10:52 < dam1r89> i probably don't know the answer, but i don't understant the question, in which way you want to optimize assets?
10:55 < sCoRpi> dam1r89: maybe he means a precompiler/minifier etc
10:58 < Swadq> Anyone got any tips regarding dynamic image generation with node?
10:59 < Swadq> I'm wanting to create those dynamic signature, populating them from mongo
11:00 < dam1r89> sCoRpi, what is the benefit of minifying javascript on server, i think that there is no need for that
11:01 < sCoRpi> dam1r89: i don't know, i'm just guessing
11:34 < substack> isaacs: the new crypto.createDigest() is streaming but the docs don't mention this fact
11:35 < substack> and I also don't see how to output a custom digest format using the stream version
11:35 < substack> oh sorry, *crypto.createHash()
11:36 < substack> ok so there is an "encoding" option parameter
11:36 < substack> nothing in the docs about it
11:39 < bnoordhuis> substack: we take patches!
11:40 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:41 < bnoordhuis> substack: btw
11:41 < bnoordhuis> It is a [stream](stream.html) that is both readable and writable.  The              
11:41 < bnoordhuis> written data is used to compute the hash.  Once the writable side of                
11:41 < bnoordhuis> the stream is ended, use the `read()` method to get the computed hash               
11:41 < bnoordhuis> digest.  The legacy `update` and `digest` methods are also supported.
11:41 < gvdm> ok, i'm trying to get drupal and nodejs to play nicely together
11:41 < gvdm> I think i've gotten the config right, nodejs server starts
11:42 < gvdm> and it's listening on the same port (8080) that i'm telling drupal to connect to
11:42 < gvdm> but drupal thinks it can't connect
11:42 < gvdm> Error reaching the Node.js server at "nodejs/publish" with {"clientSocketId":""} "%{"clientSocketId":""}": [404] Not Found.
11:46 < Trangar> So ehm, I have a list of all the hashes that are supported by the crypto module, does anyone have a list with comparison (execution speed, security, etc)? http://puu.sh/3kNxN.png
12:11 < khannz> hi guys. trying to install node using that way https://gist.github.com/isaacs/579814#file-only-git-all-the-way-sh and it makes strange things with --prefix. It creates ~ folder inside of node sources during make install. Is it me or sources?
12:20 < OODavo> Do browserify's source transforms apply sequentially, i.e., with the result of one transform being the input to the next? I seem to be having troubles where a bundle with transforms [coffeify, debowerify] still has debowerify seeing CoffeeScript'd files instead of compiled JS.
12:21 < eperez_> I always give 100% at work: 13% Monday, 22% Tuesday, 26% Wednesday, 35% Thursday, 4% Friday.
12:24 < OODavo> Oh. I littered console.log()s through debowerify and it's definitely seeing JS, so there's a different problem going on.
12:27 < OODavo> Okay, the problem is in fact that toastr's component.json uses an array of main files instead of a single file and debowerify can't handle that.
12:37 < metr0politan>      <          ay ¥<y qw^è¨t'aa k y <   s
12:37 < metr0politan> < 
12:38 < metr0politan> oops!
12:38 < AAA_awright> Spider on keyboard?
12:38 < metr0politan> kind of...
12:39 < squeeks> cat?
12:44 < gvdm> I am having issues configuring node.js, the server has a domain which is not it's internal IP
12:44 < gvdm> If i put localhost then it doesn't seem to work either
12:45 < jas-> gvdm: Can you elaborate on "a domain which is not it's internal IP"?
12:45 < gvdm> it is on a 10.x.x.x ip
12:46 < gvdm> but its ip (as you access from internet) is like 50.x.x.x or so
12:46 < AAA_awright> an Internet IP, instead of an Intranet IP
12:46 < gvdm> yad
12:46 < AAA_awright> *intranet
12:46 < gvdm> so, what should I put?
12:47 < AAA_awright> Well, what IP do you want to listen on?
12:47 < jas-> gvdm: So a non-routeable net. And the DNS A record for the domain points to 50.x.x.x. When you fire up the node instance does it bind to the 0.0.0.0:port number?
12:48 < gvdm> 127.0.0.1 if I put localhost as the host and node server.js tells me    warn  - error raised: Error: listen EADDRNOTAVAIL
12:48 < jas-> gvdm: Window?
12:48 < gvdm> if I put the real domain
12:48 < jas-> gvdm: Errr, windows box?
12:49 < OODavo> Okay, I've narrowed down to another problem that I think is browserify's fault: It's producing an "incomplete" bundled file, which ends with a syntactically invalid "},{}]},{},[1". (Note there's no closing bracket for example.) Any idea what could cause that?
12:49 < gvdm> window?
12:49 < jas-> gvdm: Windows box?
12:49 < gvdm> no
12:49 < gvdm> would not touch with a pole
12:49 < gvdm> /etc/hosts?
12:50 < jas-> gvdm: That is going to be the simplest solution for testing 
12:50 < gvdm> for production?
12:50 < gvdm> this server is evidently going to "seamlessly go from development to production", no, not my choice
12:50 < OODavo> … alright, what's causing that is that in one of the source files (Toastr again) there's an ä character in one of the author's names, and some part of my browserify stack apparently can't handle Unicode properly?
12:51 < jas-> gvdm: Why do you want to bind to 127.0.0.1?
12:51 < Zogot> Quite a few testing components for node. Which do you lot prefer?
12:51 < jas-> gvdm: Why don't you post the code your working with to pastebin
12:51 < gvdm> what needs to access it? both drupal and external web browsers?
12:52 < gvdm> so you want the node.config.js?
12:52 < gvdm> the only other code is the drupal nodejs integration module
12:53 < gildean> gvdm: you can only bind to ips the machine actually has, or to names that resolve to addresses the machine has
12:54 < gvdm> so, if I tell /etc/hosts that the domain resolves to the intranet ip ... ?
12:54 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:55 < OODavo> Ah, looks like that's a known issue. https://github.com/substack/node-browserify/issues/349
12:55 < jas-> gvdm: No you would point the domain /etc/hosts to the machines IP not the public facing IP, as gildean stated you cannot bind to the external IP
12:55 < tsunamie> :(
12:55 < tsunamie> god mother f***er damn it. I ahve not looked at this from every angel. I have even installed jslint and jshint to try and work out what the issue is. I am implemented a working form, then I tried to add field validation to it. I am using the following guide to add validation http://blog.ijasoneverett.com/2013/04/form-validation-in-node-js-with-express-validator/ . http://pastebin.com/2TAsAKC8 I ahve included all the code snippets in the pastbin along w
12:55 < tsunamie> ith the error. PLEASE HELP ME. The only thing i think is wrong is something in the logic of the funtion. I built the basic app using the following guide http://dreamerslab.com/blog/en/write-a-todo-list-with-express-and-mongodb/
12:55 < gildean> gvdm: why not just bind to the lan ip?
12:55 < gvdm> gildean: apologies, that's what i meant by _intra_net ip
12:55 < tsunamie> gildean - I am at a lose :(
12:56 < gvdm> this seems to work better...
12:57 < jas-> gvdm: Are you trying to place your node.js instance within a DMZ? There needs to be a few things in place. 1) The public facing IP (50.x.x.x) must redirect any port request for your node instance (ex. 10.x.x.x:5000) to the intra IP (10.x.x.x)
12:58 < jas-> gvdm: Perhaps you should explain your objective
12:58 < gvdm> to setup a nodejs server for a drupal chatroom
12:58 < gvdm> drupal and nodejs on the same vps
12:58 < gvdm> which is on an intranet
12:59 < gvdm> i've made progress
12:59 < gvdm> it connects now
12:59 < gvdm> so I am going on to the next step
12:59 < jas-> gvdm: All right
12:59 < gvdm> if all is well you won't hear from me again
12:59 < gvdm> so I will thank you
12:59 < gvdm> thank you
12:59 < gvdm> and you too, gildean
12:59 < gvdm> thank you
12:59 < accc> hi
12:59 < jas-> gvdm: No worries, let us know how it works out
13:01 < gildean> gvdm: np
13:04 < gildean> tsunamie: on line 46 there's an extra (
13:05 < gildean> tsunamie: <%- (isEmptyObject(errors) %> the first ( is never closed
13:10 < tsunamie> :(
13:11 < tsunamie> gildean - I love you
13:12 < tsunamie> gildean - ps is there something that will work with ejs and jslint flags most of the HTML in my template as bugged when I know it is'nt
13:18 < gildean> tsunamie: jslint and jshint is meant for linting js code only, idk if there's a tool that can validate ejs, but you can validate the html part with any html validator
13:18 < tsunamie> gildean - yea just that jslint kept telling me about spaces and things I did'nt want to know about
13:19 < tsunamie> got an output of 50 lines withe very 3 batch of lines talking about an expected space
13:19 < tsunamie> or something along these lines
13:19 < tsunamie> thanks again
13:19 < tsunamie> gildean - was hoping to ask you a logical question about the example http://blog.ijasoneverett.com/2013/04/form-validation-in-node-js-with-express-validator/
13:20 < tsunamie> in the route logic section for //post. the passed sucessful still has an errors: {} statment. Why is that there/ it does'nt need it right/
13:20 < tsunamie> there are no errors that need to be passed
13:22 < gildean> tsunamie: depends on how the template is made, if the template always expects such an object, then you need it, otherwise you need to check if the object exists in the template
13:22 < tsunamie> gildean - as you can see. in my code http://pastebin.com/2TAsAKC8 I don't have that entry. I don't even know how I would add that entry as I don't render the page on the post. in my flow I don't see how it can even rende
13:23 < Trangar> gildean I have a question which you can probably answer
13:23 < Trangar> gildean, http://puu.sh/3kNxN which encryption should I use for storing passwords etc and why? :D
13:24 < Stephen> morning all
13:24 < neeky> Trangar, is bcrypt on that list?
13:24 < Stephen> Looking for someone familiar with noVNC and/or websockify
13:24 < Trangar> neeky it's not, it's all the hashes which are supported by the crypto module
13:25 < neeky> ah, I'd consider the bcrypt module if I were you
13:25 < AAA_awright> bcrypt isn't actually approved for password storage, use PBKDF2
13:25 < AAA_awright> Which also comes with Node.js
13:26 < gildean> iirc tj has some module that uses pbkdf2 to create and validate hashes
13:26 < gildean> yep, here: https://github.com/visionmedia/node-pwd
13:26 < AAA_awright> PBKDF2 *is* the hash creation function, why would you need a module
13:26 < gildean> if you don't feel like writing the thing on your own
13:27 < gildean> AAA_awright: mainly for convenience, you still need to run the pbkdf2 hashing algo multiple times etc. to create secure hashes
13:28 < AAA_awright> gildean: You run it just once...
13:28 < jay> d
13:28 < jay> sdf\
13:29 < jay> youtube.com
13:29 < neeky> AAA_awright, but scrypt is
13:29 < neeky> which is an even better bcrypt ;)
13:29 < gildean> AAA_awright: my bad, it does have the iteration inbuilt
13:29 < AAA_awright> Properly used PBKDF2 will add 10 bits of security to your password
13:30 < Trangar> gildean, I'll settle for pwd :D Thanks
13:32 < AAA_awright> Trangar: It just looks like a wrapper around crypto.pbkdf2, you don't need the extra dependency
13:34 < AAA_awright> ... that's a horrible API anyways, global variables, what?
13:35 < AAA_awright> And 128 bytes = 1024 bits of security is somewhat overkill, you only need 32 bytes = 256 bits of security
13:36 < AAA_awright> er, 256 bits of hash, which equals 128 bits of security
13:38 < neeky> i think the built in crypto needs the salt, so you have to create that and pass it to pbkdf2. thats about all tjs module adds
13:40 < AAA_awright> Which should already be in the database anyways...
13:41 < tellnes> Am I doing something fundamentally wrong or is this a bug in the http streams 2?
13:41 < tellnes> https://gist.github.com/tellnes/5831209
13:41 < AAA_awright> Usually if you have a library like that you have generatePassword(password, iterations) and comparePassword(password, hashed), the former of which produces a string that includes the salt and iteration count
13:42 < Stephen> Anyone familiar with RFB protocol in node?
13:51 < tsunamie> hi there, does anyone know why when I add the loine app.use(expressValidator);  //required for Express-Validator to the app.js. as outlined in the example http://blog.ijasoneverett.com/2013/04/form-validation-in-node-js-with-express-validator/ that when going to the main root page or any page the vrowser shows a never ending load of the page? 
13:52 < ThePrimeMedian> tsunamie: can you paste bin your file?
13:53 < Iszak> ugh, validation as middleware leaves a bad taste in my mouth.
13:53 < Iszak> Not DRY at all.
13:53 < tsunamie> hehe Iszak - if you know of a better way for me to perform validation let me know
13:53 < tsunamie> i ahve been googeling like a made bunny
13:53 < ThePrimeMedian> Iszak: I prefer to do it on my mongoose schema
13:53 < tsunamie> and I ahve been trying for the last two days to get my head around validation
13:53 < Iszak> tsunamie well if you've got a model, I find it better to bind it a model, alternatively, you can have form validation as an entirely separate entity.
13:54 < tsunamie> Iszak - I am currently trying to perform form validation
13:54 < ThePrimeMedian> Iszak: can you give an example of how you would do it as a separate entity
13:54 < tsunamie> ^^ what he said :)
13:54 < tsunamie> Iszak - as I am on my last legs with this guide
13:55 < Iszak> ThePrimeMedian I'm not sure if there are libraries out, but you'd simply create an object which takes in data and return if it's successful, then it'll also have setters/getters to get the errors.
13:55 < Iszak> ThePrimeMedian it all depends on your use cases, sometimes doing it per form is good, sometimes model based is good.
13:55 < Iszak> but doing it on the request to me seems like a bad idea because if you ever want to do that validation elsewhere, you can't.
13:55 < Iszak> you'd have to c+p that
13:55 < ThePrimeMedian> well.... that would be node-validator wouldn't it?
13:56 < ThePrimeMedian> it's not middleware.
13:56 < ThePrimeMedian> express-validator is a middleware implementation of node-validator
13:56 < Iszak> let me check
13:56 < Iszak> yes node-validator is a perfect candidate for a separate entity
13:56 < Iszak> why anyone would want to do that, I'd never know
13:56 < ThePrimeMedian> ok.. just wanted to make sure we were on the same page
13:56 < tsunamie> node validator you say
13:56 < tsunamie> humm.... :)
13:56 < ThePrimeMedian> node-validator :)
13:56 < ThePrimeMedian> https://github.com/chriso/node-validator
13:57 < Iszak> tsunamie are you a back end developer by trade?
13:57 < tsunamie> yea found it
13:57 < ThePrimeMedian> tsunamie: if you are using mongoose for mongodb, there is an implementation for that too
13:57 < ThePrimeMedian> https://github.com/leepowellcouk/mongoose-validator
13:57 < tsunamie> Iszak - no
13:58 < Iszak> tsunamie front end?
13:58 < tsunamie> ThePrimemedien - yea I am using it
13:58 < tsunamie> Iszak - I am infrastructure guys. border on devops. I support the devs in otehr words
13:58 < tsunamie> Java developers, I code a little and using Nodejs for some stuff.
13:59 < tsunamie> Iszak - does this help? I understand alot of developer stuff thow
13:59 < ThePrimeMedian> what I have come to love about node - is it turns you into a full-stack developer
13:59 < Iszak> ThePrimeMedian I don't agree with that statement.
13:59 < ThePrimeMedian> why not Iszak
13:59 < Iszak> tsunamie I just find lots of f/e coming to node.js and getting out of their depth
13:59 < Iszak> ThePrimeMedian because you can do node.js without touching front end code
14:00 < ThePrimeMedian> yes.. ok, let me re-phrase that statement. I was always a full-stack developer PHP/MySQL backend, javascript/jquery frontend - Node allows ME TO BE a full-stack developer using the same language
14:01 < ThePrimeMedian> it allows me to be a more "efficient" full-stack developer
14:01 < ThePrimeMedian> :)
14:01 < neeky> it 'enables' full stack development
14:01 < ThePrimeMedian> nice wording neeky
14:01 < JohnMcLear_> sort of
14:01 < ThePrimeMedian> you must also know how to work on the front end
14:01 < neeky> kind of like my mom buyimg me psuedophedrine 'enables' me to make meth
14:01 < Iszak> to be honest, picking up a language isn't hard, it's picking up the library that takes the time.
14:01 < ThePrimeMedian> sorry I didn't want to start a stack war
14:02 < Iszak> i still don't think it enables it.
14:02  * ThePrimeMedian bows out
14:02 < Iszak> I think it creates a lower barrier of entry for front end developers to get into backend.
14:02 < neeky> node is very new, but is really good, and as such is schizophrenic 
14:03 < neeky> it gives you 400 ways to stab yourself in the eye
14:03 < ThePrimeMedian> lol @ neeky
14:03 < Iszak> bit like git.
14:03 < neeky> that's my love/hate with it
14:05 < ThePrimeMedian> .... and the room has gone silent.
14:05 < neeky> the onboarding of node was like a tsunami  - but leaves crap like amazon's luke warm node,js EB stack in it's wake
14:05 < neeky> s/it's/its
14:07 < Iszak> neeky it's beta, what do you expect
14:07 < neeky> I understand, but beta usually means 'hey were going to jump on issues and get this thing into production asap'
14:08 < neeky> not let it just sit there and wither on the vine
14:08 < neeky> but maybe that's just driven by lack of demand
14:08 < Iszak> that, but also neeky they've probably got it working on staging somewhere and testing the shit out of it
14:09 < ThePrimeMedian> hence why I use #Modulus
14:09 < neeky> maybe so - I hope
14:09 < Iszak> there's always heroku
14:10 < ThePrimeMedian> modulus.io is awesome, they are node/mongo
14:10 < dazld> hey
14:10 < Iszak> neeky at the end of the day, you don't need to use elastic beanstalk, why not just use EC2 directly?
14:10 < Iszak> ThePrimeMedian great, only one database, perfect.
14:10 < dazld> im working on a project to do server side rendering
14:10 < ThePrimeMedian> Iszak: I have 3 running
14:10 < dazld> which shares code with client side
14:10 < ThePrimeMedian> 3 databases
14:11 < neeky> Iszak, that's probably my end game, is DIY on EC2 with ELB, monitoring, etc
14:11 < dazld> so far so good
14:11 < ThePrimeMedian> Iszak: or did you mean, only one kind.
14:11 < Iszak> neeky to be honest, that's the only way I see it, I don't want to lose control like on heroku/google app engine
14:11 < neeky> i just had hopes that the EB black box would 'just work' so I can not have another thing to do in my app development lifecycle
14:11 < dazld> but - trying to work out a good way to share data from the request with the subsequent views / conrollers etc
14:11 < dazld> as in, express gives us cookie data
14:11 < Iszak> ThePrimeMedian yes I meant, there is no one size fits all database.
14:12 < dazld> and later down the line, we want to know, for example, if someone is logged in
14:12 < dazld> one way is to use a handlebars helper
14:12 < dazld> but its all async
14:12 < Iszak> a bit like JS..
14:12 < dazld> so we dont want a global helper to know anything about individual requests
14:12 < Tobsn> anyone here working with neo4j?
14:13 < ThePrimeMedian> Honestly - If there was a perfect way to deploy on EC2 I would, but I just don't have the time modulus.io or other providers have to perfecting their deploy process.
14:13 < neeky> I actually had a prtty neat deploy method with EC2, I may just switch back to it
14:13 < neeky> Git post commit hooks
14:14 < neeky> so my dev and prod environments are branches on a github repo
14:14 < ThePrimeMedian> what about proxy, was is nginx?
14:14 < neeky> and post commit/push tickles my dev server to pull
14:14 < ThePrimeMedian> I just find there is a lot of tedious setup.. I wish I had time to make one and then save the instance.
14:14 < neeky> yeah, the nginx proxy is nice on eb too
14:14 < merpnderp> neeky: that's brilliant
14:14 < Tobsn> neeky, deployhq.com
14:15 < neeky> merpnderp, it works well
14:15 < Iszak> ThePrimeMedian perhaps you don't care about the software and you just want your shit to work, me on the other hand care about the server and want to customize it to my hearts content that's why I like EC2.
14:15 < neeky> as a guy that recently sold his datacenter to go into application development, i'm a mixed bag
14:16 < neeky> i love infrastructure, but it keeps me up at night
14:16 < ThePrimeMedian> Iszak: I agree with neeky
14:16 < ThePrimeMedian> I want my shit to work. (for work at least)
14:16 < Iszak> neeky I'm not talking hardware.
14:16 < ThePrimeMedian> I love to play around too; whenI have time
14:16 < Iszak> ThePrimeMedian and for that you pay a price of control
14:16 < Iszak> control/flexibility
14:17 < ThePrimeMedian> let me re-phrase
14:17 < ThePrimeMedian> when it's client work, i need it to just work
14:17 < Iszak> I guess when all you are is an application developer and not a system admin, then that's all you need.
14:17 < Iszak> I suppose because the likes of heroku, google app engine, we no longer need system administrators
14:18 < neeky> ThePrimeMedian, that's why the premise of EB looks so nice: "cpu > 90% > 5 mins, let me launch another instance for you"
14:18 < ThePrimeMedian> Iszak: exactly.
14:18 < Iszak> A bit like how people believe that because of node.js we don't need back end developers, I call poppycock.
14:18 < neeky> "oh, and we'll email your support guys too"
14:18 < ThePrimeMedian> Oh.. I don't like EB Iszak
14:18 < Iszak> neeky ThePrimeMedian  you can start another instance with.. ELB..
14:18 < Iszak> then you can setup a notification with SNS
14:19 < Iszak> use cloudwatch as well
14:19 < neeky> eb was just a timesaver, but diy with elb route 53 and ec2 is the proper way to do ity
14:19 < neeky> just the right amount of control, without having to much with HW infrastructure
14:19 < garbagegod> Question, I'm working on an API which is broken down into modules, and I want to pass my config object to the module. I'm going off of this method of passing it: exports.initialize = function(req, res) { console.log("INIT");
14:19 < neeky> s/much/muck/
14:19 < garbagegod> http://stackoverflow.com/questions/9146980/how-can-i-pass-a-variable-while-using-require-in-node-js *
14:20 < Iszak> neeky what I'm careful of is not becoming dependant on amazon services, I always use abstract layers to ensure I'm not using directly amazon services and I can just change a config file and boom, I'm on another service.
14:20 < garbagegod> My question is, since I would need module.exports = function(config) { this.doStuff = function() {} };, I thought defining functions inside functions was a no-no?
14:20 < SomeoneWeird> garbagegod, module.exports = function(config) { /* do what you need to */ return actualmodule; }
14:20 < Iszak> garbagegod who told you that?
14:21 < Stephen> Inversion of Control and Dependency Injection can be your friends :-)
14:21 < neeky> thats the whole premise of closure
14:21 < ThePrimeMedian> garbagegod: look at https://github.com/Skookum/base12
14:21 < garbagegod> I just read it somewhere, that's all :)
14:21 < Iszak> Stephen yeah unfortunately DiC aren't prevalent in node.js that much because most people writing it are f/e developers.
14:22 < Stephen> f/e?
14:22 < Iszak> frontend
14:22 < Stephen> ah, yeah
14:22 < Iszak> or anything other than pure backend developers.
14:22 < Stephen> I hate getting pigeonholed as a frontend developer
14:23 < Iszak> Stephen pigeonholed?
14:23 < Stephen> Happens less and less these days though
14:23 < ThePrimeMedian> Iszak: screwed
14:23 < garbagegod> "Since I've started working with node.js, I never know whether to put in my timesheets as front end work or back end work :|"
14:24 < Iszak> Stephen screwed as a front end developer? not sure what you mean by that
14:24 < Stephen> Iszak: American for "stereotyped to one kind of work"
14:24 < ThePrimeMedian> Stephen: Iszak: guess I was wrong of what it meant
14:24 < Stephen> It's all good
14:24 < Stephen> Basically, I work day to day in the .Net stack
14:24 < ThePrimeMedian> eww.
14:24 < Stephen> Most .Net developers are horrible in Javascript
14:25 < Stephen> Barely know CSS
14:25 < garbagegod> Most .Net developers are horrible at life
14:25 < Iszak> Stephen yeah but that's role specialisation for you.
14:25 < Stephen> And could care less about cross-browser compliance
14:25 < ThePrimeMedian> lol 
14:25 < Stephen> Yeah, I pride myself as one of the top Javascript devs in the DFW area
14:25 < Iszak> Stephen smaller companies tend to favor "full stack" while larger companies rather role specialisation
14:25 < Stephen> unfortunately, that comes along with "So, do you know SQL?"
14:26 < ThePrimeMedian> DWF?
14:26 < Iszak> dallas fort-worth?
14:26 < Stephen> Dallas/Fort Worth
14:26 < Stephen> Yeah
14:26 < Stephen> Texas
14:27 < ThePrimeMedian> Ah... 
14:27 < ThePrimeMedian> Howdy Stephen
14:27 < Stephen> :-)
14:27 < Stephen> Mornin'
14:27 < Iszak> Stephen I feel that because of the lower barrier to entries to backend that many front end developers see themselves as backend developers or full stack. It's like people who do the odd wordpress build think they're a PHP developer.
14:27 < ThePrimeMedian> :) I am from North. (we live in igloos)
14:27 < Zogot> ThePrimeMedian: you know the king?
14:27 < Stephen> How is the whale blubber today?
14:28 < ThePrimeMedian> oh funny. ;)
14:28 < ThePrimeMedian> 'eh?
14:28 < Stephen> See, I started as a PHP developer, moved into .Net 6 years later, been doing that for 6 now
14:29 < Iszak> Stephen ASP.Net? C#.Net? VB.Net?
14:29 < Stephen> But I built systems before that. Networks and PC repair for hotels.
14:29 < ThePrimeMedian> Stephen: I did PHP for 12 year and Node for 2
14:29 < Stephen> C#
14:29 < Stephen> Screw VB
14:29 < Stephen> Sorry
14:29 < Stephen> Personal opinion, I hate VB
14:30 < Iszak> Stephen no fare enough, just poking fun at people who say they're a .NET developer, when .NET is the API or F/W
14:30 < Iszak> It's like saying I'm a Java API developer
14:30 < Iszak> but I use ruby
14:30 < squeeks> unless of course, they write in multiple languages.
14:30 < Iszak> yep, then it's valid
14:30 < Iszak> Like I said before, it's not learning the language that takes time, it's learning the library.
14:30 < sinclair|net> Iszak: stop talking out of your ass
14:31 < Stephen> Well, .Net comes along with a suite of tools to know.
14:31 < Iszak> sinclair|net how so?
14:31 < baconmania> Hey guys. Is it possible to generate namespaced XML with jade?
14:31 < sinclair|net> .net comes with a runtime, and a base class library
14:31 < Stephen> TFS, WCF,
14:31 < sinclair|net> .net is not a API
14:31 < sinclair|net> what's with the ruby developer?
14:32 < Stephen> .Net is a runtime
14:32 < Stephen> basically
14:32 < Stephen> and a set of libraries
14:32 < Iszak> surely they distinguish the two like Java and JVM
14:32 < sinclair|net> Iszak: you do ruby right?
14:32 < Stephen> No, they are intertwined on purpose
14:32 < garbagegod> M$ = teh suxx0rz
14:33 < garbagegod> I would know. I am the garbagegod.
14:33 < Iszak> sinclair|net no
14:33 < Stephen> Nah, MS is getting so much better
14:33 < Stephen> now that their MVC implementation is worth a damn
14:34 < garbagegod> Stephen: when you're that terrible, improvement comes easily :)
14:34 < Stephen> Pair that with Web API and it's downright snappy
14:34 < sinclair|net> Microsoft is light years beyond anything anyone else is doing
14:34 < Stephen> garbagegod: true dat
14:34 < neeky> the secret to .net is the same as it was with MFC - just knowing that a library exists in the base or add on classes is have the job
14:34 < garbagegod> I'm a Ritchie / Torvalds tier elitist
14:35 < squeeks> at least you're honest about being wrong.
14:35 < Stephen> Microsoft is great for enterprise. If you need your network security integrated with a full logging system automatically in place, it's great
14:35 < Iszak> I'd rather use Java over .NET
14:35 < garbagegod> I wouldn't think I'd be the only one in #node.js...
14:35 < sinclair|net> Stephen: yeah, it is
14:35 < Stephen> If you're trying to optimize for performance or do truly innovative development, not so much
14:35 < sinclair|net> Stephen: innovative in what regard?
14:35 < neeky> MS squarely owns BO Integration in the Enterprise, and I don;t see that changing anytime soon
14:36 < sinclair|net> Stephen: all serious C++ development happens in Visual Studio
14:36 < Stephen> Digging into the .Net Namespaces just to find objects that are loosely structured enough to allow things like AsyncHttpHandlers is annoying
14:36 < sinclair|net> GCC is all stupid
14:36 < neeky> sinclair|net, i was with up until that last comment - 
14:36 < Stephen> In the end it's all about reading the Object browser and msdn blogs
14:36 < neeky> then i realized the pnch is spiked
14:37 < garbagegod> Microsoft's philosophy is "make money", they've never had any inclination to make actual good software, as long as it does enough that someone will pay for it.
14:37 < sinclair|net> neeky: if you say so
14:37 < Stephen> However, Generics and Dynamics have made my C# life much more like Javascript. I'm enjoying it these days
14:37 < sinclair|net> garbagegod: Visual Studio express is free
14:37 < neeky> "all serious C++ development happens in Visual Studio" << that's a very myopic opinion
14:37 < Iszak> sinclair|net windows isn't
14:37 < garbagegod> so is NotePad.
14:38 < Iszak> could use mono I suppose
14:38 < sinclair|net> garbagegod: then code in notepad, also, M$ references stopped being funny in the 90's
14:38 < Stephen> garbagegod: I think that's a bit unfair. They've built an infrastructure that works. In a well run shop it runs systems that span across the globe seamlessly.
14:38 < Stephen> But, you do have to learn to use it right
14:38 < neeky> your statement only holds ANY water if you are talking about Enterprise development, in a corporate environment, doing back office automation development
14:39 < garbagegod> Stephen: true as that is, I hate their philosophy
14:39 < Stephen> Just like with any system one buys into. It has it's difficulties
14:39 < sinclair|net> neeky: stackoverflow is written in aspnet mvc if i recall
14:39 < sinclair|net> neeky: as are many public facing web applications
14:39 < Stephen> neeky: Your are absolutely right
14:39 < garbagegod> I've never met a Microsoft raised developer / sysadmin who was actually passionate or cared about what they did
14:39 < Iszak> and yet PHP still remains the most popular web language if memory serves correct.
14:39 < SomeoneWeird> not for long
14:39 < SomeoneWeird> :P
14:39 < Stephen> PHP6 is wierd
14:40 < garbagegod> Yeah, SO is .NET
14:40 < sinclair|net> garbagegod: except, i was raised on .net development
14:40 < Iszak> Stephen PHP6? what are you talking about.
14:40 < garbagegod> sinclair|net: .net == M$
14:40 < sinclair|net> (actually basic development in the 80's)
14:40 < sinclair|net> garbagegod: if you think that, then you are kinda dumb
14:40 < Iszak> garbagegod I guess you're one for OSS?
14:40 < garbagegod> well, I suppose if you were alive in the 80's then you have an excuse
14:40 < garbagegod> sinclair|net: no, I'm making a generalization.
14:41 < garbagegod> The .NET Framework (pronounced dot net) is a software framework developed by Microsoft that runs primarily on Microsoft Windows
14:41 < neeky> StackExchange <-> Joel Spolsky
14:41 < sinclair|net> garbagegod: riiight, then if you weren't alive in the 80's then i don't have much faith in your points of view 
14:41 < Tobsn> anyone here working with neo4j? need some help with relations
14:41 < Iszak> sinclair|net it's okay, your kind will die out eventually.
14:41 < pachet> some of the most gifted programmers i know where born in 1992
14:42 < pachet> granted i cant go out drinking with them so thats kind of weird
14:42 < sinclair|net> pachet: such as?
14:42 < Iszak> pachet maybe not in USA.
14:42 < neeky> sinclair|net, garbagegod will replace you in a few years - 
14:42 < garbagegod> ^
14:42 < sinclair|net> neeky: unlikely
14:42  * garbagegod was born in '95
14:42 < neeky> you hope he WASNT alive in the 80's
14:42 < pachet> sinclair|net: not likely you'd know them
14:42 < Iszak> pachet share with me.
14:42 < pachet> they don't write much in .net, i'll put it that way
14:43 < Stephen> What are those new structures that are kind of like interfaces or mixins in PHP?
14:43 < Stephen> I forget their name
14:43 < Iszak> Stephen traits
14:43 < sinclair|net> pachet: are you suggesting that in order to be good at programming, you need to be coding in other languages ?
14:44 < neeky> sinclair|net, you would not be on #node.js right now if it were up to guys born < 1990
14:44 < Stephen> Thank you
14:44 < sinclair|net> neeky: 33 here
14:44 < Iszak> neeky a good programmer adapts.
14:44 < pachet> i'd argue that in order to be relevant in programming for the next 10 years you have to be coding in other languages
14:44 < Stephen> That's right, PHP5.4 introduced Trait
14:44 < Stephen> traits
14:44 < Iszak> Stephen yeah PHP5.4 is old hat, 5.5 is out now, I wouldn't use it though.
14:44 < garbagegod> A "good" programmer will oft choose the correct tool... which 95% of the time is not .net
14:44 < Stephen> so PHP5.4 is wierd
14:44 < Iszak> garbagegod nonsense
14:45 < garbagegod> Opinion
14:45 < sinclair|net> garbagegod: how the hell would you know, you're 18 years old with zero experience in the real world
14:45 < Stephen> Yup, opinion
14:45 < garbagegod> PHP 5.4 is the trifecta, all I want is function array dereferencing 
14:45 < garbagegod> sinclair|net: I've been working as a full time web developer since I was 15
14:45 < sinclair|net> garbagegod: your ideas about the real world consist of you thinking nodejs is hardcore and low level
14:46 < Iszak> garbagegod that does not mean much.
14:46 < Iszak> You could have been churning out wordpress sites for the last 3 years.
14:46 < sinclair|net> garbagegod: and web development means you are 1337 right?
14:46 < sinclair|net> lol
14:46 < pachet> timeout all, i think we need to heed the channel message for a second
14:46 < garbagegod> No
14:46  * pachet hugs all
14:46 < pachet> ok, continue
14:47 < sinclair|net> pachet: im just angry as the TypeScript 0.9 release compiler has more changes in it that i need to dig into
14:47 < Iszak> I've got better shit to do than watch an 18 year old and a 33 year old out, duke it out on what's the new and trendy thing to do things in.
14:47 < sinclair|net> Iszak: good, off you go then
14:48 < Iszak> sinclair|net enjoy your .NET, garbagegod enjoy your node.js/php/wordpress/etc
14:48 < sinclair|net> haha, PHP, it gets better all the time
14:48 < ThePrimeMedian> byebye Iszak
14:48 < ThePrimeMedian> I don't know why he was so ignorant today.
14:48 < ThePrimeMedian> i had to step back and not saying anything
14:49 < pachet> he just needed a hug
14:49 < sinclair|net> pachet: actually, what i need is for Microsoft to stop changing their compiler every week
14:50 < pachet> herm
14:52 < pquerna> tjholowaychuk: hey, does Coreh on GH hang on irc?
14:52 < tjholowaychuk> pquerna I dont think he does in here, I'll get him in
14:52 < tjholowaychuk> one sec
14:52 < kenperkins> morning
14:52 < pquerna> morning
14:52 < kenperkins> hey pquerna, tjholowaychuk 
14:53 < paulkon> morning
14:53 < kenperkins> pquerna anyone from rssf going to nodeconf?
14:53 < pquerna> kenperkins: don't think so :(
14:53 < kenperkins> :(
14:53 < kenperkins> I'm going to try and stop in for a few minutes thursday
14:53 < kenperkins> depending on schedule
14:54 < pquerna> its a hackday at the office today. i was thinking of trying to implement raft consensus in node.
14:54 < kenperkins> pquerna corey atmos?
14:54 < pquerna> kenperkins: nah, https://github.com/Coreh
14:54 < kenperkins> ah :P
14:55 < pquerna> he made this 20 line node module, uid2
14:55 < eere> whats the best way to read a json object from a ongloing tcl connection?
14:55 < pquerna> so then i've submitted a 20 line patch
14:55 < pquerna> for it.
14:55 < eere> on going
14:55 < kenperkins> 100% code increase ftw
14:57 < pachet> nodeconf show of hands?
14:57 < pachet> o/
14:57 < kenperkins> o/
14:57 < kenperkins> 2 of us, it'll be awesome
14:57 < kenperkins> you cook the dogs, I'll make the drinks
14:57 < pachet> kenperkins with 10 copters, looks like we get 5v5 nodecopter warfare
14:58 < kenperkins> sweet
14:58 < kenperkins> btw, I'm starting a new service
14:58 < kenperkins> quadcopters as a service
14:58 < kenperkins> it's a new form of "cloud" provisioning
14:58 < pachet> haha
14:58 < kenperkins> on demand, etc
14:58 < pachet> scale up your deployment
14:58 < pachet> ...of copters
14:58 < kenperkins> yep
15:00 < kenperkins> pquerna no sign of coreh in my logs :(
15:03 < Kakera> does gyp provide some magic way to only build a dependency when it's not installed globally?
15:04 < Kakera> protobuf in my case
15:06 <@isaacs> substack: the docs do mention that
15:06 < neeky> Coreh - he wrote nide too
15:06 < neeky> then abandoned it :(
15:09 < kenperkins> substack around?
15:09 < Kakera> They tend to do that, create something wonderful and then abandon it.
15:09 < substack> kenperkins: don't ever ask me that
15:11 < ashnur> what is an easy and fast way to serv an app  on port 80?
15:11 < ashnur> like without installing and configuring nginx, and stuff like that
15:11 < neeky> ashnur, fast + easy? run as root
15:12 < kenperkins> sudo node app.js?
15:12 < kenperkins> :D
15:12 < ashnur> that will work
15:12 < neeky> is that a question?
15:12 < ashnur> no. it's just that i wish it wouldn't sound this crazy to me as it sounds
15:13 < ashnur> dunno why, i couldn't have any practical arguments against doing that.
15:13 < neeky> well, if your only prerequisites are fast+ easy 0 then sudo node app.js 
15:13 < Kakera> why sudo?
15:13 < ashnur> because no 80 otherwise
15:13 < neeky> the practical argument is it is inherently dangerous to run an app as root
15:13 < Kakera> oic
15:13 < substack> isaacs: http://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_createhash_algorithm
15:14 < substack> there is no mention that createHash(algorithm, opts) is the actual signature
15:14 < kenperkins> *nix is generally setup to disallow processes from accessing ports under 1000 without escalated privs
15:14 < squeeks> 1024.
15:14 < substack> and that opts.encoding is a thing
15:14 < ashnur> neeky: yeah, but some app, maybe written in some other language, will be run with root priviliges. what is the essential difference?
15:15 < kenperkins> squeeks ty for clarification
15:15 < neeky> some app, in someother language listening on a privileged port? 
15:15 < ashnur> neeky: ?
15:15 < neeky> the key is that apps that listen on well known ports accessible to the world need to be hardened to eliminate security threats
15:15 < ootje> Parallellsamfunn som skaper egne institusjoner, normer, lover og regler.
15:16 < ashnur> neeky: is there such an node.js application already available? 
15:16 < neeky> running as root in production is bad as a rule is bad on *nix systems
15:16 < ashnur> neeky: i read that there isn't one
15:17 < neeky> one what?
15:17 < neeky> a hardened node.js app that runs on port 80?
15:17 < ashnur> application which is "hardened to eliminate security threats"
15:17 < neeky> who knows :)
15:17 < ashnur> well, something like a proxy
15:17 < neeky> nobitanobi, that's why nginx is popular
15:18 < ashnur> ok
15:18 < neeky> crap - just realized that xchat is autocompleting nicks 
15:18 < poorman> neeky: that's why nginx has been targeted so much lately
15:18 < neeky> hang on
15:18 < neeky> poorman, correct, but i'd rather it be nginx that has thousands of eyes than my app with 2 devs
15:19 < gildean> nginx - because russian hackers know their network security
15:20 < pachet> or lack thereof
15:20 < ashnur> my main fear is from automated scripts anyway. i will consider myself a successful person if I will be targeted by actual humans
15:21 < neeky> The cliche "safety in numbers" is never more true for application development on public facing apps
15:22 < neeky> nginx is not that hard to setup as a proxy, really
15:22 < ashnur> sure. i can see the logic behind that. i am just terrible on configuring nginx. that's all.
15:22 < neeky> trivially easy
15:22 < ashnur> yeah. not for me.
15:23 < pachet> hire a beastmode sysops guy
15:23 < ashnur> i have around $30 in my pocket since january. no income or spending since then.
15:24 < pachet> :o
15:24 < pachet> thats actually pretty impressive
15:24 < squeeks> I spent more than that on lunch today. Geez.
15:24 < neeky> ashnur, http://www.nginxtips.com/how-to-setup-nginx-as-proxy-for-nodejs/ << that's it
15:24 < ashnur> thank you neeky
15:25 < neeky> it really is 5 lines to a default nginx config
15:25 < ashnur> pachet: yeah, i can thank that to my father who supports my learning of stupid things, believing that some day I can actually make money with what I learn now
15:25 < neeky> of course I'm assuming you have a modest amount of sysadmin skills to actually install node.js
15:25 < neeky> and nginx
15:25 < ashnur> neeky: every damn time i install nginx, the default config is either missing or it is different than the last time
15:26 < neeky> what OS?
15:26 < ashnur> that's around 5-6 installs, maybe more
15:26 < ashnur> well, I used it on arch and debian, ubunt
15:26 < merpnderp> ashnur: be careful. Sometimes the default.config is missing the include conf/*
15:26 < ashnur> i will use it on squeeze now
15:27 < neeky> ashnur, yeah, with nginx AND apache i install the developer's version
15:27 < neeky> NOT the distro version
15:27 < neeky> they get too bastardized by the distro
15:27 < neeky> (looking at you ubuntu)
15:28 < ashnur> you are right. I will do the same from now on.
15:28 < thomblake> What do people use for unit testing in node?  Is there something standardish?
15:28 < merpnderp> mocha?
15:28 < neeky> because all the GOOD docs available will be relative to the developer's default config
15:28 < neeky> mocha
15:28 < merpnderp> to be fair, nginx is so easy to config you hardly needs docs. I <3 nginx.
15:29 < neeky> but I've never used it, I let the users test and report bugs
15:29 < thomblake> Am I the only one who hates the coffee puns?  If they were java tools I'd understand.
15:29 < thomblake> Yeah, I just write code without bugs in the first place.
15:29 < merpnderp> thomblake: naming things is hard.
15:30 < merpnderp> I worded with a guy who had given up on naming things. He would give a method a short description and then name it doIt() doItToIt() doIt2It(), etc.
15:30 < ashnur> mocha is nice, but tape is good too :)
15:30 < merpnderp> worked
15:31 < ashnur> :D
15:31 < neeky> I worked for a DoD company and the DoD is famous for acronyms - the company president prided himself on coming up with good acronyms for the projects we worked on
15:31 < ashnur> i suppose noone will find his body, right merpnderp?
15:32 < merpnderp> ashnur: hah
15:32 < thomblake> What assertions to folks use with mocha?
15:33 < thomblake> *do
15:34 < ashnur> thomblake: i used expect.js
15:34 < bradgignac> i like chai
15:36 < ashnur> yeah, chai. because we have to go to tea when we are out of coffee puns.
15:37 < SomeoneWeird> can I pipe one stream into two different streams? 
15:37 < ashnur> yes
15:38 < SomeoneWeird> can I pipe one stream into two different streams? 
15:38 < SomeoneWeird> woops
15:38 < SomeoneWeird> lol
15:46 < rook2pawn> is there a way to have an http server listen to a stream?
15:46 <@isaacs> substack: that's fair. patch welcome.
15:46 < kenperkins> isaacs: does anyone in particular own docs?
15:48 < rook2pawn> SomeoneWeird: yup you can a.pipe(b); a.pipe(c)
15:48 < SomeoneWeird> rook2pawn, hm yeah, but it seams to only stream it to one writable stream
15:48 < kenperkins> rook2pawn: do you mean, pipe a stream to an http request?
15:48 < kenperkins> all http requests at the end of the day are streams :P
15:49 < rook2pawn> kenperkins: i think i have to write it
15:51 < rook2pawn> no, tto have a server listen to a duplex stream
15:51 < kenperkins> that's not http then is it?
15:52 < rook2pawn> use case being inspecting a streams data and deciding where youd like it to go
15:54 < rook2pawn> i have a net.server that can allow a connection stream to fall-through to say, an http server by means of of a common duplex stream
15:57 < jasonkuhrt> can someone clarify the difference between a close and end event on streams?
15:59 < kenperkins> jasonkuhrt: end is emitted when the stream proper has recieved EOF
15:59 < kenperkins> close is emitted when the underlying resource is closed
15:59 < kenperkins> from the docs: Not all streams will emit close
15:59 < jasonkuhrt> kenperkins: yes
16:00 < jasonkuhrt> kenperkins: so is it possible that something will "close" without "end"ing?
16:00 < jasonkuhrt> kenperkins: i.e. in a terminal session if you sigkill the process it is a "close" but not an "end"?
16:00 <@isaacs> kenperkins: Node owns the node docs
16:00 < kenperkins> tbh, I don't know, but it should be simple to test. Set up a stream to a server, and then kill the server
16:00 <@isaacs> kenperkins: it's treated like code
16:00 < jasonkuhrt> crtl-D vs crtl-C?
16:00 < kenperkins> isaacs: thanks
16:00 <@isaacs> kenperkins: true, not all streams emit 'close'
16:00 <@isaacs> kenperkins: that's situation-specific
16:01 < kenperkins> isaacs: been contemplating a PR To better interlink the docs, didn't know if that was considered worthwhile
16:01 <@isaacs> kenperkins: but, in general, it SHOULD mean "all underlying resources have been disposed"
16:01 <@isaacs> kenperkins: yes, please!  do it!
16:01 < kenperkins> mostly, I hate docs that I can't click on things to jump
16:04 < jasonkuhrt> I've read that if you need to handle clean up after socket disconnection to use "close" not "end", why is that exactly?
16:04 < daleharvey> rvagg: hey, you around?
16:05 < daleharvey> having problems with levelup / (down) running on travis, only started happening recently
16:06 < daleharvey> https://travis-ci.org/daleharvey/pouchdb/builds/8315699 is the error, its just not finding it, but its in the package.json, and https://travis-ci.org/daleharvey/pouchdb/builds/8311914 shows it installing
16:10 < rook2pawn> is there any reason why a server handle can't be attached to a fd? 
16:13 <@tjfontaine> rook2pawn: ENOPARSE
16:15 < RLa> rook2pawn, you mean unix socket?
16:16 < pachet> brian eno, parsing tunes since 1948
16:17 < rook2pawn> in net.listen, it sets up a duplex stream with an associated fd (socket if you will?)
16:19 <@tjfontaine> rook2pawn: I'm still confused as to what your actual question is
16:20 < rook2pawn> i'd like to modify net.listen to take a stream as input
16:20 < garbagegod> I'm looking for a way to generate a unique string based on an objects contents... something like the PHP equivalent of md5(serialize($object));
16:21 < garbagegod> can I just use crypto.createHash
16:21 < rook2pawn> tjfontaine: sorry i didnt want to flood the channel with my speculation
16:21 <@tjfontaine> rook2pawn: I'm not sure that makes sense entirely, but that's basically how the tls refactor works in master, but net.listen is really about tcp
16:22 < LouisT> garbagegod: i don't see why not
16:24 < LouisT> garbagegod: something like this would work i assume: crypto.createHash('md5').update(JSON.stringify(object)).digest("hex");
16:24 < garbagegod> Yeah
16:24 < LouisT> wouldn't make it compatible with php's output however
16:24 < garbagegod> I have an API that creates an image based on a params object, and I want to store the image with a filename unique to the params for re-use
16:25 < garbagegod> Doesn't need to be
16:25 < garbagegod> thank you
16:25 < LouisT> if you ever needed to, could use http://phpjs.org/functions/serialize/
16:32 < kuryaki_> Is there anyway of supporting different versions of the same codebase on the same url using node, for example for API versions, or should i put an apache/ngingx on top of it?
16:33 < context> eh ?
16:33 < context> kuryaki_: most people handle different versions of api VIA url.
16:35 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
16:36 < kuryaki_> context: yup im supporting it via URL, but i dont want to copy/share parts of the code to handle it but instead have git tags/versions (on the code part not the URL) i dont want to break stable versiones with new features..
16:41 < thanpolas> any tips how to have a variable layout in jade?
16:47 < gildean> thanpolas: you just pick to which layout your view extends to
16:48 < thanpolas> gildean: i want it to be dynamic, reading issues now, it seems it's not possible... https://github.com/visionmedia/jade/issues/843
16:53 < baconmania> So, question: is there a way to convert XML to Jade, while maintaining the letter case of the tags? I'm using an HTML to Jade converter to do this right now, but it lowercases all tags in the resulting Jade output.
16:55 < 18WADTPXJ> hi!
16:56 < 18WADTPXJ> I'm researching about Node.JS and I'm very impressed.
16:57 < 18WADTPXJ> but I have a question... anyone knows why the express.js framework (for example) doesn't create a thread for each request (as Apache)?
16:57 < ningu> 18WADTPXJ: watch http://www.youtube.com/watch?v=L0pjVcIsU6A
16:57 < 18WADTPXJ> I don't understand that, it would go faster, doesn't it?
16:57 < 18WADTPXJ> ningu, ok I'm going to see it
16:57 < ningu> 18WADTPXJ: that's the single most important design decision behind node.js. so it's important to understand it.
16:58 < ningu> and that video does a good job of it, I think.
16:58 < ningu> basically, node.js handles many requests in one process by not blocking while waiting for i/o and other long-lived operations.
16:58 < 18WADTPXJ> yes, I understand that
16:59 < ningu> all of the actual request-handling code -- rendering templates, etc. -- runs quite quickly compared to i/o. in practice you can handle very many simultaneous requests and still have good performance.
16:59 < ningu> threads introduce other issues which ryan dahl (creator of node.js) wanted to avoid -- locking, etc.
16:59 < 18WADTPXJ> ok
16:59 < ningu> threads also use more memory, which at scale makes a big difference
17:00 < 18WADTPXJ> ok
17:00 < 18WADTPXJ> I understood it, thank you
17:01 < ningu> 18WADTPXJ: threads vs. evented control flow are basically different ways of solving the same problem
17:02 < 18WADTPXJ> ningu, yeah, ok. Thanks you very much :)
17:02 < 18WADTPXJ> Now I understand everything
17:02 < 18WADTPXJ> ningu++ :D
17:05 <@isaacbw> piscisaureus_: my middle and last initials
17:07 <@piscisaureus_> isaacbw: I was wondering if you were a clone of isaacs but apparently not. Hi, nice meeting you Isaac.
17:07 <@isaacbw> nope :)
17:07 <@tjfontaine> he's specifically here to confuse everyone
17:07 <@tjfontaine> as I am here to make people think I'm TJ
17:07 < ningu> haha
17:08 < ningu> but you are tj
17:08 <@tjfontaine> I'm not that TJ
17:08 < Havvy> You are Fontaine.
17:08 < nathan7> hey humans
17:08 <@tjfontaine> not to be confused with steve prefontaine
17:08 < nathan7> My mozilla plushie arrived \o/
17:08 < nathan7> (the anniversary one)
17:12 < LouisT> tjfontaine: pregontaine made my home town a bit more famous, but he was quite stupid heh
17:13 < durango> ttps://gist.github.com/durango/3c71a30ee248efe5068f <— any idea why .apply wont work?
17:13 < durango> https://gist.github.com/durango/3c71a30ee248efe5068f <— any idea why .apply wont work?
17:13 <@tjfontaine> LouisT: coos bay is such a weird name
17:14 < LouisT> tjfontaine: yea but that's not my home town, he died in eugene while attending the UofO
17:15 < ningu> durango: probably because 'this' is not right
17:16 < durango> ningu: so any suggestions? :/
17:17 <@tjfontaine> LouisT: oh sure
17:17 < ningu> durango: try something like,
17:17 < ningu> var check = self.validator.check(value); check[validate.method].apply(check, validate.args);
17:17 < LouisT> hm.. how can i delete a file from github if i don't have it locally stored in my copy?
17:18 < shesek> jsbn uses `var canary = 0xdeadbeefcafe; var j_lm = ((canary&0xffffff)==0xefcafe);` as an "JavaScript engine analysis" (http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn.js). Any idea what does that test for?
17:18 < ningu> LouisT: did you delete it from your copy and then push?
17:18 < context> kuryaki_: im not even sure what you are trying to do
17:18 <@mbalho> nathan7: is it a dinosaur?
17:18 < nathan7> mbalho: Yes
17:19 <@mbalho> nathan7: sweetness
17:19 < nathan7> mbalho: The head is sorta comically oversized
17:19 < LouisT> ningu: i don't quite remember, this was a while ago, but it's not in my local copy and i can't 'git rm' from github because of that
17:19 < nathan7> mbalho: It's adorable
17:19 < nathan7> I need to think of a way to put it on my screen
17:19 < ningu> LouisT: so check out a new copy? I have no idea if you don't know what you did :P
17:19 < julianduque> nathan7: pics or it didn't happen
17:19 < nathan7> so I can explain my programs to it
17:19 < diogogmt> anybody has experience managing cloud providers with node? We are in the middle of the rearchteciture of our product and we are considering making the switch from java to node
17:19 < nathan7> julianduque: a moment
17:19 < kuryaki_> context: at the controllers/models level how to handle multiple versions of a REST API ? with if(version = X) do controllerV1 (which i dont like because of code reuse/copy)
17:20 < diogogmt> java has jclouds which is a mature lib to manage cloud providers
17:20 < diogogmt> does something similar exist for node?
17:20 < ningu> diogogmt: joyent has a whole stack of cloud management software
17:20 < ningu> diogogmt: if you mean something that manages many different providers, I'm not sure
17:20 < durango> ningu: that worked! thanks man :)
17:20 < ningu> durango: cool
17:21 < julianduque> diogogmt: take a look at pkgcloud https://npmjs.org/package/pkgcloud
17:21 < kuryaki_> context:  or use an nginx proxy and deploy multiple versions of the codebase?
17:21 < diogogmt> ningu: we are looking for a lib that manages multiple cloud providers, but there is also the possibility of creating one depending on the benefits
17:21 < kenperkins> diogogmt: pkgcloud is the closest thing to jclouds
17:21 < ningu> ah yes, I've heard of pkgcloud.
17:21 < julianduque> diogogmt: rackspace is using pkgcloud for his own sdk, it's pretty awesome
17:21 < diogogmt> ningu: from my perspective node makes much easier to abstract logic and communicate between different rest apis
17:22 < nathan7> julianduque: my tablet just crashed when I tried to take a picture
17:22 < diogogmt> java it is a bit clunky when it comes to abstracting common functionality and doing http requests, at leafs from my own experience
17:22 < julianduque> nathan7: lol
17:22 < jasonkuhrt> does node.js read the SubjectAltNames from a certificate such that the other domains present (DNS.1 xyz1 DNS.2 xyz2 etc) will be checked during the Handshake Protocol?
17:22 < ningu> diogogmt: sounds like pkgcloud is what you want. there are also modules specifically for joyent, ec2, etc.
17:23 < diogogmt> ningu: perfect, thanks
17:23 < julianduque> jasonkuhrt: afaik no, but Sly is working on a parser to read that fields
17:24 < jasonkuhrt> julianduque: seems to indicate otherwise? http://stackoverflow.com/questions/14089872/why-does-node-js-accept-ip-addresses-in-certificates-only-for-san-not-for-cn
17:25 < nathan7> mbalho, julianduque: http://t.co/gF46nGC5c8
17:27 < diogogmt> ningu: I see that the only compute features supported by pkcloud are Virtual Machines and Images
17:27 < julianduque> nathan7: :3
17:27 < diogogmt> do you know if support for VPCs is something they are planning to do
17:28 < ningu> diogogmt: it sounds like others here are more familiar with that module, I don't know
17:30 < jasonkuhrt> julianduque: though, in practice you seem to be correct as far as I can tell
17:31 < paulkon> is SPDY in core yet?
17:32 < paulkon> nvm, found node-spdy
17:33 < ashnur> neeky: i just want to tell you that I can't start nginx, it does not tell me what its problems are, just won't fucking start. not the config that is sure. says it is ok. 
17:33 < neeky> ashnur, !? - wth - nginx hates you
17:34 < neeky> which one did you install
17:34 < neeky> i'll do it exactly like you
17:34 < neeky> Im on debian wheezy
17:35 < darkPassenger> ah please tell me the simplest way to read xml from a file and convert it to a javascript object..
17:35 < darkPassenger> without having to compile c, that is...
17:36 < neeky> darkPassenger, xslt?
17:37 < neeky> apply an xslt that outputs TEXT that can be cast into an object
17:37 < ningu> darkPassenger: most xml modules will require library bindings
17:37 < neeky> with json.parse
17:37 < darkPassenger> just xml
17:37 < ashnur> neeky: i am on squeeze. i removed first the remnants of the previous attempt. then I downloaded that stable tar.gz. extract, configure. install missing stuff. make clean, configure, make, sudo make install. then I found out that there is no conf in /etc/ i copied conf and mime.types from /usr/local/ added stuff from the site you linked. then i tried the initscript from that site, and later the initscript
17:37 < ashnur> from the nginx wiki. 
17:37 < Havvy> I need a name...
17:37 < Havvy> Node IRC Framework.
17:37 < neeky> ok hang on
17:37 < Havvy> Any ideas?
17:38 < ningu> ashnur: by default nginx looks in /usr/conf
17:38 < ningu> ashnur: you need to specify most of the directories on the command line or they end up in weird places
17:38 <@isaacbw> Havvy: what are you building
17:39 < ashnur> now it says for the config that is ok. and when I type service nginx start or /etc/init.d/nginx start it will have no output, no logs in /var/log or /usr/local/nginx/logs or any mention of nginx in any other log, and no running process of nginx will appear
17:39 < ningu> ashnur: look at the printout at the end of the ./configure output
17:39 < ningu> ashnur: you need to know where it's putting those files. and that's how you can find out.
17:39 < ashnur> ningu: i don't have that printout
17:39 < ningu> so run configure agaon
17:39 < ningu> again*
17:40 < ashnur> but I am pretty sure it finds the config as writing `nginx -t` says it is syntactically ok, but if I screw it up, it will complain
17:40 < ningu> ok, fair enough
17:40 < ningu> what I said will tell you where it puts the logs
17:40 < Havvy> isaacbw: A framework for IRC bots.  (Yes, a framework, not a library)
17:41 < Havvy> I've been calling it NRC (Node Relay Chat), but I am not liking the name.
17:41 < shanse> nobot
17:42 < Havvy> shanse: no-bot.... :/
17:42 < Havvy> That gets a 'no' from me.
17:42 < shanse> say no to bots
17:43 < ashnur> and of course I already spent a hour trying to find something about this on the interwebs, most of the finds are with people who are too stupid to read the logs. i found one tip saying nginx -c <path to config> should output error if there is one, but of course there is no output for me. 
17:44 < ashnur> anyway. i stop the offtopic here. just wanted to share my experience, and why I was reluctant to try to use nginx. because it is always like this.
17:44 <@isaacbw> Havvy: nark
17:45 < ningu> ashnur: why not just install an nginx package, anyway?
17:45 < neeky> ashnur, I did this: http://nginx.org/en/linux_packages.html#stable
17:45 < neeky> and it ran straight away
17:45 < neeky> i installed the developer's deb for wheezy
17:47 < neeky> if you're not comfortable compiling from source and just want it to work use nginx's stable deb
17:47 < ashnur> ningu: why it does not say what its problem is. before this attempt i tried packages many times and it was no better. i don't think i can safely assume that a package would've been any better
17:47 < ningu> ashnur: because I have no idea and you didn't follow my relatively straightforward advice to find where the logs are
17:50 < ashnur> ningu: i ran configure, it says nginx error log file: "/usr/local/nginx/logs/error.log", but that logs dir is completely empty, yet it was writing logs into the /var/log/nginx directory
17:50 < ningu> ashnur: are you sure you're running the nginx you installed rather than some other one?
17:50 < ashnur> ningu: i am not sure. i am not sure of anything. 
17:51 < ashnur> i removed the previous installs file to my best knowledge, which I admit it is very limited
17:54 < ningu> ashnur: I basically agree with neeky here, if you are not comfortable compiling and installing from source, then use packages
17:57 < ashnur> i am not really a *nix poweruser, but I use linux for 10+ years now. I've installed countless packages from source in my life. not all without problems of course, but there is usually an output if something does not work. 
17:57 < ashnur> anyway. I will try and remove nginx now again, and try to install from that package neeky linked
17:58 < ashnur> it might work this time. who knows. 
18:07 < ashnur> ok, so it won't start, but it has error output this time
18:09 < ashnur> oh. it actually started. thanks ningu neeky__ 
18:13 < thealphanerd> hey any bay area dev's looking for work?
18:13 < ashnur> now all I have to find out how to start at boot, and restart at failure a nodejs process
18:13 < thealphanerd> the company I work at is doing an open house this afternoon, they are actively seeking full stack engineers
18:13 <@isaacbw> depends on your os
18:13 <@isaacbw> probably init.d
18:14 < ningu> thealphanerd: full stack with syrup and links?
18:14 < thealphanerd> mmmmm
18:14 <@isaacbw>  /rc.d
18:14 < skope> isaacbw: systemd might be an answer too
18:14 < thealphanerd> http://www.djz.com/jobs/
18:15 <@isaacbw> it seems to be all the rage now
18:16 < jaCen915> isaacbw: what's up sir, you used to the new github yet? :P
18:16 < ningu> what's new about it?
18:16 < paulkon> the new github sucks
18:17 < jaCen915> ningu: mainly UI, isaac expressed his love a few days ago
18:17 < ashnur> lol
18:17 < paulkon> although thinking seems to change after a couple of weeks of usage
18:17 < ashnur> more buttons > less buttons
18:17 < paulkon> I liked the top bar approach
18:18 < ningu> I like the clif bar approach
18:18 < paulkon> github needs to be mobile responsive
18:18 < Trangar> More buttons is always better
18:18 < Trangar> Just place random buttons all over
18:18 < ashnur> i don't like that it is on ruby and dying every now and then
18:18 < ningu> paulkon: yeah, I've viewed source on my phone before, it was ok but not great
18:19 < paulkon> I'm not a fan when more buttons starts to approach a car console
18:19 < paulkon> that creates clutter
18:19 < paulkon> it's a balance
18:19 < paulkon> clutter vs ease of use
18:20 < ningu> paulkon: also, good for power users vs. easy to learn
18:20 < ningu> lots of buttons will confuse new users
18:20 < jaCen915> hide buttons with drop downs 
18:20 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:21 < paulkon> too many drop downs is also a mess
18:21 < paulkon> to little drop downs is also a mess
18:21 < paulkon> it's all about balance
18:21 < paulkon> extremes just aren't favorable in web design
18:22 < paulkon> for the most part
18:22 < ningu> extreeeeeeeeeeeeeeeeme
18:22 < ningu> in the harold and kumar credits there is "extreme dude #1" and #2 etc.
18:23 < jaCen915> adaptive design, the more you commit the more options you have, if you destroy a repo accidentally you are reset to no buttons
18:23 < jaCen915> as punishment
18:23 < paulkon> lol
18:23 < nathan7> ahaha
18:23 < jaCen915> github AI
18:23 < paulkon> but I agree with the adaptive design strategy
18:24 < paulkon> kind of like if you don't want PRs there isn't a PR button
18:24 < jaCen915> "are you sure you want to commit this Jacen? It seems highly stupid"
18:24 < paulkon> that needs to be applied to everything
18:24 < ningu> the new gmail android app removed the "delete message" button and put it in a menu
18:24 < ningu> I think that was a good choice
18:24 < ningu> I used it hit it accidentally all the time
18:24 < paulkon> yeah delete buttons need to be hidden
18:24 < jaCen915> "can let you commit these Jacen"…github turns into a giant mechanical spider and destroys us all
18:25 < paulkon> and if someone needs to delete very often then they need to rethink about which emails are spam
18:25 < ningu> paulkon: well, it's easy to select a whole bunch and delete them once
18:25 < s5fs> paulkon: most email is spam
18:25 < nathan7> paulkon: That takes a lot of effort
18:26 < nathan7> I pretty much select a pagefull of emails
18:26 < nathan7> skim over the subjects/senders
18:26 < nathan7> deselect the ones I'm curious about, delete everything else
18:26 < paulkon> I think most of use secretly like to receive spam in our inbox so that we feel popular :P
18:26 < paulkon> selective spam
18:26 < s5fs> I've been tracking my unsubscribes for a while
18:27 < jaCen915> paulkon: and feel rich…a lot of people want to give me my long distance relatives $$$
18:27 < paulkon> hahaha
18:27 < paulkon> I mean I think I only receive 1-2 emails a day that are actually important
18:28 < paulkon> sometimes 0
18:29 < ningu> hrm... if a user belongs to multiple groups, what determines what group by default owns the files that users create?
18:29 < nathan7> ningu: the group you're set to
18:30 < nathan7> ningu: (your login group, usually)
18:30 < ningu> nathan7: how do you set that?
18:30 < ningu> I guess I'll try to google it
18:30 < paulkon> groups in what?
18:30 < paulkon> what's the context
18:30 < nathan7> unix groups
18:30 < ningu> paulkon: file permissions
18:31 < ningu> aha, setgid bit on a directory
18:31 < ningu> maybe that will do the trick
18:31 < nathan7>  ~ ⮀ grep ":$(grep '^nathan' /etc/passwd | cut -d: -f4):" /etc/group
18:31 < nathan7> users:x:100:
18:39 < jamescostian> Does anyone know how to accurately benchmark in Node? I've noticed that performing the same operation can take either 6ms or .1ms, so benchmarks can be completely false. How do you stabilize?
18:40 < paulkon> what are you trying to benchmark in node?
18:40 < paulkon> http?
18:41 < jamescostian> I'm trying to benchmark a little module that I made to see if it's faster than another module.
18:41 < jamescostian> But I also tried benchmarking some random math
18:41 < paulkon> easiest way is to just wrap the operations with setTimeout and console log that
18:41 < jamescostian> I had node calculate some stuff 10 times and I calculated the time it took for each one to process, and the first one was ~6ms but the second was ~.1ms
18:42 < paulkon> I mean Date
18:42 < jamescostian> Oh
18:42 < jamescostian> Thanks! I'll try that out!
18:42 < paulkon> https://github.com/isaacs/node-bench
18:43 < jamescostian> I feel like such a noob now - thanks so much!
18:46 < nanicoar> \o/
18:46 < nanicoar> I applied for a job!
18:47 < nanicoar> I'm not sure if showing my code was a smart move...
18:47 < LuckyBurger> lol
18:48 < LuckyBurger> its normally a good thing
18:48 < ganzuul> Yeah. I had double recursion in it and a bunch of unused, outcommented code too.
18:49 < ganzuul> And even some hex.
18:49 < ningu> hexes are good when you want to re-curse someone
18:50 < ganzuul> lol
18:50 < jasonkuhrt> Given nodejs tls doesn't support reading SubjectAltNames currenlty, what are people's preferred ways of supporting multiple domains in on certificate?
18:51 < jasonkuhrt> SNI looks maybe relevant (really not sure), as might be wildcard domain syntax
19:04 < motaka2> hello why should we not use java? why node.js?
19:04 < ningu> motaka2: there's an awful lot written on that, you know.
19:05 < motaka2> ningu: no I dont know may you give me a link ?
19:07 < ningu> motaka2: http://adamgent.com/post/10440924094/does-java-have-an-answer-to-node-js
19:07 < motaka2> ningu: May I ask where you are from ?
19:08 < ningu> San Francisco
19:11 < ningu> motaka2: here is another one, http://bijoor.me/2013/06/09/java-ee-threads-vs-node-js-which-is-better-for-concurrent-data-processing-operations/
19:11 < Ry0_> hey guys, i'm really new to node. can someone explain me which language node usees? unclear for me.
19:12 < paulkon> Ry0_: javascript
19:12 < ningu> Ry0_: it's called node.js for a reason
19:13 < fiola> Has anyone made a node.XXX, compatible but in other langs?
19:13 < ningu> what is a node.XXX?
19:13 < paulkon> that's doesn't make any sense
19:14 < fiola> It was intended to denote the language, following on from ningu's reply
19:14 < motaka2> Ry0_: the lang is javascript but i used on serverside
19:14 < motaka2> ningu: like node.php
19:14 < ningu> fiola: you can create bindings to C libraries or whatever, but your modules have to be written in javascript
19:14 < ningu> oh, right
19:14 < Kakera> fiola: https://github.com/d5/node.native
19:14 < ningu> I've heard of node.php but no idea how it works
19:15 < Kakera> fiola: https://github.com/luvit/luvit
19:15 < Ry0_> is it like javascript framework?
19:15 < fiola> Yeah, that was the idea, wondered if anyone liked the node.js concept but wanted to implement it in their own favourite language.
19:17 < ningu> fiola: there is vertx but it isn't compartible
19:17 < ningu> compatible*
19:18 < motaka2> Ry0_: if you install express it is like a framework, jsut download "jumpstart node.js" and read it
19:18 < ningu> Ry0_: it's a javascript environment + library that you can use to write web servers
19:18 < fiola> Ryan Dahl wrote in his book that he first implemented the ideas in plain C, but was looking around for something higher level.  JS popped up pretty much by accident, and he liked V8's speed.
19:20 < Ry0_> express, meteor, derbyjs.. they are all framworks?
19:20 < ningu> Ry0_: they are frameworks written for node.js
19:20 < ningu> just like rails is written for ruby
19:21 < Ry0_> ok. got it.
19:21 < fiola> Is anyone here running pump.io?  I tried installing it from github using their instructions, but "npm test" fails, big time.
19:21 < ningu> Ry0_: what node.js really provides is (1) bindings to V8 which is a very fast JS engine, (2) an evented control flow model that's very well suited for network applications
19:22 < Ry0_> ningu: and if I don't use framwork, does node.js have his own functions written by javascript?
19:23 < ningu> Ry0_: yes. it's very easy to create an http server with just the standard library. see the example at nodejs.org
19:25 < Ry0_> ningu: yes, I see. but it's not pure javascript, right? node.js created javascript identical
19:25 < Ry0_>  library (?)
19:26 < Ry0_> or javascript and node.js are both based on engine - V8 - which 'provides the language'?
19:27 < fiola> I haven't read that the Javascript language has been changed, it's grammatically identical AFAIK.  It just has additional bindings.
19:27 < brostachioo> javascript is not based on V8 it's very much the other way around
19:27 < patsToms> can someone explain what is atime, mtime and ctime on fs.stat?
19:28 < patsToms> found that mtime is last modified time
19:28 < patsToms> and others?
19:28 < LouisT> atime is last access, ctime is created
19:28 < patsToms> ohcibi, thanks
19:28 < fiola> brostachioo: V8 is an implementation of Javascript, which is a formal language grammar.
19:28 < bnoordhuis> patsToms: access time, modification time, change time
19:28 < LouisT> patsToms: http://en.wikipedia.org/wiki/Stat_%28system_call%29
19:29 < bnoordhuis> patsToms: modification time==file contents changed, change time==file attributes changed
19:29 < patsToms> great info
19:29 < LouisT> yea, i got ctime wrong
19:32 < Ry0_> brostachioo: well, so you write javascript in node.js and then V8 comiples it?
19:33 < jesusabdullah> compiles?
19:33 < wangbus> jit..
19:33 < tfan> Does anyone happen to know how to disable stylus on Express.js? 
19:34 < jesusabdullah> yeah, technically there's behind-the-scenes compilation to bytecode but it's not like you have to run a compile step or nothin'
19:34 < fiola> V8 compiles Javascript to machine code before executing it.  There is no interpreter, nor bytecode.
19:34 < wangbus> tfan: there should be a app.use line you have to take out i think
19:34 < jesusabdullah> bytecode, machine code, SAME DIFF trolololo
19:34 < jesusabdullah> point is you don't run a compile step
19:35 < tfan> ah, thanks wangbus
19:35 < fiola> If you think machine code and bytecode are the same thing, you don't have much of a CompSci background :P
19:35 < wangbus> np, fyi express is not as cool as rolling shit yourself
19:35 < jesusabdullah> a) I'm being facetious. b) No, I'm not a computer scientist, and I don't care to be.
19:36 < tfan> Man, that's the impression I had. I was just building my own stack, but my cohort is insisting on a templater
19:36 < fiola> Not very good credentials for giving advice then :P
19:36 < jesusabdullah> huh? You can totally rip shit out of express
19:36 < jesusabdullah> it depends on the advice, fiola.
19:37 < fiola> You know, the *accurate* kind :P
19:37 < jesusabdullah> I don't need to know whether v8 compiles to bytecode to machine code to know that you don't have an explicit build step to run javascript
19:37 < tjholowaychuk> tfan there should be only one line to remove, whichever one says stylus.middleware()
19:37 < jesusabdullah> fiola, think of me as a tradesman if you need to.
19:38 < jesusabdullah> You'll find that when it comes to on-the-job situations, a tradesman can run circles around many an engineer.
19:38 < darkPassenger> just xml
19:38 < tfan> tjholowaychuk: thanks, found it. 
19:39 < wangbus> tfan: you can still use templates with non-express stacks
19:39 < fiola> Nothing wrong with tradesmen, except when they pretend to be engineers, or worse, educators, and end up mis-educating.
19:39 < wangbus> tfan: just use ejs, it's designer friendly. i hate shit like jade
19:39 < jesusabdullah> It depends on the realm of expertise, fiola. I'm not claiming to be an expert in virtual machines here.
19:40 < jesusabdullah> The thing you don't know, is that my realm of expertise happens to be engineering. So I do know a thing or two about this dichotomy.
19:40 < tfan> wangbus: i hate all front end stuff. This is my first time building a webapp, by experience lies more in backend desktop stuff. I do not like layouts, or css.
19:41 < brostachioo> tfan, css is very odd, once you know it well it's easy and more or less reliable
19:42 < andypham> css is like black magic :)
19:42 < brostachioo> granted i'm a front end dev, so selection bias
19:43 < tfan> brostachioo: i know the concepts, and i can finagle stuff into what i want incrementally. it's just not intuitive yet, and I have roughly 0 aesthetic talent, so it's just a grind
19:44 < brostachioo> tfan, concepts are good, but with css theres a base level of things you just need to commit to memory because settingo ne property changes how other properties respond. for example overflow: hidden working as a clearfix
19:49 < werle1> @tjholowaychuk where can I find more about thunks?
19:50 < pachet> fiola much experience in compiler world?
19:50 < tjholowaychuk> werle1 http://en.wikipedia.org/wiki/Thunk_(functional_programming)
19:51 < fiola> pachet: Yup, decades. You?
19:51 < werle1> @tjholowaychuk thank you
19:51 < pachet> fiola about 28 seconds
19:51 < fiola> Hehe
19:57 < ccowan2> just an fyi… adding the @ sign in front of names doesn't have the same effect in IRC as it does in Twitter. If you do the name then a colon it will highlight the message in most irc apps. (Nothing against werle1… it's just something I started noticing lately)
19:58 < werle> ccowan2: thanks, I did not know that
20:00 < ccowan2> werle: No problem… I was helping someone yesterday and they did the same thing with the @ sign. I totally missed their message.
20:00 < fiola> I think most IRC apps highlight any line containing your name, irrespective of whether it's a leading <name>: -- ccowan2  testing testing :P
20:01 < fiola> Did it?
20:01 < werle> ccohn: what fiola said is what I always thought
20:01 < werle> ccowan2: 
20:01 < werle> ccowan2: which client do you use?
20:01 < ccowan2> fiola: This should work
20:01 < ccowan2> @fiola: does this?
20:01 < ccowan2> I know in irssi it misses @ccowan2
20:02 < ccowan2> but Adium picks it up
20:02 < fiola> Reply to ccowan2 without the lead into --- yep, always highlights here
20:02 < ccowan2> did they both highlight?
20:03 < fiola> All highted.  I think there may be a pattern matching field somewhere in the setup to handle detection.
20:04 < ccowan2> hum… I stand corrected :D
20:04 < fiola> More on topic, is there an ircd written in node.js?
20:04 < bnoordhuis> ccowan2: it's the hilights section in your .irss/config
20:05 < bnoordhuis> ccowan2: iirc you need to set word to "no"
20:05 < bnoordhuis> or "yes" - one or the other :)
20:15 < apham25> whois apham
20:18 <@isaacbw> ccowan: it doesn't matter what you use
20:18 <@isaacbw> the name itself highlights
20:18 <@isaacbw> oh hey
20:18 <@isaacbw> look at me responding to old ass shit
20:19 < skope> ass-shit
21:06 < aksnot> hi everyone i am new to nodejs.tried to google it but counld,nt find whether dynamic pages can be served from nodejs servers without using any framework like express and jade.Thanks in advance.
21:06 <@isaacbw> of course
21:07 <@isaacbw> you can serve "dynamic" pages from c if you wanted to
21:07 < squeeks> Just because you can, doesn't mean you should.
21:07 < paulkon> asm
21:12 < aksnot> is it recommended?
21:14 < aksnot> what i wanted to know was something like php...is it possible?
21:15 < aksnot> like using it in between the html code so it generates a different value everytime?
21:16 < context> aksnot: what
21:16 <@isaacbw> aksnot: yes it's possible
21:16 <@isaacbw> now do your research
21:16 < context> aksnot: uhh, why would you not beable to serve dynamic pages?
21:16 <@isaacbw> you're asking semi-nonsense questions
21:16 < context> isaacbw +1
21:17 < aksnot> aksnot:i agree i am ...drunk ...np ...thanks.
21:17 <@isaacbw> lol
21:20 < context> aksnot: the example server replace hello world with: require('crypto').createHash('sha1').update(Date()).digest('hex') and you got a dynamic page
21:22 <@isaacbw> context: he's asking about templating
21:23 < paulkon> is it commonplace to hash on the client and then rehash the pass on the server?
21:23 < context> isaacbw: he just said dynamic pages :x but meh
21:23 < paulkon> assuming everything is going through ssl anyways
21:24 <@isaacbw> context: you have to turn on your "not really understanding what node is" brain
21:25 <@isaacbw> paulkon: no
21:25 <@isaacbw> but don't forget to salt
21:26 < context> salt is useless if being passed across the wire isnt it ?
21:26 <@isaacbw> well, don't do that
21:27 < diminoten> BCrypt
21:27 < diminoten> stop rolling your own
21:31 <@isaacbw> don't tell me how to live my life
21:31 <@tjfontaine> you're not my real dad
21:42 < mscdex> node.js rules!
21:50 < drewolson> i'm trying to understand the new streams2 Readable stream. can someone explain to me why this only prints 2 numbers, not 10? https://gist.github.com/drewolson/5834600
21:55 < drewolson> don't worry guys, i solved my own problem
22:00 < neeky> anyone have difficulty getting session support working with express/connect?
22:01 < owen1> My server accept requests on foo.com/login. Is it possible redirect requests to sso.bar.com/cas/login?service=http://www.foo.com/auth_redirect
22:04 < alchimista_> hi people I am trying to configure upstart and monit on my instance on amazon following this tutorial http://howtonode.org/deploying-node-upstart-monit
22:04 < neeky> owen1, you using express?
22:05 < alchimista_> when I do start myapp
22:05 < alchimista_> i take this error in log file https://gist.github.com/anonymous/c7405ee8e2da1776ccd0
22:05 < alchimista_> yes I do use expressjs
22:05 < neeky> can you use res.redirect?
22:05 < alchimista_> but if I do normally node myapp.js it runs 
22:06 < alchimista_> neeky: u r asking me or someone else, I just joined the room so I dont see the previuse msgs
22:06 < neeky> no, owen1 
22:06 < alchimista_> ok, sorry
22:07 < alchimista_> any good (valid) tutorial how to configure upstart and monit?
22:07 < owen1> neeky: i don't use express, why?
22:08 < neeky> alchimista_, you are using a relative path, but the user that runs your app either doesnt have permissions, or is in a different directory when he launches your app
22:08 < neeky> owen1, because it has res.redirect
22:09 < owen1> alchimista_: http://www.exratione.com/2013/02/nodejs-and-forever-as-a-service-simple-upstart-and-init-scripts-for-ubuntu/
22:09 < neeky> but with straight node you can send a 302 status to redirect
22:09 < owen1> alchimista_: it uses forever. give it a try
22:09 < alchimista_> thanx
22:10 < owen1> neeky: i'll look at express codebase. it might be something like     res.writeHead(301, {Location: 'https://sso.bar.com/cas/login?service=http://www.foo.com/auth_redirect'});
22:10 < neeky> probably
22:11 < shesek> you also have http://expressjs.com/api.html#res.location
22:12 < neeky> owen1, line 677 in lib/resonse.js
22:13 < neeky> it does a 302
22:13 < Jentrep> Okay who the fuck told me to use Express??
22:14 < bnoordhuis> Jentrep: language, young man
22:14 < Jentrep> How do i get a damn server to return an HTML file?
22:14 < Jentrep> And not a Jade file?
22:14 < neeky> don;t use jade?
22:14 < Jentrep> Dont know how to not use one of the prescribed engines
22:14 < Jentrep> what do I tell it?
22:14 < neeky> do you use a view engine by default?
22:14 < apham25> to f**k off
22:14 < apham25> :)
22:15 < tjholowaychuk> Jentrep res.sendfile('my.html')
22:15 < neeky> or you dont want to use one at all?
22:15 < Jentrep> I should probably not use one at all
22:15 < owen1> Jentrep: don't. use vanilla.js - https://github.com/oren/node-website-template
22:15 < owen1> neeky: thanks!
22:15 < Jentrep> WTF
22:16 < neeky> you can serve anything you want with the static middleware
22:16 < Jentrep> Stop making me tack on more shit
22:16 < timwis_> Hey guys, I'd like an opinion - am I using promises the intended way here? https://gist.github.com/timwis/6f76dd8b3866db56ffd2
22:16 < neeky> I'm trying to remove the dependencies
22:16 < squeeks> Jentrep: then uhh, stop using tool not best for the job?
22:17 < Jentrep> What???
22:17 < Jentrep> I was told to use Express
22:17 < squeeks> you want to serve static content, get an actual web server to dish it out.
22:17 < neeky> Jentrep, what is your end game?  just a static file server?
22:17 < Jentrep> Pretty much
22:17 < tjholowaychuk> Jentrep then use something else and rage at that instead haha
22:17 < neeky> then stop using node and use nginx :)
22:17 < Jentrep> Something else??
22:17 <@isaacbw> the new github UI is so turrible
22:17 < Jentrep> I HAVE to use Node
22:17 < squeeks> nginx, lighty, apache all capable.
22:17 < tjholowaychuk> then use node
22:17 < tjholowaychuk> without express
22:17 < Jentrep> fuuuuuuuu
22:18 < neeky> express is nothing but sugar on the node http object
22:18 < Jentrep> I came on here before and I was told to *JUST* use express
22:18 < owen1> Jentrep: use http.createServer
22:18 < squeeks> don't believe everything you're told.
22:18 < owen1> u don't need frameworks with node
22:18 < neeky> with convienience comes pain sometimes :)
22:18 < tjholowaychuk> Jentrep you have a brain, you can make your own informed decisions as well
22:18 < tjholowaychuk> research
22:18 < tjholowaychuk> my friend
22:18 <@isaacbw> Jentrep: it's so stupid that different people have different opinions, isn't it
22:18 <@isaacbw> fuck this shit
22:18 < bnoordhuis> god, what am i reading
22:18 < neeky> twilight zone
22:19 < Jentrep> Christ JS has ruined every single one of you.
22:19 < tjholowaychuk> sounds like a troll
22:19 < tjholowaychuk> or a 10 year old
22:19 < _6a68> Christ JS? is that some new framework?
22:19 < Jentrep> I am 4 actually.
22:19 < neeky> Jentrep, if you'll describe your goal with the tiniest bit of detail, we could probably help you push that string down the road a bit
22:20 < _6a68> upside of language becoming trendy: easier to get a job, more people inventing cool stuff.
22:20 < _6a68> downside of language becoming trendy: lots more trolls/goons
22:20 < neeky> without devolving into mouth breathing PERL developers
22:20 <@isaacbw> js is the brand new hip language
22:20 <@isaacbw> on the block
22:20 < rossk> hey tjholowaychuk, whats the deal with kue?
22:20 <@isaacbw> jk
22:21 < rossk> still maintained? abandoned for something better? just fine as it is?
22:21 < bnoordhuis> js beats up perl and ruby for lunch money
22:21 < tjholowaychuk> rossk drudge is the one hackin on it lately
22:21 < Jentrep> JS is a 90s pos
22:21 < _6a68> yeah :-\ I'm afraid of the inevitable "old n busted" backlash from whatever the new new HN crowd will be
22:21 < neeky> he's easy to hate on, this room has 1017 enthusiasts
22:21 < neeky> the c room is almost empty
22:21 < _6a68> Jentrep: that's all you've got? COME AT ME BRO
22:21 < squeeks> bnoordhuis: except for all the npm authors and node committers with CPAN/rubygems accounts ;)
22:21 < rossk> ok, thanks tjholowaychuk -- I'll poke drudge
22:21 < Jentrep> _6a68: Combobreaker: Lua
22:22 < neeky> ok,now you're a troll - /ignore
22:22 < Jentrep> Finished you *bro* ... and don't ever call me *bro* again
22:22 < owen1> is there a way to compile jade templates after i make a change in one of them?
22:22  * _6a68 yawns and goes back to building cool stuff
22:22 <@isaacbw> Jentrep: wussup *bro*
22:23 <@isaacbw> this channele is for chill peeps
22:23 < _6a68> Jentrep: you should take up a hobby to get your aggression out bro
22:23 <@isaacbw> chenelle
22:23  * Jentrep laughs at _6a68 
22:23 <@isaacbw> the french irc
22:23 < _6a68> heh
22:24 < tjholowaychuk> owen1 in development they re-compile
22:24 < tjholowaychuk> each time
22:24 <@isaacbw> you can use watch to recompile pretty much after you save
22:24 <@isaacbw> if typing make every time seems like a pain
22:24 < Jentrep> _6a68: I'm sorry but I still find you hilarious.
22:24 <@isaacbw> or grunt or whatever weird shit you ouse
22:24 <@isaacbw> *us
22:24 <@isaacbw> use
22:24 <@isaacbw> *use
22:25 < owen1> tjholowaychuk: nice! is it part of jade or express?
22:25 < owen1> isaacbw: oh, u were talking to me?
22:25 < neeky> compilation is usually the template engines' responsibility
22:25 < tjholowaychuk> it's an option that jade has but express enables the setting in production
22:25 < tjholowaychuk> by default
22:26 < _6a68> Jentrep: I'm glad, I was trying to be funny :-) you're hardly a troll at all, more like an angsty tween. I welcome your kind to the internets, but you must be 13 to legally obtain an email account
22:26 < owen1> tjholowaychuk: i use https://github.com/isaacs/templar  so i'll have to look into this
22:26 < qard> _6a68: He has a hobby. It's trolling.
22:27 < _6a68> qard: heh
22:27 < tjholowaychuk> owen1: cool, just need some way to pass cache: true
22:27 < Jentrep> _6a68: You're not really funny at all.
22:27 < Jentrep> _6a68: bro
22:27 < bnoordhuis> Jentrep, _6a68: please keep it civil
22:27 < neeky> http://bit.ly/12glJB8
22:27 < neeky> Jentrep, ^^^^
22:27 < qard> Jentrep: Bro? Bro, bro; bro bro, bro.
22:27 < Jentrep> okay?
22:27 < _6a68> bnoordhuis: sure mang, I'm sorry. I'll stop feeding.
22:28 < qard> But he looks so hungry. :P
22:28 < Jentrep> :P
22:29 < Jentrep> Okay well have fun with your javascriptz
22:29 < neeky> is express.session a 1:1 representation of connects' session object?
22:29 < _6a68> weak. in my day the trolls enticed you into running a fork bomb in your terminal window
22:29  * _6a68 shakes cane
22:30 <@isaacbw> neeky: I think it's the exact same thing
22:30 <@isaacbw> express just pulls in the connect middleware
22:30 < owen1> tjholowaychuk: cache true sound like to opposite, no? i don't want to cache it so every change it will be recompiled
22:30 < qard> _6a68: You can do it anyway, just for nostalgia's sake.
22:30 < tjholowaychuk> owen1: it shouldnt' cache by default
22:30 < tjholowaychuk> owen1 i dont know what that lib does though
22:31 < tjholowaychuk> maybe it has its own option, not sure
22:31 < tjholowaychuk> owen1 oh it probably only reads from disk once, so yea it might have its own option
22:32 < owen1> cache: Boolean. Set to false to suppress 304 responses and re-read templates without restarting the process.
22:32 < Jentrep> Check me out! :D http://bit.ly/14cdE3f
22:32 < qard> Hey, so is there a place to hang out at the Joyent offices before the 3PM bus to NodeConf on Thursday? I'll be getting into downtown SF around noon, so I'll have a few hours to kill.
22:33 < owen1> tjholowaychuk: works with cache: false  thanks
22:34 < rook2pawn> is there a reason why http uses ondata over the 'readable' event in the protocol parser stage?
22:34 < _6a68> qard: mozilla SF has a community space, near embarcadero + harrison
22:35 < qard> _6a68: cool, I'll check that out.
22:36 < bnoordhuis> rook2pawn: legacy, mostly
22:37 < _6a68> qard: I'm sure there's a moz contingent headed to nodeconf if you ask around on the twitter or whatnot
22:38 < rook2pawn> bnoordhuis: is there a move to rewrite the internals so that they are the new style 0.10.10 streams?
22:41 < bnoordhuis> rook2pawn: not really. node's internals are just that, internals
22:42 < bnoordhuis> that ondata thing will probably go someday though
22:42 < rook2pawn> got it
22:59 < aandy> node.js rocks!
23:00 < qard> You're screaming into an echo chamber. ;)
23:00 < aandy> im just missing mscdex' bot
23:03 < someprimetime> is there a way to intercept the multipart filestream with express?  i'm trying to pipe an uploaded file from res.files['avatar']['path'] to gm to do some resizing and then save it
23:03 < aandy> someprimetime: formidable ?
23:04 < aandy> https://github.com/felixge/node-formidable
23:05 < someprimetime> aandy: cool.. I'll use that.. guess I was wondering if express was able to handle that
23:06 < someprimetime> but if I need to include this module then no worries I'll do that
23:06 < someprimetime> you think this will allow me to do what I want to with gm?
23:06 < aandy> i've used it to do realtime unzip of files before. with express there's a cavaeat though. you'll have to disable bodyparser for that route, otherwise it'll (as expected) not work
23:06 < aandy> (as intented)
23:07 < aandy> as in, bodyparser will buffer body + headers and fire when complete, vs. "realtime" as fields, key/value is received from multipart
23:08 < someprimetime> aandy: ah yeah I guess that's ok... maybe you can help me figure out something better then. I'm allowing users to upload avatars but I wanted to resize the incoming image from the stream and then pipe to stdout and save it... could get pretty resource intensive no?
23:08 < someprimetime> should I just send it to my CDN then use rabbitmq or some other kind of message queue to listen for an upload event then do a resize?
23:09 < aandy> to stdout?
23:09 < someprimetime> err nah pipe to a writestream
23:10 < aandy> you could do the resizing in node (magik or one of the other libraries), i haven't really used either much. then store that on s3/cdn/whatever. depends on how much traffic you get/if resizing makes your site slow
23:10 < squeeks> err, serve the file yourself as well, even if the CDN will serve it 99.999% of the time. Nothing sucks more than your CDN breaking and not being able to function.
23:10 < aandy> by that i mean, i'd probably do it in node to begin with, and change it if i saw performance issues. but off the top of my head i'd probably have the same instance handling the request, do the resize
23:12 < someprimetime> aandy: cool dude thanks
23:12 < someprimetime> also squeeks++ will do
23:13 < squeeks> actually, finding out you have an std might suck more, but I've not gone down that street yet.
23:14 < aandy> squeeks: which cdn do you have? :P
23:14 < someprimetime> yikes
23:14 < someprimetime> canadian dollars
23:14 < squeeks> huh? what CDNs do I use? akamai and limelight.
23:15 < aandy> and they crash often for you? o_O
23:15 < squeeks> no but occaisionally something breaks somewhere in the chain and they no longer can serve an asset.
23:16 < aandy> i haven't had that issue yet, but i think i'd try to handle it with client side javascript first, if cdn fails, load from instance /public
23:16 < aandy> but haven't had a chance to see that yet
23:17 < aandy> if i paid for cdn i'd expect it to be online enough for me not to handle both cases on both client and server side anyway
--- Log closed Sat Jun 22 00:00:08 2013
