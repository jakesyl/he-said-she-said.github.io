--- Log opened Fri Jun 22 00:00:59 2012
00:07 <@Nexxy> I just bought a bunch of star stickers for nodeconf!
00:07 < jesusabdullah> cool!
00:07 < jesusabdullah> Too bad i won't be there!
00:07 < othiym23> what do we have to do to earn stars?
00:07 <@Nexxy> jesusabdullah, I will send you some!
00:07 <@Nexxy> othiym23, just say hi
00:07 < jesusabdullah> yaaay :D
00:07 < othiym23> xlnt
00:08 < jesusabdullah> my consolation prize is empirejs. At least it better be or I'll pay to fly over there and leave a bag of flaming shit on Charlie Robbins' doorstep
00:08 < jesusabdullah> I kid, I kid
00:10 < CIA-75> node: Joe Shaw master * r38250f9 / AUTHORS : authors: update email address - http://git.io/hqzqhg
00:27 < EvilPacket> Anybody aware of a openssl wrapper for node that can generate certificates? There is dcrypt (but it's quite old and appears quite broken)… I have found nothing else. I'm creating ssl certs on the fly for a mitm proxy, don't really want to shell out to do it if I can avoid it...
00:44 < othiym23> EvilPacket: is there anything stopping you from using a child process to run openssl to generate your certs?
00:45 < EvilPacket> there isn't anything stopping me, and it's probably what I will end up doing. Was just curious if there might be a more elegant solution.
00:45 < othiym23> EvilPacket: https://github.com/LockerProject/Locker/blob/master/Common/node/lcrypto.js shows how one project I've worked on does it
00:45 < othiym23> maybe not super elegant, but pretty simple
00:46 < EvilPacket> very cool .Thanks for the reference. I'll check it out.
01:27 < mae> yo yo yo
01:27 < justinfr> yo
01:44 < Masyl> Does anyone here know how we could get an "ssh server" module in Node.js ?  I've looked at what substack did, but it looks unfinished.
01:44 < Masyl> How much work would it take ? Who has these skills ?
01:56 < timoxley> Masyl interested in why you need it in node, what's wrong with sshd
02:01 < Masyl> I'm building a content server which has among its features a cli/repl interface to manage it. I want to be able to expose only it's cli, not the whole OS.
02:01 < recursive> my firefox has flipped out, im on freebsd, any idea if it has a signal i can send it to get available windows/uriS?
02:02 < Masyl> A content admin could ssh to any content server in the network (with the standard ssh client or a more specific tool) and he would be ask to authentify with a set of user/pass that is specific to the content server user database.
02:08 < Masyl> My admin cli is already working well through telnet, but telnet sort of sucks… since it only does basic deadlines all arrows keys and auto-complete is lost. And of course it's not secure.
02:09 < Masyl> And I believe most admins would not take telnet very seriously.
02:09 < tbranyen> i use telnet all the time
02:09 < tbranyen> telnet into irc
02:09 < Masyl> Do you also loose the arrow keys ? (or is your client able to negotiate "character mode" correctly? )
02:10 < tbranyen> i can't do anything, other than typing in correctly the first time
02:10 < Masyl> lol
02:11 < Masyl> Managing content that way isn't very usefull...
02:11 < tbranyen> well i'm a perfct typist
02:11 < SomeoneWeird> lol
02:12 < tbranyen> did isaacs just update a gist? or am i tripping on acidic juice again?
02:15 < CIA-75> node: isaacs master * rff2a1b8 / (3 files in 3 dirs): blog: Minor tweaks to style and some data conversion cleanup - http://git.io/5xLjJQ
02:16 < Masyl> Still… with node we already have telnet, web socket, cli and I'm pretty sure we're about to get so morse code module somewhere…. not having an ssh server is silly. I guess it's a really difficult task (I sure don't grasp most of it)
02:20 < CIA-75> node: isaacs master * r6014a62 / doc/blog.html : blog: Missing title tag - http://git.io/lG2OvQ
02:20 < CIA-75> node: isaacs v0.8.0-release * r46c3fa0 / (102 files in 8 dirs): npm: Upgrade to 1.1.31 - http://git.io/j9E7zw
02:20 < CIA-75> node: isaacs v0.8.0-release * rcfc4b54 / (ChangeLog src/node_version.h): wip 0.8.0 RC - http://git.io/bJii7g
02:21 < CIA-75> node: isaacs v0.8.0-release * ra884087 / (ChangeLog src/node_version.h): 2012.06.25, Version 0.8.0 (stable) - http://git.io/bG7Qag
02:24 < shawn> why create an ssh server in node?
02:30 <@Nexxy> shawn, I think the question is, "why not?"
02:32 <@Nexxy> why do anything in node? surely there's something similar in tcl or lua or some other 3 letter language
02:32 < shawn> Nexxy: nod
02:33 <@Nexxy> :P
02:33 < Masyl> shawn, I'm building a content server in node and I want to expose the admin cli through ssh (instead of sucky unsecured telnet)
02:33 < Masyl> (and I don't want to give access to the whole OS to content admins)
02:34 <@Nexxy> why not a DNode RPC?
02:36 < Masyl> Isn't diode good for server-to-server stuff?  How would it solver my problem of giving admins access to my app's cli ?
02:36 < CIA-75> node: isaacs master * r441e792 / src/node.js : stdin.pipe: Replace forgotten opts member - http://git.io/SMogRw
02:36 < Masyl> er… Isn't dnode...
02:36 < CIA-75> node: isaacs v0.8.0-release * r5f24f09 / (102 files in 8 dirs): npm: Upgrade to 1.1.31 - http://git.io/loOQ3w
02:36 < CIA-75> node: isaacs v0.8.0-release * r7076980 / (ChangeLog src/node_version.h): 2012.06.25, Version 0.8.0 (stable) - http://git.io/B1o3Zg
02:45 < huangjs> er... how is getters and setters of connect session store implemented?
02:45 < CIA-75> node: isaacs master * rde89bbb / doc/blog.html : blog: Show category in post metadata - http://git.io/wQxEIg
02:54 <@isaacs> tbranyen: ?
02:54 <@isaacs> tbranyen: update a gist of acidic juice?
02:54 < tbranyen> isaacs: you filled my feed
02:54 <@isaacs> tbranyen: hahah
02:55 <@isaacs> tbranyen: yeah, i was updating it for almost every edit.
02:55 < tbranyen> :D
02:55 <@isaacs> you should probably not follow me on github.
02:55 < tbranyen> i should probably not follow a lot of people, but stalking has its necessary costs
02:55 <@isaacs> i dump massive pointless shit on those feeds.
02:55 <@isaacs> ok, i'm off for the night
02:56 <@isaacs> check out that gist i updated.  it's pretty interesting ;)
03:02 < tbranyen> woot will do
03:03 < tbranyen> oh sheeeit
03:12 < guy> Where is the documentation for this file?
03:12 < guy> https://github.com/ciaranj/node-oauth
03:33 < jmcantrell> npm completion for zsh seems completely broken. is this a known thing?
03:42 < jmcantrell> hello?
03:44 < dr0id> wats the quickest way to setup my node app somewhere if I don't have a VPS or smth ?
03:44 < tbranyen> buy a vps
03:44 < dr0id> (my node app also has some ruby libraries)
03:45 < dr0id> tbranyen: heh :D
03:45 < zomg> Isn't there hosting services as well like no.de
03:46 < pboos> heroku.com
03:46 < pboos> azure.com
03:46 < pboos> http://nodejitsu.com/
03:46 < justinfr> tomsnodehosting.com
03:47 < dr0id> I guess heroku maybe, because it also has ruby and my app has 2 small ruby gems
03:47 < dr0id> I just wrote a quick app for fun that I wanna share and maybe put on github
03:47 < guy> how to kill node instance if ctrl+c or q, doesn't work? only through pid killprocess?
03:48 < dr0id> pboos: how many apps does heroku allow for free?
03:48 < zomg> guy: yeah kill usually does the job
03:49 < justinfr> kill -9
03:49 < guy> I don't think heroku allows any free apps, dr0id
03:49 < guy> http://www.heroku.com/pricing
03:49 < justinfr> it aint, aws has a free usage tier
03:49 < dr0id> orly ? I remember they used to o.O
03:50 < pboos> guy: they do. i am running free node apps on there.. never had to pay.
03:50 < guy> It might be a stupid question, but ... how is heroku better than running your own server?
03:50 < jmcantrell> npm zsh completion? anyone?
03:51  * justinfr is having fun working libffi into node core
03:51 <@Nexxy> guy, when things go down you can blame them instead
03:51 < zomg> jmcantrell: doesn't work at all for me so it probably doesn't support whatever api is used for the autocompletion in shells
03:51 < dr0id> Nexxy: haha
03:51 < guy> Nexxy: well, at least I am able to do something about it if things go bad if it is my server
03:51 < zomg> jmcantrell: I believe oh-my-zsh has an npm plugin tho
03:52 < jmcantrell> zomg: well it's good to know that it's broken for someone else
03:52 <@Nexxy> guy, that's the plus for DIY
03:52 < dr0id> I don't know how heroku is better, maybe its "cloud". but I just don't wanna host on my VPS right now. :P
03:52 <@Nexxy> guy, the plus for PaaS like heroku is not having to screw with config/install
03:52 < justinfr> if things go bad there's no use pointing fingers
03:52 <@Nexxy> but nodejitsu is the only Node PaaS you should worry about
03:52 < justinfr> your customers won't understand that it's vendor N's fault and not yours...
03:53 < guy> justinfr: not always. Through out my 10 years of web business, this week is the first time when I am actually thinking to sue a developer for a completely irresponsible handling of things.
03:53 < jmcantrell> zomg: heh. yeah, theirs is just "eval $(node completion)"
03:53 < jmcantrell> s/node/npm/
03:54 < justinfr> pls don't sue me :)
03:55 < justinfr> i only took shortcuts because the business demanded it
03:56 < dr0id> :P
03:56  * Nexxy makes a mental note to never offer guy any assistance
03:56 < justinfr> lol
03:57 < guy> lolz. I am a very nice guy. : )
03:57 <@Nexxy> sure you say that *now*
03:57 <@Nexxy> :P
03:58 < guy> Though, not when someone carelessly messes up a two years relation with a client by directly sending him "to fuck himself with his deadlines"
03:58 <@Nexxy> haha
03:58 < retrobaby> guy: god i was working on the ay-game right now, having second thoughts
03:58 < retrobaby> guy: haha
03:58 <@Nexxy> well that's what you get for having public-facing developers in the first place :P
03:59 < guy> Well, I have never got into such a situation, so.. no clue what to do. Anyway, out of the scope of this channel.
03:59 < retrobaby> public facing developers? is that even a thing?
03:59 <@Nexxy> it is now, retrobaby.
03:59 < tbranyen> pubic face
03:59 < tbranyen> developer
03:59 <@Nexxy> I should have seen that coming
03:59 < tbranyen> open your eyes
04:00 <@Nexxy> and I see
04:00 < retrobaby> lol now i get why the tech bubble is bursting, damn project managers being incompetent letting developers interact with public
04:00 <@Nexxy> easy now
04:00 <@Nexxy> he hasn't left yet!
04:00 < Lorentz> needs more sales engineers
04:02 < retrobaby> i was in microsoft last summer for internship, and it was my first experience with PMs, :) was not good
04:02 < justinfr> problem arise when devs aren't allowed to interact with the public too
04:02 < dr0id> sales "engineers" ?
04:02 < dr0id> excellent
04:02 < Lorentz> sales people who intricately understand the software they're selling, well enough to be developers/engineers themselves
04:02 < retrobaby> well enough to be "good salesmen" you mean
04:02 < justinfr> PM = middleman = waste
04:02 < justinfr> middleperson :/
04:03 < retrobaby> MS has a heavy PM culture
04:03 < retrobaby> and i aint going abck to that company :\
04:03 < Lorentz> I personally prefer having a manager
04:03 <@Nexxy> so all the project managers are overweight?
04:03 < Lorentz> but I don't like having multiple layers of managers above
04:03 <@Nexxy> I don't get it
04:03 < justinfr> MS has Ballmer at its healm ...nuff said!
04:03 < Lorentz> well, not even above
04:03 < Lorentz> just another co-worker
04:03 < guy> retrobaby: Stop chit-chatting & get back to https://github.com/anuary/ay-game : )
04:03 < Lorentz> who happens to manage things around the place so I don't have to bother
04:04 < retrobaby> guy: <-- exactly what PMs are like
04:04 < retrobaby> lol
04:04 < guy> What's a PM again?
04:04 < Lorentz> project manager
04:04 < Lorentz> prime minister
04:04 < justinfr> PMs can get me a coffee
04:04 <@Nexxy> private message
04:04 < guy> oh. Well. lol. : )
04:04 < retrobaby> Pewpew master
04:04 <@Nexxy> precious metal
04:04 <@Nexxy> performance measurement
04:05 < retrobaby> we ahve a winner
04:05 <@Nexxy> oh, and pocket monster!
04:05 < dr0id> heroku has weird UX, so confusing. can't even find how to create my apps :/ their pricing page is pathetic
04:05 < retrobaby> PokeMon
04:05 < retrobaby> ?
04:05 <@Nexxy> yep!
04:05 < Lorentz> I for one name my personal projects after pokemon names
04:05 <@Nexxy> who doesn't at least once
04:05 < guy> Seriously guys, so much time is wasted on IRC. Should one create "Waste-o-meter" you would stop spending that much time here.
04:06 <@Nexxy> lol
04:06 < Lorentz> guy: we spend time here to relax from work
04:06 <@Nexxy> guy, you assume everyone here is "on the clock"
04:06 <@Nexxy> get over yourself :P
04:06 <@Nexxy> (with all due respect, guy)
04:06 < guy> Lorentz: I know. Me too, but [..] Don't know. Sometimes I get tired from IRC too.
04:08 < dr0id> pboos: : how many apps/sites you hosting on heroku?
04:08 < guy> AvianFlu: Thank you for ntwitter. Time saver. : )
04:08 < retrobaby> yeah i work 8 hours a day makign iphone apps. looking at the primitive IRSSI ui comforts me
04:09 < retrobaby> anyone here on battle.net?
04:09 < dr0id> you wanna battle baby?
04:09 < retrobaby> d3?
04:10 < dr0id> 4
04:10 < retrobaby> oooh, me jelly
04:11 < retrobaby> anyways, to get back on topic
04:11 < retrobaby> anyone seen action.io?
04:11 < retrobaby> i personally dont like it, but its been getting good response
04:12 <@Nexxy> > back on topic
04:12 < dr0id> I don't like windows too
04:12 < retrobaby> be a macfag like me
04:12 < retrobaby> its fun
04:12 < retrobaby> i have 2 ipads, 4 iphones, 2 macbooks
04:12 < retrobaby> sorry
04:14 < hichaelmart> Hey all - there seems to be a bit of a disparity with the docs and the code... http://nodejs.org/api/stream.html#stream_stream_setencoding_encoding seems to indicate that any readable Stream will have a setEncoding function on it, but that doesn't seem to be the case. It's explicitly created for file streams for example: https://github.com/joyent/node/blob/v0.6.19-release/lib/fs.js#L1093
04:14 < hichaelmart> Which means...
04:15 < hichaelmart> How are you supposed to set encoding on any other stream?
04:15 < hichaelmart> for example, a Gunzipped stream?
04:19 < abraxas> I find myself reloading http://blog.nodejs.org several times an hour... "is she there yet?"
04:20 < dr0id> so I decided to use my VPS instead of some free hosting service like heroku.
04:20 < justinfr> action.io? im waiting for lighttable to solve all of my problems :)
04:21 < dr0id> is that going to be laucnhed for reasl?
04:21 < justinfr> got its kickstarter funding
04:21 < dr0id> howmuch
04:21 < retrobaby> a lot
04:21 < retrobaby> 300k i think
04:21 < retrobaby> if i remember well
04:22 < dr0id> ah, http://www.kickstarter.com/projects/ibdknox/light-table
04:22 < dr0id> awesome
04:22 < dr0id> I hope they make it and don't run away with the money :>
04:22 < retrobaby> Nah, a Granger is working hard at it
04:22 < dr0id> inorite?
04:22 < retrobaby> Granger*
04:24 < retrobaby> action.io is good for a services like trybloc.io
04:24 < retrobaby> its a startup by some of my classmates, seems to be going good, they can use it to teach better Ruby/Node
04:25 < retrobaby> but the dea about an online IDE seems faulty, i think of an IDE as a my personal fully extensible playground.
04:25 < retrobaby> with no maintenance schedules
04:26 < justinfr> wonder how they deal with latency
04:26 < dr0id> I don't like the idea of online IDEs either
04:26 <@konobi> cloud9?
04:26 < retrobaby> and with a great feedback, no latency prevents me from knowing how my unit tests run
04:26 < dr0id> no konobi, no :P
04:26 <@konobi> then just use vim
04:26 < retrobaby> dr0id: yeah thats what i thought, apparently they have many servers all over
04:27 < retrobaby> but online IDE's do significantly simplify deployment
04:28 < retrobaby> i guess we will just have to wait and watch when they release it for node
04:35 < hichaelmart> anyone know how to set up gunzip stream encoding?
04:35 < hichaelmart> I might post on SO if no one knows here - can always report back
04:56 < dr0id> trying to make a little tool - http://toolsdeck.com:8080/processify - what do you think ? :)
04:59 < zomg> dr0id: haml output doesn't look very useful :D
05:00 < dr0id> :D
05:00 < dr0id> send me a useful snippet then, heh. scss and sass are left
05:00 < dr0id> then I guess anyone can fork it on github and use as an api over http/cli
05:00 < zomg> Yeah I meant that when you try haml, it just says [object XMLDocument] in the outputs
05:01 < dr0id> oh? does it :s
05:01 < dr0id> did you use the default snippet or some other ?
05:01 < zomg> In Opera it does, not in Chrome though now that I tried
05:01 < dr0id> hmm, should be the same everywhere though :S
05:08 < dr0id> .
05:19 < maedi_> dr0id: the github link's not working for me?
05:20 < dr0id> maedi_: haven't put on github yet, since its not complete.
05:20 < dr0id> you guys think the tool is useful ? :P
05:21 < maedi_> okay no worries, what's the diff between output and response?
05:21 < dr0id> response will be the raw response, I'll make it a JSON response.
05:21 < dr0id> output will be the processed code only
05:22 < maedi_> cool, well that's handy. are you planning to make this a live processing tool for web developers?
05:22 < dr0id> yup
05:22 < dr0id> well, its going to be useful for me, so I just thought why not put on github, get feedbacks, improve and share.
05:23 < maedi_> nice, I like it already, and will watch as soon as I can get to it on github ;)
05:23 < dr0id> cool :D
05:23 < dr0id> I'll try to make installation as simple as possible, but I am not an expert on those, so not sure. maybe something like $ git clone && ./install_pp && npm install -d
05:24 < dr0id> then nodemon index.js and you have it on your vps/hosting/server
05:24 < dr0id> or development (local box) - heh
05:51 < innociv> Ugh.
05:51 < innociv> I occasionally, very rarely, have node.js going out of control and using up all my cpu.
05:55 < TimeTurner> is util.inherits an alias for Object.create?
05:59 < timoxley> TimeTurner nope
06:01 < timoxley> TimeTurner http://nodejs.org/api/all.html#all_util_inherits_constructor_superconstructor https://github.com/joyent/node/blob/master/lib/util.js#L521
06:15 < innociv> And how am I supposed to automatically restart node when it uses 100% cpu?
06:23 < guy> Holy smoke. Just found a way to benchmark database hardcore. Create Twitter stream listener for top 10 hashtags. Tada. This makes me thing what's the total amount of data recorded/read from database.
06:23 < guy> think*
06:34 < T0bsn> guy?
06:36 < guy> https://gist.github.com/b6248fe610d0da95a7d5
06:36 < guy> this keeps sending data, rather than sending once upon connection
06:36 < guy> whu?
06:39 < T0bsn> ?
06:39 < T0bsn> firehose?
06:39 < guy> T0bsn: what?
06:39 < T0bsn> what are you doing? haha
06:40 < guy> Working on a simple script to tract a specific hashtag being tweeted. 
06:40 < SomeoneWeird> weird, that should work guy
06:40 < SomeoneWeird> what browser?
06:41 < SomeoneWeird> it might be making multiple connections
06:41 < guy> Chrome
06:42 < guy> hm. It looks like the response is triggering this behaviour. https://gist.github.com/ffe8f72782c8e05c8433 I've switched to simply this and event fires only once now.
06:42 < guy> I should also mention that Chrome is showing error "Could not decode a text frame as UTF-8"
06:44 < T0bsn> where is it sending the query?
06:45 < guy> T0bsn: MySQL
06:45 < T0bsn> erm
06:45 < guy> If that's what you are asking, though, that's fairly obvious
06:45 < T0bsn> doenst have to be
06:45 < T0bsn> sql is used in many apis
06:45 < dr0id> heh
06:46 < T0bsn> fbl for example looks like sql
06:46 < guy> Well, true.
06:46 < T0bsn> so you are selecting tweets from your database?
06:47 < guy> Yes.
06:47 < guy> https://gist.github.com/9e0ab1dc22f10072bff3 That's the whole script (note, API credentials purposely messed.)
06:48 < T0bsn> hehe
06:48 < T0bsn> good luck with mysql with that
06:48 < guy> why? There isn't going to be much data
06:48 < guy> I am using this filter only for testing.
06:58 < eddyb> there's a cool side-effect to the fact that modules are wrapped in functions: return; will return from that function, and it's better than commenting everything under a certain point
06:59 < T0bsn> erm yep, thats hot functions work
06:59 < T0bsn> oh you mean him
06:59 < T0bsn> haha
06:59 < T0bsn> yeah i saw that too
07:00 < guy> well, it doesn't hurt.
07:00 < guy> it distracts me less when the code is commented out.
07:32 < [AD]Turbo> hola
07:32 < szikael> i have function first(){  somthing}   and function second(){ something }  i want to call them  first and if the first succed then do next   
07:33 < szikael> let sat login.login()        if succed than next  do.chat 
07:33 < eddyb> szikael: can't remember the name right now, but there's a module to do that
07:34 < zomg> szikael: is the function asynchronous?
07:34 < eddyb> I better leave the experts to it
07:35 < eddyb> the module I'm thinking of lets you chain (async?) function calls
07:35 < szikael> yes
07:35 < zomg> eddyb: the module you mean is probably async
07:35 < eddyb> !npm info async
07:35 < eddyb> .npm info async
07:35 < zomg> szikael: just pass your second function as a parameter to the first, then call it
07:36 < zomg> eg. function one(next) { doSomethingAsync(function() { next(); }); }
07:36 < zomg> and then you just do one(two) assuming two is the second function
08:06 < SubStack> https://github.com/substack/number-script
08:07 < mmalecki> SubStack: lol, nice
08:07 < T0bsn> erm yeah
08:07 < T0bsn> hehe
08:07 < T0bsn> why not brainfuck?
08:07 < T0bsn> while youre at it
08:07 < guy> T0bsn: well, this is what I was doing. http://dev.anuary.com/f2bf5a9a-7aed-5ea9-acef-02864d37507e/
08:08 < T0bsn> system errors?
08:08 < guy> wut?
08:09 < SubStack> T0bsn: it's much harder to iterate over the set of all possible brainfuck programs
08:09 < T0bsn> http://motherless.com/485F523
08:09 < T0bsn> thats what youre doing
08:09 < T0bsn> why is this site online?
08:09 < T0bsn> fucking insane.
08:09 < T0bsn> SubStack, why?
08:10 < T0bsn> its just a coding language
08:10 < T0bsn> erm
08:10 < T0bsn> script language
08:11 < SubStack> T0bsn: programs are just very large integers
08:11 < T0bsn> true
08:11 < T0bsn> but your number script isnt compiling it?
08:12 < guy> T0bsn: dude. nsfw.
08:12 < SubStack> check out the example at the bottom
08:12 < T0bsn> lol
08:12 < T0bsn> k
08:12 < SubStack> it generates the set of all possible number script programs
08:12 <@Nexxy> uhh
08:12 < SubStack> in numberscript
08:12 < eddyb> guy: hahahaha, it worked :D
08:13 < eddyb> I just added highlights for boobs and nsfw
08:13 < guy> eddyb: wut?
08:13 < guy> ha
08:13 < T0bsn> LOL
08:13 < eddyb> I think I need to change the color, it's too close to the join/part one
08:15 < eddyb> burning lime should be good
08:15 < eddyb> T0bsn: 404
08:20 < wiherek> hi, what's the usual way to perform functions sequentially? step?
08:20 < php14> q
08:21 < TehShrike> SubStack: number-script made me lol
08:22 < dr0id> hi TehShrike
08:23 < TehShrike> Hello there dr0id
08:23 < dr0id> long time matey
08:24 < TehShrike> :-)
08:28 < guy> T0bsn: uh, lol. I didn't realise people without session are seeing an error
08:28 < guy> http://dev.anuary.com/f2bf5a9a-7aed-5ea9-acef-02864d37507e/
08:29 < guy> That's how top 10 twitter hashtags look like.
08:29 < T0bsn> yeah but that comes from the twitter api right?
08:29 < T0bsn> thats the firehose
08:29 < dr0id> guy: woah, haha. live streaming form twitter?
08:29 < guy> twitter -> database -> client
08:29 < dr0id> tell me how many records in 1min?
08:30 < guy> Not that much. ~3500
08:30 < eddyb> guy: so it's buffered to make it look more live?
08:30 < dr0id> guy: how many hashtags yer trackng?
08:30 < T0bsn> still amazed that you would store that in mysql
08:30 < dr0id> twitter uses mysql to store that if ya didn't know :>
08:30 < guy> eddyb: No, I need to avoid duplicates. Thus goes through my database. 10 hashtags.
08:31 < T0bsn> dr0id, go on kayak.com - select flexi month
08:31 < guy> T0bsn: MySQL as opposed to what?
08:31 < T0bsn> any other document based db
08:31 < dr0id> Postgres I guess, heh
08:31 < eddyb> mongo
08:31 < T0bsn> hehe
08:31 < eddyb> this is #node.js after all
08:31 < guy> Mongo... gtfk.
08:31 < T0bsn> mongo, membase
08:31 < eddyb> maybe sqlite :P
08:32 < php14> mongo
08:32 < eddyb> guy: not a fan-boy, just herd you guys like it
08:32 < TehShrike> <3 relational databases
08:32 < dr0id> T0bsn: ok, and?
08:32 < T0bsn> btw. twitter uses cassandra ;)
08:32 < dr0id> for?
08:32 < T0bsn> everything
08:32 < dr0id> heh, misleading :P
08:33 < dr0id> are you one of those nosql fankids
08:33 < eddyb> guy: which ten?
08:33 < T0bsn> oh i see
08:33 < T0bsn> even flockdb
08:33 < dr0id> anyway, not going to participate in such discussions ever
08:33 < guy> '#NowPlaying,#IWishICould,#FF,#EverFeelLike,#WhatsThePoint,#IDoIt2,#ZodiacFacts,#DeleteYourTwitterIf,#DEBill,#OhJustLikeMe'
08:33 < eddyb> thanks :)
08:33 < guy> based on http://hottesthashtags.wordpress.com/
08:34 < T0bsn> http://www.slideshare.net/nkallen/q-con-3770885?from=ss_embed
08:34 < guy> I just don't get how any non-relational database can store/read data efficiently unless there is only one index key.
08:35 < T0bsn> ...
08:35 < php14> about this time last night it was troll-o'clock as well
08:36 < TehShrike> HEY GUYS
08:36 < T0bsn> http://www.slideshare.net/squarecog/nosql-at-twitterdevoxx2010?src=related_normal&rel=3770885
08:36 < TehShrike> COFFESCRIPT SUCKS
08:36 < T0bsn> theres another one
08:36  * TehShrike runs away giggling
08:36 < dr0id> TehShrike: heheheheheh
08:37 < T0bsn> yeah they aint using mysql for a long time
08:38 < TehShrike> https://github.com/twitter/mysql
08:38 < guy> Ok. Will be fun read.
08:38 < dr0id> TehShrike: I am just building a little tool btw, http://toolsdeck.com:8080/processify - let me know what you think
08:38 < dr0id> T0bsn: they use Mysql + Cassandra
08:38 < guy> dr0id: ++
08:39 < guy> *that* I imagine.
08:39 < T0bsn> yeah but they rewrote mysql
08:39 < dr0id> lol
08:39 < guy> what?
08:39 < dr0id> are you the one who was trolling yesterday ? just wondering
08:39 < guy> my god. T0bsn go talk about this in #mysql
08:39 < dr0id> lemme check lawgs
08:39 < T0bsn> oookay...
08:39 < T0bsn> you guys are pretty ignorant...
08:39 < T0bsn> im going to bed
08:39 < T0bsn> better idea.
08:39 < dr0id> na not you , sorry
08:39 < TehShrike> Twitter does use MySQL pretty heavily, as I understand it
08:40 < dr0id> good night T0bsn
08:40 < TehShrike> It was a big deal when they open-sourced their fork of MySQL a little while ago
08:40 <@Nexxy> sure is grumpy in here
08:40 < NodeX> they dont use it for graphing or edge
08:40  * TehShrike feels cheerful
08:40 < dr0id> hi Nexxy
08:40 < TehShrike> Sure, I don't know what they use it for
08:40 <@Nexxy> hai dr0id :)
08:41 <@Nexxy> anyone using Node + twilio heavily?
08:42 < T0bsn> (mysql is used as a backup.)
08:42 < T0bsn> n8
08:43 < TehShrike> dr0id: huh, that's pretty cool.  "Fork me on GitHub" link doesn't work for me though :-x
08:43 < dr0id> ya haven't put up anything on github yet, as its not complete. let me complete and I will :)
08:44 < dr0id> T0bsn: I thought tar cfz + scp/rsync was enough for backups :D
08:44 < dr0id> n8
08:44 < NodeX> wth is a backup ?
08:44 < kranius> who needs backups anyways
08:45 < dr0id> twitter ,apparently
08:46 < thiagofm> funny room this night
08:46 < NodeX> lol
08:52 < radiodario> github is a backup
08:54 < NodeX> not for your database!
08:54 < NodeX> s/database/data
09:12 < wiherek> how can I run two functions sequentially?
09:14 < zomg> foo(); bar();
09:15 < wiherek> ok, how about running them in series?
09:15 < wiherek> I need to run the first, then the second
09:15 < jesusabdullah> wiherek: You're asking for async functions?
09:15 < wiherek> actually, sync :)
09:15 < jesusabdullah> wiherek: because foo(); bar(); is exactly right for sync functions
09:15 < jesusabdullah> they'll execute in-order
09:15 < wiherek> right, right
09:16 < wiherek> but I meant async functions :(
09:16 < jesusabdullah> in async land, suppose both functions take a callback as an argument, of the form cb(err, res)
09:16 < wiherek> i want them to run synchronously, but they're async by default
09:16 < wiherek> i know callbacks :)
09:16 < wiherek> just dont want to do it with callbacks
09:16 < zomg> That is how you do it
09:17 < zomg> You can build an abstraction around it which makes it look like it isn't a callback
09:17 < wiherek> hm
09:17 < zomg> but it really still is a callback =)
09:17 < wiherek> yea..
09:17 < jesusabdullah> foo(function (err, foosult) {  bar(function (err, secsult) { /* you now have both functions ran in-order */ })); });
09:17 < zomg> Look at a library called async which has some convenient utils for it
09:17 < wiherek> ok, i think i know what you mean
09:17 < jesusabdullah> Yes, util.async has a few useful tools for this kind of thing, but in general you wanna do what I just wrote down
09:17 < wiherek> what about the step module?
09:17 < jesusabdullah> old
09:17 < jesusabdullah> I mean, it works
09:17 < jesusabdullah> afaik
09:18 < jesusabdullah> but I don't think it's maintained really
09:18 < jesusabdullah> and tbh I prefer async's approach
09:18 < jesusabdullah> async.forEachSeries is my fave
09:22 < wiherek> jesusabdullah, thanks, thats just what I needed
09:28 < tim_smart> If you haven't rolled your own control flow library, then you aren't a true node user
09:29 < eddyb> tim_smart++
09:29 < mmalecki> does `if ((--l) === 0) callback()` count?
09:30 < eddyb> I had a client-side control-flow tool for forms, way before I started using node.js
09:30 < jetienne> --l || callback() :)
09:30 < eddyb> jetienne: I am not the only one abusing && and || :D
09:30 < tim_smart> jetienne: I prefer the if () version. More readable
09:30 < jetienne> eddyb: before i was ashamed too :)
09:31 < jetienne> tim_smart: definitily agreed
09:32 < tim_smart> I would also move the decrement above the conditional
10:31 < sinclair> hey., anyone here used azure
11:12 < TehShrike> ...who's running the @FatMikeal Twitter account? :-P
11:20 < malkomalko> anybody know of any libs for pattern matching strings like you'd see in some routes? '/foo/:bar' giving you the 'bar' for general use?
11:22 < Piotras> how to check if given object (not function) is an array ? 
11:22 < sriley> malkomalko: wouldnt that just be a fairly simple regexp
11:23 < malkomalko> yah, writing that out right now actually
11:23 < malkomalko> just was wondering if somebody packaged that type of thing into a lib already
11:23 < malkomalko> if not, I might just make a tiny library that does that
11:23 < mmalecki> Piotras: Array.isArray(thing)
11:23 < malkomalko> might be useful for message passing
11:24 <@Nexxy> malkomalko, https://github.com/visionmedia/express/blob/master/lib/utils.js#L261
11:24 < malkomalko> thanks Nexxy, was just reading express source but couldn't find it
11:24 <@Nexxy> :)
11:25 < Piotras> mmalecki, variable is created with v8 API with v8::Array::New so it's array of objects 
11:25 < Piotras> mmalecki, I use mocha and should for testing 
11:25 < Piotras> something.should.be.a('array'); fails cause it's object 
11:26 < Piotras> at least when I try typeof(something)
11:26 < mmalecki> Piotras: hm, no idea then, I'm not familiar with v8 APIs
11:26 < mmalecki> [maciej@pc08 ~]$ node
11:26 < mmalecki> > typeof []
11:26 < mmalecki> 'object'
11:26 < mmalecki> Array.isArray should work
11:28 < Piotras> Array.isArray(something).should.equal(true); works 
11:28 < chakrit> malkomalko director?
11:29 < chakrit> malkomalko not sure if it's what ur looking for: https://github.com/flatiron/director
11:29 < malkomalko> thanks chakrit, let me take a look
11:32 < dr0id> hi
11:33 < dr0id> http://toolsdeck.com:8080/processify - I wonder why its so slow, node is slow ??!?!!!
11:36 < tbranyen> dr0id: node is sooooo slow.  fork out to perl
11:37 < tornad> node can't be slow, it's event based....
11:37 < tornad> it's the called process that is slow...
11:38 < maedi> NodeX: The answer to live and the universe?
11:38 < maedi> whoops, latency, nevermind
11:41 < dr0id> you guys feel it slow, or is it only me ? :/
11:43 < dr0id> maedi: liking it now ? :P
11:43 < tornad> dr0id: what do you try to bench this ?
11:43 < maedi> sorry I was talking about the chatroom ;)
11:43 < dr0id> tornad: nothing, it just feels slowish to me :P I want to make it more "instant"
11:44 < maedi> seems fast enough for coffee script
11:44 < maedi> but could be instant yeah
11:44 < dr0id> as if it were happening clientside
11:44 < dr0id> not sure how to do it :/ help me!
11:44 < chakrit> dr0id why not just render client-side?
11:46 < dr0id> are there client-side libraries to process them ?
11:46 < chakrit> i think. checking...
11:47 < dr0id> find me for each, I won't be more happy if that exists. altho might be a bit sad because of the time spent on this :P
11:47 < dr0id> even if they exist I guess its gonna put a harsh impact on the user's ram/cpu
11:47 < dr0id> I know one exists for coffee
11:48 < dr0id> um, the one I know aint a parser though :/
11:48 < chakrit> jade works client-side built-in: https://github.com/visionmedia/jade/tree/2ca5abf7c9cba6804b1c903d3925e126cc604dfb#browser-support
11:55 < _smf_> Hi all - is there any way to retrieve the returned TTL from a DNS query?
12:19 < eddyb> so, from what I understand
12:19 < eddyb> one can use v8's internals now
12:19 < eddyb> (there's a package called v8-devel-private-headers)
12:20 < eddyb> does that mean we get to play with the macro assembler?
12:20 < malkomalko> chakrit: https://gist.github.com/7ac1dc74fe4bb782dc9e
12:20 < malkomalko> just incase you were interested
12:20 < eddyb> maybe even assemble functions from JS and call them later from JS?
12:22 < eddyb> has anyone done anything like that?
12:28 < chakrit> malkomalko: cool :)
12:30 < malkomalko> yah, really simple
12:30 < tuhoojabotti> malkomalko: I love that __plus__
12:31 < malkomalko> gonna throw it into a lil lib and add some tests.. will publish soon
12:31 < chakrit> anyone using the passport module?
12:32 < tuhoojabotti> \o
12:32 < tuhoojabotti> Just local strategy, though
12:32 < chakrit> tuhoojabotti: how do you do lock a page (i.e. have to login first.)
12:32 < chakrit> write a middleware yourself?
12:33 < tuhoojabotti> chakrit: https://github.com/tuhoojabotti/ScheduleBot/blob/master/webui.js#L113
12:33 < chakrit> tuhoojabotti, that helps. thanks :)
12:33 < tuhoojabotti> np
12:34 < chakrit> just wondering if passport has something built-in for it or just should just roll my own.
12:35 < tuhoojabotti> I took that from an example
12:35 < chakrit> ok, so that's probably the way to go.
12:35 < tuhoojabotti> basically this: if (req.isAuthenticated()) { return next(); }
12:35 < tuhoojabotti> :P
12:35 < chakrit> yeah trivial. i know haha.
12:36 < chakrit> but then you'd have to do redirects/return urls etc.
12:36 < chakrit> if you ever need it, that is.
12:36 < tuhoojabotti> Well I just redirect to /login
12:38 < Shankar> Does anybody know how to get Public key using modulus and exponent in nodejs
12:39 < Shankar> Got stuck with encryption....
13:07 < dignified> hello everyone
13:08 < dignified> anyone here who knows about child_process.exec under windows? 
13:11 < dignified> I've spawned a child process and from this child process I need to make a call to the powershell. If I make the call from the main process it works but from the child process it always tells me "Command:failed: CreateProcessW: The System coudn't find the file"
13:26 < owen1> is there a better authentication method than a simple user+password? anyone tried browserID?
13:28 < wingie> something wrong with npm?
13:28 < wingie> it installs very slowly
13:28 < wingie> seems to be something wrong with the registry
13:28 < der|> same here
13:29 < der|> wingie: does it get stuck installing vows ?
13:29 < wingie> all packages
13:29 < wingie> isaacs: ^ 
13:29 < wingie> at least for brunch and sugar
13:30 < SubStack> wingie: seems to happen every day around this time
13:30 < der|> ah
13:31 < wingie> didn't know
13:31 < wingie> always worked for me
13:31 < der|> working back again
13:31 < wingie> me 2
13:31 < der|> maybe it's some sort of cron job on the server that takes a bit of time 
13:31 < wingie> yeah
13:41 < CIA-75> node: Bert Belder master * r3bab121 / tools/msvs/nodejsvars.bat : windows: fix/improve nodejsvars.bat - http://git.io/0WnJhA
13:41 < CIA-75> node: Bert Belder master * r2dccebd / tools/msvs/msi/product.wxs : windows msi: set icon for add/remove programs dialog - http://git.io/QtcDsQ
13:41 < CIA-75> node: Bert Belder master * r399731e / tools/msvs/msi/product.wxs : windows msi: add npm dir to user PATH only - http://git.io/xIJfWw
13:41 < CIA-75> node: Bert Belder master * ra1b2741 / tools/msvs/msi/product.wxs : windows msi: use .url files for documentation and website shortcuts - http://git.io/Aglw5A
13:43 < CIA-75> libuv: Ben Noordhuis v0.8 * r171e2f7 / include/uv.h : Update libuv version macro. - http://git.io/ra-q7Q
13:56 < owen1> are there websites that use browserID? any reason why not using it instead of the regular user/password?
14:15 < Nicky> hi, anyone by any change knows how could I debug getting undefined symbol when compiling though gyp?
14:16 < Nicky> I get "undefined symbol: _ZN5boost4asio5error18get_netdb_categoryEv" when i run the compiled node.js extension
14:16 < Nicky> I'm trying to compile native C++ extension using libtorrent library
14:19 < bnoordhuis> https://github.com/joyent/node/issues/3511 <- fs.watchFile() not working on os x, anyone able to reproduce?
14:19 < bnoordhuis> Nicky: you may be missing libasio
14:19 < bnoordhuis> i don't know if the boost version of asio actually requires a separate library
14:21 < Nicky> bnoordhuis: isn't asio part of boost?
14:22 < bnoordhuis> Nicky: yes. but not everything that's in boost is header-only
14:22 < Nicky> bnoordhuis: ah, ok ... I'll try to install
14:23 < Nicky> I think I tried that already ... but I'll try again )
14:27 < MerlinDMC> bnoordhuis, you should consider the Mountain Lion kernel (releated to the bug)
14:29 < bnoordhuis> MerlinDMC: do you have mountain lion?
14:29 < MerlinDMC> but here on Lion i don't get any output as well
14:29 < bnoordhuis> ah, odd
14:29 < MerlinDMC> i have ... but not here and not installed ;)
14:29 < bnoordhuis> i have lion too and it wfm
14:30 < bnoordhuis> MerlinDMC: did you test it with cs or plain js?
14:30 < MerlinDMC> maybe my js code is crappy ... i don't use that so much lately: fs.watchFile('test.js', function(){console.log(arguments)});
14:30 < bnoordhuis> yep, that should work
14:30 < MerlinDMC> it doesn't for me
14:30 < bnoordhuis> it may take a couple of seconds for the changes to get picked up though
14:30 < MerlinDMC> it doesn't after 5 minutes as well ;)
14:31 < MerlinDMC> i also tried it with full pathnames
14:31 < bnoordhuis> hrm, odd indeed
14:31 < MerlinDMC> and it's a fresh compiled v0.7.12 through "brew install node --devel"
14:32 < MerlinDMC> Xcode 4.3.3
14:32 < bnoordhuis> ah, brew
14:32 < bnoordhuis> i have some misgivings about brew
14:33 < MerlinDMC> you have misgivings ... i am lazy as hell ;)
14:33 < bnoordhuis> i occasionally get bug reports that only show up in brew builds and not in tarball builds
14:34 < MerlinDMC> with v0.6.19 it works without problems
14:34 < dr0id> can I check whether headers have been sent or not ?
14:38 < ianl`> hi team
14:39 < CIA-75> libuv: Ben Noordhuis master * rf70b62a / (include/uv.h src/unix/core.c): unix: clarify that uv_getaddrinfo_t is a req - http://git.io/JfiA_Q
14:39 < TimeTurner> http://nodejs.org/api/all.html#all_util_inherits_constructor_superconstructor what's the difference between util.inherits(MyStream, events.EventEmitter); and Mystream.prototype = new events.EventEmitter; ?
14:39 < TimeTurner> MyStream*
14:40 < Naeblis> I'm learning node.js from nodebeginner.org. I'm getting a TypeError: Cannot call method 'writeHead' of undefined, on line 7 for this requestHandler.js file: http://ideone.com/NOcyT
14:40 < TimeTurner> writeHead has been deprecated
14:40 < TimeTurner> what version of node are you using?
14:40 < CIA-75> libuv: Ben Noordhuis master * rf01e9d7 / (include/uv.h src/unix/core.c): unix: clarify that uv_getaddrinfo_t is a req - http://git.io/CsG2uA
14:41 < TimeTurner> or will be deprecated I think
14:41 < Naeblis> uhh...just downloaded from the site, so I assume the latest.
14:41 < Naeblis> v0.6.19
14:41 < Naeblis> so what should I use instead of writeHead()?
14:42 < Naeblis> also, it was working fine for earlier examples.
14:42 < antonl> hey guys - very random question:  anyone know how I can initiate a pyton or ruby script to run from node?
14:43 < TimeTurner> response.statusCode = 200; response.setHeader("Content-Type", "text/html");
14:43 < TimeTurner> try that
14:43 < MerlinDMC> response is unddefined ... look over the code that calls your upload function
14:43 < TimeTurner> antonl: http://nodejs.org/api/all.html#all_child_process_exec_command_options_callback
14:43 < MerlinDMC> the start function ... sry
14:44 < antonl> thanks much TimeT
14:45 < CIA-75> node: isaacs v0.8 * r5565366 / (7 files in 4 dirs): uv: Upgrade to 171e2f71b9 - http://git.io/Cf6FKw
14:45 < CIA-75> node: isaacs v0.8.0-release * r9183596 / (102 files in 8 dirs): npm: Upgrade to 1.1.31 - http://git.io/dbzgaQ
14:45 < CIA-75> node: isaacs v0.8.0-release * rede4bab / (ChangeLog src/node_version.h): 2012.06.25, Version 0.8.0 (stable) - http://git.io/mhLTHQ
14:45 < Naeblis> TimeTurner, TypeError: Cannot set property 'statusCode' of undefined
14:47 < wavded> 0.8!! ;)
14:48 < bgkittrell> nice
14:49 -!- isaacs changed the topic of #Node.js to: node v0.8.0 ships Monday, 15:00 UTC (9:00 US/Pacific). RC's available: http://nodejs.org/dist/v0.8.0/
14:50 < Nicky> bnoordhuis: I've installed libasio-dev but there are only header files in it ...
14:51 < qbit_> node:/usr/local/lib/node_modules/fibers/src/fibers.node: undefined symbol '_ZN2v811HandleScopeC1Ev'
14:51 < qbit_> lazy binding failed!
14:51 < qbit_> nooooooooooooo
14:51 < qbit_> Segmentation fault (core dumped)
14:51 < dr0id> TimeTurner: writeHead has been deprecated ? why doesn't the docs mention that then ? :/
14:52 <@isaacs> TimeTurner: writeHead hasn't been deprecated yet. it will be in 0.9.  it will continue to work forever.
14:53 < Natasha> hello. looking for a node.js developer for a lead developer/CTO position for a startup. great opportunity. please PM me if interested
14:53 < dr0id> do we have to relocate?
14:53 <@isaacs> TimeTurner: 0.8 is the last release that will intentionally remove API
14:53 < dr0id> tell me more
14:54 <@isaacs> TimeTurner: and even then, 0.8 doesn't really remove any API surface.  it does deprecate and warn on some things, but even binary addons should continue to compile if they worked in 0.6
14:54 <@isaacs> dr0id: ^
14:55 <@isaacs> TimeTurner: re util.inherits: when you do MyStream.prototype = new events.EventEmitter, you're *also* calling the EventEmitter function on your prototype
14:55 <@isaacs> TimeTurner: this is fine when your ctors are no-ops, but EventEmitter is not any more, with the advent of domains
14:56 <@isaacs> TimeTurner: $ node -pe 'require("events").EventEmitter.toString()'
14:56 <@isaacs> TimeTurner: so, if you've ever done `require('domain')` in your program, any EE calls will attach 'this' to the current domain at creation time
15:15 < CIA-75> libuv: Ben Noordhuis master * rc222f07 / (include/uv-private/uv-unix.h src/unix/sunos.c): sunos: replace ev_io with uv__io_t - http://git.io/2LvYew
15:15 < CIA-75> libuv: Ben Noordhuis master * r2a5ff05 / src/unix/sunos.c : sunos: replace bzero with memset - http://git.io/o9ZInQ
15:15 < CIA-75> libuv: Ben Noordhuis master * r42df4cb / src/unix/sunos.c : sunos: fix use of pid_t in format string - http://git.io/DhEeVg
15:18 < CIA-75> libuv: Ben Noordhuis master * r120a4af / include/uv-private/uv-unix.h : sunos: remove unused field event_watcher - http://git.io/dyya5Q
15:28 < TheEmpath> hail nodelings
15:28 < TheEmpath> i miss you all
15:28 < TheEmpath> but im stuck in Symfony hell, dreaming of Nodeful bliss
15:28 < WarheadsSE> :)
15:28 < TheEmpath> keep fighting hte good fight
15:33 < dr0id> can setHeader() be called after write() ?
15:42 <@maxogden> no
15:42 < Karmaon> Does anyone here use the postgres driver?
15:49 < NodeX> does anyone use postgres is more the question I wouldv'e thought :PO
15:49 < NodeX> :P
15:49 < CIA-75> node: isaacs v0.8 * rd34fea5 / (Makefile tools/blog/generate.js doc/rss.xml): blog: Generate RSS feeds - http://git.io/ud-i0Q
15:50 < dr0id> NodeX: :)
16:04 < CIA-75> node: isaacs v0.8 * r2603cc5 / doc/blog.html : blog: add RSS link tag for discovery - http://git.io/7mN6FA
16:04 < jasabella> hi
16:05 < jasabella> not quite sure i understand how node.js works, where can i read some more? i'm on the /about/ page
16:06 < WarheadsSE> http://howtonode.org/
16:07 < jasabella> thx
16:07 < WarheadsSE> also: http://nodebits.org/  http://nodemanual.org/latest/
16:07 < jasabella> one server per web app? Hmmm
16:08 <@maxogden> nodeup.com also
16:08 < WarheadsSE> yes, that too
16:08 < jasabella> i'm looking at nodebeginner.org
16:08 < WarheadsSE> jasabella: what are you coming from ?
16:08 < WarheadsSE> language wise
16:08 < jasabella> i'm used to the cgi/server extension model way of doing things
16:08 < jasabella> lol
16:08 <@maxogden> jasabella: you arent limited to one server per web app, just one thread per process
16:09 < jasabella> i'm not even started with the language bit, im getting my head around the architecture
16:09 < WarheadsSE> cgi is really just a proxy though, from the http server to the "web app"
16:09 < jasabella> php, perl, some c
16:09 < jasabella> yes
16:10 < jasabella> it seems like node.js does away with the webserver altogether by being the webserver itself
16:10 < jasabella> not used to this yet :)
16:10 < bgkittrell> jasabella: I've found Node to be reminiscent of Perl in some strange way.  Not necessarily in the syntax, but in the spirit.  If that makes any sense.
16:10 < WarheadsSE> yeah, but perl/pythong/ can also do it
16:11 < WarheadsSE> Perl: Catalyst can self-serve as well
16:11 < jasabella> never tried that before :)
16:11 < WarheadsSE> This is really just a more exposed/integrated different
16:12 < jasabella> it's new to me but yea i can see that :)
16:13 < dr0id> if a callback is called from 2 different functions (order of execution is not guaranteed since execution of those functions is async) - how can I make sure that the code inside callback actually gets executed only once by one of those functions ?
16:13 < WarheadsSE> state flag
16:14 < dr0id> inside the callback?
16:14 < WarheadsSE> yes
16:14 <@maxogden> dr0id: helper libs like async do it
16:14 < WarheadsSE> if( !hasBeenCalled ) {}
16:14 < dr0id> that's what I am doing, but then I have another query. how can I be sure that the state flag conditional doesn't get executed at the same time by the 2 functions ?
16:14 < dr0id> because if that happens, then the code will be executed twice...
16:14 < WarheadsSE> in a single process it cant
16:15 < WarheadsSE> async != mutli-(process/thread)
16:15 < dr0id> hmm, but the 2 functions execute in async, isn't it ? they could lead to the execution of the state flag conditional at the same time ?
16:15 < WarheadsSE> no
16:15 < WarheadsSE> async != paralle
16:16 <@maxogden> node is single threaded so it will never do two things at once
16:16 <@maxogden> it always does them in a big assembly line
16:16 < dr0id> do those 2 functions execute one after another? (altho order is not guaranteed)
16:16 < staar2> does the android browsers support the socket.io or not ?
16:16 < dr0id> either a -> b or b -> a ?
16:17 < WarheadsSE> more like Ax, Ay
16:17 < staar2> or just saying the websockets
16:17 < WarheadsSE> staar2: depends on your browser of choice
16:17 < dr0id> I am confused regarding this :S
16:18 < WarheadsSE> I'd use socket.io as it has necessary fallback methods
16:18 < WarheadsSE> let me see if i can explain it
16:18 < staar2> well android 2.3 with opera mobile ver ***
16:18 < WarheadsSE> staar2: then you need to ask Opera.
16:18 < dr0id> is it that multiple functions executing in async cannot execute at the same time but one after another, altho order cannot be guaranteed ?
16:18 < upb> yes
16:18 < WarheadsSE> yes, thats pretty accurate
16:18 < staar2> or android native browser
16:19 < dr0id> aha :)
16:19 < dr0id> then what's the point of async ? make it sync :P
16:19 < WarheadsSE> like any event driven
16:19  * WarheadsSE facepalm
16:19 < dr0id> heh j/k
16:20 < upb> you mustve been serious :)
16:20 < dr0id> WarheadsSE: if you were going to explain something, go ahead. I would like to listen, might learn more.
16:20 < WarheadsSE> I know it very well, I'm just being silly... lovely meds..
16:21 < WarheadsSE> they reason it is async is for the event model
16:21 < sriley> well the order of the request can be guaranteed but the response can come back whenever
16:21 < WarheadsSE> being an evented model, it does not sit and wait on various IO related tasks
16:22 < upb> it = what?:P
16:22 < WarheadsSE> nodejs
16:22 < upb> but it does ?:P
16:22 < WarheadsSE> no, not exactly
16:23 < WarheadsSE> at least not in what is exposed to a user not explicity using a syncBlarg type of call
16:23 < upb> how does it work then, by magic ?:P
16:23 < upb> heh, nice save
16:23 < upb> but it does itself
16:23 < sriley> it spawns a thread does the blocking io and then calls the callback
16:24 < WarheadsSE> upb: idk you, so Im going to assume you're not trying to waste my time
16:24 < upb> i'm not
16:25 < staar2> well opera mobile is so hacky browser you can enable the websockets also :D
16:25 < upb> i havent checked the source of node but it would make sense for it to use epoll or select or WaitFor* on windows
16:26 <@isaacs> jcoglan: yo
16:26 <@isaacs> jcoglan: did you re-publish vault?
16:26 < WarheadsSE> the exposed context (that your code runs in) is in a thread, apart from the blocking needs
16:26 <@isaacs> jcoglan: if not, it's a problem with the users' caches.  if so, the error mauy just be lost to the sands of time :)
16:27 < WarheadsSE> basically, saving you all the hassle of implementing/managing that yourself
16:27 < Zenithar> hi
16:29 < jcoglan> hey isaacs
16:29 < jcoglan> no, I only published once
16:30 < WarheadsSE> does that make sense dr0id, upb, jasabella ?
16:31 < upb> nah, in that way there could be one outstanding io call at any one time
16:31 < upb> or it would need a thread for every outstanding io call
16:32 < jcoglan> I just ran `npm install vault` and it has no lib directory
16:33 < jcoglan> @isaacs I get these dirs: bin, node, node_modules, plus package.json and README.markdown
16:36 < CIA-75> libuv: Ben Noordhuis master * re54cda5 / (uv.gyp src/unix/linux/linux-core.c src/unix/linux/core.c): unix: rename linux/core.c to linux/linux-core.c - http://git.io/57dclg
16:41 < CIA-75> libuv: Ben Noordhuis master * re132075 / (4 files in 2 dirs): unix: rename linux/core.c to linux/linux-core.c - http://git.io/aBqJNw
17:05 < CIA-75> libuv: Ben Noordhuis master * rf91e6be / (src/unix/linux/syscalls.c src/unix/linux/syscalls.h): linux: add epoll syscalls - http://git.io/zahdsg
17:05 < jcoglan> isaacs: same problem w/ node 0.7.12, npm 1.1.30
17:06 <@isaacs> jcoglan: npm cache clean; npm cache add vault; npm cache ls vault
17:06 <@isaacs> jcoglan: can you gist that?
17:07 < jcoglan> isaacs: https://gist.github.com/2974014
17:13 < jcoglan> isaacs: to be sure, the tarball in my cache does not have a lib directory
17:15 <@isaacs> jcoglan: ah, interesting!
17:16 < jcoglan> isaacs: you say your tarball *does* have lib?
17:16 < ag4ve> wl
17:16 <@isaacs> jcoglan: got it reproducing.
17:17 <@isaacs> jcoglan: it didn't repro before because i'd already added it from git
17:17 <@isaacs> jcoglan: the one on the registry doesn't have a lib either
17:18 < jcoglan> isaacs: great. my hunch is that the fact that the web dir is in npmignore, and contains a symlink to lib, could be the problem
17:18 <@isaacs> jcoglan: https://gist.github.com/2974061
17:18 < jcoglan> not clear to me if that's a bug or intentional
17:18 <@isaacs> jcoglan: if you update npm, and do a `npm publish -f` to clobber the existing one, it should fix the problem.
17:19 <@isaacs> jcoglan: what npm version did you publish with initially?
17:19 <@isaacs> 1.1.21
17:19 <@isaacs> (according to the registry)
17:20 <@isaacs> jcoglan: so, looks like whatever the bug is, it's fixed now.
17:20 < jcoglan> I'm really not sure which version -- on a computer I don't have access to right now
17:20 <@isaacs> but yes, i suspect the ignoring the web dir, when it has a symlink to lib, probably confused things
17:20 < jcoglan> but probably whatever was current when node 0.6.19 came out -- I use nvm
17:20 <@isaacs> yep
17:20 <@isaacs> we should release a 0.6.20 for the npm update
17:22 < jocafa> anyone playing with jam?
17:23 < jcoglan> republished with npm 1.1.30, works
17:23 < jcoglan> isaacs: thanks a lot :)
17:24 <@isaacs> jcoglan: np
17:30 < tuhoojabotti> Does Node clear forks when main process is killed?
17:30 < tuhoojabotti> Well exited
17:31 < TheDahv> Hi folks. I'm trying to help a friend get node up and running via nvm on his machine
17:31 <@isaacs> tuhoojabotti: in 0.8, yes, except for detached children.
17:31 < TheDahv> He's getting lots of build errors. Specifically when gcc tries to compile uv.h
17:31 < TheDahv> Any thoughts?
17:31 <@isaacs> tuhoojabotti: in 0.6, mostly always probably it tries really hard to but whattayagonnado
17:31 < tuhoojabotti> isaacs: Does 0.7.12 count?
17:31 <@isaacs> tuhoojabotti: yes.
17:31 < TheDahv> I checked that he has python (2.7)
17:31 < tuhoojabotti> Great.
17:32 < TheDahv> Are there any other pre-requisites to getting node built in a given environment
17:32 < TheDahv> ?
17:33 < drudge> TheDahv: would be easier if you posted the errors
17:33 < TheDahv> Not on my machine, but I'll have him send them to me
17:33 < CIA-75> libuv: Bert Belder reviewme * rbc10a12 / src/win/fs.c : windows: whitespace fixes - http://git.io/T2jKfA
17:33 < CIA-75> libuv: Bert Belder reviewme * r9d0239d / (src/win/error.c src/win/fs.c): windows: map ERROR_INVALID_HANDLE to UV_EBADF - http://git.io/ZSL9Zw
17:33 < CIA-75> libuv: Bert Belder reviewme * rdc8eeee / src/win/fs.c : windows: don't use CRT functions to implement (f)utimes and (f)stat - http://git.io/hSwPZg
17:34 < TheDahv> Build failed:  -> task failed (err #2): 
17:34 < TheDahv> 	{task: uv uv.h -> uv.a}	
17:34 <@isaacs> TheDahv: Gist all of the output.
17:34 < TheDahv> I can get him to dump some stuff into pastebin...hold up
17:34 < TheDahv> or gist
17:35 < TheDahv> This will be interesting to figure out...I've been using a Linux environment for a while without issue
17:35 < TheDahv> I'm getting a mbair later 
17:36 < TheDahv> https://gist.github.com/2974133
17:37 < jocafa> caolanm:  y no jam search?  (屮゜Д゜)屮 
17:38 <@isaacs> bnoordhuis, TooTallNate: https://gist.github.com/2974133 <-- ever seen that before?
17:38 < CIA-75> libuv: Bert Belder reviewme * r9848ec8 / src/win/fs.c : windows: don't use CRT functions to implement (f)utimes and (f)stat - http://git.io/83hScA
17:38 < caolanm> jocafa: haha, it's on the way ;) -- working on it right now...
17:38 < jocafa> rock
17:38 <@isaacs> TheDahv: can you get him to use irc and come here?
17:38 < TheDahv> He is sitting right next to me
17:38 < caolanm> jocafa: until then use website ;)
17:38 < jocafa> i just signed up so i can tinker/publish :)
17:38 < TheDahv> Otherwise, I'll have to teach him some IRC
17:38 < caolanm> jocafa: nice
17:39 < distracteddev> If I needed to schedule a function that needs to be run 24 hours from now, how would I do that? I cannot simply use a setTimeout because the process is not guaranteed to live that long
17:39 <@isaacs> TheDahv: heh
17:39 <@isaacs> TheDahv: i've never seen that coreservices stuff befoer building node
17:39 <@isaacs> TheDahv: is openssl installed?
17:39 < TheDahv> fwiw, I don't think he has xcode
17:39 < TheDahv> hold up
17:39 < CIA-75> libuv: Bert Belder reviewme * rdd8f3e0 / src/win/fs.c : windows: don't use CRT functions to implement (f)utimes and (f)stat - http://git.io/enhAAg
17:40 < TheDahv> getting him on irc...
17:40 < adams> im the culprit
17:40 < caolanm> isaacs: thanks for all the windows fixes you made for NPM btw, they're now getting reused in Jam ;)
17:40 <@isaacs> caolanm: sweet :)
17:41 < TheDahv> openssh is a library?
17:41 < TheDahv> I don't think macs have locatedb on by default
17:43 < TheDahv> So is xcode a big requirement here or what?
17:43 < distracteddev> If I needed to schedule a function that needs to be run 24 hours from now, how would I do that? I cannot simply use a setTimeout because the process is not guaranteed to live that long
17:44 < distracteddev> the timing is triggered by the user of the application. I have found node-cron, but I am not sure if those jobs persist across process restarts
17:44 < context> distracteddev: cron
17:45 < context> distracteddev: if its using crontab it will persist across restarting the entire machine
17:45 < distracteddev> context: How can i check that?
17:45 < context> crontab -l
17:45 < TheDahv> isaacs: the build output from the gist seems to imply openssh isn't on there
17:45 < jocafa> aaaand publish'd to jam
17:47 < context> thedahv: you need the openssl-dev package
17:47 < context> err
17:47 < context> thedahv: whats the problem ?
17:47 < zephy> hey guys, I'm wondering: is there a way to use v8 separately to debug parts of JS which have no connection to Node?
17:47 < zephy> like, say my domain logic
17:47 < distracteddev> context: in my terminal? Just looking at the source it doesnt seem to use anything like crontab and doesn't seem to write anything to the fs so I don't belive it persists. 
17:47 < TheDahv> context: trying to help my friend get nvm/node up and running in osx
17:47 < TheDahv> build is failing
17:48 < TheDahv> specifically failing on any build steps related to uv
17:48 < TheDahv> which is a pretty important part of node, if I understand it correctly
17:50 < distracteddev> context: Do you know of any persistent cron implementations?
17:51 < distracteddev> context: Just found node-crontab. Thanks for pointing me in the right direction!
17:51 < distracteddev> context: Now lets just hope Heroku supports crontab
18:01 < context> distracteddev: fail. you need to use heroku-scheduler from the addons
18:02 < tuhoojabotti> Can I emulate sigint in node, like stdin.write('^C') or something
18:02 < Spion> Yeah sure. Use the particular cloud's solution. Then you wont be able to migrate easily.
18:03 < context> spion: or dont use anything at all and dont do what you are trying to
18:04 < Spion> node-cron works nicely.
18:05 < jesusabdullah> Good to know!
18:05 < jesusabdullah> I just threw it in a project of mine but the timing is like biweekly so
18:05 < jesusabdullah> kinda hard to test
18:08 < kenperkins> man, up to 800 users in here
18:08 < kenperkins> crazy
18:08 < distracteddev> context: Yeah, I have given up. Just going to create a simple implementation that saves jobs to my db and schedules them on every reboot
18:10 < distracteddev> Spion: But doesn't node-cron die when the process dies? It doesnt seem to have any persistence
18:18 < sriley> distracteddev: that is very true looking at the src it doesnt appear to be too useful
18:19 < Spion> heroku restarts your process.
18:19 < Spion> if your process dies, you're in for more trouble than just your cron
18:19 < distracteddev> Spion: Yes, but how will node-cron be aware of the function i scheduled before it started
18:19 < distracteddev> No, Process's go up and down all the time in Heroku
18:20 < distracteddev> Heroku itself will idle(kill) your process if its not used for more than an hour
18:21 < Spion> You can always put your tasks in some persistence layer and reload them on start.
18:21 < distracteddev> they use the term "Compute-Units" for that Reason. You never really have a "process" on Heroku it seems. Makes for an amazingly scalable architecure. I am able to serve 1k requests a second on 6 dynos
18:21 < Spion> and if your task set is finite and predefined, you don't even have to persist them
18:21 < TheDahv> isaacs: any thoughts? He's downloading all of xcode now to see if it makes a difference
18:21 < distracteddev> Spion: Thats exactly what I'm doing now :) Was just hoping someone else had done it for me
18:21 < Spion> (just set them up on start)
18:21 < context> spion: node-cron works on heroku?
18:21 <@isaacs> TheDahv: TheDahv you shouldn't need all of xcode
18:21 <@isaacs> TheDahv: just the g++ and gcc
18:22 < Spion> I think node-cron is pure JS
18:22 < distracteddev> node-cron is a fully in-node implementation. Doesn't actually make cron files. It just uses set interval
18:22 < distracteddev> it seems..
18:22 < distracteddev> set timeout
18:22 < distracteddev> actually*
18:22 <@isaacs> TheDahv: can he compile master/0.8?
18:23 < context> node-cron is useless if you are using a single dyno on heroku, which will die after 1 hour of idle and be started when required.
18:23 < distracteddev> Nodeconf is so close I can feeel it 
18:23 < distracteddev> context: exactly :( 
18:23 < context> and node-cron is useless depending on job for multiple dynos in which case... how do you decide which dyno runs said cron.. ?
18:23 < context> so... spion again his option is heroku-scheduler
18:23 < distracteddev> context: Thats simple, you send a request to actually fire the function, then the heroku router will send that reqeuest to only one of the dynos
18:24 < context> so now you are depending on two locations, two machines, two connections to ensure said job runs
18:24 < TheDahv> isaacs: I'll track him down and have him try
18:24 < distracteddev> but like I said earlier, native is the way Im going
18:24 < TheDahv> basically: `nvm install 0.8.0` right?
18:24 < Spion> web dynos dont die. do they?
18:24 < distracteddev> Just going to persist jobs in db and have a worker process run them
18:25 < context> spion: if you are only using 1 dyno it will be killed after 1 hour of idleness
18:25 < distracteddev> Yes they do, espeically ones that are used as pipes and die due to parse errors or timeouts when making requests to external APIs
18:25 < Spion> idleness = no requests?
18:25 < distracteddev> correct
18:26 < distracteddev> but the moment you have more than a single dyno, they stay up forever
18:26 < distracteddev> but code pushes still restart the dynos
18:28 < adams> Installed Xcode, tried to reinstall nvm, same error.
18:28 < Spion> Thats really news to me. I have a node-cron running every 5 minutes to fetch some data from an external service and it works like clockwork on heroku
18:28 < Spion> And I do have periods of no-traffic > 1 hour
18:28 < adams> https://gist.github.com/2974133
18:29 < Spion> so far, no skips in the data
18:30 < TheDahv> adams: there was also a suggestion to try installing node 0.8
18:30 < TheDahv> "nvm install v0.8.0"
18:30 < adams> @TheDahv result: nvm: install v0.8.0 failed!
18:30 < TheDahv> ah bummer
18:31 < TheDahv> Same basic errors
18:31 < TheDahv> ?
18:31 < jfroma> how do i define a readonly property in a constructor function?
18:31 < adams> Nope just that one line
18:32 < TheDahv> oh...it didn't even try to build
18:32 < Spion> oops thats not quite right. I have an external machine ping my server every 5 minutes.
18:32 < Spion> Sorry.
18:32 < jfroma> should i use  this.__defineGetter__ ?
18:32 < TheDahv> Anybody in the channel successfully installed node on a new OSX environment?
18:32 < Spion> its not just pinging it, its uploading data too - anyway thats probably enough to avoid having the process killed
18:33 < TheDahv> I'm sure most folks probably already had prerequisites on the machine from past dev projects
18:33 < TheDahv> But it would be good to figure out what it takes to get a brand new machine into a working dev environment
18:34 < jfroma> should i use  this.__defineGetter__ ?
18:34 < jfroma> sorry about that
18:41 < CIA-75> libuv: Bert Belder v0.8 * rd0950dd / src/win/fs.c : windows: whitespace fixes - http://git.io/HDCbww
18:41 < CIA-75> libuv: Bert Belder v0.8 * r3da9504 / (src/win/error.c src/win/fs.c): windows: map ERROR_INVALID_HANDLE to UV_EBADF - http://git.io/QI2MTQ
18:41 < CIA-75> libuv: Bert Belder v0.8 * r0387c23 / src/win/fs.c : windows: don't use CRT functions to implement (f)utimes and (f)stat - http://git.io/UXNV_w
18:42 < CIA-75> libuv: Ben Noordhuis master * r171e2f7 / include/uv.h : Update libuv version macro. - http://git.io/ra-q7Q
18:42 < CIA-75> libuv: Bert Belder master * rd0950dd / src/win/fs.c : windows: whitespace fixes - http://git.io/HDCbww
18:42 < CIA-75> libuv: Bert Belder master * r3da9504 / (src/win/error.c src/win/fs.c): windows: map ERROR_INVALID_HANDLE to UV_EBADF - http://git.io/QI2MTQ
18:42 < CIA-75> libuv: Bert Belder master * r0387c23 / src/win/fs.c : windows: don't use CRT functions to implement (f)utimes and (f)stat - http://git.io/UXNV_w
18:42 < CIA-75> libuv: Bert Belder master * r523bee8 / (include/uv.h src/win/error.c src/win/fs.c): Merge branch 'v0.8' - http://git.io/U7ROZg
18:44 < CIA-75> libuv: Bert Belder master * rd831e52 / include/uv.h : uv: now working on v0.9 (+5 more commits...) - http://git.io/kt1aRA
18:49 < qbit_> so for any native module on 0.8.0 i get "undefined symbol '_ZN2v811HandleScopeC1Ev'"
18:49 < qbit_> any pointers on tracking down why it's happening? 
18:50 < qbit_> the modules build fine 
18:50 < qbit_> get the error when i "require( '<module>' )"
18:52 < context> module was not installed against 0.8 ?
18:53 < CIA-75> node: Bert Belder v0.8 * r1b11416 / (deps/uv/src/win/error.c deps/uv/src/win/fs.c): uv: upgrade to 0387c23 - http://git.io/nST1Ag
18:54 < qbit_> context: this is a fresh build from git repo 
18:54 < qbit_> gyp info it worked if it ends with ok
18:54 < qbit_> gyp info using node-gyp@0.5.2
18:54 < qbit_> gyp info using node@0.8.0
18:54 < qbit_> gyp info spawn python2.7
18:58 < qbit_> this same thing happened when the jump from 0.4 to 0.6 happened
18:59 < qbit_> s/same/similar/
19:01 < qubit[01]> qbit_,  you bitch, now we have to fight the death
19:01 < qubit[01]> to the*
19:02 < qubit[01]> there can be only one.
19:02 < owen1> i try to make a post request to https://browserid.org/verify but i get: 'getaddrinfo ENOENT' . when i use curl it works.
19:02 < qbit_> qubit[01]: no way dude.. we can totally exist in the same place at the same time o/
19:02 < qubit[01]> owen1, are you on windows 
19:03 < qubit[01]> qbit_,  :)
19:04 < Akh755> *--..--* +-* --/* //**-----++
19:15 < owen1> qubit[01]: hell no
19:15 < owen1> qubit[01]: mac
19:16 < owen1> qubit[01]: here is my post - http://pastebin.com/Y8zXNkyN
19:17 < owen1> i am not sure if that's the correct way to pass data to a post
19:17 < qubit[01]> Im pretty sure everything uses 
19:17 < qubit[01]> r
19:17 < qubit[01]> doh
19:17 < owen1> i copy it from stackoverflow since i didn't see an example for post with data in the http api.
19:17 < qubit[01]>  \r\n
19:18 < qubit[01]> I try to stay away from raw node as much as possible, npm view request, <-- handy module
19:20 < owen1> qubit[01]: i want to do it a few times with raw before using request
19:20 < qubit[01]> good call
19:23 < explodes> I have never seen this syntax: http://www.pastie.org/4134030 What  does >>sieve : <etc> mean?
19:24 < explodes> Oh its a label
19:25 < RLa> poor man's goto
19:27 < owen1> qubit[01]:any idea how to send data with reuest.post?
19:36 < qbit_> stab _ZN2v811HandleScopeC1Ev
19:50 < jareiko> I'm trying to write a command-line utility that connects to the DB, does a query and prints the result
19:50 < jareiko> but it seems the process exits before the necessary callback can be called
19:50 < jareiko> is there a way to wait on a callback?
19:52 < TheDahv> I think you can do a `while (true) { }` to force a loop
19:52 < TheDahv> And there is a way to send a program close signal and close the program when your code decides it is done
19:52 < TheDahv> loop goes at the end
19:52 < TheDahv> that's one way anyway...
19:52 < jareiko> could work, but it would be a 100% cpu busy loop
19:53 < gkatsev> you wait for a callback by putting all you want to do when the callback returns into the callback and then not doing anything else.
19:53 < jareiko> I wonder how the 'net' / 'http' / 'connect' / 'express' modules do it
19:53 < jareiko> gkatsev: but the process seems to just exit, and not wait for the DB query to complete
19:53 < gkatsev> then something else is going on.
19:54 < jareiko> hmm
19:54 < RLa> while (true) { } will block forever
19:54 < RLa> because callbacks will never be run
19:55 < jareiko> RLa: good point
19:55 < RLa> you should exit after callback finishes running
19:55 < dshap> hey guys, when i do http.request(options, function(res){ … }) ….what type of object is "res" in that scenario?
19:55 < RLa> or just close the connection so it will exit itself
19:56 < jareiko> RLa: the problem is that it exits too early though
19:56 < RLa> should be function(err, res)
19:56 < RLa> can you paste whole code somewhere
19:57 < RLa> dshap, read manual about http response
19:57 < jareiko> I guess a way to make this question more generic: under what circumstances does node terminate?
19:57 < RLa> it lists all properties
19:57 < jareiko> eg, how does a connect/express app prevent exit?
19:57 < RLa> i think when last callback returns
19:57 < jareiko> or just a 'net' server
19:57 < dshap> RLa: is it this?  http://nodejs.org/api/http.html#http_class_http_serverresponse
19:58 < dshap> RLa: the reason i'm confused is because i'm trying to check the headers with the .getHeader() method but node is telling me that getHeader() isn't a method
19:58 < RLa> jareiko, probably something to do with sockets and libev/eio
19:58 < RLa> i have no idea about internals
19:58 < rageous> I'm new to this -- Is there any special trick for getting modules to be found under windows when installed using npm?
19:59 < Bonuspunkt> isaacs have you seen https://github.com/isaacs/npm/issues/2552 ?
19:59 < RLa> dshap, i think this one: http://nodejs.org/api/http.html#http_http_clientresponse
19:59 < dshap> RLa: that is what i missed!  thank you
19:59 < game16> Hi, I'm just wondering, if anyone here used Geddy or similar node.js frameworks
20:03 < Alfa9Dev> Hello :D
20:24 < staar2> game16, you can look flatiron 
20:24 < game16> flatiron?
20:24 < rageous> If I install a module, say 'formidable' with npm, should it just be as simple as var formidable = require("formidable"); ?
20:24 < owen1> rageous: i think npm search <whatever>
20:24 < game16> Erm, is Express just like, the one with the most resources?
20:25 < owen1> game16: %90 uses express, but some of us use node with no frameworks
20:25 < rageous> owen1: I believe it's installed. I tried both npm install formidable and npm -g install formidable, but it continues to say it cannot be found, despite its existence in the modules directory.
20:25 < owen1> game16: https://github.com/oren/node-website-template
20:26 < owen1> game16: all you need is a way to route a url to a function and you don't need a framework for that.
20:26 < game16> I'd like a MVC framework so I've been trying Geddy but I'm not very experience with Node and I really don't know where to start. I'm just looking for something that is well documented 
20:26 < owen1> game16: express is your friend
20:27 < owen1> game16: or clone the project i sent u.
20:27 < game16> is that yours? owen is suspiciously similar to oren
20:30 < slajax> how do you check if a request is https?
20:31 < slajax> location.protocol in client side, what about server side?
20:32 < tjholowaychuk> if you're using express there's req.secure and req.protocol == 'https'
20:33 < slajax> that's it, thanks tjholowaychuk 
20:40 < slajax> hmm tjholowaychuk - both are undefined. expressjs 2.5.10, thoughts?
20:40 < tjholowaychuk> slajax one sec ill check, i forget what they are for 2x
20:41 < slajax> yeah i'm going through the whole object one by one, not seeing it
20:42 < tjholowaychuk> looks like i added them for 3x and didnt backport
20:42 < tjholowaychuk> this.connection.encrypted
20:42 < tjholowaychuk> will work for regular node stuff, but no proxy support
20:43 < slajax> ok, when is 3 out of alpha?
20:43 < slajax> aprox
20:44 < tjholowaychuk> there's a beta now, im just waiting to tag 3.0 until i have the docs up
20:44 < cianclarke> slajax: If you're not too far down the path, upgrade to 3.0a.. It's not really 'alpha' quality, more beta..
20:44 < cianclarke> & I found the migration path pretty smooth
20:44 < tjholowaychuk> the only painful migration thing is partials
20:45 < slajax> Yeah, well I'm in the middle of releasing some important stuff so I'll probably just try to patch this and then take on the upgrade with an empty bug list
20:45 < cianclarke> ..especially in EJS. ;-) 
20:45 < slajax> aww crap, i'm using ejs
20:45 < cianclarke> But I believe the community has built a workaround?
20:45 < slajax> links?
20:45 < tjholowaychuk> yeah there's a patch too
20:45 < tjholowaychuk> but it needs a bit of work
20:45 < cianclarke> Sec.. 
20:45 < slajax> thx
20:45 < tjholowaychuk> i'd like to have that stuff in EJS proper, no weird outside hacks
20:45 < cianclarke> https://github.com/publicclass/express-partials/
20:46 < cianclarke> tjholowaychuk: That'd be great, big EJS fan but noticed the lack of partials...
20:46 < slajax> so forgive me, but what's the fundamental problem that this middleware solves?
20:47 < slajax> partials got an upgrade and ejs couldn't come along for the ride without this middleware?
20:47 < tjholowaychuk> partial() is gone in 3x
20:47 < slajax> ah, what's the new syntax? I've wanted to upgrade to jade for a while tbg
20:47 < slajax> tbh
20:47 < tjholowaychuk> there's no new syntax
20:47 < tjholowaychuk> it's just gone
20:47 < tjholowaychuk> engines can do their own thing
20:47 < slajax> everything through res.render now?
20:47 < slajax> hmm ok i'll read up on it
20:48 < slajax> probably broader scope here I need to get my head around
20:48 < jergason> Hullo friends.
20:48 < tjholowaychuk> engines just have to provide their own IO
20:48 < jergason> I have a node process that is spawning two child processes.
20:48 < tjholowaychuk> if they want to that is, but most people expect that sort of functionality
20:48 < jergason> Is their an easy way to automatically kill the child processes when the parent process dies?
20:49 < drudge> signals
20:50 < jergason> drudge: Right now I am listening on SIGINT in the parent process, and killing one child
20:50 < jergason> but I have to add a few more children, and it seems clunky to do it this way
20:51 < jergason> Can you elaborate?
20:54 < chapel> jergason: are you using child_process or cluster?
20:54 < jergason> chapel: just child_process.
20:55 < jergason> chapel: is this something cluster can do?
20:55 < chapel> what are you using the children for?
20:56 < jergason> video capturing
20:56 < jergason> ffmpeg, gnutv and some related stuff
20:57 < chapel> hmm
20:57 < chapel> well afaik child processes should exit when parent exits
20:57 < chapel> at least 0.7-0.8
20:58 < jergason> ah
20:58 < jergason> i'm on 0.6
20:58 < chapel> I know in cluster it should
20:58 < chapel> child_process seems like it should
20:58 < chapel> isaacs: confirm?
20:58 < jergason> can I get stdout and stderr  streams of the children using cluster?
20:58 < otavio> I am trying to use socket.io but it seems to not work properly; it is an arm board and i think it might be kernel related. What tcp/ip kernel features socket.io needs?
20:59 < chapel> jergason: are they node processes?
21:01 < jergason> chapel: no, just ffmpeg and gnutv processes spawned by node
21:02 < chapel> well you should use child_process
21:02 < chapel> but check out 0.7 and if it kills children with parent
21:02 < jergason> chapel: okay, thanks
21:03 < jergason> chapel: other than that, I guess just unix stuff like kill with the group number?
21:24 < wingie> i have a server that i run and then i wanna kill it from the server logic
21:25 < wingie> i do process.kill(process.pid) but then when i start it again it says Error: listen EADDRINUSE
21:26 < wingie> seems like it is still in the background 
21:27 < wingie> is there a way to exit the server without me having to run "killall node" from the shell to regain that address
21:27 < wingie> process.exit() doesn't work as well
21:30 < slajax> tjholowaychuk jergason - tried to upgrade to 3.0 as you suggested getting this: http://pastebin.com/hZRrUsVK
21:30 < slajax> any thoughts?
21:31 < tjholowaychuk> slajax take a look at that line in utils.js, in master that's the app.locals.use() callback stuff so that would seem weird
21:31 < slajax> looks like I might not have defined the view helpers right
21:32 < tjholowaychuk> if you're just upgrading you wouldnt have any of those
21:32 < tjholowaychuk> here one second
21:32 < slajax> Yeah I think I missed a step in the migration guide
21:32 < tjholowaychuk> https://github.com/visionmedia/express/wiki/Migrating-from-2.x-to-3.x
21:32 < tjholowaychuk> yeah
21:32 < slajax> yeah, thanks man
21:34 < wingie> ok i solved it by doing process.kill(spawnedProcess.pid); process.exit()
21:37 < tilleps> is express3.x compatible with node 0.8.x?
21:37 < CoverSlide> probably
21:38 < CoverSlide> http hasn't changed much right?
21:39 < tjholowaychuk> tilleps if it isnt it'll just be stupid package.json engine field stuff
21:40 < tilleps> only one way to find out
21:40 < tilleps> I think path is now part of fs
21:40 < tilleps> not sure if express uses that though
21:42 < otavio> What tcp/ip linux kernel features socket.io needs?
21:51 < astropirate> otavio: websockets is a very thin abstraction over regular TCP so w/e you need for a good ol' tcp connecction
21:55 <@isaacs> chapel: confirm what now?
21:55 < chapel> lol
21:55 < chapel> child_processes die with the parent
21:56 <@isaacs> chapel: unless they are {detach: true}, yes
21:56 <@isaacs> if they're detached, then they're in a separate process group, and imune to the fatal HUP
21:57 <@isaacs> and, of course, you can alwyas have a program that just ignores the SIGHUP
21:58 < chapel> yeah
21:58 < chapel> it was for jergason
21:59 < chapel> thanks for the clarification, that is what I thought, but wanted to make sure
21:59 < tjholowaychuk> isnt it just shells that sighup?
21:59 < tjholowaychuk> optionally
22:00  * tjholowaychuk tests
22:02 < retrobaby> why cant we use something like Mandala instead of having a hack like AMD?
22:03 < retrobaby> https://github.com/zeekay/mandala
22:03 < tjholowaychuk> no sighup for me
22:04 < retrobaby> from what zeekay tells me its works with uglify and ASTs to manage client side modules
22:04 < tjholowaychuk> shopt  | grep exit
22:04 < tjholowaychuk> huponexit      	off
22:05 < myndzi> i'm getting an 'object has no method' error and i'm not sure why
22:06 < myndzi> i've got module.exports = Class; function Class() {}; Class.prototype.foo = function () {};
22:06 < myndzi> but when i do bar = new Class() and try to call bar.foo() it errors
22:06 < Domenic> Question: if clients lie about their Content-Length, does Node catch this for me? If not, what's a good way to check?
22:07 < chapel> myndzi: do module.exports at the button
22:07 < chapel> or module.exports = function Class() {}
22:07 < myndzi> you mean bottom? ;)
22:07 < chapel> sure
22:07 < chapel> bottom/button
22:07 < myndzi> i did another module in this format and it worked fine, let's see what happens
22:07 < chapel> some thing
22:08 < myndzi> lol
22:08 < chapel> I love it
22:10 <@isaacs> %#@$
22:10 <@isaacs> new npm version building.
22:10 <@isaacs> then a new 0.8.0 RC
22:10 <@isaacs> number nine.
22:10 < Franz__> so
22:10 < chapel> lol
22:11 < Franz__> this.test.getCommunicator().queueMessage('LIST_ACTIONS', {});
22:11 < Franz__> can you explain this?
22:11 < Franz__> its communication with node.js or something else?
22:15 < CIA-75> node: isaacs v0.8.0-release * r20c5ca2 / (ChangeLog src/node_version.h): 2012.06.25, Version 0.8.0 (stable) - http://git.io/w9Ca3A
22:15 < CIA-75> node: isaacs v0.8.0-release * r38250f6 / (98 files in 6 dirs): npm: Upgrade to 1.1.32 - http://git.io/GiKvhQ
22:18 < astropirate> Anyone looking for a freelance JS/Node.js dev? PM me  :)
22:18 < Domenic> Is there a way to check, after I'm done streaming a request somewhere, how many bytes I just streamed? (I want to check it against the request's declared Content-Length)
22:21 < dshap> hey all - can anyone think of a reason why i'd be able to curl an image URL form S3 but when I use node's http.get() method i'm getting a 403 along with an "Access Denied" message?
22:21 < dshap> from S3*
22:21 <@maxogden> dshap: if you compare the raw http for both requests you will most likely find missing headers or other difference. try using `npm install request` instead it tends to take care of that stuff for you
22:22 < dshap> maxogden: ok i'll check out request, thanks for the tip
22:24 < Domenic> dshap: we have been using Knox for our S3 needs; it takes care of all the auth stuff.
22:26 < dshap> Domenic: yep we're using Knox for uploading files to our buckets - i'm actually just trying to get a public file though, no auth necessary
22:27 < myndzi> ahh
22:27 < myndzi> problem = util.inherits hiding below the prototype i defined
22:27 < myndzi> because i split it off from the constructor
22:32 < otavio> astropirate: i think it might be a key handshake problem
22:32 < otavio> astropirate: any idea what it needs?
22:33 < astropirate> I have no idea
22:33 < astropirate> tbh
22:35 < astropirate> otavio: are  you building your kernel from source?
22:39 < otavio> astropirate: yes
22:39 < otavio> astropirate: an arm9 system
22:39 < otavio> astropirate: whole system from scratch
22:39 < astropirate> ahhh
22:39 < otavio> astropirate: all works fine except the websocket conneceting
22:40 < otavio> connection
22:40 < astropirate> so you are using socket.io?
22:40 < otavio> yes
22:40 < astropirate> what browser?
22:41 < otavio> we connect in a nowjs server
22:41 < astropirate> I ask because scoket.io has a flash solution for which you need to start node as root
22:41 < astropirate> or atleast privilages for low number port
22:41 < otavio> yes; we have two servers
22:41 < otavio> one client and one server
22:42 < astropirate> hmm
22:42 < otavio> so our client nodejs connects to a nowjs server
22:42 < otavio> :)
22:42 < otavio> when it work, it will be cute
22:42 < astropirate> lol
22:42 < otavio> it works on desktop but we fail to see what is missing
22:43 < otavio> the nowjs and nodejs works when using on desktop
22:43 < otavio> but not at the embedded system
22:43 < astropirate> do you have iptables? lol
22:44 < astropirate> just shooting ideas
22:44 < otavio> i shouldn't need iptable, i think
22:45 < astropirate> i meant it interfering with it
22:45 < dshap> maxogden: just tried request - seems like i'm no longer getting 403, but if i try to save the body it doesn't save as a valid image file on my computer…any ideas?  i tried setting the encoding to 'binary' already
22:46 < otavio> no; it works when using a regular desktop to connect to it, from same network
22:48 < dshap> maxogden: actually i tried the example in the docs that uses a file stream, and that works, but i need to create a node-canvas object with the result, not save it to my computer
22:51 <@maxogden> dshap: ive never used node-canvas sorry
22:51 < dshap> maxogden: ok i guess more fundamentally then - is there any reason i *Need* to use streams to download an image?
22:51 < dshap> maxogden: should i just be able to use that simple request case in the docs, and then process the "body" variable of the response to get my image?
22:51 < dshap> somehow
22:52 < tjholowaychuk> dshap img.src expects a base64 data uri or Buffer
22:52 < tjholowaychuk> you can't pipe to it
22:52 < tjholowaychuk> and it wouldn't help you if you could
22:52 < tjholowaychuk> using mem anyway
22:52 < dshap> tjholowaychuk: yep - and first i saw on the request docs it says that "body" by default is returned as a buffer
22:52 < dshap> tjholowaychuk: which is why i thought it would work
22:52 < dshap> tjholowaychuk: then when it didn't, i tried creating my own buffer
22:53 < dshap> tjholowaychuk: i actually have this working using node's own http library by itself.  i download with binary encoding and then create a buffer and put that into img.src, but Amazon S3 likes the headers that the "request" library sends for some reason
22:55 < tjholowaychuk> no clue
22:55 < tjholowaychuk> the response must be different
22:55 < tjholowaychuk> for whatever reason
22:57 < dshap> tjholowaychuk: wow okay, finally got this to work.  i needed to *explcitly* set the "encoding" option to "null" so that request returns a buffer.  i can create my node-canvas object with that buffer and it just works.  wooo!
22:57 < tjholowaychuk> what does it give you without encoding set to null?
23:14 < dshap> tjholowaychuk: a string
23:14 < dshap> tjholowaychuk: i've gotta run but i appreciate your help - thank you!
23:14 < Codedninja> Anyone used https://github.com/0ctave/node-sync before?
23:14 < tjholowaychuk> weird, np
23:31 < nwillems> Hello there. I seem to have a minor problem with npm, or at least node wafadmin things :(
23:32 < nwillems> Is it true that wafadmin' python scripts are only compatible with python <= 2.6 ?
23:36 < traviscooper> i think it's compatible with 2.7
23:37 < nwillems> traviscooper: Hmm - strange. When I try installing hiredis and redis from npm it fails at some exception(not due to) with a syntax error.
23:37 < traviscooper> why, what's causing you a problem?
23:37 < traviscooper> that's interesting
23:37 < traviscooper> shouldbe 100% compatible with 2.7
23:37 < owen1> when trying to post using request package i get: "Content-Type expected to be one of: application/x-www-form-urlencoded, application/json" - http://pastebin.com/0qSSnPsP    any ideas?
23:38 < traviscooper> you on windows or *nix
23:38 < nwillems> line 146 has an except looking like this: "except Utils.WafError, e:", the syntax error is caused by the comma. I'm on arch linux.
23:38 < owen1> traviscooper: mac
23:39 < traviscooper> very strange indeed
23:39 < traviscooper> let me poke around it for a min, i'm not having that issues
23:39 < nwillems> my python version is 2.7.3.
23:40 < nwillems> traviscooper: Could npm be not responding to me setting the PYTHON environment variable? Such that it tries to use python 3?
23:40 < traviscooper> that's possible
23:40 < bnoordhuis> nwillems: that's probably it
23:40 < traviscooper> npm hates 3.0
23:40 < traviscooper> :)
23:41 < nwillems> not it. Just tried aliasing python with python2(alias python=python2) still error :-(
23:41 < nwillems> Damn.
23:46 <@isaacs> nwillems: you can't do it with an alias
23:47 <@isaacs> nwillems: aliases only live in your shell.  they're not actual programs on the fs
23:47 <@isaacs> nwillems: try: ln -s $(which python2) ~/bin/python
23:47 <@isaacs> nwillems: then update your PATH environment var so that ~/bin is the first thing in it
23:47 <@isaacs> nwillems: or just remove python 3 and cp python2 to pythin
23:47 <@isaacs> *python
23:48 < bnoordhuis> i think that'll break archlinux pretty bad :)
23:48 <@isaacs> well, that's a step in the right direction, probably.
23:48 <@isaacs> ;P
23:49 < nwillems> bnoordhuis: which part? Removing python or changing the path? :P
23:49 <@isaacs> nwillems: cp /usr/local/bin/python{2,} would probably do significant harm
23:51 < nwillems> Wooooohooooooooo - now it works. Thanks @isaacs
23:52 < nwillems> And thanks to all you other guys. You have been a great help.
23:56 < other_guy> Nexxy, what's happenin'  how's all the potential excitement over there?
--- Log closed Sat Jun 23 00:00:05 2012
