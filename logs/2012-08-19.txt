--- Log opened Sun Aug 19 00:00:45 2012
00:16 < timeturner> what's the difference between module.exports = exports and exports = module.exports ?
00:18 < timeturner> anyone?
00:51 < timeturn> what's the difference between module.exports = exports = new Something() and exports = module.exports = new Something()
00:52 < gkatsev> nothing
00:53 <@maxogden> you should do exports = function() { return new Something() })
00:54 < timeturn> what does it mean to have a bunch of exports.a = A; and exports.b = B after that though?
00:54 < timeturn> is it defining properties on new Something()?
00:54 < gkatsev> yes
00:56 < timeturn> so it's like a two in one where it defines properties and methods on the new instance and exports them. actually that's the only time they can be defined I think...
00:57 < timeturn> is that true?
01:11 < ishtar_> no. it defines properties and methods on the anonymous function that exports has been set to. 
01:12 <@maxogden> functions are objects so you can put arbitrary properties on them
01:14 < ishtar_> but you should probably not assign anything directly to exports. i am pretty sure it will not get exported unless you assign it to module.exports
01:15 < gkatsev> it wont get exported is module.exports get changed. but it should probably be fine in that particular case
01:18 < AnonymousFunctio> Hello everyone.  Does anyone know where I can get an RHEL RPM for Node.js v0.8.7?  It is not yet available at the usual place:  http://nodejs.tchol.org/
01:20 < AnonymousFunctio> Alternatively, if someone would build an RPM of Node.js for me, I will buy you a pizza.  (If you have a Papa John's near you.)  :-)  I don't have a build environment available at the moment.
01:27 < mscdex> AnonymousFunctio: just use one of the binary tarballs
01:28 < mscdex> AnonymousFunctio: http://nodejs.org/dist/v0.8.7/
01:28 < AnonymousFunctio> mscdex, I had thought about doing that, but I already have a v0.6.8 installed with yum... and I was reading that means I likely have the wrong version of V8.
01:28 < mscdex> huh?
01:29 < mscdex> all you have to do is untar the binary distribution and just use it
01:29 < AnonymousFunctio> Ah, V8 is compiled in?  I thought it was linked to an external library.
01:29 < mscdex> yes, v8 is compiled in by default
01:29 < AnonymousFunctio> Cool, I will just do that then.  Thanks!!
01:29 < mscdex> everything is compiled in by default
01:30 < AnonymousFunctio> Would you like a pizza?  You just saved me a lot of time.
01:30 < mscdex> actually, i already had pizza earlier ;-)
01:30 < AnonymousFunctio> Ha, okay.  Perhaps next time then.  Thanks a ton!
01:30 < mscdex> np
01:33 < jaseemabid> How do i debug "fatal error: node.h: No such file or directory". Where should I look for the headers? Which package to install? I am trying to write a simple c++ binding for node
01:36 < jaseemabid> I have node, v8, g++ etc installed. Using Arch linux to develop. Can provide any extra info necessary 
01:39 < timeturn> callbackhell.com is useful
01:39 < deoxxa> jaseemabid: use node-gyp
01:40 < deoxxa> jaseemabid: https://github.com/deoxxa/node-mcnet/blob/develop/binding.gyp << here's a (very simple) example
01:40 < jaseemabid> deoxxa, man pages/doc any? I have a /usr/include/node/node.h and including full path makes it compile. 
01:40 < jaseemabid> k
01:41 < jaseemabid> deoxxa, i will look into that one. Thanks :) 
01:47 < samholmes> I'm trying to use url.parse to get the querysting as an object, then I set a query parameter, then use url.format to bring it back to a url string form.
01:51 < samholmes> However, the problem I was facing was that the urlObj.search string was over-riding the urlObj.query object property. So I deleted the property, but now the query string parameter is empty.
02:04 < werw> history
02:08 < werw> anyone having problems with cloud9 editing workspaces today ?
02:21 < samholmes> why isn't there a way to echo out from within a EJS code block?
02:26 < timeturn> as in console.log()?
02:26 < charuru> do people here use amd on the clientside?
02:27 < timeturn> amd, require.js, browserbuild, browserify
02:27 < timeturn> lots of choices
02:43 < blueadept> anyone have a good torrent site recomendation now that demonoid is gone?
02:53 < gkatsev> freenode doesn't condone piracy
03:04 < EricBlade> ok, so, i've mostly got the basics of the code i've been working on working, however, i'm running into a problem where when i put this program on the device that it's supposed to run on (a webos touchpad), the server that i'm talking to doesn't appear to be getting the things that i send, or it's receiving something different than what i'm sending when i run it on my pc.  this is frustrating.
03:05 < EricBlade> is there any possibility that socket.write() might act differently in some strange way between 0.4 and 0.6?
03:05 < timeturner> qq
03:06 < timeturner> http://callbackhell.com/ can't you just call pad.launch.call(pad) instead of the $.proxy(pad.launch, pad) stuff
03:07 < AAA_awright> Anyone know if the Tor protocol has been implemented with Node.js?
03:07 < AAA_awright> Or if a library is availble
03:09 < AnonymousFunctio> EricBlade, Yes, it is entirely possible.  There are significant differences between 0.4 and 0.6.  Can you provide more information about the problem?
03:10 < AnonymousFunctio> AAA_awright, Check out https://github.com/Ayms/node-Tor
03:10 < EricBlade> AnonymousFunctio: well, i'm not entirely certain how.  i just ran the exact same code on 0.2, 0.4, and 0.6.  on 0.4, the server that i'm talking to fails to respond as expected. on 0.2 and 0.6, it responds exactly as it should.  dumping the buffer that i'm sending out, it appears identical in all three cases
03:11 < AnonymousFunctio> EricBlade, Just to clarify, you're using regular net.Sockets, right?
03:11 < EricBlade> yes, that's correct
03:11 < AAA_awright> aaaaaawesome
03:11 < AAA_awright> I think
03:12 < AAA_awright> It needs to be a library
03:12 < AAA_awright> I couldn't find anything like this, idk why
03:12 < AAA_awright> Oh heh, this was just 17 days ago, no wonder
03:13 < AnonymousFunctio> EricBlade, Without more information on what specifically you're doing, it's hard to make a suggestion about what to try.  All I can say is, fire up your packet sniffer and see what is different.
03:16 < deoxxa> oh wow, tor in node
03:17 < deoxxa> that's pretty darn cool
03:17 < deoxxa> looks a bit rough right now
03:17 < deoxxa> here's hoping it's cleaned up a bit
03:17 < EricBlade> AnonymousFunctio: yeah, i'm not sure specifically what to do. also have no idea how to packet sniff a tablet
03:18 < deoxxa> EricBlade: do it on the other side
03:18 < AnonymousFunctio> EricBlade, Two ways... wire up Wireshark or similar on the server, or packet sniff over wireless (real hassle these days, but possible)
03:19 < EricBlade> yea i think i will need to write a server simulation
03:19 < AnonymousFunctio> What I do... I've got a 4-port hub still, and hook it up between my AP and router.  Then, I can sniff at that point.
03:19 < AnonymousFunctio> Why simulate?  You've got the server right there, yes?
03:20 < AnonymousFunctio> I don't understand what is talking to what, and what is written in what.  Is your server not written with Node?
03:20 < EricBlade> no i'm talking to something else entirely
03:21 < AnonymousFunctio> You're using your Node application to communicate with some other system?
03:21 < AnonymousFunctio> And the problem is between your Node application and this other system?
03:21 < EricBlade> yes
03:21 < AnonymousFunctio> Why is it not possible to sniff on the system running Node?
03:22 < EricBlade> ok, i've tested in 0.8 on linux, 0.6 on windows, 0.4 on touchpad, and 0.2 on a phone .. working everywhere but the 0.4. gaah.
03:22 < AnonymousFunctio> And this tablet runs what OS?
03:22 < EricBlade> i am not aware of a way to packet sniff on a webOS tablet directly
03:23 < AnonymousFunctio> Ah, I understand now... I hadn't put that piece togeter yet.
03:24 < AnonymousFunctio> One easy way to sniff over wireless... put your laptop or whatever in the middle as a router.  Use an adhoc wireless connection between  the webOS device and your computer.
03:24 < AnonymousFunctio> Also, I'm surprised you got Node compiled for webOS.
03:26 < AAA_awright> deoxxa: Can you say, "Anonymous untracable peer-to-peer in Node.js"
03:27 < deoxxa> AAA_awright: not without becoming irrationally excited
03:27 < AAA_awright> SQUUEUEEEEEEE
03:27 < deoxxa> i was playing with the idea of doing that kind of thing without tor a while back
03:28 < deoxxa> passing JSON objects back and forth, referring to them by hash, kind of like freenet but not horrible
03:28 < deoxxa> DHT-based message discovery, etc
03:28 < AAA_awright> Coupled with Browserver and the WebRTC API... ZOMG
03:28 < deoxxa> ha
03:29 < deoxxa> my damn housemate needs to get her daugher some headphone to practice keyboard
03:29 < deoxxa> seriously
03:29 < AAA_awright> You now have server-to-browser, client-to-client, and server-to-server HTTP messages in a giant swarm
03:29 < AAA_awright> Like, just make your HTTP server a Tor proxy and node
03:29 < EricBlade> AnonymousFunctio: webOS is built almost entirely using Node
03:30 < SomeoneWeird> heh
03:30 < AnonymousFunctio> EricBlade: No kidding?  That's really cool.  I had no idea.  All this time, I've  been waiting for it to work on Android.
03:30 < deoxxa> yeah, node 0.2 is what webos uses
03:31 < SomeoneWeird> it does work on android
03:31 < SomeoneWeird> lol
03:31 < SomeoneWeird> hard to compile, but doable
03:31 < EricBlade> AnonymousFunctio: yeah most of the "neat stuff" that isn't Qt based in webOS is node, and most of the apps are webKit
03:31 < EricBlade> deoxxa: 0.4 on touchpad now :) 
03:31 < deoxxa> ha
03:32 < AnonymousFunctio> SomeoneWeird: I thought that Node on Android required installing Linux and such.
03:32 < EricBlade> i think they are going to upgrade node to 0.8 sometime after Open webOS is ga
03:33 < AnonymousFunctio> BRB, switching networks...
03:33 < deltab> deoxxa: like telehash?
03:34 < EricBlade> hmm. that's interesting.  this is a messaging application, and whenever i send a ping message using 0.4, the server shuts my connection down .. but it's working fine from 0.2.  there's definitely something weird going on here, that doesn't seem to affect things that aren't as picky as this server
03:35 < SomeoneWeird> .4? try .8 :p
03:35 < EricBlade> works fine on 0.6 in windows and 0.8 on my linux vm
03:35 < deoxxa> deltab: sort of, but with some persistence
03:35 < EricBlade> i might have to go through the palm patches for 0.4 and see if they farked it up somewhere
03:36 < deoxxa> deltab: it's more of a gigantic distributed message store, in my model
03:37 < deoxxa> deltab: basically you put messages into the network, then fetch them by id. so you'd split up large files into smaller parts and push them into the network and they'd be stored at various nodes based on the proximity of their node id to the hash of the message.
03:37 < deoxxa> deltab: then you could construct a metadata file (like a torrent) which contains the necessary information to stich those bits back together
03:38 < deoxxa> you distribute the id of that metadata file as a magnet link, then people can download the contents
03:39 < deoxxa> there's some details in there like message retention strategies and stuff
03:39 < deoxxa> i just never got around to implementing any of it :<
03:41 < deoxxa> and that's kind of the high level part of it; it would have to be built on top of a lower level protocol for actually shoving the messages back and forth
03:53 < AnonymousFunctio> Tonight is a good night for sitting on the roof... and coding JS all night, ha.
03:54 < r0tha> AnonymousFunctio: true dat
03:55 < AnonymousFunctio> I was up here on the roof during the day, but didn't get much done.  The air show was in town, so I was a bit distracted watching jets fly around buildings.
04:13 < EricBlade> hmm. the palm changes to 0.4.12 don't seem to indicate anything terrible heinous, they mostly just add benchmarking stuff, add a few utility functions, and change a lot of strings to string constants .. 
04:15 < EricBlade> unfortunately, i can't seem to get 0.4.12 to run on my linux vm, so i can't tell if it's something caused by their patches or something else in the environment, or what
04:33 < nonuby> should flatiron union res emit a drain event?
04:41 < aroman> anything like ChaosMonkey for node callbacks?
04:41 < aroman> like randomly testing that errors trigger/bubble properly
04:46 <@konobi> aroman: mocked?
04:47 < aroman> konobi: https://github.com/konobi/node-mocked ?
04:48 <@konobi> aroman: well, i mean just mocking out your emitter so you can fire any of them in whatever order
04:56 <@konobi> aroman: chaosmonkey is more for testing the resiliency of multiple systems working together
04:57 < deoxxa> lol konobi, your nick could mean "the beauty of children" depending on how it was written in japanese
04:57 < deoxxa> learning another language is unintentionally hilarious
05:03 <@konobi> deoxxa: mkay... i've been told by lots of folks that it's nonsensical in japanese
05:03 < deoxxa> it's awkward, yeah
05:03 < deoxxa> but it kind of fits
05:05 < deoxxa> 子 being "ko", the kanji for "child", の being "no", a particle denoting ownership or relation, and 美 having an alternate reading of "bi"
05:08 < deoxxa> 美 being the root kanji in the word "utsukushii", meaning "beautiful" when used as an adjective
05:08 < caasiHuang> deoxxa++
05:09 < deoxxa> hooray for words
05:09 < deoxxa> yet for some reason i can't bring myself to finish my japanese homework
05:09 < deoxxa> woe is me
05:10  * konobi sticks to the opinions of the japnese folks =0)
05:48 < _appu> Hey Guys, I am writing a node module in C++ for one of my shared libraries. I am trying to provide a non-blocking interface for my functions. The C library that I am wrapping is not thread safe. So should I handle thread safety inside my module? Or always one thread will be executing a module at a time?
05:50 < deoxxa> _appu: you can keep everything in the main execution thread, or you can use libuv's thread pool thing
05:50 < deoxxa> _appu: sounds like it'd be easier to just keep everything in one thread though
05:50 < deoxxa> s/one/the main/
05:51 < _appu> yes. everything in main thread is easy. 
05:51 < _appu> but will I get the non-blocking benefit of node ?
05:51 < deoxxa> hmmm kind of
05:52 < deoxxa> it depends on what the bottleneck is
05:53 < _appu> #deoxxa my JS code will look like, obj.process(arg, function(output){});
05:53 < _appu> in my module's process function, I will call the C library function directly
05:54 < _appu> in such case, there are chances that multiple threads executing the module code at once? right?
05:54 < deoxxa> ah, no
05:54 < deoxxa> that blocks the whole system
05:54 < deoxxa> basically everything freezes and your code takes over for a little bit
05:55 < _appu> okay... I am confused now. Is there a reference to implement a non-blocking node module?
05:58 < deoxxa> not that i can think of
05:59 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
06:02 < _appu> deoxxa thanks. so the idea is to use libev inside the module. right?
06:05 < deoxxa> libuv, but yeah
06:07 <@konobi> sqlite
06:08 <@konobi> though it may be a little out of date in terms of best practice
06:17 < fallow> Hi, any idea on how I would go about checking whether an object is an instanceof tls.cleartextStream?
06:21 <@konobi> fallow: checj JS docs... mdn is the best option
06:22 < whiskers75> check*
06:22 < whiskers75> :)
06:22 <@konobi> whiskers75: indeed... i'm having a beer... gimme a break =0P
06:23 < whiskers75> :)
06:23 < whiskers75> maybe I'll get my bot to do that...
06:46 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
06:53 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
07:03 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
09:05 < substack> haha jslint sucks https://gist.github.com/3393866
09:05 < substack> of course I already knew this
09:05 < substack> a single 6k line file
10:02 < jetienne> i want something like require('child_process').exec() but i want the output live, not buffered, where should i look
10:04 < rvagg> use spawn instead
10:04 < rvagg> jetienne: http://nodejs.org/docs/latest/api/child_process.html#child_process_child_process_spawn_command_args_options
10:05 < rvagg> good example there, listen to the streams to get live(ish) output
10:05 < rvagg> exec() is a pretty blunt weapon
10:06 < standoo> is thre an example of nodejs using udp?
10:06 < jetienne> rvagg: .spawn doesn't seem to parse the command line, is that correct ?
10:06 < zomg> standoo: have you tried googling for nodejs udp? I would imagine that would produce results
10:08 < rvagg> jetienne: no, you give it a cmd to execute and an array of arguments
10:08 < jetienne> rvagg: hmm ok. well if i have to, i have to :) tyhanks
10:09 < rvagg> var args = 'my command here'.split(' '); var proc = childProcess.spawn(args.unshift(), args); or something like that
10:09 < rvagg> sorry, shift(), not unshift
10:18 < jetienne> rvagg: well shell cmd parsing is more complex than that unfortunately. but this is ok i will manage
10:20 < rvagg> ya, sure, if you really want you could pass a single argument for 'sh' to parse for you, if you need that level of complexity
10:21 < jetienne> rvagg: i will go the hardcoded way for now :)
10:26 < philip__> hi
10:26 < philip__> I'm trying to use node.js for js2coffee on ubuntu, and the js2coffee docs say nothing about executing js2coffee with node
10:27 < philip__> if i just enter js2coffee on the command prompt i get a command not found
10:27 < philip__> i tried to set $PATH, but then it doesn't find underscore/coffee
10:27 < philip__> how am i supposed to use software that i installed with npm install?
10:28 < philip__> is there some sort of environment setup script that i'm missing
10:28 < philip__> ?
10:30 < timoxley> SomeType.prototype.__proto__ = EventEmitter.prototype V.S. SomeType.prototype = new EventEmitter() V.S. util.inherits(SomeType, EventEmitter)
10:31 < timoxley> I've not seen that the first pattern before, but it looks like a bad idea
10:31 < timoxley> opinions?
10:31 < Bonuspunkt> philip__ npm install js2coffee -g
10:33 < philip__> Bonuspunkt: no way to do it for the user only?
10:33 < RLa> timoxley, doesn't 2nd one give one prototype instance for all SomeType instances?
10:33 < philip__> by setting up a correct environment?
10:33 < RLa> hm, it does and i think that's fine :)
10:34 < timoxley> RLa yep
10:35 < RLa> mdn says __proto__ is non-standard and deprecated
10:36 < timoxley> RLa sure, though it will stick around in node for a while afaik
10:37 < timoxley> RLa but yeah, just trying to figure out the actual difference between the two
10:38 < RLa> i do not like constructor call in 2nd one, that could have bad side-effects
10:40 < timoxley> RLa e.g.? I see the second pattern often
10:41 < RLa> consider function EventEmitter(arg) { if (arg) { "stuff" } }
10:41 < RLa> how can you supply arg with 2nd
10:42 < Benvie> __proto__ is being standardized in es6
10:42 < RLa> i'm using this on browser: https://gist.github.com/3394205 (should be quite same what util.inherits does)
10:43 < RLa> it's just about setting up prototype chain so that "superclass" properties can be found
10:44 < RLa> with 2nd version i think the chain is shorter by 1 link
10:45 < timoxley> Benvie have you got a link for that? I see lots of discussions, no conclusions
10:46 < Benvie> this is the one link I kept handy but there's more on es-discuss
10:46 < Benvie> http://lists.w3.org/Archives/Public/public-script-coord/2012AprJun/0234.html
10:46 < Benvie> that one is pretty clear though =D
10:46 < timoxley> Benvie ha, perfect.
10:46 < jetienne> q. how to test if a file exist ? 
10:46 < timoxley> jetienne fs.exists
10:47 < jetienne> timoxley: thx
10:48 < RLa> timoxley, i return subClass from extend function, this allows for constructs like: https://gist.github.com/3394234
10:48 < RLa> so instead of named constructor you can directly pass closure as constructor
10:50 < RLa> util.inherits returns nothing unfortunately
10:50 < timoxley> RLa that's cool, though how does it look in a stack trace
10:51 < Benvie> it doesn't do much anyway
10:51 < Benvie> I actually went the opposite way
10:51 < RLa> timoxley, it should have no problems with it
10:52 < RLa> you mean when subClass constructor throws?
10:52 < Benvie> I typically pass arrays of named functions
10:52 < Benvie> and then define them based on their name
10:52 < Benvie> makes for more pleasant debugging experience
10:52 < Benvie> I go as far as to generate constructors using Function in some cases
10:53 < Benvie> to name the Constructor itself
10:53 < RLa> to avoid SuperClass.call(this) code?
10:54 < Benvie> not I mean
10:54 < Benvie> in cases where constructors and classes are being dynamically generator
10:54 < Benvie> instead of creating an anonymous constructor I'll use new Function to create it with a name and pass in scope variables
10:54 < timoxley> RLa just whenever you have a stacktrace, you're going to get a bunch of "Inheritance" objects everywhere
10:55 < timoxley> instead of the actual class names
10:55 < Benvie> not that many people go as far as I do
10:55 < RLa> hm, that might be bad side of that code
10:56 < Benvie> an example would be modifications I made to ffi and ref
10:57 < timoxley> Benvie link?
10:57 < Benvie> since on windows there's so many types and structs and all that
10:57 < Benvie> it would be a debugging nightmare without the help
10:57 < Benvie> sec
10:57 < Benvie> https://github.com/Benvie/ref
10:57 < Benvie> https://github.com/Benvie/ref-struct
10:57 < Benvie> and in here is some fo the ffi stuff https://github.com/Benvie/win32-api-js-ffi
10:58 < Benvie> the Structs, wrapper foreign functions, and types create named constructors
10:58 < Benvie> er named functions (not constructors in the case of foreign functions)
10:59 < Benvie> and I added a sort of constructor for callback functions, where you specify the template of the callback proc (like say a WNDPROC)
10:59 < Benvie> and then you can pass it functions that it checks against the template, and returns back the pointer
11:00 < Benvie> https://gist.github.com/3372664 is an example of how I'm working with the win32 api
11:01 < Benvie> in order to get a low level hook on the mouse
11:35 < qballer> How would you make sure that a callback will be added as the last callback event loop ? Is this something I should consider and think about.
11:36 < thanpolas> that's flow control, if you need it, then you'd need specific libs like promises
11:37 < thanpolas> [shameless self-promo] or my awesome lib ready.js --> https://github.com/thanpolas/ready.js
11:38 < qballer> Doesn't any one need flow control - I mean every app has some kind of flow and you need to know what is the flow of your application ? no thanpolas 
11:39 < qballer> I've kind of trying to use my own flow control and having callback register in some  call of pile. 
11:39 < thanpolas> you mentioned calling your callback 'as last' ... that's flow control... if you don't care about sequence of callbacks execution, then it's a non issue
11:39 < joaojeronimo> I'm getting a weird error when compiling nodejs v0.8.7:   File "./configure", line 325   o['default_configuration'] = 'Debug' if options.debug else 'Release' which is weird because it's under CentOS that gives this error, under Ubuntu 12.04 it went well... Is there some caveat I missed ?
11:40 < qballer> well I'm coming from a blocked kind of world being a Java/C++ developer. This is something natural. 
11:41 < qballer> You (almost) always know what gets executed. The thing is that my application is introducing new code to the system at runtime. I kind of need to control that. 
11:42 < thanpolas> typically you serialize your callbacks...
11:42 < qballer> I kind of thought setTimeOut(function () {}, 0); would do most of tricks for me. 
11:42 < thanpolas> not sure what you're trying to accomplish there qballer
11:45 < qballer> Hmmm this is a rather long explanation: This kind of sums up the issue. 
11:45 < qballer> http://stackoverflow.com/questions/11883370/how-to-develop-node-js-run-time-strategy
11:46 < qballer> I got an answer and even accepted it, later on in the comments I kind of figured it's wrong.
11:48 < thanpolas> answer has a mistake indeed
11:48 < qballer> I devised, dare I say, some king of a design pattern based on the pile concept based on something I read online where a callback doesn't get executed at once instead it registers to Que of callbacks which has something to do with those set of actions. some kind of a logical connected set of callbacks.
11:49 < thanpolas> solution is simple
11:49 < thanpolas> insteadl of doing callback(data) inline, which would indeed execute thecallback... you'd need to push it to an array
11:49 < thanpolas> does this make sense to you?
11:50 < qballer> That is basically  what I'm doing.
11:50 < qballer> with this: https://github.com/qballer/tssDas/blob/master/lib/api/implementation/pile.js
11:50 < qballer> This is untested. 
11:50 < qballer> So if you find anything bad, just know. 
11:51 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:51 < thanpolas> one sec, editing the stackoverflow...
11:51 < t_p> i can't connect mongodb using mongoose
11:51 < t_p> http://pastebin.com/vUBCiuwY
11:52 < t_p> but use command  "mongo" is ok
11:52 < qballer> Now I'm trying to write the code which kind of decides on which pile to execute. In the end it should register the callbacks to the event loop and than register it's self so it can decide again.
11:52 < ashb> t_p: aaand what does the error say?
11:53 < t_p>  connection closed
11:53 < qballer> thanpolas, don't worry I'm just kind of throwing everything here. You can answer when ever, I'm around.
11:53 < qballer> thanpolas, feel free to +1 my question :D
11:53 < t_p> ashb, but i am sure mongodb is running
11:53 < t_p> because mongo "show dbs" "show collections" are all ok
11:57 < thanpolas> qballer not sure bout that, can you see my edit? > http://stackoverflow.com/questions/11883370/how-to-develop-node-js-run-time-strategy/11885276#11885276
11:58 < qballer> thanpolas, can't see any changes.
11:58 < thanpolas> :/
11:58 < thanpolas> I'll post as new answer
11:58 < qballer> Awsome. 
12:01 < thanpolas> qballer> http://pastebin.com/eXVC7XXQ
12:01 < thanpolas> in your gist you don't loop through the callbacks...
12:03 < thanpolas> there's more to that, like reseting the pool after execution, or checking if data is ready when getDetail() gets invoked...
12:03 < thanpolas> but that's the general idea
12:05 < qballer> I've updated my question with all the details. http://stackoverflow.com/questions/11883370/how-to-develop-node-js-run-time-strategy
12:06 < thanpolas> qballer did my pastebin give any hints?
12:07 < qballer> Yea, It adds an Identifier for the the callback type, from what I understand. 
12:07 < thanpolas> and shows you how to properly call your callbacks
12:08 < qballer> Interesting concept. does https://github.com/thanpolas/ready.js do something similar ?
12:08 < thanpolas> i am not 100% on what you want to accomplish ... i don't think ready.js fits
12:09 < thanpolas> is this about a single request being done?
12:09 < thanpolas> or multiple inbound requests?
12:10 < qballer> it looks fairly interesting. If you could post an answer and share some explanations on that code piece and what were you trying to do - I would just admire you :) 
12:10 < thanpolas> i believe the biggest issue here is you need to unlearn, forget what you know =) threaded programming confuses you
12:10 < qballer> Well, not admire but I would be very thankfull.
12:10 < stagas> qballer: you're not describing your problem
12:10 < qballer> http://stackoverflow.com/questions/11883370/how-to-develop-node-js-run-time-strategy - This isn't a good description ? stagas 
12:10 < stagas> qballer: so it's very hard to help you if we don't know what you're solving
12:11 < thanpolas> qballer the description is a bit vague: "create some data, serve pages, receive data etc." ...
12:11 < thanpolas> pinpoint the issue so we can better help
12:12 < qballer> thanpolas, I'm trying to learn the node/javascript way here... so yea, it's a mindset change, which is always hard.
12:12 < qballer> I'm writing a fairlly generic system it's a distributed system. 
12:12 < thanpolas> it's more of a js issue i think, rather than a node one... a bit more study on events and async literature would help i think
12:14 < stagas> qballer: and what piece of it are you have trouble with now?
12:14 < qballer> It gives you the option to write code which goes over either a big data set or some long cycle computation and distribute a small porition of that data to be computed in other computers which run browsers.
12:15 < thanpolas> looks like a socket implementation is required for this qballer...
12:16 < qballer> Meaning I have real system parts which are "Data divider" -  creates small slices  "actual algorithm" runs in the browser "data assembler"- aggregate results declare that you have a result.  
12:16 < stagas> qballer: like this? https://github.com/stagas/drama/blob/master/examples/distributed-pi.js
12:17 < qballer> The system isn't the distributed algo it's self stagas it's just the infrastructure. 
12:18 < stagas> qballer: oh I thought you wanted to run a distributed algorithm for some long computation in people's browsers
12:18 < qballer> I do ! :D
12:19 < qballer> The actual algorithm is written by the end user which writes his code to confirm to surten interface I'm giving him .
12:20 < qballer> That code is plugged in to the system. I'm just trying to figure out when to run each logically separated piece of code and how to control the execution 
12:20 < qballer> am I still confusing you ?
12:21 < stagas> no I got it
12:21 < qballer> Ok awesome.  so now I shut up and listen. 
12:23 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:24 < stagas> qballer: well it sounds like a use case for actors. you can try https://github.com/stagas/drama if you don't want to reinvent everything
12:25 < qballer> Well I'm using flatiron/broadway in order to perform all this stuff. 
12:27 < stagas> cool. drama does the message delivery/control flow for you only. it's pretty low level to integrate with anything
12:28 < qballer> Ok still I want to understand something which I feel is core with an event loop.
12:30 < qballer> Does setTimeOut (function(){}, 0); is added as the last event in the current que ? will the  function run after all the other event currently present in the event loop? 
12:30 < thanpolas> if all the queued callbacks will run synchronously, then yes
12:31 < qballer> thanpolas - what would get in their way? 
12:32 < kuja> qballer: There could be multiple callbacks that run asynchronously, in which case you can't rely on the order, I don't think.
12:32 < qballer> Lets say I have my current event and I have 3 events waiting: I'm registering a new event in the current event. can a socket connection change the order of things. Should I care? 
12:33 < qballer> this topic is fairly interesting , I think this is a core concept. 
12:34 < qballer> Ok kuja, lets say I have callback that will only fire when a surten event occures can they change the order of the current event loop or will they be added to the last spot? 
12:34 < stagas> qballer: all registered callbacks will get called in the order they were added when the event fires
12:34 < thanpolas> if you want to have execution order qballer, simply define than when adding your callback
12:35 < thanpolas> e.g. queueCallback(id, callback, sequence);
12:35 < qballer> these two lined complete each other - great stagas and thanpolas 
12:36 < qballer> I feel a coin drop moment. thanks! 
12:37 < thanpolas> qballer the coin --> paypal.com/thanpolas 
12:37 < thanpolas> :P
12:37 < qballer> LOL!
12:37 < qballer> Free as in speech ... 
12:38 < thanpolas> any tip/lib for a fancy data dumper for jade?
12:39 < qballer> thanpolas, http://www.jade.co.nz/downloads/jade/manuals/DumpLoad.pdf
12:41 < deoxxa> qballer: rofl
13:13 < guidocalvano> yo people
13:14 < guidocalvano> is there a template library out there that just uses html as its basis?
13:14 < guidocalvano> I've seen haml, jade and mustache, but they all have their own radically not html style template languages
13:15 < guidocalvano> I just want to substitute one piece of string in a html skeleton
13:16 < deoxxa> guidocalvano: mustache does that :/
13:17 < yawnt> mmalecki: you there?
13:17 < deoxxa> mmalecki is a desk
13:17 < yawnt> i need help with an app, if you could check it out i'd appreciate it
13:17  * guidocalvano needs to learn how to read O\
13:17 < guidocalvano> I skimmed the site too fast
13:17 < yawnt> is he
13:17 < guidocalvano> tnx deoxxa 
13:17 < mmalecki> yawnt: hey
13:17 < deoxxa> guidocalvano: if you're interested in other options though, i wrote https://github.com/deoxxa/node-ginger a little while ago :3
13:18 < yawnt> mmalecki: i'm deploying it and it says socket hang
13:18 < yawnt> there was an issue with heroku's postgres before but i think i fix'd it because it works locally
13:18 < deoxxa> mmalecki: you're a desk stop typing. crazy desk.
13:18  * deoxxa puts coffee on mmalecki
13:19 < yawnt> there was a friend of mine
13:19 < yawnt> we used to call him bedside table
13:19 < yawnt> like on irc only
13:19 < yawnt> in italian.. which is "comodino"
13:22 < yawnt> mmalecki: so, can you help me?
13:23 < mmalecki> yawnt: wrong channel dawg
13:23 < mmalecki> but sure
13:23 < yawnt> wops
13:23 < yawnt> sorry
13:25 < deoxxa> > wops
13:25 < deoxxa> bit ironic
13:26 < yawnt> didn't get it :|
13:26 < deoxxa> > Wop is a pejorative racial slur used primarily, but not exclusively, to refer to people from Italy.
13:26 < deoxxa> http://en.wikipedia.org/wiki/Wop
13:26 < yawnt> ohlol
13:26 < yawnt> didn't know
13:26 < yawnt> we use it as "ups"
13:27 < yawnt> to mean something we didn't intend to do
13:27 < deoxxa> haha
13:27 < deoxxa> i've always seen that spelled like "whoops"
13:28 < yawnt> right
13:28 < yawnt> that too
13:28 < yawnt> we just say wops
13:28 < yawnt> short version
13:28 < yawnt> :(
13:28 < yawnt> Y U SO RACIST
13:28 < deoxxa> lol
13:50 < cloudpopup> anyone else taken of their trousers due to heat?
13:53 < deoxxa> it's winter here in australia
13:53 < deoxxa> but regardless, yes
13:53 < deoxxa> pants at home are for suckers
14:07 < whiskers75> cloud9 IDE doesn't work :(
14:38 < mz2__> hey all
14:38 < mz2__> does anyone have experience of dealing with gzip compressed *request* bodies? 
14:39 < mz2__> i can't work out how to create a suitable connect middleware func to deal with it
14:49 < jasonkuhrt> is there a way to search npm for packages by version?
14:49 < jasonkuhrt> for instance npm search jquery tells me the package exists but not if version 1.8.x is available
14:53 < timeturn> is a module only resolved the first time it us required or is the inside the module executed every time the module is require()d?
15:02 < whiskers75> is there a bit.ly API module?
15:02 < yawnt> https://github.com/tanepiper/node-bitly
15:03 < yawnt> first result on google
15:03 < yawnt> come on
15:03 < whiskers75> ok thx :D
15:03 < yawnt> np
15:05 < mz2__> the issue i have with gzip compressed request bodies is that i can't get the data passed intact from the req.on('data', …) callbacks that pass a string object and not 'raw' bytes that i could pass for a streaming decompressor, or concatenate to a bigger buffer that would get decompressed on req.on('end', …) . http 1.1 defines an accepted content-encoding "gzip" but req.setEncoding isn't aware of it
15:12 < whiskers75> node-bitly doesnt seem to work - i get undefined
15:16 < whiskers75> http://pastie.org/4550560
15:21 < whiskers75> anyone?
15:22 < whiskers75> oh its ok - i was doing "!shorten google.com" instead of the full URL
15:23 < whiskers75> look on my channel: ##node-irc-bots :)
15:32 < wao> noine is there
15:33 < whiskers75> i am there
15:50 < aroman_> Part of my backend needs to do some parallelized IO and CPU bound work. It doesn't belong in the main server because it would block. Is standard practice to have another node.js process and have them use some sort of IPC/RPC to talk, or to fork in the main thread whenever that work needs to be done?
15:50 < mz2__> ah, silly me. i misinterpreted the setEncoding documentation bit. i was issuing a req.setEncoding(null). req.on('data' …) gives back a buffer of bytes that way
15:50 < whiskers75> my bot thinks 5 + 5 = 55 :D
15:50 < mz2__> i mean if i just don't setEncoding at all
15:51 < whiskers75> why does n1 + n2 (both are 5) make 55? :?
15:51 < thanpolas> they are strings
15:52 < whiskers75> but n1 / n2 when n1 is 5 and n2 is 2 make 2.5?
15:52 < whiskers75> how do I concenate n1 and n2
15:52 < whiskers75> ?
15:53 < thanpolas> concat or add?
15:54 < whiskers75> oh so concat(n1) + concat(n2)
15:54 < whiskers75> ?
15:54 < thanpolas> parseInt(n1, 10) + parseInt(n2, 10) = 10; //add
15:54 < thanpolas> n1 + '' + n2 = 55; // concat
15:54 < whiskers75> oh
15:55 < whiskers75> parseInt?
16:01 < whiskers75> thanks it worked
16:09 < DeltaHeavy> parseInt takes whatever you give it and parses it as a string. If you have the string '1234' parseInt will return the INTEGER 1234
16:11 < whiskers75> i know 
16:11 < whiskers75> have a look at my bot at ##node-irc-bots
16:27 < whiskers75> when is/was Node Summercamp?
16:34 < shoshy> hey, can anyone help out with sessions? i've managed to use redis store to store the session and the cookie but not to read it right, and its hard to find much info. 
16:34 < shoshy> with all those new version changes, etc..
16:35 < wookiehangover> shoshy: take a look at isaacs redsess
16:35 < wookiehangover> I was literally doing the same thing, was running into problems, and redsess had already fixed them in a way that way more than satisfactory
16:36 < DeltaHeavy> What does would a variable containing only '{}' be?
16:37 < shoshy> wookiehangover: thanks a lot, i'm trying to see if it depends on the new express / connect
16:39 < shoshy> DeltaHeavy: it's an object.. 
16:39 < shoshy> with no properties
16:39 < DeltaHeavy> shoshy: Thanks. Was a little tricky to Google for
16:39 < shoshy> DeltaHeavy: np
16:41 < shoshy> wookiehangover: i'm working with sessions via socket.io , i guess redsess doesn't
16:42 < wookiehangover> shoshy: gotcha, definitely worth reading through the code though... which was kinda my point
16:42 < wookiehangover> its has a much smaller surface area than connect sessions
16:42 < shoshy> yea
16:43 < shoshy> i will
16:46 < wookiehangover> shoshy: what are you using to read/parse the cookies in your socket connection
16:46 < wookiehangover> (and I'd be happy to look at a gist/repo if you've got it posted somewheres)
16:47 < shoshy> wookiehangover: sure, i'll put up a gist, sec :)
16:50 < shoshy> wookiehangover: http://pastebin.com/hc5DJsxR
16:50 < augustl> are there any ways to create a new node process without having to make a separate file containing the code? Something like process.start("javascript code for new process here");
16:50 < shoshy> where io is var io = require('socket.io').listen(http_server); :)
16:50 < augustl> hmm, perhaps node can read from stdin
16:53 < wookiehangover> shoshy: can when you log your cookie on line 10, can you manually check that its present in redis? and what gets logged on line 13?
16:54 < wookiehangover> and is `new express.session.Session()` synchronous? cause that could be potentially problematic if its not
16:56 < shoshy> wookiehangover: sure, sec... can i pmsg you? instead of pasting here..
16:56 < wookiehangover> sure
16:56 < shoshy> cool
17:01 < oren1> nodeup.com is down - An error has occurred: {"code":"ECONNREFUSED","errno":"ECONNREFUSED","syscall":"connect"}
17:01 < oren1> so i guess node is not ready for production (:
17:04 < mmalecki> oren1: fixed
17:06 < oren1> mmalecki: cool
17:06 < oren1> mmalecki: is there a url for the live audio?
17:06 < mmalecki> oren1: no idea
17:07 < oren1> i assume it's today at 12
17:07 < whiskers75> hm.
17:10 < whiskers75> that's mmy npmbro copy
17:10 < whiskers75> on 24/7 :)
17:10 < whiskers75> npmbro
17:10 < npmbro> Powered by http://jit.su/         Available commands: npm search | npm docs | npm install | npm stats | npm help | npm node | npm credits
17:11 < rhl> Hi, i'm hacking on an app sketch.rhl.io its supposed to be a multiuser whiteboard. All of a sudden every page reload deletes previous drawings. Can someone help me debug this?
17:14 < jhsto_> Does anyone know is it possible to run node on an external site? I would like to be able to make socket.io connections on domain which is not localhost.
17:14 < rhl> jhsto_ what do you mean?
17:14 < rhl> localhost is a keyword which refers to the host local to the machine
17:14 < Nasga> Hello, does anyone know a hype lib to display web graph in realtime ?
17:15 < rhl> Nasga: protovis
17:15 < rhl> or d3
17:15 < rhl> or something
17:15 < jhsto_> Yes, rh1, but I would like to run node to listen to a domain which is not on my main machine.
17:15 < gildean> listen to a domain?
17:15 < rhl> jhsto_ its an L not a 1
17:15 < jhsto_> However, I highly suppose I'm asking for impossible.
17:16 < rhl> and I don't know what you are asking for
17:16 < rhl> its too vague
17:16 < jhsto_> I thought the same.
17:16 < gildean> jhsto_: i think you mean cross-domain origin
17:16 < gildean> jhsto_: and yes, you can do that
17:16 < jhsto_> Cool,
17:16 < jhsto_> Any modules for helping on that?
17:16 < gildean> jhsto_: what are you using now?
17:17 < jhsto_> express
17:17 < gildean> iirc node-websockets has an object like request which has a value origin
17:17 < gildean> that you can check
17:17 < gildean> i'm not sure about socket.io but there should be somethign similar
17:18 < jhsto_> Thanks.
17:18 < jhsto_> I have to see if that helps me at all.
17:18 < Nasga> thx rh, this will rocks :)
17:20 < gildean> jhsto_: this is the only module i've used: https://github.com/Worlize/WebSocket-Node/wiki/Documentation
17:20 < gildean> as you can see it has a request object with an origin
17:20 < jhsto_> Oh I see that.
17:21 < micahf> hey i'm trying to run this node.js application i found on github and i'm getting an error that a directory isn't found.  it has "undefined" smack in the middle of it
17:21 < gildean> micahf: that doesn't really say much
17:22 < micahf> well my question is: where do i set environment variables?
17:22 < micahf> and i feel stupid now asking it cause it's such a google-able question :D
17:24 < micahf> see but in the path the "undefined" is right at ./
17:24 < rump> does geddyjs have an irc channel or community somewhere?  it looks fascinating :)
17:24 < micahf> if instead of "undefined" it just said nothing at all, things would work!
17:25 < micahf> it's got the whole path correct except it's inserting undefined instead of ""
17:26 < rhl> NasgaL np
17:26 < rhl> Can anyone take a look at sketch.rhl.io for me?
17:26 < rhl> tell me if they see any problems.. I can't figure out what is going wrong and why the server is not storing data
17:30 < micahf> here's my problem, i'm using "path" and path.sep is undefined
17:34 < qballer_> how do I require relatively  to the module location in the file system ?
17:34 < qballer> how do I require relatively  to the module location in the file system ?
17:37 < mmalecki> qballer: require('../stuff')
17:38 < qballer> yea, just tested that.
17:47 < rhl> In javascript, if you have an object Foo and say if( Foo) { .. } does that just say if Foo != NULL ?
17:48 < gildean> or rather undefined
17:49 < gkatsev> !falsey
17:49 < gkatsev> oh, wait wrong channel
17:50 < mscdex> woohoo! an async single-threaded libmysqlclient binding!
17:50 < mscdex> :-D
17:53 < DeltaHeavy> How do I return a URL path?
17:56 < micahf> i needed to update to a newer version of node.js
18:27 < wlaurance> \q
18:39 < whiskers75> im back
18:44 < qballer> guys how would you divide or scall and image in node.js
18:46 < RLa> there are gd bindings
18:47 < Daman> Is there a size limit on socket.write? On my server receiving the data, it seems to point to a position in my sent data and say unexpected end of input when the data is too large
18:48 < RLa> qballer, and also this: https://npmjs.org/package/gm
18:48 < mscdex> Daman: is the server a node script?
18:48 < whiskers75> npm docs gm
18:48 < Daman> yeah
18:48 < whiskers75> npmbro docs gm
18:48 < npmbro> whiskers75: Please see https://github.com/aheckmann/gm#readme
18:48 < RLa> damn, npm has troubles formatting readme?
18:48 < whiskers75> :)
18:48 < mscdex> Daman: sounds like it's expecting 'data' chunk === entire message, which is not necessarily true
18:48 < whiskers75> i'm hosting npmbro, but it was created by DTrejo
18:49 < Daman> ah
18:49 < Daman> that's right
18:53 < oren1> does anyone know the url for nodeup's live stream?
18:53 < whiskers75> my bot has a calculator, weather, opme and bit.ly. has anyone got any more ideas?:P
18:58 < whiskers75> maybe a translator :)
18:58 < whiskers75> gotta go
19:21 < xenol> Hi. I am playing around with various node modules. I want to join multicast group and I am using dgram.addMembership for it. However, I get this error: http://pastie.org/4551596
19:22 < xenol> from my understanding I have problem with socket and that it does not exist when I am setting membership
19:22 < xenol> source is here: http://pastie.org/4551591
19:22 < xenol> any ideas how to solve this?
19:24 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
19:25 <@isaacs> we should totally have a node.js webring
19:25 <@isaacs> bring that fad back
19:26 < gildean> haha
19:26 < gildean> haven't seen a webring since 1998
19:27 < oren1> anyone know when and where is the nodeup podcast?
19:27 < oren1> no one reply on #nodeup 
19:29 < xenol> uhm, anyone?
19:31 < Edy> xenol: what about http://nodeup.com/?
19:31 < tasslehoff> when a formidable upload fails, what`s the proper way to abort the transfer, and can I send some sort of response back to the browser? I tried req.connection.destroy(), but then I got "The connection was reset", perhaps not surprising.
19:32 < oren1> Edy: there is no mention of time or link for coming show.
19:32 < xenol> Edy: what about it?
19:32 < Edy> oh ok, i didn't know it is a live show
19:32 < oren1> Edy: that's the absurd part of it
19:32 < oren1> it seems like they don't want people to know it's live
19:33 < oren1> it suppose to be every sunday at 12 PST
19:33 < oren1> but it's not mentioned anywhere
19:36 < ericelliott> isaacs: I got an login error when I tried to do npm publish.
19:37 <@isaacs> ericelliott: yeah, you using npm 1.1.50?
19:37 < ericelliott> 1.1.5
19:37 <@isaacs> 1.1.5??
19:37 < ericelliott> urm
19:37 < ericelliott> 1.1.50
19:37 < ericelliott> sorry.
19:38 <@isaacs> ericelliott: kewl.
19:38 <@isaacs> fixed in 1.1.51
19:38 <@isaacs> publishing that now
19:38 < ericelliott> oh, cool.
19:38 < ericelliott> let me know when that's done.
19:38 <@isaacs> it's hard to test for, because it's a 2-week race condition :)
19:38 < ericelliott> wow
19:39 <@isaacs> ie, it happens when the login cookie from couchdb times out
19:39 < gildean> isaacs: so it's just long enough that you have time to forget about it each time
19:39 <@isaacs> yep :)
19:40 <@isaacs> alrighty, it's up
19:41 < ericelliott> cool
19:42 < ericelliott> how do I upgrade?
19:43 < coderarity> ericelliott, `npm i npm -g`
19:44 < ericelliott> sudo npm i npm -g
19:44 < ericelliott> /usr/local/bin/npm -> /usr/local/lib/node_modules/npm/bin/npm-cli.js
19:44 < ericelliott> npm@1.1.50 /usr/local/lib/node_modules/npm
19:44 < gildean> perhaps you need to clean cache?
19:45 < gildean> or does npm cache also the package list?
19:46 < ericelliott> maybe I ran npm update before it was finished publishing
19:46 < ericelliott> whatever, I have the latest, now
20:13 < qballer> did anyone divided a picture to smaller pics in node.js ? 
20:15 < Taneem> what do you mean divide?
20:16 < Taneem> I've used imagemagick to create multiple modified versions of an image in nodejs ... pretty straightforward 
20:17 <@isaacs> ericelliott: try again
20:17 <@isaacs> ericelliott: oh, you did, i see
20:18 <@isaacs> nvm :)
20:19 < ericelliott> isaacs: yeah, it seems to be working.
20:19 < ericelliott> I'll let you know if it breaks again in 2 weeks. ;)
20:19 <@isaacs> heh :)
20:29 < ericelliott> isaacs: I'm using npm for my client-side libraries.
20:32 <@isaacs> ericelliott: k
20:32 < ericelliott> isaacs: It's a little tricky to manage without a proper require, because load order is not preserved, or obvious to the library users. Strongly considering the option of moving all of applitude and the applitude utilities to browserify or similar. Any thoughts?
20:33 <@isaacs> ericelliott: yeah, browserify and similar things are pretty nice
20:33 <@isaacs> your users should use module/require/exports like in node
20:33 <@isaacs> and you can just use npm to manage deps, and browserify before deploying
20:33 <@isaacs> requirejs is also kinda nice, but depends on putting some boilerplate manually in some cases
20:33 <@isaacs> which is not so great
20:33 <@isaacs> but also not terrible.
20:34 < ericelliott> Yeah, I'd like as little boilerplate as possible. requirejs has a bit of momentum.
20:44 <@isaacs> 0 boilerplate = build step
20:44 <@isaacs> ericelliott: i mean, tha'ts the trade-off
20:44 <@isaacs> imo, a build step is not terrible
20:44 <@isaacs> you need that for client-side stuff anyway
20:44 < ericelliott> yeah
20:45 < ericelliott> I'm already requiring npm install if you want applitude to fetch its own dependencies for you
20:45 < ericelliott> otherwise, it assumes you're managing them yourself for your project
20:45 < ericelliott> using postinstall step to copy dependencies into applitude's ./lib folder.
20:51 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
21:10 -!- mode/#Node.js [+o piscisaureus__] by ChanServ
21:51 < Benvie> very happy for all this npm script hooks
21:51 < Benvie> was able to make a module that has binaries for windows and osx and compiles on linux
21:55 < mscdex> Benvie: shouldn't your binding.gyp take care of that and not npm scripts?
21:56 < Benvie> I would prefer that
21:57 < Benvie> it's overkill for simple things
21:57 < mscdex> Benvie: like what?
21:57 < Benvie> or I should say
21:57 < Benvie> it's a script either way
21:58 < Benvie> the differing is the context information you have when its called
21:59 < Benvie> if you run from npm then you will definitrly have all that information available, and you may not when running from gyp
21:59 < mscdex> what information?
22:00 < Benvie> like where npm is
22:00 < Benvie> to start
22:00 < Benvie> npm dumps out all of its settings into the env during scripts
22:00 < mscdex> what are you needing that path for?
22:00 < Benvie> all of it
22:01 < Benvie> I am trying to support users of an sdk built on node that is used by both node users installing npm and non-node users who are installing a standalone thing
22:02 < Benvie> attempting to do it without doing double the work
22:02 < tassmjau> hmm
22:04 < mscdex> oh, is this Appjs or something?
22:04 < Benvie> yeah
22:04 < Benvie> though I did implemement it in a small thing too just to play with it
22:04 < Benvie> and get more intimate with npm
22:05 < Benvie> is it possible to have a gyp file based setup for cross-platform setups where some get precompiled and some don't?
22:06 < milani> simply by platform conditions
22:06 < Benvie> yesh but
22:06 < Benvie> gyp...has to run
22:06 < Benvie> to begin with
22:06 < milani> hmmm yeah that
22:06 < milani> part will be npm.
22:07 < Benvie> the user experience for devs on windows basically isn't there, in my experience, un;ess they're devs who are equipped to compile things. At least not relying on these processes. So I tend to shy away from that
22:08 < milani> no I mean you could use npm to run gyp, and use gyp to copy on win, but compile on linux.
22:08 < milani> anyway that won't make a difference you know.
22:08 < milani> ;)
22:08 < Benvie> well yeah this was just the thing I ran into yesterday
22:09 < Benvie> ultimately just providing binaries for all is the solution for things that need to be easily distributed
22:09 < Benvie> and can manage it
22:09 < Benvie> so what that really means is I need to get in my linux vm and get my build env setup =D
22:10 < milani> haha.
22:14 < timoxley> isaacs if I'm using a private git repo for a module, npm seems to go about cloning the repo into a tmp folder, detecting the version number hasn't changed, then not updating the actual module code
22:15 < RLa> maybe you should update the version number :)
22:15 < RLa> tho i think it does not care about version numbers when you install from a directory
22:16 < RLa> maybe it does when you from a git repo
22:19 < timoxley> RLa yeah, I'm not sure if it makes sense to use the version numbers if it's checking out from git
22:20 < AAA_awright> It's not that hard to pull out the contents of HEAD/package.json
22:21 < AAA_awright> timoxley: I use submodules... 100% constistent "which version is going to get checked out" behavior
22:22 < timoxley> yeah, never really felt good about submodules
22:23 < timoxley> AAA_awright might test it out again, but I'd like to be able to use npm to manage these things
22:24 < AAA_awright> Submodules I really think are the proper way to list off dependency/library information. Semantic versioning tells you if two code bases are compatible, it doesn't identify the repository in question, nor does it tell you the history of the code you're depending on
22:24 < AAA_awright> Which if you're using a revision control system, your dependencies should be tagged with the same information
22:26 < TehShrike> Anyone here have any thoughts on Dash?
22:27 < AAA_awright> timoxley: Conceptually submodules are exactly what you should be using... idk why people get hung up over the UI, there's nothing /wrong/ with it?
22:28 < timoxley> TehShrike as in the osx documentation viewer? 
22:28 < TehShrike> As in Google's alternative to JavaScript
22:28 < TehShrike> Sorry, not Dash, Dart
22:28 < TehShrike> >_<
22:28 < TehShrike> *cough*
22:28 < holzp> I tried it months ago, the env wouldnt run at all
22:28 < holzp> lots of errors and stuff
22:28 < TehShrike> What OS?
22:29 < holzp> just don't think it is ready yet
22:29 < holzp> windows IIRC
22:29 < timoxley> AAA_awright perhaps, I think in this case npm link is what I should be using, but I'd prefer not to 
22:29 < TehShrike> I like the idea of optional typing, but I don't see much reason to shoehorn classical typing back into JS
22:30 < TehShrike> err, classical inheritance
22:30 < stefan41_> code structure / callback spaghetti question: if i have a socket.io connection that i need to feed events to conditionally based on messages that i get from a rabbitmq server, do i want to tangle those up, or have a third, custom object that is an event emitter that can deal with the rabbitmq messages?
22:31 < stefan41_> i want to avoid race conditions, and i can tell that the way i'm doing it right now is an unholy mess.
22:32 < RLa> TehShrike, you mean dart that compiles to js?
22:33 < TehShrike> RLa: yeah, there are straight-up Dart VMs, but it can also compile to JS
22:33 < TehShrike> Internal Google email about Dart from a couple years ago: https://gist.github.com/1208618
22:33 < RLa> the one where simplest hello world compiles to 17k lines of js
22:33 < TehShrike> Probably :-P
22:34 < TehShrike> Chrome supports it natively now I'm pretty sure
22:34 < timoxley> stefan41_ I think you answered your own question
22:35 < stefan41_> timoxley: you think that solution is a good one? the broker class to shuffle info between the two?
22:35 -!- mode/#Node.js [+o piscisaureus__] by ChanServ
22:36 < RLa> TehShrike, can't see how easily tooled and optional typing go together
22:36 < timoxley> stefan41_ doesn't need to be a class, but yeah. make sure everything just does a single thing, and you should be ok
22:36 < RLa> that requires type inference and complex and fragile compiler
22:37 < TehShrike> Maybe that's one thing you can clear up for me a bit - what exactly do they mean when they talk about it being "toolable" in that letter?
22:38 < jrajav> TehShrike: Chrome doesn't support it natively yet
22:38 < jrajav> And it's arguable that it will
22:38 < TehShrike> jrajav: yeah, I was just searching around, apparently it's still only in some Chromium builds
22:39 < jrajav> It's not really gaining any traction
22:39 < jrajav> The ever-increasing interest in vanilla Javascript isn't helping it either
22:40 < TehShrike> Yeah, that letter went out before Node.js started getting really big, didn't it?
22:41 < TehShrike> Also, as somebody who just started working more seriously with JS in the last year, it pains me to see people trying to fake classical inheritance in JavaScript - it doesn't work that way, stop confusing the people who are trying to learn JS! :-(
22:42 < jrajav> Everyone has to make a faux-classical library
22:42 < jrajav> And a terrible MVC library
22:42 < jrajav> It's like a Javascript rite of passage
22:42 < TehShrike> lol
22:42 < TehShrike> I've already made my terrible MVC library, but I must have skipped over the faux-classical period
22:42 < AAA_awright> I don't see what's wrong with Javascript, except for lack of support of very low-level datatypes like unordered sets and queues... Nor do I see the point of another langauge if it just compiles to Javascript anyways
22:43 < TehShrike> That's about where I'm at.
22:43 < AAA_awright> If I wanted to write ECMAScript, I'd write ECMAScript
22:43 < AAA_awright> AND I DO
22:44 < jrajav> These days, for anything I'm not getting paid for, I basically just use Javascript, Clojure, or C
22:44 < TehShrike> Some more options for number typing might be nice
22:44 < TehShrike> And of course the global scope in the browser is no fun
22:44 < TehShrike> But when it comes to inheritance, I'm fine with JS at this point
22:44 < AAA_awright> arbitrary precision numbers, 64-bit integers, yeah
22:44 < TehShrike> Right
22:45 < TehShrike> I could do with some of those
22:45 < luckysmack|home> if i do simply 'require('./foo.js')' and the fle foo.js only has a function in it, shouldnt that function be available in the script i require it from? or am i doing it wrong?
22:45 < AAA_awright> You can fix global scope in the browser
22:45 < jrajav> Yeah, UTF8 would be nice too
22:45 < jrajav> JS has its quirks, but it's better than most of the alternatives
22:45 < TehShrike> AAA_awright: how do you work around it?
22:45 < jrajav> And people always miss that *all* languages have quirks
22:45 < AAA_awright> I don't like the idea of shipping raw code off to the browser anyways, I like the idea of compiling and compressing code, both CSS, Javascript, and the DOM (as EXI)
22:45 < Benvie> speaking of types
22:45 < Benvie> check this out https://github.com/Benvie/nil
22:46 < ljharb> luckysmack_: no - requiring a module only returns what's assigned to module.exports
22:46 < AAA_awright> TehShrike: (function(){ /* */ })()
22:46 < AAA_awright> Creates a local scope.
22:47 < TehShrike> I've done some of this https://github.com/TehShrike/text-metadata-parser/blob/master/text-metadata-parser.js - putting my functions into a single object
22:47 < AAA_awright> I like the idea of using require() client side (even though I don't)... And you just define "This is what you return in respone to require('jade'), etc"
22:47 < luckysmack|home> ljharb, ok so how to I do that? if its just a local file im including.
22:47 < AAA_awright> TehShrike: Is there a reason for the "typeof module !== 'undefined'" check?
22:48 < AAA_awright> if module or module.exports is a falsy value you don't want to assign to that either
22:48 < ljharb> luckysmack|home: in that file, you have function foo() {}? so do module.exports = foo; in that file. then when you require it, do require('foo.js') and that will be equal to foo
22:48 < TehShrike> AAA_awright: do you just check to see if they're truthy?
22:49 < AAA_awright> Objects, the only thing you'd want to consider assigning to, are guarenteed to be truthy
22:49 < TehShrike> So you would check for typeof module === 'object'?
22:49 < jrajav> AAA_awright: require() client-side? What about caching?
22:49 < AAA_awright> just if(module && module.exports)
22:50 < TehShrike> But if module isn't defined, that would error, wouldn't it?
22:50 < mscdex> woohoo! a blazing fast, cross-platform, single-threaded mysql binding! :-D
22:50 < TehShrike> mscdex: where?
22:51 < ljharb> AAA_awright: generally if "module" is defined, you can assume it's in a require.
22:51 < mscdex> TehShrike: https://github.com/mscdex/node-mariasql
22:51 < AAA_awright> jrajav: More like: function require(module){ return arguments.callee.modules[module]; } then in follow-up files you go: require.modules.jade = function jade(){ /* */ return module.exports; }
22:51 < mscdex> TehShrike: still a work in progress, but the basic stuff is there. i just started today :-)
22:51 < TehShrike> mscdex: cool!
22:52 < TehShrike> mscdex: so you went for events over callbacks?
22:52 < mscdex> just a silly benchmark: "show databases" with node-mysql is ~142ms, with node-mariasql is ~14ms :-)
22:53 < AAA_awright> jrajav: Well, in some way that yeah, you just pre-define the modules, then you cache the same way Node.js does
22:53 < AAA_awright> ljharb: Which is why I wonder about the not-undefined check
22:53 < holzp> enought noise this week about oracle/mysql that maria will be getting traction
22:53 < mscdex> TehShrike: yes, i play on doing this The Node Way and always streaming rows
22:53 < mscdex> s/play/plan/
22:54 < ljharb> AAA_awright: right. if typeof module !== "undefined", it's considered safe to assume you're inside a require.
22:54 < RLa> mysql has bad thing, oracle, on it
22:54 < mscdex> i'm seriously thinking about using mariadb for my next major project
22:54 < holzp> same here
22:54 < mscdex> i think it has more to offer than percona (at least for what i want)
22:54 < AAA_awright> ljharb: My point is why not just if(module)
22:55 < TehShrike> AAA_awright: but doesn't that error?
22:55 < AAA_awright> That's unnecessarially verbose
22:55 < TehShrike> If it's not defined?
22:55 < AAA_awright> TehShrike: How would that error?
22:55 < ljharb> AAA_awright: because thats an error if it's undefined
22:55 < ljharb> AAA_awright: you can't reference undefined variables except with typeof.
22:55 < ljharb> it's a ReferenceError otherwise.
22:56 < TehShrike> Unless there's a "var module" floating somewhere above
22:56 < AAA_awright> Oh heh, I missed that exemption to typeof
22:57 < ljharb> AAA_awright: "less verbose" isn't the goal, "explicit and concise" is the goal. typeof is more explicit, thus it's better.
22:57 < ljharb> (imo)
22:58 < TehShrike> The typeof syntax does seem a bit clunky to me, but if that's the only way to check if something is defined, oh well
23:00 < LordThumper> Hi, should I use an external package for managing sessions/user-authentication?
23:02 < ljharb> LordThumper: as opposed to building one yourself? yes, don't reinvent the wheel.
23:04 < TehShrike> Maybe LordThumper meant to be asking for a recommendation?
23:05 < LordThumper> Ah yes, any recommendations? I just need to indentify the user in my code
23:05 < LordThumper> identify*
23:05 < LordThumper> Not sure if the Session ID is enough for that?
23:07 < ljharb> well, you'd want them to authenticate to get a session id, but once you have that, it's plenty
23:07 < ljharb> i use passport
23:08 < LordThumper> Oh I see
23:08 < LordThumper> I use socket.io, and it seems to already have a session id of some sort
23:08 < LordThumper> Got this in debug "set heartbeat interval for client 71StbLcC8YYCh0r3FxZ7"
23:08 < LordThumper> Well ill try passport out, thanks
23:12 < skarl> hello all, has anyone seen (and found a solution to,) excessive mark-sweeps when scavenge would have worked better?
23:12 < skarl> 61643 ms: Mark-sweep 47.7 (82.6) -> 45.1 (82.6) MB, 53 ms [external memory allocation limit reached] [GC in old space requested]. 
23:49 < Cat4D> has anyone done code/flowchart/semantic visualization demo in webgl/js with full cross-browser yet?
23:57 < Spion> what is full cross-browser
--- Log closed Mon Aug 20 00:00:51 2012
