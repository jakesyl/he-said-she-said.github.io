--- Log opened Thu Jan 10 00:00:55 2013
00:01 < MI6> joyent/libuv: isaacs created tag node-v0.8.17 - http://git.io/TQnLIg
00:04 < draginx> Nexxy: https://gist.github.com/b500538b8072b098482f :)
00:06 < jtnt> passportjs - what do I do if I've forgotten the refreshtoken?
00:07 < MI6> joyent/node: isaacs created branch v0.8.17-release - http://git.io/ZFOPLw
00:08 < sahat> Hi, we have a Mongoose collection that has a field of type array which references another collection. If we are going to remove an item from that array, will it also delete a reference from another collection like SQL and ForeignKey ?
00:09 < sahat> E.G. Game collection has comments array field which references Comment schema. If I delete an item from comments array, will it also delete that object from Comments collection?
00:23 < substack>  /sb end
00:28 < CoverSlide> /sb start
00:29 < MI6> joyent/libuv: Ben Noordhuis master * 80f6a9c : unix: omit second fcntl() call if possible  Omit the fcntl() syscall when - http://git.io/XdBh3w
00:37 < andrewaclt> Are there good examples of modules that setup there own events and track program state between events?
00:44 < AAA_awright> andrewaclt: Their own events? Usually you have to call on a module specifically, they're not magic...
00:45 < mansoor-s> Hello friends
00:45 < andrewaclt> AAA_awright, Maybe I'm confused. Can I not set up event listeners inside a module?
00:46 < AAA_awright> andrewaclt: What are you trying to do?
00:46 < andrewaclt> AAA_awright, I was trying to better structure my code without having a huge app.js with tons of nested event listeners
00:48 < AAA_awright> andrewaclt: You'll have to provide some examples
00:49 < andrewaclt> AAA_awright, say I was writing a card game, spades. I have a lobby and I have the actual game that people play. Events come in through socket.io. Could I refactor out all my lobby code to a lobby module and another to the spades module without having to set up event listeners in app.js?
00:50 < andrewaclt> (and instead have socket.on, etc in the module itself)
00:51 < AAA_awright> andrewaclt: The listener must be registered where you have the event emitter in context. Nor would you want to do it any other way.
00:51 < AAA_awright> But that doesn't stop you from moving your function definitions to another file.
00:52 < AAA_awright> Just setup a module that exports the functions you want to call.
00:52 < pottersky> hi ppl :)
00:59 < cxreg> mranney talking to merlyn: http://twit.tv/show/floss-weekly/237
00:59 < MitchW> any people here familiar with async.js know how to 'break' out of a forEachSeries loop without raising an error? (considering I use the error for ... actually raising an error)
01:00 < MitchW> I know I can do it manually with a variable causing subsequent iterations to instantly return, just curious if the functionality is already in async.js
01:01 < MI6> joyent/node: Ben Noordhuis master * a6756a2 : test: run tests in alphabetical order - http://git.io/laAcQg
01:05 < MI6> joyent/node: isaacs v0.8.17-release * c50c33e : 2012.01.09, Version 0.8.17 (Stable)  * npm: Upgrade to v1.2.0   - peerDep - http://git.io/EFh_QQ
01:05 < MI6> joyent/node: isaacs created tag v0.8.17 - http://git.io/-Y6aRw
01:10 < MI6> joyent/node: isaacs v0.8 * daf4666 : Now working on 0.8.18 (+2 more commits) - http://git.io/a2tA5g
01:11 < MI6> joyent/node: isaacs v0.8 * 1388171 : blog: Post about v0.8.17 - http://git.io/OjCdCQ
01:12 < NaN> where can I find a good tutorial to install node on Fedora? - I installed it and chromium didn't work, I desinstall and now I can't install neither chromium or nodejs
01:13 < bnoordhuis> NaN: did you install from the fedora repo or ?
01:14 < NaN> bnoordhuis: didn't remember, I followed the steps on http://nodejs.tchol.org
01:14 < NaN> :(
01:14 < bnoordhuis> NaN: oh that. i think that's pretty outdated
01:14 < bnoordhuis> if you check the wiki, there's a node package in yum now
01:14 < bnoordhuis> it's the bleeding edge version though, not v0.8
01:15 < NaN> so I need to delete that repo from my yum and next try to install it?
01:15 < livinded> bnoordhuis: is proper group dropping going to land in 10.0.0 or in 0.8.x?
01:15 < bnoordhuis> livinded: 0.10
01:16 < bnoordhuis> NaN: i would recommend that. or just compile from source
01:16 < NaN> bnoordhuis: ok I will delete the nodejs repo and try it, thanks
01:16 < livinded> bnoordhuis: cool, I'll update the module then and push out some updated code
01:16 < bnoordhuis> np
01:16 < NaN> bnoordhuis: do you know if I need to delete the chromium repo too?
01:17 < bnoordhuis> NaN: i don't think so
01:24 < MI6> joyent/node: isaacs v0.8 * 6d9ee4b : blog: Add security notice to v0.8.17 post - http://git.io/w2xFeQ
01:25 < _numbers> if i rebase my github repo, how do i npm publish the same version again without bumping the version first?
01:25 < _numbers> npm publish --force doesn't seem to do it
01:25 < _numbers> only bumping version seems to work
01:26 < trevnorris> just fyi: don't reference your own pull request in your pull request. github doen't like it.
01:27 < trevnorris> did a couple rebase's then pushed. every time it self referenced on the PR page. so stupid.
01:34 <@isaacs> rvagg: so, fd.checkout() keeps fd.close() from *actually* closing it? 
01:35 <@isaacs> rvagg: and then fd.close() will just close it if no one has it checked out?
01:35 < devc> Hey guys, I'm trying to install node.io and my googling shows nothing. I feel like I'm missing something, but without Google at such an early stage I've hit a roadblock. I'm running the install command in OSX's terminal. Have completely nuked and reinstalled node/npm
01:36 <@isaacs> _numbers: npm publish -f should definitely work
01:36 <@isaacs> _numbers: but if it's a new version, changing the version number is usually a good idea
01:36 < rvagg> isaacs: yes, fd.checkout() will delay a close until it's been checked back in again
01:36 < rvagg> or however many have been checked out have been checked back in
01:36 <@isaacs> right
01:36 <@isaacs> so it's like a ref/unref kinda deal
01:36 < draginx> https://gist.github.com/b500538b8072b098482f any idea why I would be getting a 400 bad request from this?
01:36 < rvagg> so fd.close() can come prior to all the checkin()s
01:36 < rvagg> yerp
01:37 <@isaacs> rvagg: so, open() checkout() close() checkin() <-- closes on checkin(), yes?
01:37 < rvagg> yep
01:37 <@isaacs> awesome
01:37 < rvagg> after a nextTick I think
01:37 < joshSzep> I'm having a strange issue with my stylesheet failing to load. Inspecting in the chrome debugger (and view source) I can see "<link ref="stylesheet" href="css/landing.css" />" is present in the header, but express logging is not reporting a GET for the resource. If i navigate explicitly to (host)/css/landing.css it does retrieve the stylesheet. Any ideas? I am also trying to use less-middleware [cross-post from #express]
01:37 < rvagg> see example: https://github.com/rvagg/node-fd#example
01:37 <@isaacs> that's probably wise
01:37 < rvagg> isaacs: fd.checkinfn() creates a handy only-checkin-once function that can be used and called multiple times but will do a single checkin
01:38 <@isaacs> rvagg: you know there's a module "once" for that
01:38 < rvagg> yeah, but it was a 3-liner
01:38 <@isaacs> yeah, once is about that :)
01:38 <@isaacs> i do that a lot in npm.  making it a module was a net savings, even as a three-liner
01:38 <@isaacs> cb = once(cb)
01:38 <@isaacs> etc.
01:39 <@isaacs> instead of called = false, cb = function(er) { if (called) return; called = true; cb_(er) }
01:39 < draginx> Nexxy: any idears? :D
01:40 <@isaacs> rvagg: and this fixes the failures you're seeing on st?
01:40 < rvagg> isaacs: mm, I'm not so comfortable with pulling in a mini dep like that, you feel the extra download time when you have the latency we do here in Aus
01:41 < rvagg> isaacs: I'm not entirely sure about that; if you want to wait I can report back once I have it in production in the various places I'm using st.. I had to restart a production server just 30 mins ago because of this exact bug
01:41 <@isaacs> rvagg: if it's so small, you can just bundle it ;)
01:41 <@isaacs> but sure.
01:41 <@isaacs> i getcha
01:42 <@isaacs> rvagg: we really need a better CDN-style npm registry
01:42 <@isaacs> have a replica in sydney or something
01:42 <@isaacs> or at least asia
01:42 < rvagg> mm, singapore or japan might make sense, tho sometimes we're routed through CA to get there
01:47 < livinded> does anyone know of a promise based map/reduce implementation that allows for sets of data to move onto the next step rather than blocking for the full set to be processed?
01:48 < joshSzep> It appears chrome is not even requesting the stylesheet from the server. Here is a gist with everything I could think of that is relevant: https://gist.github.com/1f31b5bdf22c73b5aadd
01:49 < CoverSlide> I think Aus would be a good environment for datacenters
01:50 < CoverSlide> amazon should build one there
01:50 < CoverSlide> oh wait they do
01:50 < CoverSlide> in sydney
01:51 <@isaacs> rvagg: i've gotta step out for a bit, but if you can run those tests and ping me if they work, that'd be awesome
01:52 < rvagg> isaacs: will probably let you know tomorrow how it goes, no rush from my end
01:52 <@isaacs> rvagg: ok, kewl
01:52 <@isaacs> rvagg: i can also just soldier forward with it and test on npmjs.org
01:53 < rvagg> isaacs: well, I'm comfortable with it if you want to just push it out
01:53 < phonebook_> is there a simple way to request a webpage?
01:53 < rvagg> phonebook_: http://github.com/mikeal/request
01:53 < mansoor-s> phonebook_, yah request or Restify
01:54 <@isaacs> rvagg: k, published with your stuff on 0.1.2
01:54 < rvagg> isaacs: cool, thanks
01:54 <@isaacs> thank you!
01:55 <@isaacs> alrighty, it's live on npmjs.org
01:55 <@isaacs> rvagg: so you can start using whatever backdoors you tricked me into installing ;)
01:56 < _numbers> isaacs: on machine A, i change without bumping version and then  `npm publish -f`. on machine B where i already have the package checked out from before, i try `npm update --force` and it keeps getting the prior version
01:56 < _numbers> it wont recognize any change unless i bump version
01:56 <@isaacs> _numbers: i don't knwo what `update --force` does
01:56 < _numbers> `npm install --force` doesn't help either
01:56 < rvagg> isaacs: I'll give you repo access so you can remove the backdoors when you find them
01:56 <@isaacs> _numbers: probably update isn't doing anything, because it says "I already have that installed"
01:57 < rvagg> isaacs: there's also RedSess -> generic-session to consider some time
01:57 <@isaacs> _numbers: npm install <pkgname> wopuld do it
01:57 <@isaacs> rvagg: yeah, that's coming next
01:57 <@isaacs> k, gotta run
01:57 < rvagg> isaacs: see https://github.com/rvagg/node-level-session
01:57 <@isaacs> i saw!  very nice :)
01:57  * isaacs &
01:57 < synack> I've got two unit tests failing after performing a fresh build of node 0.8.17. https://gist.github.com/ef392abc588e8ab309aa
01:57 < _numbers> npm install <pkgname> *did* work. but *sigh*
01:58 < _numbers> i'm basically developing on a collection of modules and i want it to be like any edge development scenario
01:58 < _numbers> where a trusted team can get my latest changes any time, no matter how small, or no matter if history was changed/cleaned up
01:58 < _numbers> but right now its a big hassle with npm. guess its a job for github and submodules or something
01:59 < phonebook_> rvagg, yay it worked
01:59 < rvagg> phonebook_: be sure to read the full docs for request, it's very powerful!
01:59 < synack> I think the ENOTSOCK != EINVAL assertion is just a bug in the test... ENOTSOCK seems like the right thing to be throwing in the case of fd 0
02:01 < othiym23> I know isaacs just took off, but are there any pointers to docs on the new peerDependencies stuff in npm 1.2?
02:01 < othiym23> I mean, I was there for a bunch of the discussion of it at summer camp, but I might be able to use it for a couple projects if I can figure out how it works
02:01 < othiym23> it's not in npm help json yet
02:01 < rvagg> olegp_: possibly the best resource might be here: https://github.com/isaacs/npm/issues/1400
02:02 < rvagg> sorry, not olegp_ 
02:02 < rvagg> othiym23: https://github.com/isaacs/npm/issues/1400
02:02 < othiym23> rvagg: thanks a bunch, also looking at https://github.com/isaacs/npm/pull/3003
02:02 < synack> it looks like the test-net-connect-timeout test is trying to open a connection to 24.24.24.24, expecting it to timeout... but it's getting an ICMP reachable back from that host, because it's some random cable modem somewhere.
02:03 < synack> 36 bytes from ae10-0.syrcnycsr-rtr03.nyroc.rr.com (24.24.21.220): Destination Net Unreachable
02:03 < synack> ICMP unreachable* that is
02:03 < synack> it doesn't have an 'error' handler setup, so the thing just bails out
02:04 < synack> maybe joyent has an IP we can use there instead, that will reliably timeout?
02:08 < synack> hearing no objections, I'll open an issue on github.
02:19 < perlitch> hey all… first time here and i apologize if questions like this are not welcome… can you define the 'this' object for listeners when you call EE.emit()?
02:21 < othiym23> perlitch: sure thing
02:22 < othiym23> this.emit('blargh', this.callbackFunction.bind(this))
02:22 < othiym23> (you can pass in whatever you want to be bound to this there, doesn't have to literally be 'this')
02:22 < perlitch> gotcha, that makes sense
02:23 < perlitch> thanks othiym, really appreciate it
02:23 < othiym23> you're welcome!
02:23 <@Nexxy> \o/
02:29 < draginx> https://gist.github.com/b500538b8072b098482f any idea why I would be getting a 400 bad request from this?
02:39 < mansoor-s> Appfog just drop requests for anyone?
02:39 < mansoor-s> i'm pushing project
02:39 < mansoor-s> and it seems lke every other request it says Go F*** yourself 
02:40 < mansoor-s> FFFFFUUUUU
02:40 < mansoor-s> I'm done with the "cloud"
02:41 < othiym23> but... is the cloud done with YOU
02:42 < mansoor-s> i'm goign to go and stab a few balloons now
02:43 < othiym23> :(
02:43 < othiym23> poor balloons
02:51 < mscdex> isaacs: the wrong msi is in nodejs.org/dist/v0.8.17/x64/
02:51 <@konobi> mscdex: !
02:52 < mscdex> :S
02:55 <@konobi> mscdex: pm-ed... phear
02:57 < mscdex> isaacs: ok it looks like the msi _is_ for 0.8.17, but the filename is wrong?
03:00 <@isaacs> mscdex: oh, yeah, that's... weird
03:00 < mscdex> :-)
03:02 <@isaacs> mscdex: rebuilding the x64 windows build..
03:02 <@konobi> isaacs: why doesn't npmjs.org doc link point to npm docs?
03:02 <@isaacs> konobi: i dunno
03:03 <@isaacs> cuz it's just a copy of the same html?  patch welcome
03:03 <@konobi> isaacs: send me an email to remind me in the morning =0)
03:03 < jocafa> the .pkg on nodejs.org is 404ing
03:04 < jocafa> http://nodejs.org/dist/v0.8.17/node-v0.8.17.pkg
03:05 <@isaacs> jocafa: fixed
03:06 < jocafa> gracias sir isaacs
03:06 <@isaacs> np, sorry bout that
03:06 < Guest73071> no worries :>
03:06 < jocafa> permissions?
03:08 < MI6> joyent/node: isaacs v0.8 * be54423 : blog: Correct shasums for v0.8.17 - http://git.io/cj1RNw
03:09 < samholmes> What if I have HTML content generated by real-time web-socket events; how could I avoid needing to make changes both on the front-end scripts that generate the HTML and the EJS template when making changes to this content? There must be a way to not repeat myself twice.
03:10 <@isaacs> jocafa: permissions?
03:10 < jocafa> oh i was just wondering if nginx was 404ing it because of file permissions… no big deal
03:14 <@isaacs> oh, no, it was 404ing because the file wasn't there :)
03:15 < jocafa> that's a good reason to 404
03:15 <@isaacs> yep :)
03:18 < brainbox1100> Hi. What's a good framework for build out REST web services? express or testify are at the top of my list so far.
03:20 <@konobi> brainbox1100: restify
03:21 < brainbox1100> sorry, I mean restify not testify. Auto correct...
03:23 < cellvia_> you found the right ones, go for it
03:23 < cellvia_> flatiron could be another
03:26 <@konobi> for an api, i'd go with restify... it and it's middleware are designed around that
03:28 < segomos> samholmes: can't you just refresh that area of the page with html generated by your EJS temlate?
03:29 < segomos> then you write a "dumb" refresh client js and just push updates to it
03:30 < Raynos> brainbox1100: the only alternative to those are combine small modules ( https://github.com/Raynos/routil#small-libraries )
03:31 <@konobi> Raynos: or to do it himself
03:31 < Raynos> well building it all yourself is an academic excercise
03:31 < Raynos> i guess the third option is to build your own opinionated framework on top of small modules
03:32 <@konobi> Raynos: so why didn't you use one of the options available... *oh snap*
03:32 <@konobi> =0P
03:32 < Raynos> because it was an academic excercise
03:32 < Raynos> and now I already have those modules ;D
03:32 < Raynos> half of that list are modules that are not mine.
03:32 < Raynos> and the list is incomplete
03:33 < Raynos> the point is the "no framework" approach ( https://github.com/isaacs/npm-www#design-philosophy )
03:33 <@konobi> academic < real-life
03:34 < Raynos> konobi: that's why you use other people's modules instead of writing your own.
03:34 <@konobi> it's also why i suggest them as well
03:35 <@isaacs> if i realy cared a LOT about REST paradigms, I'd go with restify
03:35 <@isaacs> but REST is a silly religion.
03:35 <@isaacs> it's like catholicism.  no one actually understands it, and everyone thinks they do and they all do it differently.
03:36 < Raynos> isaacs: why would you go with restify?
03:36 <@konobi> as is homosapianism!
03:36 <@isaacs> konobi: homosapianism is racist.
03:36 <@isaacs> konobi: i accept people of all species.
03:36 <@konobi> Raynos: we trust the author
03:36 <@isaacs> Raynos: mostly?  because mcavage is the shit.
03:37 <@konobi> mcavage++
03:37 <@isaacs> Raynos: but also, it has roughly the same sort of stacking API as express, which i mean, whatever, it encourages some unsavory practices sometimes, but it is pretty nice to use, 
03:37 <@isaacs> Raynos: except it does a lot of stuff that youer' "suposed" to do with REST
03:37 <@konobi> throttling, built in... who would've thought...
03:37 <@isaacs> Raynos: etags and Content-MD5 headers and content-length and accept stuff etc.
03:37 < Raynos> Meh I feel highly allergic to stacking / middleware
03:37 <@isaacs> right, throttling, etc.
03:37 <@isaacs> Raynos: you don't HAVE to use the stacking
03:38 <@isaacs> Raynos: in fact, when i last used restify, i tried not to, as much as possible.
03:38 <@isaacs> it's handy for certain things
03:38 <@isaacs> but it's abused usually
03:38 < Raynos> well stacking is nice for trees
03:38 <@isaacs> restify also has some pretty sweet dtrace-provider integration
03:38 < Raynos> well yeah dtrace integration
03:39 < Raynos> is pretty attractive
03:39 <@konobi> and bunyan
03:39 <@konobi> and it's dtrace stuff
03:39 <@isaacs> i mean, like any platform, if you're very much in line with the author's intended use case, and you are very much in line with the author's way of thinking,it's great.
03:39 <@isaacs> also, i know mark, and i can bitch at him if it doesn't do what i want
03:40 <@konobi> joyent people are awesome... they do stuff well... it's well worth following suit
03:40 < Raynos> ok
03:40 < Raynos> restify doesn't look that bad.
03:41 < Raynos> you can do a lot worse
03:41 <@isaacs> but, if you want templates or even just stuff that isn't within the use-case of "a restful API server", then don't use restify
03:41 <@isaacs> it's not a general-purpose web platform
03:41 <@isaacs> and you'll be fighting it if you want to do other types of jobs
03:42 < Raynos> i can harvest restify
03:42 < Raynos> for modules :D
03:42 < Raynos> I harvested npm-www/decorate.js for modules >_>;
03:42 <@isaacs> true that
03:42 < Raynos> isaacs: half of what used to be routil is your code :D
03:42 <@isaacs> Raynos: i need to switch over to using those... wanna send some patches?
03:42 < seekshreyas> quit
03:43 <@konobi> Raynos: but... mcavage++... it's not often that folks give such a concrete recommendation for a person, vs libs
03:43 < Raynos> isaacs: patches to use modules in decorate.js or patches to not use the extend req/res pattern
03:43 < Raynos> konobi: I dont know mcavage
03:44 <@isaacs> Raynos: both
03:44 < Raynos> isaacs: I'll look into it.
03:45 < Raynos> isaacs: https://github.com/isaacs/npm-www/issues/223 assign to me
03:45 < Raynos> and then bitch there when I forget
03:45 <@konobi> Raynos: but you have to nodejs core folk saying "yup... he's good"...
03:45 < Raynos> konobi: I dont know who you are either :D
03:46 < Raynos> but if isaacs says he's good then he's good
03:46 <@konobi> Raynos: oh, harsh man... harsh
03:47 < Raynos> https://npmjs.org/~konobi ?
03:47 <@konobi> github konobi, cpan konobi, etc
03:48 <@konobi> Raynos: hopefully isaacs and ryah think i'm still an okay bloke...
03:48 <@konobi> =0P
03:49 < bubbles10101> node really needs to handle UTF-8 :(
03:50 <@konobi> bubbles10101: it does
03:50 <@konobi> bubbles10101: remember, unicode is just a list of bytes
03:50 < bubbles10101> afaic it does not directly, as V8 uses UCS-2 internally.. dont mind being corrected though...
03:52 <@konobi> bubbles10101: try using the Buffer type more, it should make you happier
03:56 < brainbox1100> konobi: hi, in testify, what does return next() do? Just reading the example on git.
03:57 < brainbox1100> konobi: maybe its an implied for loop. 
03:58 < Raynos> brainbox1100: that confused me aswell. probably needed to tell the framework "i am done, you go clean up now"
03:58 < Raynos> so that it doesn't have to assume "your done" when you do res.send or res.end
03:58 < Raynos> which may or may not be a suitable opinionated default
03:59 < brainbox1100> makes sense.
03:59 < Raynos> dont take my word for it :p
04:01 < Raynos> ok I changed my mind. restify is worth using for the fact it uses domains & dtrace hooks sensibly
04:03 <@konobi> Raynos, brainbox1100 ... next() is generally the way to hand off to the next thing... (for example an error collector, like something that spits out a 500, or a 404 page not found)
04:03 <@konobi> it's a common thing for asyn frameworks
04:04 < Raynos> but what if you do res.end()
04:04 < Raynos> why would you want to call the next thing
04:05 < Raynos> isaacs: npm-www has no integration tests >_<
04:06 < ChrisPartridge> Raynos: you don't need to call next, it's just there if you need it
04:08 < shihan> anyone know if theres a set of direct links to binary downloads for most current versions of nodejs?
04:09 < jdiamond> shihan: http://nodejs.org/dist/latest/
04:09 < wwicks> Why does this output <Buffer c2 8d>?    
04:09 < wwicks> console.log(Buffer(String.fromCharCode(0x8d)));
04:11 < shihan> jdiamond, yeah, i know that one, i meant more like http://nodejs/download/windows-msi-64/current/ (or some such) would redirect to the download link of the current nodejs binary for 64bit windows
04:13 < jdiamond> shihan: i don't know of a link like that. =(
04:14 < shihan> jdiamond, no worries :) i couldnt find one anywhere either, but i think i might suggest one cause it'd be kind of handy for a few things
04:14 < jdiamond> wwicks: that 0x8d character is two bytes in the UTF-8 encoding.
04:17 < mansoor-s> :(
04:17 < mansoor-s> went to ##php I think my iq dropped 50%
04:17  * mansoor-s needs a berak
04:17 < mansoor-s> break*
04:18 < wwicks> jdiamond: right, where does the 2c come from? I'm guessing there is an algorithm of how it came up with 2c.
04:19 < jdiamond> wwicks: the algorithm is UTF-8.
04:21 < Raynos> isaacs: still can't run couch locally on my machine to dev on npm-www :/
04:21 < Raynos> sucks
04:28 < stefan41> what would cause my `npm start` to fail with an error code 127
04:29 < stefan41> or, more to the point, what would cause `sh "-c" "node app"` to exit with 127
04:29 < wwicks> jdiamond: ah-k i see it now. thx.
04:34 < jpotts> aandy: ping
04:34 < freewil> stefan41, your app is broken
04:35 < freewil> just run node app
04:35 < stefan41> freewil: actually, seems that 'sh' wasn't in the path… (running this with launchd, and having no end of hurt)
04:47 < cr11sh_> hello, i am using flixge/node-mysql (https://github.com/felixge/node-mysql) but I seem to be having a problem #mysql
04:49 < cr11sh_> im using mac
04:51 < styol> cr11sh_: I'm familiar with MySQL (not the node module though), but what is the issue? Just in case someone might be more inclined to answer when more information is provided
04:56 < cr11sh_> im trying to connect to mysql using node-mysql libraries, the connection seems to be established
04:56 < cr11sh_> but then the queries wouldn't run
04:56 < jpotts> cr11sh_: I like to use sequelize it is a great mysql ORM with good documentation only drawback is migrations
04:56 < jpotts> http://sequelizejs.com
04:57 < ChrisPartridge> cr11sh_: gist/pastebin your code
04:59 < cr11sh_> https://gist.github.com/4499582
04:59 < cr11sh_> its a simple piece of code to connect to mysql using node-mysql library (felixge/node-mysql)
05:00 < cr11sh_> the console.log inside the connection.query doesn't work at all
05:00 < jdiamond> cr11sh_: did you check err in your callback to see if it said anything useful?
05:00 < cr11sh_> I get a connect ECONNREFUSED
05:02 < jdiamond> cr11sh_: just guessing, but maybe the call to query shouldn't happen until the callback for connect gets invoked.
05:03 < jdiamond> cr11sh_: in other words, move your call to query to right after line 11 (inside the connect callback) so that you don't try to execute the query before the connection succeeds.
05:04 < cr11sh_> @jadiamond : I've tried that too
05:04 < cr11sh_> [Error: Cannot enqueue Query after invoking quit.] code: 'PROTOCOL_ENQUEUE_AFTER_QUIT', fatal: false 
05:08 < Amitdrupal> i am new in node js
05:09 < jdiamond> cr11sh_: you sure you don't have a call to connection.end() in your script?
05:09 < Amitdrupal> please suggest me process and step for study node js
05:10 < jdiamond> Amitdrupal: http://www.nodebeginner.org/
05:15 < nerph> using express to build some REST services… app.get, app.post and app.delete work fine… but app.put doesn't.  any ideas?
05:15 < mscdex> node.js rules!
05:17 < nerph> Error: .put() requires callback functions but got a [object Undefined]
05:23 < ChrisPartridge> nerph, sure you are passing a fn to it?
05:25 < nerph> ChrisPartride: Oh hell!  It's  in app.js I  had app.put('/user/edit/:id', user.update); but in user.js the export was export.edit!!!!  
05:26 < nerph> ChrisPartridge: thanks, with something stupid like that it must be time for bed...
05:52 < dook> What's the best tool to find memory leaks?
06:05 < Amitdrupal> what is node js role   in web development 
06:05 < Oddman> it doesn't have a role
06:06 < Oddman> like any platform, it can be used for it
06:06 < Oddman> but node wasn't really built for web
06:06 < inolen> ...
06:06 < cxreg> isaacs: if i'm going to send you patches against domains, would you prefer them on the 0.8 or 0.9 series?
06:14 < mclenithan> anybody worked with windows 8 stroe apps + node.js?
06:15 < mclenithan> store*
06:25 < Amitdrupal> i am a web developer. I am working in drupal(PHP). How node js is use for me 
06:25 < greg5green> it isn't
06:35 < greg5green> sorry Amitdrupal, got pulled away for a second
06:35 < greg5green> NodeJS is a server-side scripting language
06:36 < greg5green> It's more of a competitor of PHP than something you would use in conjunction with it
06:36 < greg5green> although you could write a RESTful API in Node and then talk to it from your Drupal install if you wanted
06:38 < greg5green> As I Google, there seem to be many people do that
06:41 < greg5green> Amitdrupal: http://www.slideshare.net/mcantelon/introduction-to-nodejs-perspectives-from-a-drupal-dev might clear things up for you
06:42 < _hemanth_> greg5green++
06:43 < mattrobenolt> isaacs: ping?
06:56 < xp_prg> hi all, I have an opensource project that I need to convert to asynchronous, I tested it synchronously and it totally works
06:56 < xp_prg> I am kind of baffled how to do this, if anyone has any patience I would like to describe its basic architecture and get some high level advice
06:57 <@mbalho> xp_prg: http://nikhilm.github.com/uvbook/
06:58 < bubbles10101> is NODE_PATH env variable necessary? mine is blank and everything seems normal
07:07 < xp_prg> well I am reading this and I do understand it, I have questions though, basically my program has a recursive function that then calls another function that goes into a for loop and in that for loop it calls the same recursive function
07:07 < xp_prg> I know I can use a stack to handle both a recurisve function and a for loop
07:08 < xp_prg> what confuses me is how to handle the for loops that calls the recursive function
07:15 < timoxley> xp_prg3 can you show some code
07:17 < timoxley> bubbles10101 if it's working, then no
07:17 < bubbles10101> fwiw installed node using brew
07:17 < timoxley> xp_prg3 you might want to consider using a lib like async to handle the loops https://github.com/caolan/async#forEach
07:18 < timoxley> bubbles10101 if it's working then meh
07:18 < bubbles10101> haha i sort of have the opposite view, if something is amiss.. ask why. it may appear to work but cause some weird ass problem down the road
07:19 < timoxley> amitdrupal did you get your question answered?
07:20 < amitdrupal> Yes
07:20 < amitdrupal> Thanks
07:20 < NaN> where can I find a tutorial to install nodejs on fedora 15?
07:21 < chovy> NaN: nodejs.org
07:21 < chovy> can't you just download the .tgz and build it?
07:36 < atmos> anyone ever seen weird conditions where child_process#spawn returns null stdout/stderr attributes ?
07:37 < NaN> chovy: I don't know how to build it
07:38 < atmos> i upgraded an app from 0.4.10 to 0.8.11 earlier and i'm unable to add event callbacks to the streams to capture their output
07:49 < isaacbw> do you guys have any dedicated host recommendations
07:50 < isaacbw> in the new england area, preferably
08:03 < chovy> isaacbw: ovh.ie kimsufi special edition if you're on a budget
08:03 < chovy> data center is in montreal i believe
08:03 < chovy> i pay $160/year for 4GB/2TB
08:04 < chovy> 100Mbps
08:04 < isaacbw> oh awesome, thanks
08:05 < isaacbw> not bad prices at all
08:12 < bubbles10101> is nvm the best way to manage node on osx (dev), staging (linux) and production (linux)? was using brew, but maybe thats not the best way
08:12 < atmos> are there any decent docs for upgrading spawn calls from node 0.6 to node 0.8?
08:13 < isaacbw> bubbles10101, on linux you can usually just use the distro's repositories
08:14 < isaacbw> though I guess it depends on the distro whether that will be close to up to date
08:14 < bubbles10101> hmm, yeah i was hoping to standardize across platforms
08:15 < isaacbw> you probably won't be doing a lot of updating of node in production. Would it be too much of a pain in the ass to just compile from source?
08:16 < greg5green> isaacbw: I like Webfaction, but their datacenter is in DC (only several milliseconds away from NE)
08:16 < isaacbw> oh, that's plenty close enough greg5green 
08:17 < greg5green> isaacbw: of course, you're paying a lot more than 160/yr as they want 250-500/month for a dedicated server
08:17 < isaacbw> yea :P
08:17 < isaacbw> thought it's managed, which is worth a lot
08:18 < greg5green> I use them for their shared service, one of the better shared providers
08:18 < greg5green> yup
08:18 < greg5green> its managed dedicated, forgot that important word :P
08:18 < greg5green> they have great documentation (less important for dedicated, although since its managed dedicated, still relevant) and their support staff is awesome
08:19 < isaacbw> awesome
08:19 < isaacbw> I'll add a bookmark
08:19 < greg5green> now that I think about it, their shared hosting is either Dallas or DC, so send them a message to see if you can be sure its in DC
08:20 < greg5green> I'm guessing you can choose either of those or Amsterdam, which is definitely not close to NE
08:21 < greg5green> isaacbw: MediaTemple offers dedicated offerings in the DC area too, might check with them
08:22 < greg5green> in addition
08:23 < greg5green> nm isaacbw, its only "dedicated virtual"
08:23 < isaacbw> hmm
08:23 < greg5green> http://mediatemple.net/webhosting/dv/
08:24 < greg5green> my work hosts quite a few django sites with them tho, and id consider them recommended, even if its only "virtual"
08:24 < isaacbw> I'm not even sure what that means
08:24 < greg5green> which part?
08:24 < isaacbw> virtual
08:24 < isaacbw> is it just a vps they're calling dedicated?
08:25 < greg5green> basically, yeah
08:25 < greg5green> although I think they do some cloud stuff with it too, not sure, you'd have to read the docs
08:25 < greg5green> sorry, shouldnt have recommended :)
08:26 < isaacbw> :P
08:42 < Corey> isaacbw: greg5green: Might consider the (ve) instead of the (dv); it's a bit cheaper.
08:43 < greg5green> cheaper but different service
08:43 < greg5green> and still basically a vps
08:46 < carlocci> I'm looking for any package that needs compilation and uses gyp. Do you know of one?
08:50 < mscdex> carlocci: what for?
08:50 < mscdex> there's plenty
08:50 < [AD]Turbo> hola
08:51 < carlocci> mscdex: I'm having trouble with node-gyp and I would like to check if it's a problem with the package or with node-gyp
08:51 < mscdex> carlocci: which package?
08:51 < carlocci> contextify
08:52 < carlocci> node-waf builds it fine
08:53 < kozero> What is differences between non-blocking and blocking ?
08:54 < mscdex> kozero: non-blocking means the thread doens't halt and wait for some action to happen
08:54 < mscdex> carlocci: i'll give it a whirl
08:56 < mscdex> carlocci: contextify builds fine for me on windows
08:57 < carlocci> mscdex: thank you
08:57 < mscdex> builds on linux for me too
08:58 < carlocci> so it seems it's really a problem with what I have installed
08:58 < mscdex> what is the error?
08:58 < carlocci> it fails to include node's headers in the build
08:58 < kozero> <mscdex> thanks, what is event driven?
08:59 < carlocci> so it complains of a missing node.h
08:59 < carlocci> if I link or copy the headers in the src directory, it builds fine
08:59 < mscdex> kozero: an event is just a name with some functions associated with it that get called when the event is raised
09:00 < mscdex> carlocci: platform?
09:00 < carlocci> I guess it might be some patching done by the packager: unfortunately archlinux moved to python3 a little bit too hastily
09:01 < carlocci> mscdex: archlinux
09:01 < isaacbw> you can still get python2 on arch though
09:01 < mscdex> i'm not sure gyp/node-gyp works well with python 3
09:01 < isaacbw> it has plenty of python2 packages available as well
09:01 < niftylettuce> anyone here from austin, tx?
09:02 < carlocci> but /usr/bin/python links to python3
09:02 < isaacbw> which I guess messes with packages that don't let you change it
09:02 < carlocci> I'll try to force the python2 executable (and eventually reinstalling without the sed replacing)
09:02 < mscdex> yeah centos has something like a python26 package
09:02 < mscdex> and it creates /usr/bin/python26 or something
09:03 < carlocci> I have both python2 and python3 installed, if that's what you mean
09:03 < mscdex> i've never used arch before though
09:04 < mscdex> because of python 3 compatibility issues, i usually just create ~/bin with a 'python' symlink inside that points to python 2.x, and put ~/bin first in $PATH
09:37 < isaacbw> I've been going to sleep at 5pm and waking up at 2am for the last few days
09:37 < isaacbw> damn broken brain
09:38 < isaacbw> "myspace desk" http://www.globalindustrial.com/p/office/desks/collections/myspace-wheaton-reversible-corner-desk?utm_source=amaz_shop&utm_medium=shp&utm_campaign=Office-Collections-amaz_shop&infoParam.campaignId=T9I
09:47 < mscdex> Wil Wheaton approved?
09:49 < carlocci> mscdex: did you ever run node-gyp install? (I mean, do you have all the header files in ~/.node-gyp?)
09:50 < carlocci> it seems the headers in /usr/include/node are ignored. Is there an environment variable you need to set?
09:54 < carlocci> btw after installing the headers through node-gyp itself, node-gyp is able to compile stuff fine. I'd rather not have two copies of the same headers around though: I'm really struggling with npm replicating all the dependencies already
10:37 < zennit47> what are people using to manage multiple versions of node?
10:37 < zennit47> nvm n or nave?
10:39 < zennit47> also how do you manage multiple versions of globally installed packages?
10:50 < tanepiper> nave - it installs binary node now
10:50 < tanepiper> and b) don't - that's what the local node_modules folder is for
10:53 < mmalecki> zennit47: I use give
10:53 < mmalecki> mainly because I wrote it
10:54 < mmalecki> but also because it's really fast
10:54 < Iszak> If you're not releasing a public package, is it acceptable to modify the native objects?
10:54 < zennit47> do you install packages globally, or do you add ./node_modules/.bin to your path?
10:55 < Iszak> node_modules/.bin/ ofc.
10:55 < mmalecki> zennit47: for packages that come with binaries I'm aiming to use (e.g. `npm` or `vows`), I install them globally
10:55 < SomeoneWeird> global, zennit47 
10:55 < mmalecki> other than that, locally
10:56 < SomeoneWeird> &
10:56 < SomeoneWeird> ^*
10:56 < Iszak> npm is basically like bundler, does it have a npm exec? if it does, would solve the need for adding ./node_modules/.bin/ to paths.
11:04 < SomeoneWeird> Iszak, huh
11:08 < yanivge> Hi all, can someone lead me on push notification and socket.io?
11:09 < Shinister> push notification as in we've an open browser window and a socketio connection established?
11:10 < yanivge> yes... 
11:11 < yanivge> i have an html code over apache
11:11 < Shinister> okay
11:11 < yanivge> and offline server
11:11 < Shinister> offline server?
11:11 < SomeoneWeird> step 1: get rid of apache
11:11 < Shinister> Nodejs hosts itself, you don't need a httpd there
11:14 < Sandy__> Hello
11:15 < yanivge> yes, i know
11:15 < Sandy__> what you know?
11:15 < yanivge> but its an existing application we want to ad d rhe abbility of push notification
11:15 < Sandy__> send ,me a private app
11:15 < Sandy__> me also looking for that
11:15 < Sandy__> :D
11:16 < yanivge> that Node hosts for herself
11:16 < Sandy__> exit
11:16 < Sandy__> :D
11:16 < yanivge> how?
11:16 < Shinister> yanivge: wait.
11:16 < Shinister> Is your existing app nodejs?
11:19 < yanivge> no 
11:19 < Shinister> Right, what is it in?
11:19 < yanivge> I built a small demo to try it
11:19 < Shinister> Socketio is a library for nodejs, you could potentially hack it in but I don't think this is the direction you want to be going in.
11:19 < yanivge> its just try to push timstamp to the web-client
11:19 < Shinister> If you're using php (guess from apache), look at Ratchet.
11:20 < Shinister> http://socketo.me/
11:20 < yanivge> i have 2 assumptions: 
11:20 < yanivge> 1) working with apache
11:21 < yanivge> 2) having push notifications
11:21 < SomeoneWeird> he can have another app and just proxy the req from existing <-> client
11:21 < Shinister> Yeah, totally can do that
11:21 < yanivge> what is that Ratchet?
11:21 < Shinister> but considering he doesn't seem to have that great an understanding of what socketio and nodejs are, I think using a solution better designed to work with his language of choice might be better?
11:21 < Shinister> yanivge: it's another web socket library, but this time for php.
11:22 < SomeoneWeird> true
11:22 < Shinister> right, you're trying to integrate with an existing website, yanivge?
11:22 < yanivge> yes i am
11:22 < Shinister> push timestamps to clients viewing a page hosted by an existing application on an apache server?
11:22 < Shinister> right, first question
11:23 < Shinister> what is the existing application written in?
11:23 < Shinister> programming language wise.
11:23 < yanivge> perl cgi scripts
11:23 < yanivge> and pure html
11:23 < SomeoneWeird> 0_o
11:23  * mmalecki pats yanivge on his back
11:23 < Shinister> fun.
11:24 < Shinister> Okay, that might not be the nicest thing to do sockets with :)
11:24 < Shinister> http://css.dzone.com/articles/updating-duct-tape-html5 <- maybe something like that?
11:24 < yanivge> i use javascript for that ;-)
11:25 < yanivge> i have a problem... i need to support old browsers so... no html5 for me
11:25 < Shinister> What you could do is host a nodejs application running socketio, and use apache to proxy the requests 
11:25 < Shinister> Your existing set up (apache, perl) really isn't ideal for this kind of thing, but it's possible :)
11:25 < yanivge> thats basically what i tried to do
11:25 < yanivge> i can post here my demo 
11:25 < yanivge> or 
11:26 < yanivge> my demo is in here 
11:26 < yanivge> http://stackoverflow.com/questions/14256330/push-notifications-using-node-js-socket-io-on-apache-web-server
11:27 < dz0ny> npm install socket.io :)
11:28 < Shinister> Right, so (I might be wrong, but I think I'm right), the .js file the HTML is including should be generated when you start your nodejs application
11:28 < Shinister> you'll have to do something like <script src="server:8080/socket.io.js"></script> <!--socket.io-->
11:29 < yanivge> i have socket.io and socket.io-client
11:29 < dz0ny> with apache you do the proxy pass, but i preffer haproxy this days and ws endpoint as subdomain
11:32 < yanivge> server:8080?  server should be my script name ? or is it just port decleration?
11:32 < Shinister> Well, I guess localhost would do for local testing
11:33 < Shinister> yanivge: what I would recommend is getting the whole thing working locally just in nodejs, so you can learn how socketio works in its native environment
11:33 < Shinister> then once you've a bit of an understanding of that, then get the apache hosted html to work with it.
11:33 < dileep> i got the error write EPIPE at no error exception??? what to do that
11:39 < yanivge> 10x guys...
13:27 < sshaginyan> Is there anyway to convert a regex to a string?
13:27 < isaacbw> yea
13:27 < sshaginyan> got it
13:27 < sshaginyan> nm
13:30 < Hotroot> Does anyone know the expected skill level for an internship with node stuff?
13:31 < Hotroot> I've never had a coding job before, I have no idea how high the requirements are
13:35 < fwg> Hotroot: it totally depends on the company
13:35 < Hotroot> fwg: I'm just being stress mashed. College classes would take so long, but I don't know if I'm ready for an internship
13:36 < fwg> Hotroot: just code something interesting and make it open source, then apply for an intership and link that project
13:36 < Hotroot> My main project isn't done yet, running low on time though, I have to start a job/school soon
13:37 < Hotroot> My math skills are bad though, I don't know a lot of stuff like DNS, meta tags, random stuff like that
13:37 < Hotroot> I don't know how much they expect though, if all they want is minor general tech skills, javascript knowledge, and some node experience, then I'm good
13:38 < Hotroot> If they want me to know advanced algebra, trig, calculus, and stuff like network algorithms or AI coding, then I'm not ready
13:45 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:48 < niggler> Hotroot do you know javascript
13:48 < Hotroot> Yes
13:52 < exit2> sup node
13:52 < niggler> exit2 how's your browser-fu
13:52 < exit2> niggler: better! yours?
13:52 < kpko> Hi! I want to debug a nodejs application and launched it with node --debug myapp.js.. I want to control the debugger via the command line, not via node-inspector... Can anyone tell me how I do this?
13:53 < exit2> kpko: you using this? http://nodejs.org/api/debugger.html
13:53 < niggler> im trying to intercept something like <script type="text/foobar" src="foo.bar"></script> and run code there
13:54 < niggler> its straightforward to intercept <script type="text/foobar">code</script>
13:54 < kpko> exit2: Im not using the debug mode directly, because my application is periodically doing some console output and logging
13:54 < niggler> but is there a way to do the former without having to remove the tag and do an XHR
13:54 < kpko> exit2: When I use "node debug myapp.js", then there is the console output and the debugger mixed up... 
13:55 < kpko> exit2: "node --debug myapp.js" opens the debugger port and doesn't mix up debugger and application output... I thought it should be possible to connect to the debugging session via another terminal/shell
13:56 < exit2> kpko: not sure I've never tried to use it like that
13:57 < kpko> I tried to use node-inspector, but it seems a little buggy to me... Some buttons don't work, the design is a little messed up and i can't print arrays for example... If i console.log(array), it only outputs a blank line.. :/
14:04 < guybrush_> hm so now there are peerdependencies, is there some extra infos somewhere? all i found yet is https://github.com/isaacs/npm/issues/1400
14:15 < MI6> joyent/libuv: Bruce Mitchener master * 2cecd0d : include: fix typos in comments - http://git.io/BGbcMQ
14:23 < zot> question, especially for the haters: I have an instance object with a 'send' function.  I want to monkey patch a 'send_audited' version on.  gotchas?  pure evil?  other equally simple-to-use ideas?
14:38 < ironfroggy> the message in #nodejs is wrong
14:38 < ironfroggy> on some IRC clients its creating clickable channel links to #node.js` with a ` in the channel name
14:38 < ironfroggy> just a heads up for whoever is responsible..
14:39 < szx> how do I start a node.js application? I have downloaded https://github.com/mattgodbolt/gcc-explorer and I'd like to run it... should I run it like "node app.js" ? if so, which port will it be on?
14:40 < exit2> szx: looks like the app will tell you what port it's on in the terminal when you start it
14:40 < exit2> so yes, 'node app'
14:40 < exit2> may need to do an 'npm install' prior to that if the dependencies don't come with it
14:40 < szx> but it just exits immediately if I do "./app.js 80"
14:41 < exit2> szx: what happens when you type 'node app'
14:41 < szx> I have installed node
14:41 < szx> nothing happens
14:41 < szx> no messages etc
14:42 < exit2> have you typed 'npm install' in that dir?
14:42 < exit2> because, I was able to get it running :)
14:42 < exit2> 'npm install' - let that run it's course then 'node app'
14:42 < ironfroggy> Does anyone know if there is an IndexedDB implementation for node?
14:42 < exit2> should say something like "Listening on http:/....."
14:43 < exit2> ironfroggy: https://github.com/piranna/node-IndexedDB
14:43 < szx> exit2: that didn't help either
14:43 < szx> maybe I need to start some service?
14:44 < exit2> szx: not sure what you're doing incorrectly, I was able to clone the git and get it running in 60 seconds
14:44 < exit2> szx: do you have npm installed?
14:44 < szx> yeah
14:45 < szx> npm installed somthing
14:45 < szx> seems like some packages
14:45 < exit2> ok
14:45 < exit2> and with in the same dir as the app
14:45 < exit2> type: 'node app.js' or 'node app'
14:46 < szx> I did that, still nothing happens
14:46 < exit2> what OS?
14:46 < szx> ubuntu
14:51 < bnoordhuis> piscisaureus_: question: two uv_poll_t handles with the same fd / HANDLE. why doesn't that work on windows?
14:51 < bnoordhuis> piscisaureus_: err, wrong channel
14:54 < ssc-steve> Hi all
14:55 < ssc-steve> Is there any reason as to why I can't pipe to response (server) within a callback of mysql.query ?
14:55 < ssc-steve> Or do I need to do something special to allow it to happen?
14:55 < ssc-steve> Running the code outside of the callback works fine
14:56 < ssc-steve> As soon as I move it into the callback, response is not affected.
14:56 < ssc-steve> (No data is piped, response.end() is not ran)
14:57 < yawnt> does someone know how i can get a json recap of a module from npmjs.org?
14:57 < yawnt> uh
14:57 < yawnt> nvm found
15:00 < ssc-steve> Note: I am using 'request' module.
15:06 < jvanveen> hey
15:06 < jvanveen> anyone uses yuidocjs to create documentation for nodejs projects?
15:06 < jvanveen> im trying to figure out how to include selleck to build instruction pages outside of the source
15:07 < ssc-steve> jvanveen: Don't suppose you happen to have any idea as to why a request response would not pipe back to a server when run inside a mysql callback, but does outside of the callback?
15:09 < jvanveen> ssc-steve: not really :)
15:09 < ssc-steve> DoH!
15:09 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:09 < jvanveen> maybe the response was already made at the time the mysql callback triggers it?
15:09 < ssc-steve> jvanveen: It's quite annoying, no errors, the server keeps on running (cycling) and the server's response never ends. Take it out of the MySQL callback and BAM.
15:10 < ssc-steve> jvanveen: I thought that, but no code there to do so, and the page continues to load.
15:13 < ssc-steve> jvanveen: In case you happen to have a second to look at the code: http://pastebin.com/svPjedak
15:16 < merpnderp> Something I've read quite a bit is that node isn't good for putting up webpages that don't need the non-blocking nature of node. That people should use Python or Ruby with one of their frameworks. But I've used those frameworks and I think using node is just as easy to put a site up. A few things are handled automagically by Rails or Django, but I still don't see why that means its better to use them over node.
15:17 < jvanveen> ssc-steve: is proxy the same at MARKER1? as at the current position?
15:17 < ssc-steve> jvanveen: The exact same code, yes.
15:17 < darrenlooby> Hi Guys, I'm trying to install and use Cloud9 - anyone got it working?
15:17 < jvanveen> im not that familiar with proxying in nodejs sorry
15:18 < darrenlooby> I'm really struggling in get it working, and it is doing my head it
15:18 < merpnderp> darrenlooby: no idea, but I'd love to hear your report on it once you've got it working.
15:18 < ssc-steve> jvanveen: proxy is just an instance of request. So basically, I have created a server, which takes the request and makes a request itself (proxy) and returns the response.
15:19 < ssc-steve> jvanveen: The moment I place something in the middle: Me -> Server -> MySQL callback -> Request (response) -> Server it craps out
15:19 < darrenlooby> merpnderp, no problem - will feed back. It's requires an old version of Node, and the install process is just failing all the time - I think because of dependency issues.
15:20 < ssc-steve> jvanveen: Where as Me -> Server -> Request (response) -> Server doesn't
15:20 < merpnderp> darrenlooby: yeah, I see a lot of SaaS requring node 6.x. No ide why.
15:21 < darrenlooby> merpnderp, yea - it really is annoying, I'd like something more up to date
15:22 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:32 < ssc-steve> Anyone else able to take a look for me please?
15:33 < ozette> according to windows machines one of my objects does not have a certain method which I clearly exported
15:34 < ozette> exports.foo = function(r) { return __dirname; };
15:34 < ozette> no error on linux machines
15:37 < draginx> https://gist.github.com/b500538b8072b098482f any idea why I would be getting a 400 bad request from this?
15:46 <@isaacs> cxreg: Depends.  Is it making API changes, or not?
15:46 < Sly> isaacs: mute-stream = busted as of 0.9.6-pre
15:47 <@isaacs> Sly: thanks.  post an issue, please.
15:47 < Sly> Will do.
15:47 < Sly> Been busy this morning. xD
15:48 < szx> exit2: installing node from git solved the issue
15:49 < exit2> szx: good to hear
15:50 < MI6> joyent/node: isaacs v0.8 * 8e37a58 : blog, changelog: 0.8.17 was released in 2013, not 2012 - http://git.io/UU9sww
15:51 < ozette> I get an empty object returned on w machines
16:02 < stevebob> Forgive me guys, I'm a complete noob. But I need help understanding a concept in node (which I'm sure this channel fields all day long) Since node is single threaded (see what I mean?), does it matter if I have two different node.js scripts running on one small single core Rackspace slice?
16:03 < stevebob> they both listen on different ports and I reverse proxy with nginx
16:07 < bradleymeck> stevebob: it is single threaded per process and only in the JS evaluation, if these are 2 different processes, no
16:08 < stevebob> bradleymeck: thanks! too simple a question for google results... I appreciate it!
16:08 < dab`> no such thing as a simple question :>
16:09 < TehShrike|Work> dab`: what does console.log do?
16:09 < dab`> directs output to the stdout stream
16:09 < TehShrike|Work> Simple!
16:09 < dab`> not if you don't know what stdout is
16:09 < TehShrike|Work> bah!
16:09 < dab`> :P
16:09 < TehShrike|Work> ;-P
16:10 < dab`> hm I should really setup a bnc here :\
16:14 < JohnBeales> I'd like to do what amounts to executing some code *after* a function returns, which isn't possible, so I'm looking for ideas on how I can pull this off.
16:14 < TehShrike|Work> JohnBeales: how is that not possible?
16:14 < sohcahtoa> callback?
16:14 < JohnBeales> Well, if the funciton returns, then it stops executing.
16:15 < TehShrike|Work> Are you talking about an asynchronous call?
16:15 < TehShrike|Work> Or just... one function after another?
16:15 < ssc-steve> Got kicked? Anyone any idea why this simple code does not work? http://stackoverflow.com/questions/14261863/piping-request-response-to-server-response-in-mysql-callback-not-working-as-ex
16:15 < JohnBeales> Basically, I have a function that returns the next object in an array. What I want to do is if the array is shorter than a certain length, I want to return the next object, *then* get more objects for the array from an external datasource.
16:17 < JohnBeales> So, yes, it would be asynchronous. Within my function, I'd like to do something like if(myArray.length < 5) { asyncGetMoreData(); }
16:17 < TehShrike|Work> var ary = functionThatReturnsArray(); if (ary.length < 69) { var obj = getNextObject(); getMoreObjectAndStuff(); return obj; }
16:17 < TehShrike|Work> JohnBeales: so, that async function should take a callback function, right?
16:18 < TehShrike|Work> JohnBeales: so you want to pass in a callback function that will do whatever it is you want to happen once it's done: asyncGetMoreData(function() { console.log("Stuff!") })
16:19 < JohnBeales> it probably doesn't even need a callback, or not much of one, just appending the moreStuff to the myArray, which will be global in the scope of the module.
16:19 < TehShrike|Work> ssc-steve: you need to do some debugging, find out what is getting called and what isn't getting called.  Take this console.log, you'll need it!
16:20 < ssc-steve> TehShrike|Work: lol, Already done, everything is being called bar the pipes...
16:20 < TehShrike|Work> JohnBeales: well, if you want stuff to happen after the async function, you'll need to give it a callback function that does that stuff.  However, I'm guessing that your issue is that you want the results of the async function to affect the results returned by the top function?
16:20 < ssc-steve> TehShrike|Work: Is there any deeper logging I can do?
16:21 < TehShrike|Work> ssc-steve: your question doesn't note the results of your debugging so far - what exactly is happening, and what exactly isn't happening?
16:21 < JohnBeales> Nope, my issue is that for some reason I can't figure out how to make asyncGetMoreStuff() asynchronous ;)  I think I'm having a brain fart or something.
16:21 < TehShrike|Work> JohnBeales: what's happening inside of it?  Contacting a database server or the file system or something?
16:21 < JohnBeales> It'll be pulling some data from S3
16:22 < JohnBeales> So, probably, if I set up the S3 stuff, then the HTTP request will be async and I'll be home-free.
16:22 < ssc-steve> TehShrike|Work: The first code example works, the moment I place the request and pipe the response of the request into the server response inside a callback (whether MySQL or a callback from another request) no response from the server occurs. 
16:23 < TehShrike|Work> JohnBeales: http://hastebin.com/yusebelaki.js
16:24 < JohnBeales> that makes sense, thanks.
16:24 < TehShrike|Work> w00t
16:24 < ssc-steve> TehShrike|Work: It's as if, in the MySQL callback request.pipe(proxy);  and proxy.pipe(response); do not run. The server hangs.
16:25 < TehShrike|Work> ssc-steve: right, so, there are some caveats with streams right now
16:25 < TehShrike|Work> ssc-steve: if you don't start listening to streams *right away* you'll lose all the data that comes through between the beginning, and the later point where you start listening to them
16:26 < ssc-steve> TehShrike|Work: How does one start listening to a stream right away, based on the example code I provided?
16:27 < TehShrike|Work> ssc-steve: well, you may be interested in trying 0.9, where streams2 are being tested https://gist.github.com/4329277
16:28 < TehShrike|Work> ssc-steve: but as I understand it, at the moment you have to be listening for data from the stream right away, and then send all that data to the next pipe once you have access to that next pipe
16:28 < TehShrike|Work> ssc-steve: you'll probably want to read over http://nodejs.org/api/stream.html
16:29 < TehShrike|Work> "Note that the data will be lost if there is no listener when a Readable Stream emits a 'data' event."
16:31 < ssc-steve> TehShrike|Work: OK. Thank you, I'll start researching to find an example
16:34 < TehShrike|Work> ssc-steve: somebody smarter could probably give better direction, but you probably want something like this http://hastebin.com/canehededa.js
16:35 < TehShrike|Work> Though if you're handling requests as buffers instead of strings that might not work as-is, I don't know if you can concatenate buffers like that...
16:35 < ssc-steve> TehShrike|Work: Thanks for the code. I'm happy not to deal with requests as buffers.
16:36 < ssc-steve> TehShrike|Work: Being new to nodejs (and being on a tight deadline) is messing with my ability to perform ;)
16:36 < TehShrike|Work> Yeah, it can take a bit to get absorbed into node.js
16:36 < TehShrike|Work> It's all warm and fuzzy once you get worked into it though
16:37 < tippenein> I'm trying to pass {status:'success'} to a jade view and render ONLY if status variable exists. Is there a reason I can't just us 'if status' .. I'm getting a reference error
16:39 < ssc-steve> TehShrike|Work: Just a note: The code provided seems to the opposite of what I had in mind. I.E It's acting as a proxy server, a request comes in, it does something with MySQL, performs the proxied request, sends back the resp.
16:39 < tippenein> http://hastebin.com/mohacefemo.avrasm
16:39 < TehShrike|Work> ssc-steve: how do you mean?  What do you have in mind?
16:40 < TehShrike|Work> ssc-steve: you don't have a proxy server until you call requester(), but that doesn't stop data from coming in
16:40 < TehShrike|Work> ssc-steve: you have to hold on to that data until you actually have a proxy to send it to
16:40 < ssc-steve> TehShrike|Work: I see. Hence the reason you held onto the request
16:44 < TehShrike|Work> ssc-steve: actually, it's likely you want something like this http://hastebin.com/dulanilapa.js
16:45 < ssc-steve> TehShrike|Work: Thanks, I'm looking at it now, however, I don't think you can use the request module like that.
16:45 < TehShrike|Work> ssc-steve: request module?
16:45 < TehShrike|Work> ssc-steve: are you talking about this? http://nodejs.org/api/http.html#http_class_http_serverrequest
16:47 < ssc-steve> TehShrike|Work: Nope, https://github.com/mikeal/request <-- I'm using this due to my lack of experience with Node, and needing to be able to pass back all forms of data and follow redirects
16:48 < TehShrike|Work> ssc-steve: I assumed it was a stream, since you were calling pipe on it
16:49 < ssc-steve> TehShrike|Work: As far as I am aware, it works in that way
16:50 < TehShrike|Work> ssc-steve: well, this is how streams work http://nodejs.org/api/stream.html#stream_stream_write_string_encoding
16:53 < ssc-steve> TehShrike|Work: Another example (to be different and show what I am doing) would be http://pastebin.com/uH23B2cH <-- I assume what you are stating would still apply?
16:58 < TehShrike|Work> ssc-steve: yup.  Also, I'm pretty sure you want to pipe proxy->response before you send anything to proxy
16:58 < draginx> Anyone here have success with node-soap and/or dealing with FedEx SOAP API?
16:59 < ssc-steve> TehShrike|Work: Thanks for the heads up, any particular reason why?
16:59 < TehShrike|Work> ssc-steve: if you're not piping it anywhere, stuff you send to a stream doesn't go anywhere
17:00 < TehShrike|Work> ssc-steve: streams don't save up your data waiting for you to tell it where to go
17:00 < ssc-steve> TehShrike|Work: OK... btw, I just removed the piping of request... and it works...
17:02 < trevnorris> piscisaureus_: thanks again. seems i didn't fully understand my own question, but after taking a day to slowly walk through Buffer it makes a lot more sense.
17:12 < cxreg> isaacs: so far no
17:13 <@isaacs> cxreg: if it's just fixing bugs, and not making any api/semantic changes, then 0.8.  otherwise, master.
17:13 <@isaacs> cxreg: same as any other feature, really
17:13 < cxreg> ok thanks
17:13 < TehShrike|Work> How was the vacation-break isaacs?
17:13 < mikeal> it is a stream
17:19 <@isaacs> TehShrike|Work, ssc-steve: Actually, in 0.10, they DO save up your data waiting for you to tell it where to go
17:20 <@isaacs> TehShrike|Work: but they'll stop pulling in more once the buffer limit is hit
17:20 < yanivge> can someone answer me a socket.io question?
17:21 < trevnorris> isaacs: while working on by Buffer float improvements I noticed almost all other write operations (with assert checks) are ~20-50% faster in C.
17:21 < trevnorris> isaacs: Think it's worth it to make C implementations and call those instead with assert checks enabled?
17:21 < ssc-steve> isaacs: Thanks for the heads up
17:21 < yanivge> anynone? it about socket.io as a notification service,,,
17:22 < bnoordhuis> yanivge: don't ask to ask, just ask
17:22 < bnoordhuis> yanivge: socket.io has its own channel though
17:22 < yanivge> where?
17:22 <@isaacs> trevnorris: if there's no API change, and it improves performance, and you have a benchmark that shows that it improves performance actualy, then yes, please, patch so so welcome.
17:22 < bnoordhuis> yanivge: #socket.io i believe
17:22 <@isaacs> trevnorris: if there IS an API change, then probably still yes, but needs discussion
17:23 < TehShrike|Work> isaacs: yeah, I linked him to your gist about streams2
17:23 <@isaacs> TehShrike|Work: kewl :)
17:23 < yanivge> 10x
17:23 < TehShrike|Work> I'm pretty stoked about streams2.  I haven't tried 0.9 yet, how's it looking so far?
17:23 < kanongil> isaacs: is the readable-stream module deprecated?
17:24 <@isaacs> kanongil: no
17:24 <@isaacs> kanongil: that's going to continue on so that you can use streams2 in 0.8 modules
17:24 < kanongil> isaacs: great, any chance you can have a look at https://github.com/isaacs/readable-stream/pull/45 ?
17:25 <@isaacs> kanongil: i'll be updating readable-streams soon, probably tomorrow
17:25 <@isaacs> sit tight :)
17:25 < yanivge> [19:20] <yanivge> Hi guys [19:20] <yanivge> i have a question [19:21] <yanivge> i have an Apache, and i connected a Socket.io as a notification sevice (and not as a web-sever) [19:21] <yanivge> i can publish my demo code [19:22] <yanivge> my problem is that my message doesn't arrive to the client after the connection from the client to the server has set
17:25 < kanongil> ok, i will :-)
17:26 < trevnorris> isaacs: only change would be a couple exposed generics on SlowBuffer, but nothing as far as the user goes.
17:26 <@isaacs> trevnorris: probably best for master, then
17:27 <@isaacs> trevnorris: i'm getting increasingly conservative about any changes in 0.8
17:28 < trevnorris> isaacs: totally. didn't expect anything but bug fixes to be accepted to the 0.8 branch.
17:29 < yanivge> anyone?
17:29 < s5fs> yanivge: post the code, that's a better way to receive support
17:30 <@isaacs> yanivge: prodding the room generally doesn't have the desired effect.  (Same as "bumping" mailing list threads, etc.)  It'd be best to share the actual code (with a link to gist.github.com or pastie.org or some such) and if no one responds, take it to a different channel (mailing list, github issues, etc.)
17:30 < trevnorris> yanivge: what s5fs said. just gist/pastebin it first thing. code examples are by far the easiest to help with.
17:30 < TehShrike|Work> Yes.
17:31 <@isaacs> yanivge: most people WANT to help, but if they read your question, and don't know the answer, they just say nothing.  otherwise you'd have 750 people saying "Nope, sorry" and that's crazy.
17:32 < yanivge> i will post it now
17:32 <@isaacs> yanivge: you should usually read silence as "I'm sorry, I don't have an answer for you.  Maybe try a different channel".  Leaving the question here is still good though, because sometimes someone will come by a few hours or days later, and have an answer.  lurking is thus very useful.
17:32 <@isaacs> yanivge: sometimes i see npm questions from days ago, and post an answer.  it's not so useful if the person has moved on, of course, but the logs still at least have the answer then.
17:33 <@isaacs> yanivge: good luck :)
17:33 < trevnorris> isaacs: also as fyi there's about a 20% performance hit calling any method on `this.parent` since v8 requires a "context change". trying to figure out a way around that as well.
17:33 < Musk> wise isaacs is wise.
17:33 <@isaacs> trevnorris: hm.
17:33 <@isaacs> Musk: thanks :)
17:34 < yanivge> code sample: http://pastie.org/5662811
17:35  * isaacs &
17:39 < reuf> hello
17:39 < reuf> how do i serve static html file with express.js?
17:39 < yanivge> So. as i said eralyer, i have a socket.io notification service on port 8080. Apachi on port 80. the Apache display the html, and the socket.io should update notifications
17:40 < TehShrike|Work> reuf: doesn't express come with a module-thingy for serving static files?
17:40 < reuf> TehShrike|Work: I believe it does, but where do i locate it
17:41 < TehShrike|Work> reuf: the documentation?
17:43 < TehShrike|Work> reuf: looks like there are examples here http://expressjs.com/api.html#app.use
17:43 < TehShrike|Work> reuf: you may want to ask in #express
17:43 < reuf> TehShrike|Work: thanks
17:44 < Ganymede> Hello, never wrote any node.js code in my life but trying to determine if node.js is right for me. Planning to serve static files and dynamic pages AND JSON data via AJAX using nginx/PHP with PostgreSQL in the backend, and in memory-constrained servers (less than 4 GB RAM). Would it be appropriate to replace nginx/PHP with node.js (no webserver in front of node.js, clients talk directly to node.js)?
17:46 < TehShrike|Work> Ganymede: node.js is pretty good about memory efficiency.  It's also good at slinging data lots and forth between many clients.  It's not as optimized at serving static files off of disc as nginx is
17:47 < Ganymede> TehShrike|Work: Then I guess would putting node.js behind nginx eliminate some of the benefits of nginx? Or should I be putting nginx behind node.js with node.js as a reverse proxy for static files? I think using two different IPs, one for node.js, and one for nginx, might be difficult.
17:48 < trevnorris> yanivge: have you checked your browser's error log? i'm not super familiar with socket.io, but this smells of a failed cross-site requests.
17:48 < trevnorris> Ganymede: imho if you have static files it's best to let nginx handle those and forward other requests to node.
17:49 < TehShrike|Work> Ganymede: yeah, I'm not sure which would be easier to have in front, node.js or nginx.  I'd probably try node.js myself, and just use some proxy library to send it to nginx's port https://github.com/jesusabdullah/my-little-proxy
17:49 < TehShrike|Work> But if you know your way around nginx it might be easier to have it in front
17:51 < trevnorris> Ganymede: here's an example nginx config for forwarding requests to several node processes: http://git.io/qPZUiw
17:52 < TehShrike|Work> Nice.
17:52 < trevnorris> Ganymede: but if you're looking for production level, I'd use cloudflare for a cdn of static files, leaving your server cycles and network io totally open for node.js requests.
17:54 < Ganymede> Thanks for the advice. I'm gonna play around with nginx/node.js and see what works best regarding splitting up static/dynamic.
17:54 < draginx> Any idea why the request package would just.. lowercase 'host' in the header all the time? :/
17:55 < trevnorris> Ganymede: if you're going to front with node then I'd definitely suggest learning to use clusters (on api page).
17:56 < Ganymede> trevnorris: Thanks, that looks essential for any modern server. Haven't seen a single-core system in a while.
17:59 < Ganymede> The initial reason I was looking to node.js is because I wanted to construct dynamic pages server-side based on data from the DB so that they load fast for clients and can be seen by non-JS clients like search engines, but I wanted to be able to re-use that code which constructs the pages to make page constructions client-side as well in-browser using JSON data to offload CPU cycles from the server. Is
17:59 < Ganymede> re-using JS code in that way at all feasible with node?
18:01 < wwicks> Ganymede: most of the tempting engines offer a client side rendering option
18:03 < Ganymede> Ah, I found a Stack Overflow which  appears to be what I want. http://stackoverflow.com/questions/12203192/client-side-html-mvc-rendering-vs-server-side-rending-via-nodejs 
18:04 < sohcahtoa> oh nice 
18:07 < Ganymede> My god, the world of website development has changed so much...Rails...Derby, WebSockets, Django, Express...it looks liKe I haven't kept with the times.
18:08 < cxreg> isaacs: if you want to take a peek, it's now pushed @ https://github.com/cxreg/node/commits/domain_stack_fixes.  I can submit a PR if you like
18:13 < blazes816> Ganymede: that's for sure. Django? Rails? Ancient. ;)
18:15 < Gest> Hello
18:15 < CoverSlide> I heard of this new thing called CGI 
18:15 < Gest> Anybody here familiar with svn
18:15 < Gest> and .svn
18:15 < CoverSlide> Gest: what's your question?
18:16 < Gest> .svn hidden directory that svn creates
18:16 < CoverSlide> Gest: what's your question?
18:16 < Gest> Hey CoverSlide
18:16 < Gest> I'm trying to write a node.js
18:16 < Gest> script that will watch my working direcotyr for any commits
18:16 < Gest> and then trigger something
18:16 < CoverSlide> ok
18:16 < Gest> Basically on commits I want to update my app version number
18:16 < Gest> So I figured I could use the watch npm module
18:17 < Gest> to watch for .svn changes
18:17 < CoverSlide> ok
18:17 < Gest> but I don't no the technical layout of that directory
18:17 < CoverSlide> me neither
18:17 < Gest> to determine what constitues a commit
18:17 < CoverSlide> it's probably documented somewhere
18:17 < Gest> Yeah I've been looking around for it on google
18:17 < Gest> Oh well 
18:17 < Gest> Thanks anyway 
18:17 < Gest> I'll keep seraching
18:18 <@isaacs> cxreg: yes, pull req please
18:18 < CoverSlide> v0.8.18 ?
18:19 < cxreg> isaacs: against v0.8?
18:20 <@isaacs> cxreg: sure.
18:20 <@isaacs> cxreg: or master.
18:20 <@isaacs> cxreg: actually, if it's a semantic change, master might be better.
18:20 <@isaacs> whatever, i know how to use git cherry-pick ;)
18:20 < cxreg> it's internal semantics, and optional too
18:20 < cxreg> ok
18:22 < trevnorris> bnoordhuis: trying to use node-profiler with v0.9.x but every time I get "Error: Symbol profiler_module not found". guess whether that's my fault?
18:22 < bnoordhuis> trevnorris: you may need to recompile for 0.9
18:23 < trevnorris> bnoordhuis: thought I did that. used `npm install --nodedir=/path/to/v0.9.x /path/to/latest/node-profiler`
18:25 < Mrono> Is it possible to change system volume as well as emulate keyboard presses?
18:25 < CoverSlide> depends on the OS
18:25 < Mrono> Linux
18:26 < Mrono> Namely keypresses in X11 session
18:34 < mscdex> carlocci: no, i was just doing `npm install contextify`
18:36 < mscdex> carlocci: what version of node do you have installed?
18:39 < carlocci> mscdex: thank you for being a nondeterministic finite automaton :)
18:39 < carlocci> I'm using the last node, 0.8.16
18:40 < carlocci> my guess is that I might lack some environment variable
18:41 < carlocci> for now I "fixed" keeping another copy of the header files inside ~/.node-gyp
18:45 < mscdex> carlocci: yeah i dunno what's up. i've never had an issue with that since node-gyp downloads and extracts the headers where they need to go (somewhere in $PATH).
18:45 < mscdex> iirc
18:47 < mscdex> carlocci: where did arch install your node stuff to?
18:47 < mscdex> oh nvm i see it now
18:47 < carlocci> arch install to /usr
18:48 < mscdex> i think they're the first distro i've seen to not use /usr/local for node
18:49 < reuf> hello
18:49 < reuf> question
18:49 < carlocci> unfortunately I can't find any hardcoded path inside node-gyp sources so I have no idea 
18:49 < CoverSlide> ask
18:49 < reuf> i've used app.use(Express.static(__dirname + '/static')); to serve static.html files from there
18:49 < reuf> now in there i have a static html file which has a form
18:49 < reuf> i want to call one of the app.get app.post methods, but when i pass req.body.param_name, it sais it is undefined
18:49 < reuf> so req.body.params cannot be used from static html content served by express?
18:50 < CoverSlide> reuf: you're using bodyparser? 
18:50 < Deathspike> Q: I am using several HTTP servers and am hooking them up to the same handlers using Express. Now I want to know from a request to which destination port the request was sent. Can I do this, and if so, how?
18:50 < reuf> CoverSlide: im not sure
18:50 < reuf> how do i check?
18:50 < CoverSlide> reuf: it's your code, you'd know
18:51 < CoverSlide> google connect bodyparser
18:51 < mscdex> Deathspike: req.connection.remotePort iirc
18:51 < CoverSlide> http://lmgtfy.com?q=connect+bodyparser
18:52 < mscdex> Deathspike: to get the port that the server is listening on: req.connection.address().port
18:52 < CoverSlide> reuf: you know how to add middleware to your express app right?
18:52 < reuf> yes
18:52 < CoverSlide> ok
18:53 < CoverSlide> also be sure it gets called before your router
18:53 < CoverSlide> or manually place app.use(app.router) appropriately in the stack
18:53 < Deathspike> mscdex: Gotcha, thanks :3
18:57 < reuf> CoverSlide: thanks - it worked
19:01 < joe-node0> Hey all
19:01 < CoverSlide> hey joe
19:01 < joe-node0> I'v been digging into the Y.Attribute talk by Luke Smith
19:02 < draginx> Any idea why the request package would just.. lowercase 'host' in the header all the time? :/
19:02 < joe-node0> geez, the inheritance talk was easy by comparison
19:02 < CoverSlide> link
19:02 < CoverSlide> draginx: headers are all lowercased
19:02 < draginx> oh well thats not true then O-o
19:02 < draginx> Content-Type isnt
19:03 < CoverSlide> draginx: according to the spec, the headers are case insensitive, so for ease, node lowercases them all
19:03 < draginx> ah ok
19:03 < draginx> so thats not why im getting the 400 bad request then
19:03 < draginx> gr
19:03 < CoverSlide> draginx: you can try, maybe the server expect Host
19:03 < CoverSlide> draginx: try doing it manually with the http module
19:04 < joe-node0> I'm going to watch it again and see if I can spot the key topics
19:04 < joe-node0> http://www.youtube.com/watch?v=t_UkPEAA_KI
19:04 < draginx> well im using node-soap unfortunately
19:04 < draginx> so thats A LOT of re-wiring
19:04 < draginx> that im not trying to do essentially
19:09  * mscdex shakes a fist at XML
19:12 < draginx> mscdex: seriously the bane of my existence :P
19:12 < cellvia> is mscdex a bot
19:14 < CoverSlide> yes
19:15 < mscdex> :O
19:15 < mscdex> XMLOL
19:16 < yawnt> isaacs: you there?
19:28 < cellvia> is CoverSlide a replicant
19:28 < CoverSlide> also yes
19:28 < CoverSlide> Nexus 7 motherfucker
19:28 < cellvia> lol
19:28 < cellvia> dude i just bought one of those
19:29 < cellvia> ;)
19:29 < CoverSlide> yeah we are cool ain't we?
19:29 < cellvia> heck yeh
19:29 < mscdex> now put webos on that phone!
19:29 < mscdex> :-D
19:29 < cellvia> mscdex is feisty today
19:30 < mscdex> webos rules!
19:31 < Mrono> I've got one of those fancy nexus 7's
19:32 < cellvia> the warranty only lasts 4 years tho :(
19:32 < s5fs> woo nexus 7!
19:33 < mikola> hello
19:33 < mscdex> 4 years is a long time in the mobile business
19:34 < thealphanerd> s5fs: !!! regarding he nexus
19:34 <@isaacs> yawnt: yo
19:34 < thealphanerd> have one too
19:34 < thealphanerd> its great
19:35 < s5fs> thealphanerd: i'm waiting for the nexus 4 to show up again, thats my next hw purchase
19:35 < cellvia> google customer support is the worst i have ever experienced in my life
19:35 < s5fs> cellvia: waht support?
19:35 < thealphanerd> they gave me a free 7
19:35 < cellvia> they sent me a 16gb nexus instead of 32 i paid for and it took over a month to straighten it out
19:35 < thealphanerd> due to their bad support
19:35 < s5fs> thealphanerd: well that's not so bad
19:35 < cellvia> dude they should have given me that shit free
19:35 < thealphanerd> they gave me a refund
19:35 < thealphanerd> for no reason
19:36 < s5fs> prob liked your face
19:36 < thealphanerd> and I called them 3 times to take my money
19:36 < draginx> Is there a way to ensure 'host' becomes 'Host' for HTTP headers being sent?
19:36 < cellvia> they sent me a clearly used 16gb 
19:36 < draginx> this is literally the only difference between my nodejs code and php code.. and the php works
19:36 < cellvia> item.substring(0,1).toUpperCase() + item.substring(1) ?
19:37 < cellvia> something like that
19:37 < cellvia> >> "host".substring(0,1).toUpperCase() + "host".substring(1);
19:37 < purr> cellvia: (string) 'Host'
19:40 < kv1> Hello, i am having trouble understanding node js non blocking architecture and call backs in general
19:40 < kv1> my funciton is returning without processing the result
19:40 < kv1> can someone please take a look? its a short function
19:40 < kv1> https://pastee.org/xurhb
19:40 < AAA_awright> cellvia: No, HTTP header case is inconstistent
19:41 < kv1> (in my case the last return in the code is being called befure the function returnVal is being executed
19:41 < kv1> how do i rectify this
19:41 < cellvia> >> "hOSt".substring(0,1).toUpperCase() + "hOSt".substring(1).toLowerCase();
19:41 < purr> cellvia: (string) 'Host'
19:42 < AAA_awright> cellvia: Try Content-Type
19:42 < draginx> technically the header key isnt suppose to matter
19:43 < draginx> but it does for fedex's API servers
19:43 < draginx> which is retarded
19:43 < draginx> header key casing*
19:44 < AAA_awright> draginx: HTTP is case sensitive except in specified fields
19:44 < draginx> oh
19:44 < draginx> do u know if host is?
19:45 < AAA_awright> Like, field values
19:45 < draginx> no like
19:45 < draginx> 'Host': 'myhost.com'
19:45 < AAA_awright> For instance, language and encodings are case-insensitive
19:45 < draginx> no the actual key itself
19:45 < draginx> not the value
19:45 < AAA_awright> domain names are case insensitive
19:45 < AAA_awright> Those are always case-sensitive
19:46 < cellvia> is AAA_awright a replicant
19:46 < AAA_awright> draginx: But the list of headers is well-defined, just pull the proper case from a list?
19:47 < draginx> Well im trying to in my script
19:47 < draginx> but it keeps lower casing
19:47 < kv1> quick queston: is it possible to get a nested functno to return for teh outerfunction?
19:47 < kv1> how would i do this using callbacks?
19:47 < cellvia> using return?
19:47 < kv1> cellvia, but wouldnt that just return for the nested function?
19:48 < cellvia> >> function(){ return function(){ return "hello" } }
19:48 < purr> cellvia: SyntaxError: Unexpected token (
19:48 < cellvia> >> function(){ return function(){ return "hello"; } }
19:48 < purr> cellvia: SyntaxError: Unexpected token (
19:48 < cellvia> >> (function(){ return function(){ return "hello"; } })()
19:48 < purr> cellvia: function (){ return "hello"; }
19:48 < kv1> oh ok ill try that thx!
19:48 < cellvia> >> (function(){ return (function(){ return "hello"; })() })()
19:48 < purr> cellvia: (string) 'hello'
19:48 < cellvia> lol sorry
19:51 < draginx> AAA_awright: check out the differences between php and nodejs https://gist.github.com/3af419189da2edd91181
19:51 < draginx> o wait..
19:51 < draginx> the host has :443 hmm interesting
19:51 < CoverSlide> that could be an issue
19:51 < kv1> cellvia, it didnt work? here is my implementation: what did i do wrong?
19:52 < kv1> https://pastee.org/waxww
19:52 < AAA_awright> Yeah that's an issue
19:52 < AAA_awright> draginx: Also, you're providing the proper case to Node.js right?
19:52 < CoverSlide> usually host is the first header sent, 
19:52 < CoverSlide> odd
19:52 < AAA_awright> Actually, you shouldn't have to provide the Host header at all
19:52 < draginx> AAA_awright: uhm.. yes im using node-soap
19:52 < CoverSlide> actually for 1.1 host is mandatory
19:52 < CoverSlide> HTTP/1.1
19:52 < draginx> and the case in noad-soap is in fact capitalized
19:52 < CoverSlide> which he is using
19:52 < AAA_awright> Node.js provides it for you when making a request, like many of the other headers
19:56 < draginx> headersx { Host: 'gateway.fedex.com',
19:56 < draginx>   'User-Agent': 'node-soap/0.2.0',
19:56 < draginx>   'Accept-Encoding': 'gzip, deflate',
19:56 < draginx>   Connection: 'Keep-Alive',
19:56 < draginx>   'Content-Length': 1757,
19:56 < draginx>   'Content-Type': 'text/xml; charset=utf-8',
19:56 < draginx>   SOAPAction: '"addressValidation"',
19:56 < draginx>   host: 'gateway.fedex.com:443' }
19:56 < draginx> whoops sorry :(
19:56 < draginx> i thought it was one line
19:56 < AAA_awright> draginx: Well there's your problem, you have Host listed twice
19:56 < AAA_awright> Remove the last line
19:56 < draginx> idk why its doing that though
19:56 < AAA_awright> Remove the first line too
19:57 < draginx> yeah I need to figure out *where* its doing that in the first place idk if this is a request or node-soap issue
19:57 < draginx> wait remove all host?
19:57 < draginx> ok this seems to be a request issue
19:57 < AAA_awright> draginx: Also, Host should include the port number
19:58 < AAA_awright> Or it may... If the port is different than the default
19:58 < AAA_awright> But there's two different defaults, so
19:59 < draginx> yup it works now
19:59 < draginx> request has this issue damn
19:59 < draginx> thanks dude :)
20:00 < samholmes> Is there a way to use EJS templates on the client side?
20:00 < AAA_awright> samholmes: Yeah I've done that, it requires some tinkering
20:00 < samholmes> AAA_awright: What sort of tinkering?
20:01 < AAA_awright> Like there's a default library of filters and such
20:01 < AAA_awright> That has to get passed to the client
20:01 < CoverSlide> samholmes: http://embeddedjs.com/
20:02 < CoverSlide> although i think it has nothing to do with TJ's ejs
20:02 < CoverSlide> but should follow the same syntax
20:06 < draginx> tjfontaine: Error: /www/sites/daniel/deploys/partners/node_modules/imagick/_build/default/binding.node: invalid ELF header getting that imagick error again :/ what was the fix?
20:07 < kv1> what could go wrong in these 10 lines? https://pastee.org/xurhb
20:07 < kv1> /s/10/40
20:08 < kv1> lol
20:09 < tjfontaine> draginx: did you copy it from one arch to another?
20:10 < tjfontaine> draginx: that probably means it compiled on 32 and you copied to 64 (or vice versa), or alternatively you compiled it on osx and tried to copy it to linux (or vice versa)
20:11 < kv1> =( SO time http://stackoverflow.com/questions/14266373/node-js-functon-returning-before-other-function-is-executed
20:13 < cellvia> kv1 where you at now
20:13 < cellvia> oh youre doing async
20:13 < cellvia> you didnt mention that
20:14 < cellvia> maybe you did and i didnt notice
20:14 < CoverSlide> kv1: what you probably should be doing is with getUsernameAssociatedWithToken, take a callback as the second parameter. 
20:14 < CoverSlide> because returning from an async function does you no good
20:15 < CoverSlide> and an async function includes anything that calls an async function
20:15 < trevnorris> isaacs: I think there's a bug in master when trying to load any module that points to a .node file.
20:15 < draginx> tjfontaine: no not at all
20:15 < draginx> I just did npm update
20:15 < trevnorris> isaacs: part of the error I get is "Object.Module._extensions..node (module.js:490:11)" which I don't think there should be the "ions..node" part.
20:15 < CoverSlide> the returnVal function is basically useless
20:15 < trevnorris> have done this with three modules and all have failed.
20:15 < AAA_awright> kv1: Is that your question?
20:16 < trevnorris> though I'm way over my head when trying to debug libuv.
20:16 < CoverSlide> kv1: change: 1: function getUsernameAssociatedWithToken (token, callback) {
20:16 < CoverSlide> kv1: 8:         queryAsync(callback);
20:16 < draginx> tjfontaine: wait  aminute! this might be the other node imagick that im getting rid of anyway :) hold on
20:16 < trevnorris> but I have determined it's failing in the call to uv_dlsym in DLOpen in node.cc
20:16 < CoverSlide> kv1: delete 31-40
20:17 < AAA_awright> kv1: Before we can answer your question, we must fix the glaring security hole. DO NOT put literal values into SQL, EVER
20:17 < CoverSlide> ah true
20:17 < CoverSlide> well let's assume it's filtered before the call to getUsername
20:17 < AAA_awright> kv1: Use prepared statements
20:18 < kv1> AAA_awright wow so many highlights? yes im aware of the security  vulnerability I'll filter input at a later stage higher up in the code
20:18 < AAA_awright> kv1: No, do it now. Use prepared statements.
20:18 < kv1> prepared statements
20:18 < segomos> lol
20:18 < kv1> what are those?
20:18 < draginx> tjfontaine: nvm its urs
20:18 < CoverSlide> prepared statements are great, but not everyone needs to use them
20:19 < kv1> if i need to input a username into a sql
20:19 < AAA_awright> kv1: You put a placeholder or variable in the SQL expression, and evaluate the query with that variable set to a certain value
20:19 < kv1> CoverSlide great idea about the second arguemnet. perfect!
20:19 < tjfontaine> draginx: did it actually compile? does the file exist? what'st he output of `file /www/sites/daniel/deploys/partners/node_modules/imagick/_build/default/binding.node`
20:19 < draginx> tjfontaine: Waf: Leaving directory `/www/sites/daniel/deploys/partners/node_modules/imagick/_build'
20:19 < AAA_awright> Look up the documentation for your library and do that first, please
20:20 < kv1> AAA_awright wouldnt that strip my ability to do it dynamically
20:20 < tjfontaine> draginx: *waf*?
20:20 < draginx> its still using waf for some reason
20:20 < draginx> yeah
20:20 < AAA_awright> kv1: No?
20:20 < tjfontaine> I don't think the wscript is even there anymore
20:20 < CoverSlide> it might still be
20:20 < tjfontaine> draginx: are you trying to `npm install imagick` and not from my gitrepo?
20:20  * CoverSlide checks
20:20 < draginx> tjfontaine: yes
20:20 < draginx> ill do it from git repo
20:21 < tjfontaine> draginx: there's no wscript, only the binding.gyp, so it should absolutely *not* be trying to call waf here
20:21 < AAA_awright> kv1: You'd do something like connection.query("SELECT * FROM users WHERE token = :token", {token: token}, /*...*/)
20:21 < draginx> ok works from ur git repo :)
20:21 < draginx> thanks
20:21 < kv1> oh ok
20:21 < tjfontaine> draginx: you're welcome
20:22 < CoverSlide> oh i though you meant actual prepared statement
20:22 < CoverSlide> yeah that way works too
20:22 < tjfontaine> trevnorris: what are you actually trying to do that's got you stuck?
20:22 < cellvia> i dont understand how that is more secure
20:22 < AAA_awright> CoverSlide: Well it's largely the same, the library may cache the prepared statement by the expression string
20:22 < AAA_awright> If it requires some sort of processing
20:22 < cellvia> token seems equally possible to be compromised?
20:23 < CoverSlide> cellvia: well we can hope the library sanitizes inputes
20:23 < cellvia> oh ok
20:23 < CoverSlide> i think mysql does
20:23 < cellvia> gotcha
20:23 < AAA_awright> Yeah, that's not simple substitution, that's actually referring to a variable with a certain value
20:23 < AAA_awright> The Correct Way to do it
20:23 < cellvia> depending on the library
20:24 < sayd> i installed node-less via aptitude. it brings in nodejs as a dep. is this the same as node? the bin is nodejs not node
20:24 < AAA_awright> kv1: Which mysql library are you using?
20:24 < sayd> when I run npm, i get: /usr/bin/env: node: No such file or directory
20:25 < CoverSlide> sayd: don't install packages using your distro package manager
20:25 < CoverSlide> use npm
20:25 < CoverSlide> hmm
20:25 < kv1> AAA_awright the standard one felix wrote i think? node-mysql 
20:25 < CoverSlide> sayd: what distro?
20:26 < trevnorris> tjfontaine: trying to load node-buffer and run it in a script for x0.9.x.
20:26 < trevnorris> tjfontaine: but think I figured it out. The lines in v0.8.x "Start Compatibility hack: Remove once everyone is using NODE_MODULE macro" have been removed. and all the modules I've tried to load don't use NODE_MODULE.
20:26 < tjfontaine> oh
20:27 < trevnorris> bnoordhuis: yeah. so I think the reason node-profiler doesn't work in v0.9.x is that it doesn't use the NODE_MODULE macro.
20:27 < AAA_awright> kv1: Yeah that's exactly how you can do it, you use: connection.query("SELECT * FROM users WHERE token = :t", { t: token }, ...);
20:27 < AAA_awright> kv1: Or: connection.query("SELECT * FROM users WHERE token = ?", [token], ...);
20:27 < sayd> CoverSlide: debian
20:28 < CoverSlide> ah, so you're probably on 0.4.x if that
20:28 < CoverSlide> uninstall nodejs, node-less, and anything else containing node in it
20:28 < segomos> lol
20:28 < CoverSlide> download the binary from the homepage
20:29 < tjfontaine> apt-get purge node*
20:29 < sayd> ok
20:29 < sayd> it is listing as 0.6.19 
20:29 < CoverSlide> ok well that's better than i though
20:30 < CoverSlide> or get source and compile
20:30 < CoverSlide> ./configure && make && make install
20:30 < CoverSlide> best option
20:30 < sayd> afk for a bit
20:32 < trevnorris> tjfontaine: that was it. just made the change and recompiled. worked fine.
20:36 < trevnorris> isaacs: sorry, no bug. all the modules I tested against don't use NODE_MODULE (which I guess has been mandatory since f692347)
20:39 < addisonj> isaacs: a question regarding http-agent socket pooling... is there any plans/ideas on making that pool be smarter, so you actually get keep-alive?
20:39 < addisonj> at the moment, its pretty useless imho, as you only get keep-alive when you saturate your pool...
20:40 < CoverSlide> kenperkins asked this question
20:40 < kenperkins> eh?
20:40 < kv1> AAA_awright done! thx so much for the help. one question though, does this eliminate security vulnerabilities through some internal mechanism?
20:40 < addisonj> oh, interesting, recently?
20:40 < CoverSlide> remember the issue filed about http agent socket pooling?
20:40 < kenperkins> addisonj: I opened an issue on this, the debate is here: https://github.com/joyent/node/issues/4362
20:41 < addisonj> awesome, shall read up and add my voice
20:41 < AAA_awright> kv1: Obviously I can't speak for all security vulnerabilities, but inserting values into SQL instead of using a placeholder or a variable is a definite security hole
20:41 < addisonj> I almost just went it and implemented a pool that seemed sane
20:41 < addisonj> but then I got lazy
20:41 < __yh> does node come with the d8 parser for --prof ? that parses the log and shows a pretty output
20:42 < AAA_awright> kv1: It will either substitute a properly-escaped value (a placeholder), or it'll pass the string to MySQL which will compile it, and then call that "prepared statements" with arguments
20:42 < AAA_awright> *prepared statement
20:42 < AAA_awright> Just like a function
20:43 < CoverSlide> __yh: no, but you can build it from the deps folder
20:43 < kenperkins> addisonj: the tl;dr; is that node does reuse connections so long as their are connections already in the queue when yours finishes
20:43 < CoverSlide> would be nice if there was a keepalive timeout
20:43 < addisonj> kenperkins: yeah, I am aware of the behavior, but its pretty lame behavior, as you only gain reuse at the cost of having connections pile up
20:44 < addisonj> agreed, a timeout is what it should be
20:44 < CoverSlide> Probably the best email Subject I've seen in a while: "Shaq chooses Corona to battle zombies"
20:46 < addisonj> where I am, we do a lot of proxying requests to different backend services (we just pipe it back to appropriate backend service), so we are opening ridiculous numbers of sockets :(
20:46 < kv1> ah ok, perfect. thanks AAA_awright ! 
20:46 < mikola_> hey, I have a style/performance question about javascript
20:46 < CoverSlide> shoot
20:46 < mikola_> is it better to create a custom object/prototype and put all my methods in there, or should I just create functions and have them operate on the object?
20:47 < mikola_> in the latter situation it is easier to use polymorphism
20:47 < CoverSlide> polymorphism has no meaning in javascript
20:47 < mikola_> right
20:47 < zomg> mikola_: that all depends on the situation. Either works.
20:47 < kenperkins> addisonj: ditto.
20:47 < mikola_> I guess I can write code using blah.prototype.whatever
20:47 < __yh> mikola_: first way i think
20:47 < mikola_> or I can create someMethod(ref_to_object, params)
20:48 < __yh> v8 optimizes that better, though idk what you really mean
20:48 < CoverSlide> well probably the best option would be # 2, since you avoid the `this` garbage
20:48 < addisonj> oh, interesting, didn't realize that request had an alternate agent...
20:48 < mikola_> ok, so v8 optimizes the .prototype style better?
20:48 < addisonj> we are using request as is, very nifty
20:48 < mikola_> the reason I ask is that I am writing a volume graphics library for working with narrowband level sets
20:49 < __yh> mikola_: it doesn't react well to you manipulating objects during runtime if you can avoid, if thats what you are meaning by #2
20:49 < mikola_> and I can reasonably justify using either method
20:49 < mikola_> no, not manipulating objects at run time
20:49 < mikola_> __yh: just two different ways to call a method
20:49 < mikola_> I can either do:  obj.method()
20:49 < mikola_> or method(obj)
20:49 < mikola_> latter version is slightly more flexible
20:50 < __yh> oh personally if its all the same, i just go with what reads better when someone has to read your code
20:50 < hij1nx> mikola_: there are specific reasons and various advantages for using objects and object instances.
20:51 < mikola_> ok
20:51 < hij1nx> mikola_: for instance, if you make a lot of copies of an object, and that object has a large method, it will be copied with each copy
20:51 < mikola_> really?
20:51 < mikola_> hij1nx:  I didn't know that
20:52 < mikola_> I though it just looked up the instance of the method in the prototype...
20:52 < hij1nx> well, if you want the "instance" method, add it to the prototype
20:52 < __yh> mmm hij1nx idk if thats true
20:52 < mikola_> so there is only ever one instance of the method
20:52 < __yh> with v8 i mean
20:52 < hij1nx> __yh: it is true if you do it
20:52 < __yh> pretty sure v8 'caches' that object once only and refers to it
20:53 < hij1nx> __yh: not talking about V8
20:53 < __yh> that is properties may change but prototype methods won't be duplicated
20:53 < mikola_> hij1nx:  are you saying if I do:  foo.prototype.bar = function() {...};  x = new foo();  foo.prototype.bar = function() { alert("!"); } it won't overwrite x's foo?
20:53 < mikola_> I think it should
20:53 < hij1nx> __yh: you are not understanding.
20:53 < hij1nx> __yh: im saying exactly that prototype methods are the way to go if you plan on having a lot of copies.
20:54 < mikola_> ok
20:54 < mikola_> but in the other method I wouldn't make copies either...
20:54 < __yh> mikola_: see that example is bad if you want performance
20:54 < hij1nx> mikola_: there are lots of good resources for learning javascript; one really good one is jsmentors.
20:54 < __yh> you are manipulating foo during run time
20:55 < mikola_> ok, nevermind
20:56 < hij1nx> mikola_: in node, i would say only use prototype methods if you plan on creating instances.
20:56 < mikola_> ok
20:56 < kenperkins> addisonj: link to alt agent?
20:56 < mikola_> but that wasn't the question really
20:56 < mikola_> here, I'll show you what I am working on:
20:57 < mikola_> https://github.com/mikolalysenko/rle-voxels/blob/master/API.md
20:57 < mikola_> basically it is an API for dealing with narrowband levelsets in javascript
20:57 < mikola_> (ie large run length encoded voxel data)
20:57 < mikola_> I can write methods like:  dilate(a, radius)
20:57 < mikola_> or:  a.dilate(radius)
20:58 < mikola_> but which is going to be faster?
20:58 < mikola_> or I can do stuff like:  union(a, b)
20:58 < mikola_> or:  a.union(b)
20:58 < spion> why don't you benchmark it? (I have no idea, I'd assume a.x(b) is slower because it does two lookups - one in the object the other in the prototype)
20:59 < spion> but will that matter? I have no idea.
20:59 < hij1nx> mikola_: mikola_ thats called premature optimization.
20:59 < __yh> think it'll be about the same either way
20:59 < mikola_> honestly, I don't really expect there to be much of a difference
20:59 < mikola_> part of the question is a stylistic one; which is mode node.js style friendly?
21:00 < CoverSlide> I think more people like the a.x(b) style
21:00 < __yh> yea
21:00 < __yh> reads better
21:00 < mikola_> but there can be a difference if I rework the API a bit
21:00 < CoverSlide> usually we like context of the object we are calling
21:00 < spion> *personally* I ask myself if both of the objects are on "equal footing"
21:00 < spion> if they are, i use a free function
21:00 < addisonj> kenperkins: https://github.com/mikeal/request/blob/master/forever.js
21:00 < mikola_> for example; it might be better to just remove the whole binaryvolume class altogether
21:00 < __yh> plus if you don't know what the heck a is, and you throw it into dilate() , tears
21:00 < addisonj> kenperkins: isaacs mentions it in the issue
21:01 < kenperkins> I didn't see that
21:01 < kenperkins> shame on me
21:01 < mikola_> then just operate directly on lists of runs
21:01 < __yh> but at least with a.dilate, you know what a is before you dilate it
21:01 < kenperkins> (I've known I could write my own agent, but didn't realize there was one)
21:01 < addisonj> I am going to play with it, seems like it has some issues
21:01 < kenperkins> that said, I strongly feel like that should be first class functinoality
21:01 < mikola_> so all the methods would just take an array of BinaryRun() objects as input, and I could get rid of the class
21:04 < addisonj> kenperkins: I agree with ben that it doesn't need to be default behavior. Having the option would be good for me
21:04 < kenperkins> I'm not sure I agree that it shouldn't be default. But I'm open to negotiation
21:04 < kenperkins> it's similar to the mysql defaults, i.e. you'll shoot yourself in foot if you run with defaults
21:12 < spion> mikola_, here is a stricter algorithm that I usually use: if (a.f(b) === b.f(a) || a.f(b).f(c) === a.f(b.f(c)))  { f(a,b) } else if (not_pure_function(f)) { a.f(b); } else {  pick_consistent_option({preference: a.f(b)}); } - but I'm not sure if its great.
21:13 < mikola_> spion:  That's a good algorithm, but it still fails in my case...
21:14 < spion> mikola_, sorry, I know nothing about that particular problem domain... :)
21:15  * spion is reading
21:15 < mikola_> spion:  It's ok, I think I'm going to just pick f(a,b) and not worry about it anymore
21:16 < davidcornu> Does anyone have an idea of what the extent of cloudhead/cradle's caching is?
21:20 < breck> is this a good idea/bad idea: function () { var Crawler = require("simplecrawler").Crawler; return Crawler.doSomething();}
21:20 < breck> im wondering if that would release memory when done
21:20 < cellvia> if youre going to be calling the function often, you should include crawler outside of i
21:20 < cellvia> er, require
21:21 < breck> and if i only use it once? this is inside a long running express app
21:21 < davidcornu> celivia: aren't calls to require cached?
21:21 < breck> just trying to be memory efificent
21:22 < cellvia> oh yeh that true davidcornu,  it still seems strange to me but youre right
21:22 < breck> (and the memory used by a module could be insignificant, i need to do some profiling but thought i'd ask first)
21:24 < breck> thanks cellvia, davidcornu. i'll try it and learn something
21:25 < blobaugh> any mongoosejs users in here? Nobody is responding in their IRC room and I could use some help. I need to retrieve that last entry into mongodb, however I seem to only be able to retrieve the oldest
21:28 < spion> hrm you can always do freefuncs = {};  (for var f in obj.prototype) if (obj.hasOwnProperty(f) && typeof(f) === 'function') freefuncs[f] = function() { return obj.prototype[f].call.apply(obj.prototype[f], arguments); } but that may be too hacky :)
21:29 < spion> but it should be good enough to test how your API feels with both styles without writing both
21:29 < blobaugh> spion: what that to me? i understood none of it :S
21:30 < spion> no, for mikola_ 
21:31 <@isaacs> addisonj: in 0.12 we'll be doing that
21:31 < mikola_> hmm
21:31 < CoverSlide> just wait 52 weeks
21:32 < spion> then freefuncs.func(a, b) will be just like a.func(b) - if I didn't make any mistakes writing that (not really sure)
21:34 < mikola_> spion:  It's a nice idea, but I think I'd rather just stick with one or the other and try not to overwhelm the user with too many choices...
21:34 < mikola_> and besides I already started refactoring everything to be consistently f(a,b)...
21:34 < spion> i meant just for  you to try the other style out without rewrites
21:34 < mikola_> :)
21:36 < spion> it definitely has one error though. s/obj.hasOwnProperty/obj.prototype.hasOwnProperty
21:36 < darrenlooby> Anyone have successful in installing Cloud9 on Ubuntu 12.4?
21:37 < niggler> i wish c9 didnt depend on sourcemint
21:38 < CoverSlide> wtf is sourcemint?
21:40 < darrenlooby> CoverSlide, that's what I said when I first looked at it
21:41 < niggler> CoverSlide and darrenlooby its a weird dependency
21:41 < niggler> http://sourcemint.com/
21:41 < niggler> im convinced c9 is the only notable project using it
21:43 < kamoricks> I'm running `npm install mysql-db` and it claims to have completed successfully, but there's a node_modules directory in my home directory, and they're not listed as loaded by `nodejs`. What happened?
21:44 < darrenlooby> Sourcemint is incomplete ALPHA technology...
21:45 < davidcornu> kamoricks: what do you mean by not listed as loaded?
21:45 < kamoricks> davidcornu: "Error: cannot find module 'db-mysql'"
21:45 < segomos> kamoricks: you have the require wrong, you npm installed mysql-db and tried to require db-mysql
21:46 < kamoricks> segomos: Ah. Sorry. Ran `npm install db-mysql`. I have node_modules/db-mysql in my home directory.
21:47 < davidcornu> kamoricks: is the output of process.cwd() the same as your home directory?
21:47 < superjoe> anyone have an alternative to this? https://github.com/niftylettuce/node-email-templates
21:49 < kamoricks> davidcornu: No. Should it be? I'd like to install the module system-wide, not just to my project.
21:50 < davidcornu> in that case run npm install -g db-mysql
21:50 < mscdex> any v8 gurus here? no bottom up profiles on Windows?
21:51 < kamoricks> davidcornu: It says it installed to usr/local/lib/node_modules/db-mysql, and it's there, but I'm getting the same error from my script.
21:53 < davidcornu> kamoricks: http://nodejs.org/api/modules.html#modules_loading_from_the_global_folders
21:53 < nodeLearner> Hello folks , Can any one help t access Node server from external device ?
21:53 < nodeLearner> Hello folks , Can any one help t access Node server from external device ?
21:53 < nodeLearner> Hello folks , Can any one help t access Node server from external device ?
21:53 < nodeLearner> Hello folks , Can any one help t access Node server from external device ?
21:53 < nodeLearner> Hello folks , Can any one help t access Node server from external device ?
21:53 < nodeLearner> Hello folks , Can any one help t access Node server from external device ?
21:53 < davidcornu> kamoricks: try setting your NODE_PATH to /usr/local/lib/node_modules
21:54 < nodeLearner> Hello folks , Can any one help t access Node server from external device ?
21:54 < nodeLearner> Hello folks , Can any one help t access Node server from external device ?
21:54 < cellvia> whoa there
21:54 < jcrugzz> take it easy
21:54 < mscdex> :S
21:54 < freewil> no one should help you and you should be banned
21:54 < nodeLearner> ?
21:54 <@mbalho> nodeLearner: dont spam please
21:54 < cellvia> imagine if everyone did what you just did
21:55 < cellvia> no one would ever get help
21:55 < zomg> Imagine doing that in real life
21:55 < cellvia> it would be cHaOs
21:55 < zomg> ;>
21:55 < nodeLearner> alrighyt i guess it my frustration here  i have been trying for last 2 hours to make it run 
21:55 < FunnyLookinHat> That's called #ubuntu
21:55 < nodeLearner> sorry 
21:55 < rump> after the first request i felt nothing,.. but after the 10th i now feel compelled to help
21:55 < kamoricks> davidcornu: Thanks.
21:56 <@mbalho> nodeLearner: to get help it helps to ask specific questions and provide your broken code via gist.github.com or something similar 
21:56 < CoverSlide> nodeLearner: gist.github.com << paste code here, share the link
21:57 < trevnorris> api feedback: working on improving buffer read/write method performance and will need to expose methods through SlowBuffer. since node has the goal of using typed arrays should I use the same naming convention (e.g. setUint32), or stick with the current (e.g. writeUInt32)?
21:57 < niftylettuce> superjoe: hey im creator of that project, whats up
21:57 < blobaugh> anyone here using mongoosejs? i could really use some help figuring out how to get this query correct
21:57 < superjoe> hey niftylettuce, first of all, nice project. it's handy.
21:57 < trevnorris> doing it this way to have no api collisions with Buffer.
21:58 < exit2> are there any particular recommended node modules for geolocation?  I've tried a few different things and wondering if there is one in particular that's best
21:58 < superjoe> niftylettuce, maybe if I simply explain the problems I am running into, you will know how to solve them.
21:58 <@mbalho> exit2: do you mean geocoding?
21:58 < nodeLearner> CoverSlide here is the code 
21:58 < nodeLearner> https://gist.github.com/4506139
21:59 < superjoe> niftylettuce, 1. ejs lacks "layout" or "blocks" which results in lots of duplicate template code
21:59 < Deathspike> I have a string encoded with gzip (from a http get request) and need to unpack it, I tried zlib gunzip but this does not work? Can anyone give me an example?
21:59 < MI6> joyent/node: isaacs master * 9ece63b : http: Don't switch the socket into old-mode (+5 more commits) - http://git.io/3S29UQ
21:59 < nodeLearner> CoverSlide: everything works fine on ,y laptop  i want to access it from my mobile phone . I am able to access my IIS from mobile
21:59 < exit2> mbalho: basically using navigator.geolocation or something
21:59 < rump> nodeLearner: maybe you shouldnt bind to the internal network
21:59 <@mbalho> exit2: are you talking about node or in the browser?
21:59 < CoverSlide> oh wonderful, he broke gist
21:59 < rump> nodeLearner: remove: ,'192.168.2.101'
22:00 < nodeLearner> rum I have no clue now how to fix this 
22:00 < exit2> nodeLearner: if you want to access it from your phone you can always run a localtunnel
22:00 < superjoe> niftylettuce, 2. I need to make a preview tool for previewing templates and sending test emails. currently I have a regex which searches a template for substitutions, but ideally the template engine could list the substitutions for me
22:00 < exit2> mbalho: with node
22:00 < kenperkins> so does anyone run their environment in Vagrant?
22:00 < kenperkins> (Dev)
22:00 < nodeLearner> exit2: localtunnel ?
22:00 <@mbalho> Deathspike: httpRequest.pipe(require('zlib').Gunzip()).pipe(process.stdout)
22:00 < davidcornu> kenperkins: yup
22:00 < exit2> nodeLearner: http://progrium.com/localtunnel/
22:00 < superjoe> niftylettuce, 3. I think that the email templating tool should be smart enough to parse my template html, validate it (make sure I closed all my tags essentially), and inline any css that way
22:01 < superjoe> niftylettuce, that way I can share css between templates
22:01 < kenperkins> davidcornu: do you also develop npm packages? I'm trying to figure out how to have npm packages that are in development get onto my VM without having to commit/publish
22:01 < kenperkins> (with multiple packages in development simultaneously)
22:01 < superjoe> niftylettuce, It seems kind of out of the scope of your project so I was looking elsewhere.
22:01 < superjoe> my mind is open to other suggestions.
22:02 < davidcornu> kenperkins: does https://npmjs.org/doc/link.html not work?
22:02 < jcrugzz> superjoe: if it does not exist you could write this module that you desire :p
22:02 < nodeLearner> exit2  now do i have to install ruby too to make it work !!!!!
22:02 < kenperkins> not sure, the packages are cloned on the local machine for development
22:02 < superjoe> jcrugzz, I was about to - that's why I'm asking if it exists already :)
22:02 < kenperkins> not on the VM
22:02 < Deathspike> mbalho: Thanks for the pointer. This involves streaming and I'm not very familiar with this yet, I currently have the gzip body as a 'string' in memory. Can I pipe from that and into a different piece of mem?
22:03 < exit2> nodeLearner: yes localtunnel uses ruby
22:03 < nodeLearner> exit2 somehow it doesnt look good to me  to have ruby just to access nodejs server .
22:03 < exit2> nodeLearner: ok
22:04 < davidcornu> kenperkins: if you clone them into your shared folder it should work
22:04 < nodeLearner> exit2  i am able to access my IIS from mobile and i am sure there is a port thingy is missing 
22:04 < superjoe> what, why is exit2 telling nodeLearner to use ruby?
22:04 < superjoe> nodeLearner, what are you trying to do?
22:04 < exit2> superjoe: I'm telling him he can install localtunnel to view his localhost from his phone
22:04 < superjoe> ah.
22:04 < nodeLearner> superjoe i am trying to access node server from my mobile browser
22:04 < superjoe> or he can forward a port in his router
22:05 < exit2> nodeLearner: what OS?
22:05 < nodeLearner> windows 7
22:05 < nodeLearner> i am able to access IIS from my mobile 
22:05 < superjoe> nodeLearner, make sure you're listening to 0.0.0.0
22:05 < superjoe> not localhost
22:05 < exit2> oh not sure then, I know on OSX can you setup something for that also
22:05 < nodeLearner> 0.0.0.0  is no help 
22:05 < nodeLearner> i have already tried it and it is behaving like 127.0.0.1
22:06 < Bonuspunkt> firewall?
22:06 < nodeLearner> superjoe
22:06 < nodeLearner> https://gist.github.com/4506139
22:06 < exit2> nodeLearner: localtunnel has been very useful for me, not only to quickly view it on my phone but also if you wanted to share your site with someone quickly w/o deploying it
22:07 < superjoe> nodeLearner, looks good to me
22:07 < superjoe> sounds like something is going on with your OS / hardware
22:07 < rump> forward your router ports
22:07 < superjoe> rump, it's internal network
22:07 < nodeLearner> exit2 i see usability of localtunnel but its not what i want at the moment . anyways thanks for telling me abt it 
22:07 < rump> superjoe: you said you wanted to access from your phone?
22:07 < rump> thats on your internal as well?
22:07 < nodeLearner> yes
22:07 < superjoe> wifi
22:07 < superjoe> and it's not me it's nodeLearner 
22:07 < nodeLearner> yes 
22:08 < jcrugzz> hit the local IP of your computer nodeLearner
22:08 < nodeLearner> My laptop  and mobile fone uses my home wi fi router 
22:08 < Bonuspunkt> nodeLearner have you checked your firewall?
22:08 < rump> just .listen(port), dont specify an ip.. and then from phone connect to your computers ip:port
22:08 < nodeLearner> yes , i did and open some ports also 
22:08 < exit2> nodeLearner: actually it kind of is what you want at the moment :|
22:08 < nodeLearner> but no help 
22:09 < jcrugzz> does windows just make doing this annoying for no good reason?
22:09 < exit2> probably
22:09 < Bonuspunkt> yes if your firewall is up it only works at 127.0.0.1
22:09 < rump> deltree c:\ might help
22:09 < nodeLearner> exit2 i will look but at the moment i really want to make this silly thing work 
22:10 < exit2> nodeLearner: check this out http://stackoverflow.com/questions/3132105/how-do-you-access-a-website-running-on-localhost-from-iphone-browser
22:10 < Bonuspunkt> rump no its system32
22:10 < exit2> nodeLearner: the accepted answer appears to be for windows
22:12 < nodeLearner> exit2 i have already tried this :(
22:12 < exit2> maybe try localtunnel then :P
22:12 < trevnorris> why for the love of all holy would js typed arrays default to big-endian? it seems so stupid.
22:16 < nodeLearner> exit2 if this is the last option than i have to :(
22:16 < exit2> nodeLearner: I don't see what the big deal is, it's a useful tool
22:17 < rump> cause its a simple task that shouldnt require any 3rd party
22:17 < exit2> doesn't seem like he can accomplish the simple task
22:18 < CoverSlide> trevnorris: doesn't it follow the endianness of the device?
22:18 < rump> nodeLearner: what are the ip addresses of the phone and the computer hosting the node app?
22:18 < CoverSlide> s/device/platform/
22:18 < trevnorris> CoverSlide: nope. for example, when reading with DataView you need to pass "true" in the third argument to read in LE.
22:19 < trevnorris> CoverSlide: and the code needs to determine whether the device/platform is LE or BE and do accordingly.
22:20 < trevnorris> but what I don't get is most platforms are LE, right? so why would they default it to BE?
22:20 < CoverSlide> oic
22:20 < CoverSlide> yes, odd
22:21 < jcrugzz> trevnorris: they were thinking of you when they designed it
22:24 < CoverSlide> google can't seem to give me a definitive answer to this riddle
22:25 < trevnorris> CoverSlide: DataView: https://developer.mozilla.org/en-US/docs/JavaScript/Typed_arrays/DataView
22:26 < CoverSlide> maybe GPUs are big endian? Maybe that's why khronos wanted it that way, cause they deal more with the gpu?
22:26 < CoverSlide> we're getting into deep hardwarey stuff that i know nothing about
22:27 < niggler> trevnorris network is bigendian'
22:28 < CoverSlide> or possibly, they feel that the second parameter should always be used, and true should be the most common
22:28 < niggler> *when you pass data over TCP its big-endian
22:28 < niggler> which is why hton* and ntoh* exist
22:28 < CoverSlide> but when it gets to the javascript it's converted
22:28 < trevnorris> niggler: ok, but why would they default it for storing values to memory that can't be sent over the network?
22:30 < niggler> most computers are little endian
22:30 < trevnorris> CoverSlide: ok, you were right. Typed Arrays just use the platform architecture. it's just DataView that defaults to big endian.
22:30 < trevnorris> niggler: and that's my beef. array buffers are only for storing values in memory, and most systems are LE. so why would DataView default to BE?
22:31 < devc> I'm trying to get started on my first node.js mini-app and have been stumped on how to get node.io installed - npm's throwing an error blaming contextify but installing contextify alone works. I don't know if it's something I'm doing or a bug. I'm on OSX, have installed Xcode/Command Line, node.js + npm, is there anything I might be overlooking from a noob perspective, before pinning it to a node.io bug?
22:31 < niggler> i assume trevnorris that it's assumed to be a raw network buffer by default
22:31 < niggler> that you are using a dataview on data you just received from the network
22:31 < niggler> in which case bigendian default does make sense
22:32 < niggler> the typed array itself doesnt give two shits about the endianness of the data
22:32 < niggler> its the view that cares
22:33 < trevnorris> hm... by view you mean dataview, right?
22:34 < niggler> yeah
22:34 < niggler> there are two parts to the typed array specification
22:34 < niggler> the underlying array store and the view into it
22:35 < niggler> what actually confuses me about this spec is that they didnt just decide to make two functions with the endianness built into the name
22:35 < niggler> a la node's buffer with readUint32BE/readUint32LE
22:36 < trevnorris> yeah. so correct me if i'm wrong, but it basically breaks down to the memory store (ArrayBuffer) and how it's viewed (Uint32Array). But there is also DataView which allows you to pull memory from an ArrayBuffer  by use of a function call.
22:37 < trevnorris> and DataView allows you to specify endianness (e.g. DataView.setFloat32(<offset>,<value>,<is_little_endian>))
22:38 < bingomanatee> good evening node
22:38 < wedsdaedsdadsa> gfhfghfhfhfhfhfh
22:38 < wedsdaedsdadsa> isdidsididdid
22:38 < bingomanatee> OT but has anyone played around with Web Workers? I am seeing memory leaks in chrome - is this just state of the field?
22:39 < cellvia> wedsdaedsdadsa could you rephrase the question
22:39 < addisonj> he chatted me and did the same thing...
22:39 < trevnorris> niggler: but yeah. the whole spec is confusing.
22:39 < niggler> the whole concept of endianness is confusing :P
22:40 < trevnorris> heh, no kidding.
22:50 < tim_smart> What is the right way to write a express route with file formats. E.g. /jobs/:id and /jobs/:id.json etc
22:54 < stagas> tim_smart: '/jobs/:id.:format?' should do it
22:55 < tim_smart> stagas: That would need two route right? Otherwise the `.` would be non-optional?
22:55 < tim_smart> OK seems not. Cheers.
22:58 < CoverSlide> In December drinking horchatas, I looked psychotic in a balaklava
23:00 < s5fs> CoverSlide: haha, that sounds like some kool keith stuff
23:01 < s5fs> oh vampire weekend? yeah, okay.
23:04 < devc> s5fs: Are you a big Kool Keith fan?
23:04 < s5fs> devc: yeah, for sure, and all his aliases
23:05 < devc> Him in particular, or are you a hiphop fan all around?
23:06 < s5fs> devc: hm, probably both. i listen to a lot of stuff, but have always enjoyed his work although i've passed up seeing him live a few times.
23:07 < devc> I'm kinda the same. I like his albums but have passed up live shows. There's a few live shows I've done that for.
23:08 < s5fs> devc: yeah, i'm not sure i wanna see him live, haha! i tend to think of keith as being somewhat experimental hip-hop, not really too mainstream. much of the value comes from repeated listening, learning the nuance and rhythm, etc. pretty unique guy.
23:09 < WarheadsSE> Hey guys. Just ran a check to find problems, getting some oddities @ runtime with most recent compiles of node (stable 0.8.17).
23:09 < WarheadsSE> Here is a gdb w/ backtrace if anyone cares to have a look: http://pastie.org/pastes/5664957/text?key=dmzot64g7tctdvpxelqv7g
23:29 < mattrobenolt> Anyone using mocha-cloud?
23:37 < CoverSlide> WarheadsSE: this is on ARM?
23:37 < WarheadsSE> yup
23:37 < WarheadsSE> freshly compiled and installed.
23:37 < WarheadsSE> looking at the source dirs from compilation now, and I am getting sometimes run, sometimes fault.
23:39 < WarheadsSE> hmm, this compile is working fine...
23:39 < WarheadsSE> wtf.
23:40  * WarheadsSE kicks it off again
23:41 < CoverSlide> see you in an hour!
23:41 < CoverSlide> s5fs had a similar problem, only the compile randomly wouldn't work
23:41 < CoverSlide> i think it was him
23:42 < WarheadsSE> lol
23:42 < WarheadsSE> Like my builds take that long.
23:42 < CoverSlide> on a pi I hear they take a looong time
23:42 < WarheadsSE> I use distcc
23:42 < WarheadsSE> compiling entirely natively on a Pi, yeah
23:42 < CoverSlide> hmm
23:43 < WarheadsSE> especially with full bundling, that takes a while
23:43 < WarheadsSE> now, if I turned off distcc, .. that would take a while
23:43 < CoverSlide> do you have a cluster of pis?
23:44 < WarheadsSE> Me, no. I have 2
23:44 < WarheadsSE> this isn't on a Pi
23:44 < s5fs> CoverSlide: hi, yes, i had compile issues with node 0.8.16 but it's built now
23:44 < CoverSlide> oh ok
23:45 < s5fs> WarheadsSE: what are you building, and on what platform? i was building under angstrom on a beagleboard xm. issue came down to fixing the node.gyp, i believe (although Nexxy did the work)
23:45 < CoverSlide> what are we building this on? I'm interested in the node-on-an-arm thingy
23:45 < s5fs> CoverSlide: is that question for me?
23:45 < CoverSlide> no for WarheadsSE 
23:46 < WarheadsSE> This, is building on a armv5te, kirkwood SoC, NSA 320
23:46 < WarheadsSE> I cover v5/6/7s
23:47 < WarheadsSE> This PKGBUILD has worked for 0.8.14+
23:47 < WarheadsSE> we had some wonky behavior in 0.8.16 with the v5 build, ust like this.
23:47 < WarheadsSE> built it in the farm, and it came back with that exact error.
23:48 < CoverSlide> does this use --shared-ssl and / or --shared-v8 ?
23:48 < WarheadsSE> built locally with distcc, ran fine.
23:48 < s5fs> WarheadsSE: yeah, that's way different than my issue. ours was a build issue, not runtime.
23:48 < WarheadsSE> not this time
23:48 < WarheadsSE> basically this with a version & checksum bump  https://github.com/archlinuxarm/PKGBUILDs/blob/master/community/nodejs/PKGBUILD
23:49 < CoverSlide> yeah i got random segfaults from the community/node PKGBUILD, deleted those lines and it started working again
23:49 < WarheadsSE> upsteam, or ALARM ?
23:50 < CoverSlide> upstream. x86_64
23:50 < WarheadsSE> k
23:50 < CoverSlide> v0.8.16 built just fine?
23:50 < WarheadsSE> it does greatly speed build time, but sometimes you get random segfaults because of the mis-match on v8 engine/ssl since they update at a rapid pace faster
23:51 < WarheadsSE> farm = no, same error. locally, always
23:51 < CoverSlide> hrm
23:51 < WarheadsSE> this time I got it locally
23:55 < niftylettuce> superjoe: can you add those 3 items as Issues here? https://github.com/niftylettuce/node-email-templates/issues
23:55 < superjoe> sure thing.
23:57 <@Nexxy> niftylettuce wow
23:57 < niftylettuce> Nexxy: sup
23:57 < WarheadsSE> I may poof in and out
23:57 <@Nexxy> nodes jsing
23:57 < WarheadsSE> dinner cooking time
23:57 <@Nexxy> you?!
23:58 <@Nexxy> niftylettuce, I'm glad to see you haven't wilted
--- Log closed Fri Jan 11 00:00:00 2013
