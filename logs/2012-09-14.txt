--- Log opened Fri Sep 14 00:00:13 2012
00:08 < xonecas> tjholowaychuk: slow clap for you, for speaking your mind on the dropbox moving to coffescript post. I agree with you 100%
00:08 < tjholowaychuk> xonecas haha just trollin
00:08 < xonecas> I know, but I still think you're right
00:08 < tjholowaychuk> i guess it's not really trolling
00:08 < tjholowaychuk> in that case
00:09 <@konobi> tjholowaychuk: when were you in town again?
00:12 <@konobi> xonecas: url?
00:15 < xonecas> konobi: https://tech.dropbox.com/?p=361
00:18 <@konobi> heh
01:14 < ang3lfir3> yall are sure exciting :p 
01:17 < xonecas> Thanks for being the life of the party ang3lfir3 !
01:17 < ang3lfir3> xonecas, no worries~!!!! :) 
01:17 < ang3lfir3> xonecas, it's a dirty job but some one has to do it
01:19 < cainus> hey... anyone know why node would complain about fs not having an exists() method?  Is it a recent addition?
01:20 <@konobi> cainus: fs vs path... that was a 0.6 vs 0.8 difference
01:20 < cainus> thanks konobi
01:20 < cainus> guess travis is stuck on 0.6 for some reason
01:22 < ChrisPartridge> cainus: travis ci?
01:22 < cainus> yeah
01:22 < ChrisPartridge> you can specify your node version dude
01:22 <@konobi> cainus: fs.exists is a 0.8-ism iirc
01:22 < cainus> yeah I do
01:23 < cainus> I specified 0.8.6 which travis doesn't have anymore
01:23 < ChrisPartridge> cainus: Just put 0.8 and see what happens
01:25 < cainus> ChrisPartridge, yep... that fixed it... thanks man
01:25 < ChrisPartridge> yw
01:32 < janmower> hey sorry starlog: you still around?
01:38 < jt2190> I'm trying to select a good promises/deferreds/futures library. Anyone have an opinion they'd like to share?
01:38 <@konobi> don't
01:38 <@konobi> there's good reasons they were expunged from core
01:40 < jt2190> konobi: Is there somewhere that I can see that debate? A mailing list archive or something?
01:40 <@konobi> jt2190: sure... nodejs mailing archives
01:40 < jt2190> konobi: OK cool... I'll look that up.
01:41 < jt2190> konobi: So what... EventEmitters?
01:42 < cainus> jt2190: it's pretty easy to do without them
01:44 < jt2190> cainus: I'm doing without them now, true.
01:45 < jt2190> cainus: I do see the tendency toward a lot of nested callbacks
01:45 < cainus> usually I extract functions when it gets hairy
01:45 <@konobi> jt2190: or you use a lib like async
01:45 < jt2190> cainus: or 'upside-down' code, i.e. the callback funcitons defined before the call function
01:46 < jt2190> cainus: My favorite (which I suppose is not fashionable) is when I have objects that call in one method and then pass a reference to another method as the callback
01:47 < cainus> "call in one method"?
01:47 < deltab> one method makes the call and returns; the callback is another method
01:48 < jt2190> deltab: yes
01:48 < jt2190> cainus: this keeps the scope/state clear
01:49 < jt2190> konobi: I'll check out async
01:49 < cainus> do you do TDD?
01:50 < cainus> I usually find tests force me into a sane factoring
01:51 < jt2190> cainus: Yes, I've done that in the past... I have a desire for very small, simple functions, easy to test
01:52 < raj> anyone that played with sockjs...is there a reason to have more than one connection open for a particular user?
01:52 < jt2190> cainus: javascript functions/methods are cool... apply, call...
01:52 < jt2190> cainus: very easy to reuse code
01:53 < ChrisPartridge> raj: one should suffice, i would imagine
01:53 < jt2190> cainus: but I'm preaching to the choir now :)
01:53 < cainus> yeah... I don't usually find myself nesting callbacks much when I keep my objects tiny
01:54 < jt2190> cainus: interesting... objects seem to be out of fashion
01:54 < jt2190> cainus: everyone's into fp
01:55 < raj> ChrisPartridge, so do you think it's okay to make it an attribute of `window`?
01:55 < ChrisPartridge> raj: Sure, as long as you, or someone else doesn't overwrite it :-)
01:55 < jt2190> cainus: although I still find myself drifting toward objects
01:55 < raj> just so it's available to all the functions
01:55 < cainus> jt2198: I still write a lot more first class functions than any java developer ;)
01:56 < jt2190> cainus: What? How do you survive without a 'private' keyword? :p
01:57 < cainus> I have nightmares about the day I realize that 'private' was the lynch-pin holding the universe together
01:59 < raj> thanks for the tip ChrisPartridge :)
02:21 < innociv__> Ever since updating to .9.10 my app has been going soooo slow.  And even disconnecting some people repeatedly
02:22 < innociv__> But high cpu isn't being used or anything.
02:26 < ChrisPartridge> innociv__: 0.9 is unstable release, use 0.8 if your in production
02:26 < ChrisPartridge> s/your/you're
02:27 < innociv__> Oh really, huh.  IS there like an npm socket.io-stable or something?
02:33 < ChrisPartridge> innociv__: apologies, i thought you were reffering to your node version
02:44 < ojon_> maybe some1 familiar with mongoskin odm for nodejs can answer my question:
02:45 < ojon_> http://stackoverflow.com/questions/12417425/efficiency-of-mongodb-mongoskin-access-by-multiple-modules-approach
02:46 < Tobsn> is there some module that parses form data into sub arrays - example ?foo[test]=1&foo[bar]=2 => 'foo':[['test':1],['bar':2]]
02:49 < gildean> Tobsn: i don't know about mongoskin, but you should be able to just parse the formfields with for example with connects bodyparser
02:50 < Tobsn> idk about mongoskin either
02:50 < Tobsn> yeah you cant
02:50 < gildean> why not?
02:50 < Tobsn> it will just turn it into 'foo[bla]' : value
02:50 < Tobsn> node by itself doesnt know the annotation
02:50 < Tobsn> do you know if i can extend the url object?
02:51 < gildean> why are you mangling the form data either way?
02:51 < Tobsn> mangling?
02:51 < Tobsn> thats how you keep form data within a one var scope
02:51 < Tobsn> input name="data[test]"
02:52 < gildean> i mean, if you just sent the data in a post-request, and then parsed that with a bodyparser, then you could just access it with req.body
02:52 < Tobsn> within for example php you would get $_POST['data']['test']
02:54 < gildean> also, make sure you're not trying to create arrays in mongodb for nothing
02:54 < Tobsn> im not using mongodb
02:54 < Tobsn> well i am
02:54 < Tobsn> but im not asking about mongodb
02:54 < ojon_> I was
02:54 < ojon_> am
02:55 < gildean> oh, i got mixed up
02:55 < Tobsn> yeah
02:55 < Tobsn> a lot ;)
02:55 < gildean> god damn, you both got the same color on my irssi and i just woke up
02:55 < ojon_> lol
02:55 < gildean> Tobsn: but anyways, my point stands still, using a bodyparser to parse form data is my advicce
02:56 < Tobsn> example?
02:56 < Tobsn> its a get btw
02:56 < Tobsn> not a form chunk of data
02:56 < gildean> are you saving data with a get?
02:56 < ChrisPartridge> Tobsn: just use querystring.parse and then a simple regex to break it down
02:56 < Tobsn> yeah thats what im doing now
02:56 < Tobsn> extending url obj
02:58 < Tobsn> wow lint has a "dont make functions within a loop" error
02:59 < mansoor-s> Tobsn, thats a good error warning
02:59 < Tobsn> kinda
03:00 < Tobsn> for( x in y ){ x.replace(//, function($0,$1){ } ) }
03:00 < Tobsn> that generates the error
03:00 < mansoor-s> aye
03:00 < mansoor-s> you keep creating a function
03:00 < Tobsn> kinda meh... ;)
03:00 < Tobsn> i know
03:00 < mansoor-s> o_O
03:00 < mansoor-s> are we agreeing or disagreeing? lol
03:00 < Tobsn> agreeing
03:00 < mansoor-s> ok
03:00 < Tobsn> wait no
03:00 < Tobsn> disagreeing
03:00 < mansoor-s> :S
03:00 < Tobsn> :P
03:00 < ChrisPartridge> :|
03:01 < mansoor-s> you are more confused than i am!!
03:01 < Tobsn> got an hour stuck on reddit
03:01 < Tobsn> now i want to argue for no reason
03:01 < mansoor-s> reddit will do that to you
03:01 < mansoor-s> so will 4chan or any other trashy website
03:01 < ChrisPartridge> I do enjoy r/pics though
03:02 < mansoor-s> i do too
03:02 < ChrisPartridge> oh, and r/chemicalreactiongifs
03:02 < mansoor-s> but everytime i go there i wake up 4 hours later realizing i just lost a part of my life that i wont get back
03:02 < Tobsn> i enjoy r/emmawatson
03:02 < Tobsn> :P
03:02 < mansoor-s> lol
03:03 < Tobsn> i got downvoted to hell on monday for explaining why the new iphone will suck and listing exactly the features came out
03:03 < Tobsn> with ~100 replies that "you cant know that!"
03:03 < Tobsn> ...
03:03 < Tobsn> completely nailed it
03:03 < Tobsn> i hate reddit.
03:05 < Tobsn> url          = require('url'),
03:05 < Tobsn> if i want to extend url
03:05 < Tobsn> url.prototype.myfunc = function(){}
03:05 < Tobsn> should do the trick right?
03:06 < Tobsn> cause it tells me url isnt defined
03:22 < drudge> haha where is tj https://tech.dropbox.com/?p=361
03:27 < TehShrike|Work> So I'm really sorry if this is an awkward question
03:27 < TehShrike|Work> But why does Marak hate nodejitsu?
03:27 < drudge> ... ?
03:28 < TehShrike|Work> He's been bitching a bit on Twitter and retweeting negative-ish support tweets involving nodejitsu
03:30 < Tobsn> i dont like nodejitsu either
03:31 < Tobsn> gildean, https://gist.github.com/3719623 thats what i was asking for ;)
03:31 < TehShrike|Work> I have no opinions about nodejitsu, I was really just curious
03:31 < drudge> some drama i guess, he is no longer with nodejitsu?
03:31 < TehShrike|Work> Tobsn: sweet, now what's the npm module name for that? :-D
03:32 < Tobsn> npm module?
03:32 < TehShrike|Work> Well sure
03:32 < TehShrike|Work> What is this, 2010?
03:32 < TehShrike|Work> I want to npm install get-value-parser
03:32 < Tobsn> you know that whole npm thing wasnt much used up until mid 2011
03:33 < TehShrike|Work> yeeeeeees?
03:33 < TehShrike|Work> Which would be why I asked "what is this, 2010?"
03:33 < Tobsn> im using node now since end of 2008... and this whole stuff everything into npm, i dont like it.
03:33 < TehShrike|Work> lol
03:33 < TehShrike|Work> srsly?
03:33 < Tobsn> yeah, its a lot of nonsense in there
03:33  * ChrisPartridge laughs
03:33 < TehShrike|Work> I'm in love with easy rollouts
03:33 < TehShrike|Work> npm or bust
03:33 < Tobsn> well for your private stuff maybe
03:34 < TehShrike|Work> Sure, if I care about private code, I'll use my own instance of npm
03:34 < TehShrike|Work> But I don't yet
03:39 < brianc> this is way offf-topic but you guys wanna hear mah band? I betchew bar-none it's the best node.js developer's band you've ever heart http://www.deadblackhearts.com/
03:39 < trave> anyone in here familiar with the "async" npm module?  I'm having a heck of a time trying to do a .series, but it only seems to be processing the first function in my series array/set
03:39 < brianc> in case you think I'm self-promoting: I quit that band to focus more on node.js! (node.js = yoko)
03:41 < Tobsn> brianc, not as good as http://gangn.am
03:41 < Tobsn> :P
03:41 < TehShrike|Work> brianc: :-D
03:42 < TehShrike|Work> brianc: want to hear me drum? ;-)
03:42 < brianc> TehShrike|Work: yes
03:42 < brianc> Tobsn: I cannot find a place to click on that site
03:42 < Tobsn> you shouldnt
03:42 < brianc> That's how badass it is
03:42 < brianc> silent music.
03:43 < Tobsn> it should play by itself
03:43 < Tobsn> whast browser are you on?
03:43 < brianc> oh I have flash disabled
03:43 < Tobsn> there ya go
03:43 < TehShrike|Work> brianc: http://youtu.be/y5DktpPOigM
03:43 < ChrisPartridge> brianc: i like your pg lib more than your music ;-)
03:43 < TehShrike|Work> I also charted the drum part myself for Rock Band >_<
03:43 < brianc> ChrisPartridge: me too
03:44 < brianc> TehShrike|Work: you rule the rockband drums. 
03:44 < TehShrike|Work> It took me an embarrassingly long time to FC my own drum chart :-P
03:44 < TehShrike|Work> I FCd it live plenty of times though :-D
03:44 < brianc> TehShrike|Work: FC?
03:45 < TehShrike|Work> Full Combo
03:45 < Tobsn> lol rockband also has made singing competitive?
03:45 < Tobsn> i did not know that
03:45 < TehShrike|Work> FC = all notes hit, no broken combo
03:45 < brianc> ah nice
03:45 < TehShrike|Work> Rock Band has always had singing
03:45 < brianc> ChrisPartridge: but you have to admit this is the best song ever written: http://soundcloud.com/dead-black-hearts/how-to-win-an-argument
03:45 < Tobsn> i never played it
03:45 < TehShrike|Work> The first 3 Guitar Hero games did not have singing
03:45 < Tobsn> ever
03:45 < Tobsn> well i played it once with the guitar
03:45 < Tobsn> but i thought its stupid
03:46 < TehShrike|Work> It's a fun video game
03:46  * Tobsn smiling at his euke in the background
03:46 < TehShrike|Work> If you like video games or music
03:46 < Tobsn> i like both
03:46 < Tobsn> i dont like rockband
03:46 < Tobsn> ;)
03:46 < TehShrike|Work> But srsly, I played that song irl.
03:46 < brianc> not in rockband?
03:46 < Tobsn> i think i could play it
03:46 < Tobsn> but not sing it
03:46 < brianc> You're the actual drummer for the song?
03:46 < TehShrike|Work> brianc: yes, I'm the drummer in that band
03:46 < brianc> TehShrike|Work: I love you
03:46 < TehShrike|Work> I played the track when it was recorded
03:47 < TehShrike|Work> And then I charted it for RB
03:47 < TehShrike|Work> Because fuck yeah, I want my band in Rock Band
03:47 < Tobsn> lol
03:47 < brianc> TehShrike|Work: no kidding
03:47 < brianc> TehShrike|Work: royalties > royalty
03:47 < Tobsn> i guess thats some goal
03:47 < TehShrike|Work> I didn't make a profit, but it doesn't matter
03:47 < Tobsn> brianc, wouldnt be so sure about that
03:47 < Tobsn> i would bet MS pays like 5k and thats about it
03:47 < brianc> Tobsn: I know, but platitudes sound so nice
03:47 < TehShrike|Work> I paid a talented person ~800$ to chart the rest of the song, made ~600$ on sales
03:47 < Tobsn> ;)
03:47 < TehShrike|Work> No regrets
03:48 < TehShrike|Work> I'm in Rock Band! :-)
03:48 < Tobsn> yeah, still cool
03:48 < brianc> Tobsn: but really royalties do pay huge amounts sometimes
03:48 < Tobsn> sometimes
03:48 < Tobsn> yes
03:48 < Tobsn> like if you are the beatles
03:48 < Tobsn> ;)
03:48 < TehShrike|Work> I'm the guy on the right 8-| http://youtu.be/lG5ak6yH6So
03:49 < Tobsn> you guys need new cloth hehe
03:49 < TehShrike|Work> brianc: what instrument do you play in these songs?
03:50 < brianc> TehShrike|Work: most of them. I did vocals + guitar + bass + drums (sequenced). Piano was done by my music collaborator partner dude
03:50 < TehShrike|Work> Not gonna lie, that's pretty hot
03:50 < TehShrike|Work> Are you on Bandcamp?
03:50 < TehShrike|Work> I get music from two places: Bandcamp and what.cd
03:51 < brianc> TehShrike|Work: haha thanks
03:51 < brianc> TehShrike|Work: I am looking right now for this one song I did
03:51 < brianc> TehShrike|Work: based on how I feel about open source software...give me a sec
03:52 < TehShrike|Work> Did you write the songs?
03:52 < brianc> TehShrike|Work: I did everything in this song http://private.deadblackhearts.com/audio/next/greeny.mp3 It's kinda how I feel about FOSS
03:52 < ChrisPartridge> brianc: I actually dig 'Postcard from somewhere cold'
03:53 < matbee> hmm
03:53 < brianc> ChrisPartridge: muchas gracias. :)
03:53 < TehShrike|Work> So brianc, what do I do to get FLACs of your album?
03:53 < TehShrike|Work> And when do you appear on Bandcamp, so I can start linking you to my friends?
03:54 < brianc> TehShrike|Work: good question - let me find the zip (it's mp3, not flac)
03:55 < TehShrike|Work> To get new music I either: download your albums from what.cd, download your albums from bandcamp and pay you, get physical album, rip it, upload to what.cd (if I really like you)
03:55 < TehShrike|Work> To tell people about your music, I either: link them to Bandcamp (chance you gain money/fans!) link them to YouTube (chance they remember your name)
03:56 < TehShrike|Work> brianc: v0 I hope?
03:56 < brianc> TehShrike|Work: you can have it for free, but it is on sound-coud deadblackhearts.com/the-southern-front.zip
03:56 < brianc> whoops taht linke is broken
03:56 < brianc> http://soundcloud.com/dead-black-hearts/sets/the-southern-front
03:56 < brianc> this is way off-topic
03:57 < TehShrike|Work> ops plz
03:57 < TehShrike|Work> dawwww.
03:57  * TehShrike|Work was gonna change the topic for a minute :-P
03:57 < brianc> hah
03:57 < TehShrike|Work> How do you download albums on soundcloud?
03:58 < brianc> http://www.deadblackhearts.com/assets/the-southern-front.zip
03:58 < brianc> there we go
03:58 < TehShrike|Work> Sweet!
03:58 < brianc> free music = good
03:59 < brianc> the older EP is available for d/l from soundcloud
03:59 < brianc> our new stuff isn't done yet
03:59 < brianc> cause I program sometimes. always. and don't do music much anymore. hardly ever.
03:59 < TehShrike|Work> lol
03:59 < brianc> heh
03:59 < TehShrike|Work> What album is Greeny on?
03:59 < brianc> not released
03:59 < brianc> that is just my own stuff
03:59 < brianc> this is a new one
03:59 < brianc> not band sanctioned
03:59 < brianc> http://private.deadblackhearts.com/audio/ep3/A%20Million%20to%20One.mp3
04:00 < TehShrike|Work> Need a drummer for live shows? :-D
04:00 < brianc> Our drummer is a dev manager @ getsatisfaction.com
04:00 < brianc> haha
04:00 < brianc> band-o-nerds
04:00 < TehShrike|Work> Hah, nice!
04:00 < brianc> TehShrike|Work: do you live in Austin TX?
04:01 < TehShrike|Work> Nope, I'm in the middle of the country
04:02 < mscdex> cool, fuse binding for node 0.8!
04:05 < TehShrike|Work> What's fuse, and why would I want to bind to it? 8-|
04:05 < dr0id> anyone here really popular/famous ?
04:05 < TehShrike|Work> lol
04:05 < TehShrike|Work> for real?
04:06 < TehShrike|Work> You mean, like, programmer famous?
04:06 < dr0id> yeah, like on the internet, twitter, etc. for his works like open source contributions, bloggin or something
04:06 < TehShrike|Work> Or musician famous?
04:06 < brianc> dr0id: zedas is no slouch 
04:06 < TehShrike|Work> Sure, substack, isaacs, and tj all hang out here
04:06 < TehShrike|Work> Are they the kind of famous you're thinking of?
04:07 < dr0id> ye sure
04:07 < TehShrike|Work> brianc: do you see pms?
04:07 < dr0id> although I was looking for those who are more into frontend stuff, html/css/js
04:07 < dr0id> brianc: and that means ?
04:07 < brianc> TehShrike|Work: I don't think so, I'm on the web client - gchat me @ brian.m.carlson@gmail.com
04:08 < TehShrike|Work> dr0id: well now I'm curious, can you link me to some good front-end people to follow? My blogroll is probably a bit one-sided, but I'm really interested in the front-end
04:08 < mscdex> TehShrike|Work: so you can make your own file systems in node
04:09 < TehShrike|Work> 8-|
04:09 < TehShrike|Work> I... don't even know what I'll do with that
04:09 < TehShrike|Work> But I now feel obligated to do something with it
04:09 < TehShrike|Work> "I wrote a file system in JavaScript!"
04:09 < dr0id> PM me
04:09 < mscdex> https://github.com/bcle/fuse4js
04:10 < brianc> fuse is real software, not toy software
04:11 < Tobsn> dr0id, watcha planing?
04:11 < Tobsn> ;)
04:11 < dr0id> made something cool, need exposure
04:11 < Tobsn> just send it to techcrunch
04:11 < Tobsn> and mashable etc.
04:11 < Tobsn> oh
04:11 < Tobsn> and betali.st
04:11 < dr0id> I thought thye only post about YC funded non-sensical hypes
04:11 < Tobsn> i always want to know that
04:11 < Tobsn> send it to them
04:11 < Tobsn> see if they post
04:12 < Tobsn> i actually distanced myself from them
04:12 < brianc> the unfortunate truth is making something cool is not enough for success
04:12 < Tobsn> had neough about disrupt etc.
04:12 < Tobsn> btw. seriously, send it to betali.st
04:12 < Tobsn> a shit ton of people have that in their news feeds
04:12 < Tobsn> i get it as email every day over ifttt
04:13 < dr0id> Tobsn: thanks, will do :)
04:13 < dr0id> brianc: tell me more
04:14 < Tobsn> well let me know if you need someone that breaks it
04:14 < Tobsn> ;)
04:14 < Tobsn> just fb me
04:14 < dr0id> Tobsn: PM ?
04:14 < brianc> dr0id: about?
04:14 < dr0id> something cool is not nuff for success
04:15 < brianc> dr0id: it's the entire reason the marketing profession exists as a serious and actual business need
04:15 < brianc> dr0id: you can have the most delicious cheese on earth, that doesn't mean it's the most popular
04:15 < dr0id> agreed
04:17 < brianc> dr0id: share what you've made with everyone you know, get to know as many people as you can genuinely enjoy knowing, and either pay a marketer or hope for the best
04:17 < dr0id> where do I find a marketer?
04:17 < dragon> Is someone talking about node not being #1 on the leaderboard again?
04:18 < dr0id> yes
04:18 < garthk> If I pipe stream A into two streams B and C, and B calls pause(), and A sends two more data events because it's allowed to, and then C calls pause(), and then B calls resume(), what should A do? How the hell does A even know who paused it and why? Should A count the number of pauses? 
04:20 < brianc> garthk: A stream must respond to the pause event by only writing if B.write returns true
04:20 < brianc> oh wait...you've piped A to B&C. I'm not sure there. :)
04:21 < cainus> since pause() is called on the readable, I doubt there's much to manage
04:21 < brianc> garthk: though I think what happens is A will try to write to B and C. It will try to write and if B or C's write method returns false (meaning it wasn't drained out into the stream from the in memory buffer) then A will auto-pause itself and subscribe to the 'drain' event on the write-stream
04:22 < cainus> I guess it gets tricky when both streams want to pause and then only one drains
04:23 < cainus> you can't resume yet in that scenario
04:23 < brianc> I would guess there is a module by this
04:23 < brianc> i mean a module *for* this
04:23 < brianc> I go to sleep now
04:28 < garthk> cainus: hmm; I forgot (re brianc's comment) that streams auto-pause. That makes it easier to keep track of who it needs to see a drain from…
04:28 < cainus> they autopause if you pipe
04:29 < cainus> can you pipe to two writeables at once though?
04:30 < cainus> I have no idea what happens if one calls pause()
04:30 < garthk> I'm looking to refactor a lot of worker classes as streams. They're all pretty simple: they take data in, and occasionally spit data out. Is there some kind of StreamedWorker base class in a module somewhere that'll take care of all the back-pressure detail if you override work(inputdata) and call queueoutput(output data) as necessary? 
04:30 < cainus> I would imagine both 'pipes' pause
04:30 < garthk> Sure, you can pipe to two writables… as long as you do it all in one tick. It's in substack's document somewhere.
04:31 < cainus> what happens if a readable calls pause() though?  that's what happens when a write returns false
04:32 < cainus> you could probably just override stream for that.  you just make it return false on a write when it can't handle the data
04:32 < garthk> Oh, I'm getting confused, then. Which is easy, given these workers are readers AND writers.
04:34 < cainus> ahh... yeah you've got handle the other end of the story too then
04:35 < DanC> I'm getting back into node.js after a while, and I think my npm installation is messed up. How do I re-install it?
04:35 < DanC> I just did a `git fetch; ./configure; make install` of node.js itself.
04:36 < garthk> Well, the way the back-pressure works in a chain is that the final writable Z returns false on write(), which should cause its writer Y to auto-pause… but there's no on('paused') event for its writer X to catch, so either a) Y has to call X.pause(), in which case the API doesn't give a way for X to deal with the two-pipes situation, or b) Y has to wait for X to write and then return false, in which case either Y has to buffer for
04:36 < garthk> or Y has to emit its data despite being paused.
04:37 < DanC> aha... http://howtonode.org/introduction-to-npm
04:38 < DanC> I wonder why I couldn't find the npmjs.org/install.sh reference from http://nodejs.org/ nor https://npmjs.org/
04:38 < cainus> DanC: I think it's in the latest node and doesn't need to be installed separately
04:38 < cainus> don't quote me on that
04:39 < DanC> it doesn't seem to be
04:40 < mscdex> node bundles npm since 0.6.x
04:44 < billycravens> keep in mind that homebrew by default doesn't include npm - that burned me a bit
04:49 < mscdex> screw homebrew then
04:50 < mscdex> install from source :-)
04:51 < billycravens> i usually just grab "official" install, but was a bit surprised by that, as most homebrew packages are essentially equal
04:51 < billycravens> still, good to remember when troubleshooting
04:52 < DanC> Error: The "sys" module is now called "util".
04:52 < billycravens> change calls to util. to sys. :-)
04:52 < billycravens> some older examples still reference util
04:52 < billycravens> or, the other way around, sorry
04:53 < wookiehangover> nvm is also pretty good
04:53 < DanC> I'm trying to run https://github.com/persvr/persevere-example-wiki ; am I going to have to find the then-current node.js?
04:54 < jocafa> i'm about to punch firefox in the gut.
04:54 < billycravens> latest commit is 9 months ago; a bit old node-wise
04:55 < billycravens> i'd recommend updating persevere to work with node 0.8.x rather than trying to match versions with that older project
04:55 < mscdex> ^
04:55 < billycravens> then submit pull request and be open-source-awesome :-)
04:56 < DanC> I guess so. This is a bit more pain than I had hoped. I was hoping the example app might work.
04:57 < DanC> 8-character indent. is that the norm?
04:57 < mscdex> i think node uses 2 spaces
04:57 < mscdex> that's what i use too
04:58 < billycravens> node and ruby: 2; java and others: 4 or 5
04:58 < billycravens> never seen 8
04:59 < billycravens> on a 120 character display, you'd be killing yourself since a simple file>function>if block uses over 25% of your real estate
04:59 < DanC> hmm. they're not spaces. they're tabs
05:00 < mscdex> eek
05:05 < DanC> bed time for me, I think. One of these days maybe I'll find a quantum of time to get started with node.js. This is probably the 3rd or 4th time I've tried and fallen short.
05:06 < mscdex> DanC: some people maintain their node projects better than others
05:06 < DanC> whenever I find some interesting node.js-based thingy and try it out, I spin around trying to figure out which end is up and what version works with what, and pretty soon, I run out of hacking time.
05:06 < DanC> what was the other one...
05:07 < mscdex> what are you looking to do anyway?
05:07 < DanC> oh yeah... R-Node
05:07 < DanC> but I found RStudio server, which is very shiny. (C++ based; nothing to do with node.js; but provides what I was looking for: a web front-end to R)
05:08 < DanC> tonight's exercise was exploring the possibility of porting the python back-end of https://bitbucket.org/DanC/finquick/ to node.js
05:09 < DanC> I was particularly interested in the object capability aspects of pintura
05:09 < DanC> finquick uses sqlalchemy pretty extensively (mostly so the same code can be used for sqlite for testing and for mysql at runtime)
05:10 < DanC> one or two of the SQL queries is about a screenful.
05:11 < DanC> i.e. the generated SQL queries
05:11 < DanC> I could just maintain them as SQL, perhaps
05:11 < DanC> is the a SQL DB API for node.js that abstracts over sqlite and mysql?
05:11  * DanC looks around...
05:12 < mscdex> i think there's at least a couple, but i've never used them
05:12  * DanC finds https://github.com/nearinfinity/node-persist
05:24 < nicks> Hey there, could someone help explaining why I keep getting the following Error: addListener only takes instances of Function
05:34 < ChrisPartridge> nicks: pretty self explanatory function, what code is causing it?
05:34 < ChrisPartridge> s/function/error
05:34 < nicks> ChrisPartridge: worked it out, I was being daft
05:37 < ChrisPartridge> nicks: cool!
06:06 < rookie84> hi everyone.
06:06 < rookie84> is it possible to have both php and node.js working on the same server?
06:06 < rookie84> I mean for example php for the backend/cms and node.js for the frontend?
06:06 < rookie84> since php has its own server and node.js runs on its own?
06:07 < rookie84> i know its possible, just wondering how..
06:10 < tonymilne> rookie84 node installs as a binary, you expose your own server on a port, and make sure it stays up / restarts as necessary.
06:11 < rookie84> tonymilne, been 1 day since learning Node.JS, I am a php dev.
06:11 < rookie84> I got you, node app runs on its own server, with a dedicated port.
06:11 < chilts> php doesn't have it's own server, it needs Apache or something to run it
06:11 < rookie84> the question is how will it work with PHP?
06:12 < chilts> it will usually be on port 80
06:12 < rookie84> chilts, by its own server I meant that :)
06:12 < chilts> so you'd have to run the Node.js server on a different port
06:12 < chilts> righto
06:12 < chilts> but yes, your (hardware) server can listen on many different ports
06:12 < chilts> so it's just up to you to configure which ones
06:12 < chilts> and how they listen to the outside world
06:12 < rookie84> chilts, does that means php can't work with node?
06:12 < chilts> it can
06:12 < rookie84> since apache/php will run on port 80 and node.js suppose on 8888 ?
06:12 < chilts> if, e.g. you have PHP listening on port 80
06:12 < tonymilne> rookie84 you can proxy certain requests to certain app servers.
06:13 < chilts> you could run Node.js on port 8080
06:13 < chilts> yeah, you gt it
06:13 < dz0ny> rookie84 node is mostly used as backend, you can have many backends on same server for exampe rest api could be written with node, static files server with ngonx or apache
06:13 < dz0ny> nginx
06:13 < rookie84> I have a site, named abc.com for example, it has a CMS here: abc.com/cms
06:13 < rookie84> I want that to be from PHP
06:14 < rookie84> and I want the frontend: abc.com to be node
06:14 < tonymilne> request comes in on port 80 -> route it to php or node accordingly (depending on the request headers)
06:14 < chilts> I'd look into Nginx as dz0ny says, and proxy through to the right server depending on the path
06:14 < rookie84> I have apache.
06:14 < rookie84> on port 80
06:15 < chilts> ok, make apache serve the requests on /cms and proxy the rest through to node
06:15 < chilts> (listening on port 8080)
06:15 < chilts> mod_proxy ... go look at the docs for that, should help
06:15 < tonymilne> it's kind of a weird use of node.
06:15 < tonymilne> FYI.
06:15 < chilts> yeah
06:15 < chilts> but I guess that's his setup :)
06:15 < dz0ny> you can use apache too with reverseproxy
06:15 < tonymilne> "front end" are you just displaying templates / stylus / jade or something?
06:15 < rookie84> tonymilne, I would agree, the CMS I've done is quite large.
06:15 < rookie84> still done in about a month, in a php framework.
06:16 < rookie84> I guess it will take few months to do the same in Node :)
06:16 < mansoor-s> rookie84, you are writing a CMS?
06:16 < tonymilne> but how does having a tiny bit in node, when you have 1 day of Node experience help you?
06:16 < rookie84> tonymilne, sorry the frontend I meant the frontend functions etc.
06:16 < lvx3> it helps him learn node? :)
06:16 < tonymilne> yeah, but there are better ways of doing that AND of solving his tech problem.
06:17 < lvx3> *shrug*
06:17 < rookie84> tonymilne, I also want to know the possibilities, and I just thought that node.js will do it in a few months, the framework I used has great libraries for doing the CMS
06:17 < lvx3> whatever keeps you motiviated imo
06:17 < tonymilne> lvx3 lol ;)
06:17 < rookie84> the CMS I did has mostly CRUD stuff though.
06:18 < rookie84> and are generated through the framework generators, does Node has something similar? (generators)
06:18 < rookie84> (crud generators, to be specific)
06:19 < dz0ny> rookie buch for start look at expressjs, metador etc
06:19 < rookie84> express.js is a frontend js framework
06:19 < rookie84> yeh I want to have a look at ti.
06:20 < rookie84> oh sorry that was ember.js :)
06:20 < rookie84> thanks dz0ny
06:21 < rookie84> any of you did a CMS or something similar in Node.js
06:21 < rookie84> even a frontend with push capabilities?
06:23 < dz0ny> check toolbox.no.de you will find bunc stuff there
06:23 < dz0ny> bunch*
06:24 < rookie84> ok
06:25 < timeturner> is it generally considered better to generate a separate key per ssh client or is it ok to have shared keys?
06:41 < ChrisPartridge> timeturner: nothing wrong with a shared key, use your best judgement I'd say :)
06:47 < mansoor-s> timeturner, your public key can be shared with however and whoever
07:17 < timeturner> mansoor-s: I meant sharing private keys
07:18 < timeturner> instead of generating another private key
07:18 < mansoor-s> timeturner, you should never share your private key
07:18 < mansoor-s> you generate one private key and one public key
07:18 < timeturner> per client
07:18 < timeturner> yeah that makes sense
07:18 < mansoor-s> no
07:19 < mansoor-s> there is no way to get the private key from the public key
07:19 < mansoor-s> so you can use the same public key for as many clients as you want
07:19 < mansoor-s> you can post it on yoru facebook
07:19 < mansoor-s> home page of google
07:19 < mansoor-s> you get the idea :)
07:19 < timeturner> but the public key is meant to be on the remote host only right?
07:19 < mansoor-s> yes
07:20 < timeturner> so that sshd can confirm the private key's generated signature from the local side
07:20 < timeturner> so what if I were to just copy that private key from my local desktop pc for example and put it on my ipad
07:20 < timeturner> that isn't safe, correct?
07:20 < mansoor-s> i wouldnt
07:20 < mansoor-s> but you could i suppose
07:20 < timeturner> so you're saying that I should have one private key per device
07:21 < timeturner> well I agree with you, just wanted to be sure though ;)
07:21 < mansoor-s> cool :D
07:21 < timeturner> thanks!
07:21 < mansoor-s> yw
07:22 < gavri> I'd like to move an existing web-based node.js application to the desktop and am considering using appjs or node-webkit. the current app runs in a browser and hits a webserver. these will have to be switched to in-process method calls, I guess. which of these two frameworks would be the better choice?
07:23 < garthk> gavri: what's wrong with shipping a wrapped-up node app that runs as a micro-server and opens the user's default browser?
07:25 < guybrush> garthk: imo the only reason is better user-experience
07:25 < guybrush> though i didnt even play with appjs/node-webkit yet
07:30 < todd__> console.log async or sync?
07:31 < Glenjamin> async
07:31 < Glenjamin> but console.warn is sync
07:31 < Glenjamin> or, more accurately - stdout is async by default, stderr is sync
07:32 < todd__> yeah
07:32 < todd__> thanks
07:32 < gavri> garthk, guybrush, it requires to read a lot of offline data and sync some of the data to an online server
07:32 < todd__> seems both sync
07:32 < todd__> >node -e 'console.log("hello1\nhello2\n"); console.warn("hello3")' hello1 hello2  hello3 
07:33 < mscdex> console.log is sync
07:33 < mscdex> it's only async when there's piping going on
07:33 < mscdex> that changed awhile ago
07:33 < Glenjamin> oh, my bad
07:33 < Glenjamin> need to watch release notes more closely :(
07:34 < Glenjamin> doesn't console.log buffer when you do loads of writes?
07:34 < todd__> so usually how we do log in real production enviroment?
07:35 < Glenjamin> i use a writable stream via fs
07:35 < Glenjamin> but you're probably better off picking an existing logging library
07:35 < todd__> good idea.
07:36 < todd__> what's the convention of adding date string as prefix of each log line?
07:36 < Glenjamin> depends on your needs
07:36 < [AD]Turbo> hi there
07:37 < Glenjamin> our ops/service guys prefer local time YYYY-MM-DD HH:MM:SS+ZZZZ
07:43 < todd__> Not able to compile node js under Solaris.
07:43 < todd__> :(
07:43 < todd__> any one has good experience on this?
07:44 < todd__> i stuck first on python version, then stuck on shell syntax error (this one still blocking me)
07:45 < todd__> the Solaris binary build on nodejs.org also doesn't work
07:46 < guor> what's the compile error?
07:48 < Glenjamin> might be worth paste-binning the full output
08:21 < Epelii> On a domain error event. How I can print the stack trace of the error?
08:47 < chakrit> todd__: You might have more luck w/ the #nodejitsu guys. they're using some sort of Solaris IIRC
08:47 < jesusabdullah> smartos as it happens
08:55 < gavri> ;
09:02 < mansoor-s> So, I dont get this domain thing (http://nodejs.org/api/domain.html).. anyone know if there is another explaination out there?
09:14 < strk> can I use "here" documents in node.js ?
09:14 < strk> for long strings spanning multiple lines...
09:19 < dch> strk: you can cheat, var content = <xml>…. stuf goes here …</xml>
09:19 < dch> and then console.log(content.toString()) for example
09:19  * dch tries, I could be wrong, that might not work in node
09:23 < dch> strk: shame, must be a spidermonkey thing sorry
09:23 < guor> there is no heredoc in javascript
09:24 < gavri> I had asked this earlier, sorry about bringing it up again. I had to leave and did not follow up on it.
09:24 < gavri> I'd like to move an existing web-based node.js application to the desktop and am considering using appjs or node-webkit. the current app runs in a browser and hits a webserver. these will have to be switched to in-process method calls, I guess. which of these two frameworks would be the better choice?
09:25 < gavri> the better choice for moving from an existing web application, I mean
09:28 < RLa> why not run the server inside appjs
09:28 < RLa> would be less efficient but helps to keep code bases similar
09:28 < dch> strk: the closest I could get was var stuff = "pretty close\
09:28 < dch> but not close enough";
09:28 < RLa> hm, anyway, why move web app to desktop at all?
09:30 < gavri> RLa: it needs to have offline access
09:30 < RLa> what about html5 offline features?
09:31 < gavri> it's hundreds of MBs of data
09:31 < RLa> also, localstorage can be shimmed in
09:31 < gavri> also, we'd like to have the same codebase for ios and andorid
09:31 < gavri> and by same I mean, 80% shared code hopefully
09:31 < RLa> hundreds of MB is too much indeed
09:31 < RLa> limit for localstorage is 50MB?
09:31 < gavri> something like that, yeah
09:32 < RLa> and cookie-based shim, a 4kB? :/
09:32 < gavri> also, when the user connects back online, it will be syncing data from client to server
09:32 < RLa> would be nice if you could ask for more storage room
09:32 < RLa> using something special for syncing?
10:14 < Nuck> I'm still trying to pick where to shove my email wrapper
10:20 < gavri> ;
10:21 < gavri> RLa: we're thinking of using couchdb for the syncs. it has filtered replication
10:22 < RLa> hm, good idea
10:35 < gavri> RLa: so from moving from a web app to a desktop one, appjs? or node-webkit?
10:35 < RLa> no idea, haven't used them yet
10:36 < RLa> the only desktop app i maintain here is in c++ (and a little bit js)
11:02 < foobar_> Hi. Does any 1 know why sqlite3 module blocks completly other request from begin when using large query with .each method? I though that node.js should behave more smoothly. But it turned out to be handle only ONE request at time. 
11:02 < deoxxa> foobar_: sqlite does that
11:02 < foobar_> from begin executed
11:02 < deoxxa> foobar_: it blocks other sqlite calls, sure, but not other node things
11:03 < foobar_> deoxxa: but why? This should be async as far as I know
11:03 < foobar_> It is not possible to perform 2nd sqlite query from DIFFERENT file
11:03 < deoxxa> oh
11:03 < foobar_> until the 1st finishes.
11:03 < deoxxa> that's definitely strange
11:04 < foobar_> Or maybe I'm doing sth wrong but what should be te scope of the db object? Or maybe the express engine should not be used with sqlite?
11:20 < aandy> Hi, a bit offtopic, but have anyone used Clue (the ANSI C compiler)?
11:36 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:37 < rounce^2> join #express
11:37 < rounce^2> guh
11:40 < foobar_> Is there any non-blocking API for sqlite3 then ?
12:39 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:56 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:36 < iksik> hello, any jugglingdb (mongoos adapter) users around?
13:55 < kgriffs> Anybody know whether tls.Server is susceptible to CRIME (e.g., does it enable compression)?
13:56 < kgriffs> (and/or https.Server)
14:00 < superjoe> what's the canonical signal to send to a process to indicate that you would like the server to shut down gracefully?
14:00 < superjoe> SIGHUP?
14:01 < AAA_awright> superjoe: SIGTERM
14:01 < AAA_awright> WAIT
14:01 < AAA_awright> bah
14:01 < AAA_awright> Yeah, SIGTERM
14:02 < superjoe> cool.
14:02 < AAA_awright> superjoe: man 7 signal
14:02 < superjoe> thanks
14:05 < AAA_awright> SIGHUP means the process lost the controlling terminal/process, by default that means terminate the process, but you can choose to ignore it
14:06 < AAA_awright> I'm not sure how Node.js handles signals but generally it's not safe to execute I/O inside them
14:07 < AAA_awright> Looks like it is safe, actually
14:12 < superjoe> with node's cluster api, is there a way to reserve a port with the master? I'm imagining a master worker which opens the port, calls setuid, and then spawns workers
14:14 < timkuijsten> what's the best way to profile node on os x? https://github.com/bnoordhuishttps://github.com/bnoordhuis/ https://github.com/bnoordhuis/node-profiler?
14:14 < timkuijsten> (whoops)
14:22 < spionL> Is it possible to make a globally installed package (which has a binary) also require modules from a manually specified location? The only way I can think of is temporarily replacing "require"
14:24 < bradleymeck> spionL: use require(path.resolve(dir, pkgName)) … i dont recommend it though
14:25 < deoxxa> spionL: sounds like you might want `npm link'
14:25 < bradleymeck> spionL: see https://github.com/bmeck/broadway-pluggable/blob/master/lib/index.js#L14 for example
14:25 < bradleymeck> deoxxa: idk depends if he is using it for plugins or dev i guess
14:26 < deoxxa> yeah, not much to go on
14:26 < deoxxa> need more informationz
14:27 < spionL> well I'm writing a generic worker which can accept tasks, and those tasks might specify dependencies
14:28 < spionL> I'd like to specify where they can get their dependencies from
14:29 < spionL> the tasks are basically js code which may contain require('some_module') and the worker is a binary. i'd like to be able to do ./worker --listen port --node_modules path/to/node_modules
14:29 < C0deMaver1ck> generalissimo: you're node.js guy?
14:29 < kgriffs> FWIW, I found in node_crypto.cc where compression is explicitly disabled, since it "saves memory." That comment might be amended to also say "mitigates CRIME attack"
14:29 < generalissimo> C0deMaver1ck: yeah, mostly express
14:30 < C0deMaver1ck> generalissimo: thought you were a Java guy ;)
14:30 < generalissimo> thems fightin' words
14:30 < C0deMaver1ck> and kilt is really a skirt
14:30  * C0deMaver1ck ducks
14:32 < spionL> so its probably not npm link, and it probably involves some trickery by defining a local var require replacement then eval-ing the js :)
14:32 < garrettwilkin> is twitter bootstrap cool or lame?
14:33 < garrettwilkin> I've just discovered it, and it looks cool to me, but maybe thats because I'm lame ;)
14:34 < bradleymeck> spionL: https://github.com/substack/node-resolve ?
14:34 < spionL> bradleymeck, most excellent.
14:36 < spionL> bradleymeck, thanks a bunch :)
14:43 < sppericat> hello!
14:43 < khushildep> hello
14:49 < timkuijsten> i'm having trouble reading the log file when node is started with --prof_lazy and —log, nprof keeps complaining about "unknown command: check-maps-depth". it works without prof_lazy and —log, but this gives too much uninteresting function calls..
14:53 < timkuijsten> mm.. ic these warnings can be ignored and it does produce some nice output at the bottom..
14:59 < jkevinburton> im not sure if this is a node, express, or straight-up syntax issue, but I am doing try/catch and I am doing: throw "bad user"; and then it got caught, so I do a console.log(e) -> i get nothing.... or I do a console.log(e.message) ... and I get "err is not defined"
15:01 < bradleymeck> jkevinburton: sounds like err was not defined somewhre and used, e.stack and get the line number, console.log(e) will not show anything because error properties are non-enumerable
15:01 < phrearch> hi
15:02 < phrearch> how do i force npm to install a dependency locally?
15:02 < jkevinburton> i'll try that.
15:02 < phrearch> i tried npm install ws, but it seems to be trying to install outside my virtualenv dir
15:02 < phrearch> Error: EACCES, symlink '../ws/bin/wscat'
15:04 < bradleymeck> phrearch: if you are installing in a subdirectory of a module with a node_module directory above it will install to what it thinks is the current module, add a node_modules folder in your virtualenv dir
15:04 < phrearch> oh never mind. my bad again. somehow the .bin dir was chowned to root
15:04 < phrearch> bradleymeck: thanks!
15:05 < phrearch> no need to activate the environment ?
15:05 < zivester> anyone know how to make a pretty "upload size too large" page? to replace the ugly : "Error: Request Entity Too Large"
15:06 < phrearch> nice that works great :D
15:06 < phrearch> wonder if with ws, i can run express on the same port
15:19 < jkevinburton> bradleymeck: thanks! that worked, I had err undefined somewhere in another file without knowing. but now, instead of catching in the try/catch, the whole app crashed with the error.
15:20 < jkevinburton> any thoughts?
15:27 < diversario> jkevinburton, what's the error?
15:30 < wink_> is npmjs.org down for anyone else, or just me?
15:30 < chrisjaure> http://www.downforeveryoneorjustme.com/npmjs.org
15:30 < diversario> down for me
15:33 < phrearch> must have forgot something. im trying to add a static dir to this boilerplate code to setup ws with express
15:33 < phrearch> http://pastie.org/4720480
15:34 < phrearch> any idea why the public dir is not served this way?
15:40 < phrearch> aha, just needed to ditch the public/ in the url :D
15:40 < Nasga> how to get parent scope in a callback ?
15:45 < kanzure> is there an npm module for parsing javascript into an ast or something?
15:46 < kanzure> or, actually, maybe i want a minifier written in coffeescript.
15:46 < diversario> uglify can give you AST
15:47 < diversario> https://github.com/mishoo/UglifyJS
15:47 < deoxxa> as can esprima
15:47 < deoxxa> http://esprima.org/
15:47 < kanzure> diversario: neat, thank you
15:48 < diversario> ohcibi, nice
15:48 < kanzure> i want to write a beautifier that renames variables for me
15:48 < kanzure> for example, "a" should become "taco"
15:48 < deoxxa> why not "snail"?
15:48 < othiym42> Everything should become taco.
15:49 < kanzure> because "a" is meaningless to me and i have to use word boundaries in regular expressions when i'm prettying up some crap
15:49 < othiym42> Taco is beautiful.
15:49 < diversario> also burrito
15:49 < othiym42> Taco is all.
15:49 < deoxxa> or "gigantic_explosive_idiot_bell"
15:49 < kanzure> deoxxa: snailjs.org seems to be some jquery mobile thing
15:49 < deoxxa> lol what
15:49 < kanzure> oh i thought you were recommending a library :(
15:50 < kanzure> oh neat, esprima is by the phantomjs dude
15:50 < deoxxa> yeah
15:51 < kanzure> so, hm. maybe i should just make this modification for uglifyjs.
15:51 < deoxxa> there's esprima-codegen too for generating code from the AST
15:51 < kanzure> oh fantastic, that would make it easier for me
15:51 < yawnt> tacos and burritos
15:51 < kanzure> i mean, i understand that sometimes variables are renamed all over the place
15:51 < yawnt> this is getting me hungry
15:51 < kanzure> but i could add in a _lookup dictionary for mapping old names to the new rewritten names
15:52 < kanzure> damn so now i have to decide which one to start with
15:53 < tracker1> i could be ice_cream
15:53 < superjoe> is it possible to start doing IPC with an already running node.js process if you have the pid?
15:53 < navaru> I have a small issue with testing a watching lib, I set it to wath a dir, and in the same test I create, change and delete 5 files, the problem is that even with using process.nextTick(), the watcher takes longer (dunno why) to load
15:54 < foobar_> it's down. but was working few hours ago
15:54 < navaru> watching a dir *
15:54 < navaru> is there anyway to 'wait' a few process ticks?
15:55 < diversario> navaru, a counter?..
15:55 < diversario> for every nexttick call or something
15:55 < tracker1> superjoe, may be best to use an MQ for that...
15:56 < superjoe> tracker1, yeah that's what I want. a message queue with an already running process
15:56 < superjoe> what's the cleanest api for that?
15:57 < navaru> diversario: I was thinking maybe there are other ways, I even tried to spawn a child process on nextTick but is still faster
15:57 < diversario> can you have an event or something when you done waiting?
15:57 < tracker1> superjoe... http://www.rabbitmq.com/ ... node amqp ... http://docs.cloudfoundry.com/services/rabbitmq/nodejs-rabbitmq.html
15:59 < tracker1> superjoe, essentially, your listening process listens on a queue, and your submitting service sends on it... if you want return messages, you can open up a temp queue based on a uuid, for the child to receive (sending said id with the return messages.
15:59 < navaru> diversario: not really, the test is simple:  watch(dir), create/change/remove 5 files, and the watcher should emit events
15:59 < superjoe> tracker1, no, this is too much bloat. I simply want to use the native child_process ipc api with an existing process which I can safely assume is a node.js process
15:59 < tracker1> superjoe, oh.. sorry, didn't know it was child/parent for spawned processes...
16:00 < diversario> where do you need to wait, though?
16:00 < kanzure> does esmangle rename variables?
16:00 < superjoe> tracker1, it's not a child. it's a bit more complicated than that
16:00 < tracker1> the child_process ipc is for fork'd processes from a given parent iirc
16:01 < superjoe> tracker1, but I can assume that it was started as a child process in a different instance of this process
16:01 < navaru> diversario: before i create/remove files
16:02 < tracker1> superjoe, not sure that will work out of the box... you could do a /tmp/pid.input and have your parent reading data from that and children writing to it...
16:02 < superjoe> tracker1, ok thanks for the input
16:03 < diversario> ohcibi, ok. setTimeout, then? It would be much better if instead of having to wait an arbitrary amount of ticks/ms you would have an event or something that triggers an action.
16:03 < tracker1> superjoe, np.. sorry I don't have a better solution... not sure if there's named-pipes support for nodejs in windows, or what your target platform is...
16:03 < superjoe> tracker1, target is unix
16:05 < tracker1> superjoe, https://github.com/hookio/hook.io
16:06 < superjoe> tracker1, this looks cool but I'm looking for something extremely lightweight
16:07 < tracker1> superjoe, then a listen file is probably your best bet... that, or a simple socket service... where you write the bound port to a pid.port file for other procs to connect to.
16:07 < superjoe> thanks
16:07 < navaru> diversario: thanks for your time, I'll try a few hack, see which holds better
16:31 < kanzure> so i installed esprima and esmangle with npm install -g, then i cloned esmangle.git and ran "node bin/esmangle.js"
16:31 < kanzure> but i get "Error: Cannot find module 'esprima'"
16:32 < plato> does it work if you install locally?
16:33 < ic3> hello guys! Is there any way to unserialize php session keept as php serialise array
16:33 < ic3> i need to unserialize them in node
16:34 < kanzure> plato: oops, i assumed $NODE_PATH was set for me. it was not.
16:35 < plato> ic3: cursory googling yields http://phpjs.org/functions/unserialize:571
16:35 < ic3> yeye but is not working
16:35 < ic3> for bulgarian chars ... i get some strange things
16:36 < plato> did you install the dependency http://phpjs.org/functions/utf8_decode:576
16:37 < ic3> hm
16:37 < ic3> thanks
16:40 < plato> np gl
16:53 < kanzure> so um, i'm looking at how uglifyjs does its thing
16:53 < kanzure> https://github.com/mishoo/UglifyJS/blob/master/lib/process.js#L364
16:54 < kanzure> // I got "do" once. :-/ if (!is_identifier(m)) .. continue generating a different token, possibly a valid one this time
16:54 < kanzure> so um, shouldn't that be "if (is_identifier(m))" and not !is_identifier() ??
16:55 < kanzure> oh oops. i am confusing that with is_keyword.
17:06 < pspeter3> I'm writing a new POP3 client. Is it better to do event callback or function callbacks, meaning. var pop3 = new POP3(); pop3.on("connect", ...); vs pop3.connect(function(err, client) {...});
17:12 < tracker1> I have a script I want to run in a timed event (like every 2 minutes), it shouldn't ever run for longer than that, but I want to create a mutex as a just in case... I can't seem to find anything on that.
17:13 < superjoe_> I have a challenge: come up with a way for javascript code running on the browser to know within 0.1 ms accuracy what time the server thinks it is
17:13 < raj> can someone walk me through this? https://github.com/sockjs/sockjs-client/blob/master/lib/sockjs.js
17:13 < raj> if I do `conn = new SockJS('http://' + window.location.host + '/__sockjs__'`
17:13 < raj> and then conn.onopen = on_open()
17:14 < raj> when does conn.onopen get invoked?
17:15 < busyrich> what up nodejs channel?
17:15 < EyePulp> our connection count is up.
17:16 < busyrich> in the channel or in reference to something else?
17:18 < euoia> superjoe: I would be surprised if it is possible, please let me know if you find a solution
17:18 < superjoe> euoia, note that the server and client are allowed to communicate with each other
17:19 < euoia> are they allowed to communicate with a third party server that has the correct time?
17:19 < superjoe> euoia, no
17:20 < euoia> superjoe: hmm
17:21 < superjoe> best idea I can think of so far is they send a bunch of messages to each other saying what time they think it is, measure round-trip lag time, and use the median value as an offset for the time they sent
17:21 < superjoe> not sure how accurate it is though
17:21 < euoia> superjoe: yeah, you would expect it to converge to the correct time
17:22 < simong> superjoe: Funny you ask, Jeff Atwood just blogged about this: www.codinghorror.com/blog/2007/01/keeping-time-on-the-pc.html
17:22 < superjoe> just blogged about it... in 2007
17:23 < busyrich> lol
17:23 < euoia> superjoe: I'm just thinking about the situation where the send and receive delays are different - whether that'd be a problem
17:23 < spion> I just realized that dnode can serialize cyclic objects. I wonder if there is a standalone implementation of this serializer
17:23 < tracker1> superjoe, I don't think even ntp is that accurate
17:24 < simong> err my bad, tweeted about it
17:24 < superjoe> euoia, yeah I can't figure out how to solve that problem
17:27 < superjoe> euoia, maybe you're onto something with a 3-party system 
17:28 < euoia> superjoe: there's a javascript ntp implementation here http://jehiah.cz/a/ntp-for-javascript
17:28 < euoia> superjoe: and more here http://stackoverflow.com/questions/10900907/good-precision-for-sync-time-with-ntp-over-javascript
17:28 < jdefelice> anyone successfully installed the latest node.msi x64 on windows hyperv server 2012?  installer looks like it will finish, then rolls back everything and tells me that it could not install..
17:28 < plato> running as admin?
17:28 < jdefelice> yes, i'
17:29 < jdefelice> m logged in as administrator
17:29  * plato is out of ideas
17:30 < KiNgMaR> jdefelice, check eventvwr.msc for an error code
17:30 < jdefelice> ugh .. nevermind i see the problem.  the installer is looking for an interface to create a shortcut - that interface does not exist in this version of windows
17:30 < jdefelice> i'm looking at the msi debug logs
17:30 < busyrich> f'in shortcuts
17:31 < yati> Hi. I am trying to install the sqlite3 package using npm, and there's an error. This used to work fine previously. I've pasted the npm-debug.log file - the error messages appear towards the end. http://dpaste.org/sPhSx/
17:31 < yati> Any insight?
17:31 < jdefelice> 'failed to create an instance of IUniformResourceLocatorW'   followed by 'failed to create Internet shortcut'
17:32 < busyrich> yati, did you check the github for any current issues around your problem?
17:32 < jdefelice> so .. i wonder how anyone installs node.js on a windows server core installation if the installer requires this interface?
17:33 < yati> busyrich: no, I have not. I'll have a look 
17:33 < busyrich> yati : yeah, sometimes there are other people have the same issue, and even useful fixes :)
17:34 < busyrich> yati : maybe it failed to compile?
17:35 < yati> hmm. It is not clear if the compilation failed or the installation (whatever that means in this context) :P This used to work so painlessly before :P
17:35 < busyrich> yati : things get updated
17:36 < busyrich> yati : did you try a previous version?
17:36 < busyrich> yati: as in npm install whatever@0.0.0
17:37 < yati> oh I was unaware of that syntax - I'll try that. But ideally I'd want the latest dist - so I'm going through the issues - though from the titles, none seems to match my issue :) Maybe I'll create one.
17:38 < atomizer_> who is derping, setInterval or hrtime? http://pastebin.com/qzVBX5pn
17:38 < busyrich> yati : yeah, I would try a slighty older version first
17:38 < RLa> which pure-html templates you guys use?
17:38 < busyrich> define "pure html"
17:39 < pspeter3> RLa: look at nodejitsu's plates
17:39 < RLa> thanks
17:39 < RLa> busyrich, no fancy characters, not logic and control flow in templates
17:40 < busyrich> just strait up data includes
17:40 < jocafa> skrait up data inna hizzey
17:40 < busyrich> can't say I have too much experience with JUST data includes
17:44 < yati> busyrich: So I have node 0.8.x and the github page for sqlite3 says it should be >= sqlite3@2.1.0 for node 0.[6|8].x - tried 2.1.0 and the same thing :|
17:44 < ic3> hello all! can anyone tell me how can i join a socket in multiple rooms? i tryed like: http://pastebin.com/MLfpmXFS
17:45 < ic3> and i get: TypeError: Object #<Manager> has no method 'join'
17:45 < busyrich> yati : thats lame, but it does say the newest should work...
17:45 < ic3> i'm a complete nub 
17:45 < busyrich> busyrich : what OS you on?
17:45 < busyrich> yati : what OS you on?
17:46 < yati> busyrich: Linux
17:46 < yati> 32 bit/Fedora
17:46 < atomizer_> changed interval to 10s... wat. http://pastebin.com/Rx2t2RKG
17:48 < busyrich> yati : found this, but I am not too sure that is the issue, so take it as you will http://stackoverflow.com/questions/10439862/npm-install-sqlite3-error
17:48 < busyrich> yati : still looking
17:50 < busyrich> yati : you installed node-gyp right?
17:50 < busyrich> yati : silly question I know
17:50 < plato> ic3: from socket.io doc page, To broadcast, simply add a `broadcast` flag to `emit` and `send` method calls. Broadcasting means sending a message to everyone else except for the socket that starts it.
17:51 < plato> ic3: also perhaps you have to instantiate multiple sockets? not sure
17:51 < ic3> well i want to group users based on categories
17:51 < ic3> so i want to join same user in multiple rooms
17:51 < ic3> and after that need to broadcast / room
17:51 < ic3> is possible?
17:52 < AnonymousFunctio> ic3: Of course it's possible.  Write code to figure out what users you want to send to, and send the message to them.
17:52 < ic3> :)
17:52 < ic3> i wrote some code, is not working
17:52 < AnonymousFunctio> ic3: There is no magic function that knows what users you want to send stuff to.
17:52 < ic3> is hard when u are nab
17:52 < TooTallNate> yati: can you show the node-gyp output? the nom-debug.log doesn't contain that
17:53 < AnonymousFunctio> ic3: It doesn't have to be.  Can you post your code somewhere?  and/or explain exactly what you are doing?
17:53 < ic3> http://pastebin.com/MLfpmXFS
17:53 < ic3> is no secret, i get some categories from redis session and try to join the socket in those rooms
17:54 < ic3> i have 0 experience with socket.io :|
17:54 < yati> TooTallNate: I'm sorry, but is the node-gyp output the one that is displayed on the screen as the install progresses?
17:54 < yati> busyrich: I do have it :)
17:54 < TooTallNate> yati: ya, the stuff prefixed with "gyp" usually
17:55 < ic3> <AnonymousFunctio> i get : TypeError: Object #<Manager> has no method 'join'
17:55 < ic3> maybe becaus ei need to call it into connection event
17:56 < yati> TooTallNate: Here's the dump (sorry I posted the entire o/p - thought someone might need it) http://dpaste.org/edY6c/
17:56 < TooTallNate> yati: so what version of node?
17:57 < yati> 0.8.7
17:57 < plato> ic3: Joining a named room is achieved by calling the join() function on a connected socket object
17:58 < plato> likely, the socket is not connected in your authorization callback
17:58 < plato> so set up an async.series or callback chain and move your logic into socket.on('connection')
17:58 < plato> i dunno though... jsut a guess?
17:58 < ic3> hm
17:59 < atomizer_> your variable naming is what is killin ye
17:59 < atomizer_> your "socket" is not the client socket you'll be writing to
17:59 < ic3> we
17:59 < ic3> client is
17:59 < ic3> sorry
18:00 < ic3> ok, is working now
18:00 < ic3> thanks a lot guys
18:00 < ic3> !
18:00 < EyePulp> so is there a standard way to do a file copy under 0.8.x ?  synchronous, if it exists...?
18:03 < loucapo> hey y'all, i'm a node.js newbie and am having some trouble getting it to start
18:04 < loucapo> Error: Cannot find module 'connect'     at Function.Module._resolveFilename (module.js:338:15)
18:05 < loucapo> i tried to run npm install express in the project directory and got this warning
18:05 < loucapo> npm WARN package.json connect@1.8.7 No README.md file found! npm WARN engine connect@1.8.7: wanted: {"node":">= 0.4.1 < 0.7.0"} (current: {"node":"v0.8.9","npm":"1.1.61"})
18:05 < loucapo> any ideas?
18:06 < plato> EyePulp: http://nodejs.org/api/fs.html
18:07 < EyePulp> already looking there plato - doesn't seem to be a straight forward method, unless it's link, but it's not clear if that creates a copy or not.
18:07 < plato> loucapo: if you do npm ls, does that show connect under express?
18:09 < plato> EyePulp: oh, right
18:10 < plato> http://stackoverflow.com/questions/4980243/how-to-copy-a-file says... oldFile.pipe(newFile);
18:10 < plato> EyePulp: ^^ create and open the new file, open the old file, try that
18:12 < plato> EyePulp: http://nodejs.org/api/stream.html#stream_stream_pipe_destination_options
18:13 < tnorris> trying to cleanup my socket files process.on('exit'|'SIGINT'), running Server.close(), but throwing "Error: Not running"
18:13 < tnorris> but if I don't run Server.close() then the socket doesn't get removed.
18:14 < tnorris> any ideas how to cleanup socket files on 'SIGINT' w/o throwing an error?
18:16 < tnorris> nm. just needed to wrap it in process.nextTick(fn)
18:39 < EyePulp> so one of our services has been getting a bunch of errors lately (web proxy for about 15,000 domains), and after digging a bit, they're mostly coming from...
18:39 < EyePulp> org-name:        TELECOM FEED IRANIAN Co. (Private Joint Stock)
18:39 < EyePulp> org-type:        LIR
18:39 < EyePulp> address:         Iranian Telecomfeed
18:39 < EyePulp> address:         number 13 , 11th street , miremad street , motahari street
18:39 < EyePulp> address:         1587748113 tehran
18:39 < EyePulp> how fun!
18:49 < arei> So, I got an installation problem, anyone got a second to help?
18:50 < livinded> arei: what's the problem?
18:52 < arei> Installing on a closed/disconnected system.  ./configure with a --prefix.  Python is 2.7.3.  Node version is 0.8.2.  make gets a good chunk of the way through and then I get an ***[node] Error 2.  Cannot paste output since it's a closed system.  Thoughts?
18:54 < arei> Oh, sorry, one more minor detail: Redhat Linux 2.6.18
18:56 < ksmth> hey guys
18:58 < ksmth> there are plenty of nodejs frameworks around ... and I really don't know where to start. Is there any good resource comparing many of them?
18:59 < diversario> ksmth, try http://howtonode.org/, http://dailyjs.com/, http://planetnodejs.com/
18:59 < diversario> ksmth, there are some article talking about frameworks and such
19:00 < ksmth> ah, I knew dailyjs, but I didn't know the other two. thanks. :)
19:00 < diversario> ksmth, also check this out - http://nodeup.com/seventeen
19:00 < diversario> NodeUp's ep. 17 talks about framework and framework authors
19:00 < diversario> ksmth, no problem :)
19:01 < ksmth> oh boy, plenty of resources.
19:01 < diversario> ksmth, enjoy! :) I love nodeup, awesome podcast
19:02 < ksmth> I love podcasts in general, but I'm quite picky.
19:04 < ksmth> I'm evaluating node.js for use on my team. I kinda like using the same language throughout the stack.
19:04 < diversario> ksmth, what's the project?
19:05 < ksmth> nothing specific as of yet. it's more a general thing, we're building mostly small scale apps. think of promotional facebook apps and alike.
19:06 < ksmth> let users post their images to a gallery, voting and all that basic stuff.
19:06 < diversario> ah, ok. I found that node is pretty nice for small things like that, can get up and running very fast
19:07 < ksmth> the main plus for me is that it's javascript, to be honest. we're mainly frontend developers dabbling in server side programming.
19:08 < ksmth> I'd like to leverage the knowledge already present in the rest of the team, so of them are "pure" html / css / js guys, so to speak, and maybe it'd be easier for them to learn server side programming with node.
19:08 < ksmth> some of them
19:09 < xonecas> ksmth: Node is easier to learn, but you'd benefit to have some backend expertise, for load management and flow control
19:09 < xonecas> Go to some talks about node
19:09 < xonecas> that higligh performance
19:09 < xonecas> it will help a ton!
19:09 < ksmth> xonecas: as I said earlier, we're not into large scale apps
19:10 < xonecas> Even with small apps, if you're not careful you'll have horrible performance
19:10 < ksmth> xonecas: we haven't had any performance issues with ordinary PHP apps we have built
19:10 < xonecas> Great, I'll stop talking then :)
19:10 < diversario> haha :)
19:11 < ksmth> xonecas: haha, I didn't mean to be impolite
19:11 < ksmth> xonecas: but I think it'd be a waste to worry about problems we don't have (yet)
19:11 < diversario> Personally, I think it's more important to understand node coding style and ideas, to write better code. Like, using modules and stuff.
19:12 < ksmth> diversario: I'm currently pushing very hard to modularize our frontend JS
19:12 < diversario> Because you don't want to write node application like you write your php apps
19:12 < diversario> ksmth, that's awesome. Sooner you do that - less code you'll have to go through and decouple.
19:12 < ksmth> diversario: oh boy ... we have one legacy project that's a nightmare to maintain
19:13 < ksmth> diversario: it's a horrible jquery salad, tightly coupled to the html structure
19:13 < RLa> ksmth, maybe it's time for rewrite? :)
19:13 < diversario> ksmth, haha, same over here (I'm not on the maintenance team, though). But yeah, horrible code is horrible.
19:14 < diversario> RLa, would depend on the size of the project, I'd guess.
19:14 < ksmth> RLa: I tried two times to push a refactoring through. "we will consider it sometime"
19:14 < diversario> also, if it works, why bother refactoring - every client, ever.
19:15 < ksmth> diversario: yeah, it's not just the javascript though, it's also the css that's really bad.
19:15 < diversario> ksmth, oh boy. It's one of those projects! :)
19:16 < diversario> ksmth, a lump of code and markup
19:16 < ksmth> diversario: it's all very fragile and ... oh man, I have to stop now. I tried to explain that it'd be an investment for future development / extension, but ... they just don't listen .... and then they wonder why sometimes things explode.
19:16 < ksmth> things being development time
19:17 < diversario> ksmth, I hear ya, they just think it's an expense and don't get why it's bad and all that.
19:17 < ksmth> and it's not a joy. a sloppy codebase also encourages sloppy additions ^^
19:18 < diversario> ughh
19:18  * diversario shivers
19:18 < ksmth> ah, I could go on and on :D
19:19 < plato> arei: can you do ./configure --prefix &> output.txt; curlpaste output.txt ?
19:19 < diversario> ksmth, noooooooo :D
19:20 < plato> arei: or by 'closed system' do you mean no net connection/
19:21 < ksmth> how about this one:
19:21 < ksmth> div.productlist div.mod-products div.filter fieldset.article-colors ul li a:active small {
19:21 < diversario> wow
19:21 < ksmth> ah, I found an even longer selector
19:22 < ksmth> only 117 characters
19:22 < diversario> haha :)
19:23 < diversario> maybe there were paid by selector length :D
19:23 < ksmth> the worst thing is, that I know the people who wrote that code.
19:24 < diversario> that's awkward
19:27 < arei> closed system = no network
19:27 < ksmth> ah, well. anyhow, I got to go now, wife is home and there are movies to watch ;)
19:27 < diversario> ksmth, have fun :)
19:27 < ksmth> thanks for listening haha
19:27 < ksmth> thanks :)
19:27 < diversario> ksmth, sure :)
19:28 < arei> i got further... it looks like python cannot find a library called bz2, so I ssupect it's something to do with python_home or a bad install of python.  I did just install python to a non-standard place...
19:29 < zivester> anyone know how to customize the default error pages, like the 413 with express/connect ?
19:30 < zivester> I'd like to detect that a file upload is too large, and alert the user, instead of getting the ugly 413 page
19:33 < user1__> ..
19:33 < gabrieluk> .
19:36 < roland> hello node guys! I'm wondering if I can link a TCP server to Socket.IO server. I have this small TCP server ( http://pastebin.com/9XkcBBwz ) and I want to be able to "catch" Announce command and send the message to Socket.IO clients, a broadcast. I'm dreaming or this can be done?
19:41 < plato> you might need a second node app running on a different port
19:42 < plato> i've never done interprocess communication; there might be a way to insert a socket.io client into your tcp app, and send the data to the server 
19:42 < plato> then the server can rebroadcast
19:43 < plato> or maybe you can do it all in one app; just having the tcp server and http server listening on separate ports (but all in one file)
19:43 < plato> arei bz2 is a compression library
19:43 < roland> <plato> this is what i want to make right now, one file is good enough for me
19:43 < plato> it might not be installed
19:44 < roland> one application file, 2 different ports, how can i integrate socket.io into this tcp server?
19:44 < plato> http://socket.io/#how-to-use
19:44 < arei> plato: I think I figured it out... combination of a bad python_home and a missing gcc-c++ install.
19:45 < arei> plato: still running so I'll know more when it finishes.  Hopeful tho.
19:45 < arei> plato: ty.
19:45 < roland> I saw this documentation before, what i'm asking how do i link those 2 servers? based on what action :| i can't figure out the logic part
19:45 < plato> var relay = function(msg, callback){socketio.broadcast.emit(msg);}
19:46 < plato> and in your announce callback, relay(command[1])
19:46 < plato> somethin like that
19:48 < roland> i need to put this function in socket.io right?
19:50 < drudge_> rauchg: any chance we'll see smashing Node.js on iBooks?
20:02 < plato> roland: in your code, you will follow the socket.io docs (making sure to avoid variable name conflicts) and instantiate and start an http server.
20:03 < plato> then you'll start listening with socket.io. once it's instantiated as socket.io, you can call socketio.broadcast.emit
20:06 < livinded> edge cases that only exist in production ftw!
20:08 < superjoe> with node's cluster api, is there a way to reserve a port with the master? I'm imagining a master worker which opens the port, calls setuid, and then spawns workers
20:10 < BronzeByte> cluster api? is that brand new or a third party api?
20:10 < superjoe> BronzeByte, http://nodejs.org/api/cluster.html
20:12 < BronzeByte> what is
20:12 < BronzeByte> the purpose?
20:12 < superjoe> to make use of multicore machines, and to allow zero-downtime deployment
20:12 < BronzeByte> ah i see
20:14 < roland> <plato> i get TypeError: Cannot call method 'emit' of undefined
20:14 < roland> i have like this:
20:14 < roland> var relay = function (msg, callback) {
20:14 < roland>     socket.broadcast.emit(msg);
20:14 < roland> }
20:14 < roland> case "ANNOUNCE":
20:14 < roland>                 relay(command[1]);
20:14 < roland>                 break;
20:14 < roland> that's all
20:28 < othiym23> so has anyone built a mocking library for Node that allows you to pattern-match parameters instead of passing in exact matches
20:28 < Glenjamin> othiym23: yes, sinon
20:29 < Glenjamin> which test framework are you using? I'm fairly sure all the big ones recommend sinon these days
20:29 < othiym23> how do I use a regexp for an argument in Sinon, Glenjamin?
20:29 < Glenjamin> have a look at sinon.match
20:29 < plato> roland someone just had that problem 
20:29 < othiym23> I'm trying to ensure that a parameter is set in a bigassed URL string, but don't want to match the whole thing
20:29 < othiym23> Glenjamin: kk, thx
20:30 < Glenjamin> sinon.match(regexp):    Requires the value to be a string and match the given regular expression.
20:30 < plato> roland you are probably calling emit on the socket app. you need to do .on('connection', function(socket){socket.broadcast.emit...
20:30 < Glenjamin> sinon is truly excellent
20:31 < plato> not on the socket.io object that you require
20:31 < plato> oh he quit. owell
20:31 < othiym23> Glenjamin: thank you, and thank Sinon
20:31 < othiym23> it did exactly what I want
20:33 < superjoe> is it possible to send and receive messages like in the child_process API with an already running node.js process if you have the pid?
20:51 < addisonj_> is there such a thing as a streaming cached client?
20:51 < addisonj_> memcached*
20:55 < othiym23> addisonj_: what problem are you trying to solve?
20:56 < othiym23> i.e. in which circumstances is memcache slow enough / the results big enough that you'd want streaming results?
20:56 < addisonj_> more just thinking aloud... doing some craziness with memcache as an http cache
20:57 < addisonj_> so if I store an entire http response as a string in memcached and it were a readable stream, just pipe it right down
20:59 < timkuijsten> is it possible to send the http headers right away since calculating the body takes a while and times out the reverse proxy if nothing is received within a certain amount of time..
21:00 < timkuijsten> calling writeHead followed by a res.write('') won't work and sending a space or something criples the json body that follows later on..
21:05 < jjjjohnny> when streaming buffers where minimum latency and on-timeliness is preferred, whats the smallest buf size you can get away with?
21:05 < jjjjohnny> i'm asking specifically for like music
21:05 < othiym23> anybody got a foolproof method for generating a huge wad of JSON very quickly for testing zlib compression level efficiency?
21:05 < jjjjohnny> or MIDI
21:06 < othiym23> I'm guessing the entropy level of JSON is generally pretty low, but I'm also generally not super in favor of overdoing the compression and sucking up huge wads of CPU time for no good reason
21:07 < brianc> jjjjohnny: depends on how fast your computer is at that point
21:07 < othiym23> jjjjohnny: dunno about MIDI, because the data are so small, but for most forms of audio, I don't see the benefit in breaking the buffer size down below the size of a single frame of audio
21:07 < othiym23> assuming you're not working with a raw bitstream, that is
21:07 < brianc> jjjjohnny: I know in protools they use a buffer size of 128 
21:07 < jjjjohnny> othiym23: use faker.js and one of the json streaming modules out there
21:07 < othiym23> but for MP3 or WAV (or any other kind of PCM audio), you're gonna want to have at least a couple hundred bytes most of the time
21:08 < brianc> jjjjohnny: and that's almost unnoticable latenecy 
21:08 < jjjjohnny> brianc: thanks
21:08 < othiym23> jjjjohnny: +1, hadn't heard of faker before
21:08 < othiym23> thx
21:08 < jjjjohnny> brianc: i couldnt break it down into single samples tho, not at 44100 hertz
21:09 < jjjjohnny> not even process.nextTick running a simpe timer could do ops that fast
21:09 < jjjjohnny> brianc: is that 128 octets or bits?
21:09 < brianc> jjjjohnny: bytes i believe
21:09 < lbod> is there an easy way to node-inspect a child process (it's a required file for some reason)
21:10 < brianc> jjjjohnny: I just checked, it's samples. :p
21:11 < jjjjohnny> brianc: 16 bit samples probably?
21:11 < brianc> jjjjohnny: protools can do 16, 24, or 32-float
21:11 < brianc> and the most recent version can do 64 sample buffers on non-dedicated hardware
21:12 < jjjjohnny> neat.
21:12 < brianc> jjjjohnny: but you could probably do smaller buffers. protools can do a whole lot of audio processing on my machine w/ multiple tracks all buffered at 64 samples per buffer
21:13 < jjjjohnny> the plan is to do some process as well but we'll see how that goes
21:13 < jjjjohnny> *processing as well
21:13 < brianc> jjjjohnny: what are you working on?
21:13 < lbod> you guys are using node with protools? interesting, why?
21:14 < brianc> lbod: Not using node w/ protools, was just providing a reference for jjjjohnny on my LE version's lowest buffer size
21:14 < jjjjohnny> just hacking music software
21:14 < tnorris> Is there a way to change the default size of buffer written to a child process from 64 KB?
21:14 < jjjjohnny> currently working on a mixer
21:14 < lbod> ah, sounded great for a sec
21:14 < brianc> jjjjohnny: sweet
21:15 < jjjjohnny> lbod: I would use node to relay midi signals to max/msp or protools, they all have midi APIs ;)
21:15 < lbod> yeh but raw signal processing wouldnt be doable surely?
21:16 < brianc> lbod: I believe you have to write C for a protools plugin, and pay an expensive fee to get access to the RTAS licensing & SDK
21:16 < jjjjohnny> probably not but at that point you just have the audio software do it
21:16 < brianc> you might be able to write a rewire application, but that again is propriatiry 
21:17 < jjjjohnny> reason, logic, and the other full features software allow any kind of midi controller, so you can make your own instrument essentially
21:18 < brianc> yeah
21:18 < lbod> be cool to see if you could do io input/output like that with node.. ill always be a noob with node but thought io was not performant
21:18 < tnorris> actually, guess I would need to change how much data a net socket accepts in a single 'data' event. any ideas how to change that?
21:18 < jjjjohnny> lbod: WAT node is all about the IO
21:19 < lbod> for raw buffer streams? i thought it was it's achiles heal
21:19 < lbod> good to know though
21:19 < jjjjohnny> if you want to hack audio buffers look at github.com/substack/baudio
21:20 < BennyLava> its*
21:20 < nlf> any of you used protocol buffer encoding in node?
21:20 < mbalho> jjjjohnny: congrats on the new gig dood
21:21 < tnorris> nlf: I gave it a shot a while back. failed miserably. what do you want to use them for?
21:21 < gildean> tnorris: you can send the data as set sized buffers afaik
21:21 < jjjjohnny> THANKS! *__*
21:22 < nlf> tnorris: riak
21:22 < jjjjohnny> mbalho: i'm a systems engineer now 
21:22 < mbalho> nerd
21:23 < tnorris> nlf: the protobuf npm package hasn't been updated for a while. don't build properly under v0.8.x
21:23 < tnorris> gildean: sorry, not following
21:23 < nlf> i can't even get it to work in 0.6
21:23 < jocafa> i also need better protobuf support
21:24 < tnorris> yeah, I tried for about a week then finally gave up.
21:25 < jocafa> as far as i got: https://github.com/jocafa/pbnjs
21:25 < jocafa> (not far heh)
21:39 < tnorris> anyone know how to increase the net socket data buffer (default to 64 KB) when the 'data' event is emitted? can't find it in the docs.
21:41 < noordung> Hi, a question on NPM. I'm getting weird EACCESS errors on my home dir and tmp: /home/ng/tmp... Help?
21:41 < tnorris> noordung: what's your output for `ls -l ~/tmp`?
21:41 < nmartin> noordung: you probably instlled something as root maybe?
21:42 < noordung> tnorris, total 0
21:42 < tnorris> noordung: sorry `ls -ld ~/tmp`
21:42 < noordung> tnorris, drwxr-xr-x 2 root root 4096 Sep 14 23:21 /home/ng/tmp
21:42 < tnorris> hm, ok, create a dir there with perm of 777 (just for test)
21:42 < tnorris> ah, that's it. chown it to your user.
21:42 < noordung> tnorris, btw, why is npm putting crap like tmp in my home?
21:42 < tnorris> `sudo chown ng:ng ~/tmp`
21:43 < tnorris> no idea, just know how to get it to work. =)
21:43 < noordung> tnorris, wouldn't it be better if it used stuff like ~/.config/npm/tmp or ~/.npm/tmp
21:43 < noordung> Is there a way to configure that ^^^?
21:44 < nmartin> noordung: feel free to submit a patch :)
21:44 < noordung> I probably will... :)
21:44 < tnorris> anyone else having problems reaching npmjs.org?
21:44 < nmartin> tnorris: yes
21:45 < tnorris> just routine updates?
21:45 < noordung> tnorris, not for me... running npm right now...
21:45 < nmartin> noordung: the webserver 
21:45 < tnorris> does npmjs.org use go daddy? ;)
21:46 < noordung> nmartin, I know. Just got this: npm http 200 https://registry.npmjs.org/diff/-/diff-1.0.2.tgz
21:46 < nmartin> looks like the site is down
21:46 < nmartin> right. registry. is a different node
21:46 < nmartin> thats why i said the webserver is down
21:46 < noordung> Ah... :)
21:47 < nmartin> the npm webserver is hung
21:47 < nmartin> someone needs to kick is
21:47 < trb> tnorris: why would you think that?
21:47  * noordung remembers it's in the little things...
21:47 < nmartin> does it run node.js :)
21:48 < tnorris> trb: it was a joke on go daddy (with the recent dns outage they had)
21:49 < nmartin> cause my little chrome status ind. just spins and spins and spins
21:49 < trb> tnorris: its not really a joke, whatever problem they had was crap and aren't willing to truthefully say why they had problems
21:49 < nmartin> so the server is alive, but hung
21:50 < nmartin> trb, they flipped and flopped like a tuna out of water on the outage
21:50 < nmartin> and their PR lady made it worse, not better
21:51 < nmartin> anyone pretty proficient with node's ffi package?  i need to wrap the pamauth lib to do some local user authentication
21:52 < trb> nmartin: our account manager probably sent the same thing your lady manager did
21:52 < trb> its a joke at best
21:53 < nmartin> i've gotten the simple examples to work, but when it comes to passing structs and pointers, i get a bit wrapped around the axle
21:56 < BipolarCoder> something to read on a lazy Friday afternoon: http://www.scribd.com/doc/105844487/Bipolarcoder-Software-in-the-Key-of-Web
21:59 < nlf> math is hard
21:59 < gildean> and it's already saturday
22:00 < jocafa> BipolarCoder:  elaborate on /model/key/model/key and provide an example or two of real world paths :)
22:02 < BipolarCoder> real world paths: /houses/jocafa's house/rooms/family room/
22:02 < jocafa> ah, got it
22:03 < trb> nmartin: meh, just move everything from them
22:04 < trb> nmartin: did you really have outages? were you using their services?
22:04 < nmartin> trb, i havent hosted at godaddy for yeeears
22:04 < nmartin> but a customer of mine did
22:04 < jocafa> i'm still trying to figure out a way to elegantly express paths like that while including a time range context
22:04 < trb> we have too many domains at godaddy, but no way are we hosting anything (not even dns) at them
22:04 < trb> so I never noticed
22:05 < BipolarCoder> jocafa: time ranges are difficult
22:05 < jocafa> mhmm
22:05 < jocafa> especially when the granularity is involved and changes
22:18 < billy> so anyone else notice chrome's severe memory leak?  upon a refresh of a tab, it doesn't clear out memory completely it appears
22:25 < timw255> Anyone know of any resources regarding best usage of DB connections? Make one and share it with all modules? Create a pool of them and have the modules battle it out?
22:27 < EyePulp> timw255: if you're using an async db driver, you really only need a single connection object, and would just re-use it over and over, would you not?
22:27 < tnorris> ok, so i'm seeing that src/stream_wrap.cc hard codes SLAB_SIZE to 1024^2, which is the size of the slow buffer created for a socket's 'data' event.
22:28 < tnorris> so I'm guessing it's not possible to change the size of the incoming buffer on a net socket?
22:28 < timw255> eyepulp: just started using node about 7 days ago...I don't know :D That sounds reasonable though.
22:31 < EyePulp> timw255: we've got apps using it that way that get steady traffic (50-100 connections a second throughout the daylight hours), all of which is hitting a redis db from a single connection object
22:32 < timw255> eyepulp: currently reading some stack overflow stuff that seems to disagree though. seems to sway towards a pool.
22:34 < EyePulp> timw255: okay.  I'd say if you're just starting, spending time on *that* issue is a severe case of premature optimization.  Plus it depends on the db/datastore, where it's located, etc etc.  
22:34  * EyePulp hasn't had to manually build connection pooling in…  years.  Do people still do that?
22:34 < timw255> eyepulp: well, I wrote this bad boy in php first. wasn't happy with the load it could handle so I'm porting it
22:35 < EyePulp> "bad boy" and "php" …  notsureifserious.jpg
22:35 < EyePulp> =)
22:35 < timw255> lol
22:38 < benDos3> I'm gonna need to send about 5k emails at a time, can someone recommend a package?
22:38 < EyePulp> benDos3: the node-spamtastic-clogyourtubes module is quite good.
22:39 < timw255> initial php version only served up about 60 requests a second to a few hundred concurrent users. maybe I was doin' it wrong but *shrug*
22:39 < timw255> WAY impressed with the drop from 170ms to 38ms for a request (including a db call)
22:40 < benDos3> EyePulp, it's for a small businesses weekly/daily specials
22:40 < BennyLava> Using PHP is *definitely* 'doing it wrong'.
22:40 < EyePulp> timw255: I'll bet you a shiny nickel that a well-written node version with a good db behind it could be built without a pool and still be substantially faster in response times.
22:41 < EyePulp> timw255: just my anecdotal experience speaking though
22:42 < timw255> eyepulp: well, i'll stop freaking out about passing a single connection around then. If it sucks, i'm going to want my nickel!
22:44 < EyePulp> benDos3: sending in that qty is an invitation to get your smtp server blacklisted or to have it start denying you.  I don't have any high-volume node modules to recommend, *but* I'd consider using a mailing service for that sort of volume.  MailChimp is great (probably the best in the industry right now), or even Amazon's SES would be better than dumping it through your own smtp.   As for modules - there are tons of basic sending modu
22:44 < EyePulp> there.
22:44 < EyePulp> benDos3: we use http://github.com/andris9/nodemailer/
22:45 < EyePulp> timw255: putting my nickel in escrow.  I await your results.
22:45 < benDos3> Alright, thanks
22:47 < timw255> eyepulp: ok so onto my next question. pass the connection around or stick it in the global? (maybe it doesn't matter...)
22:48 < timw255> ...usually, it all matters...
22:51 < EyePulp> timw255: it matters - it's a good question. better coding dictates you don't throw things into your global space casually.  but, I think it depends on how you structure the rest of your code and how big the app is whether it's a big deal.  
22:51 < EyePulp> I'd be curious how others handle it, tbh.  I could learn something, I'm sure.
22:53 < tracker1> .join #coffeescript
22:53 < timw255> I've always considered putting anything in global is bad but hey..if it's considered the best way then, who am I to argue
22:54 < EyePulp> in one of my apps, I have server.js -> require('main_app'), and the main_app.js has a global var db which is the mongo connection. everything else is called into the main_app, and gets access to the db in that scope
22:54 < ctult> What's the point of having var func = function _func(){};?
22:54 < EyePulp> It's effective and handles a good amount of traffic, but I'm very interested in other approaches
22:54 < wilornel> Hey guys, I just installed npm, and when I run npm -v, it says: node.js:201 thorew e; // process.nextTick error, on 'error' event on first tick
22:55 < ctult> I mean, what's the point of having _func in that function?
22:55 < EyePulp> ctult: you got me - I've never come across that idion
22:55 < EyePulp> *idiom
22:55 < tracker1> I'm having trouble with using coffee in a module (node.js)...  Anyone know why only the first exports in this gist shows up?  https://gist.github.com/3725475
22:56 < chapel> ctult: no reason to do _func
22:56 < chapel> now var func = function func is reasonable
22:56 < EyePulp> tracker1: you realize you didn't actually join coffeescript
22:56 < chapel> but at that point, just do function func
22:56 < tracker1> EyePulp, I did.. asking in both
22:56 < EyePulp> ah
22:57 < tracker1> funny thing is, all I want is the multiline strings...
22:57 < EyePulp> anyhow, have a good one folks.  I've got a room to paint.  WITH BLOOD.  Or primer.  probably primer.
22:58 < wilornel> Does anyone know what to do when npm returns an error?
22:58 < CoverSlide> read what it says
22:58 < BennyLava> cry
22:59 < wilornel> lol
22:59 < wilornel> Hey guys, I just installed npm, and when I run npm -v, it says: node.js:201 thorew e; // process.nextTick error, on 'error' event on first tick
23:00 < wilornel> sooo what should I do?
23:01 < BennyLava> weep
23:06 < tracker1> weird, works if I put console.log('') at the bottom of the .coffee...
23:10 < bnoordhuis> wilornel: how did you install npm?
23:16 < whomp> i am making an app, using the google maps api, that provides the user with data based on where they are zoomed in. the data is fetched whenever the user moves to a different geographical location. should i keep an open connection between each client and the server while the client is running the app, or should i open up a new connection each time the client needs new data and close it as soon as all the new data has been sent?
23:17 < Tobsn> whomp, depends on whast type of connection and how many will use it
23:17 < whomp> like whether it uses http or not?
23:17 < Tobsn> if you just have a couple hundred users at the same time just use socket.io or just fire an ajax request
23:17 < wilornel> bnoordhuis: I did curl https://npmjs.org/install.sh
23:17 < whomp> the most scalable solution would be best for me
23:18 < Tobsn> just do the ajax version
23:18 < Tobsn> and hook into the maps api
23:18 < Tobsn> i think they have an event for letting for of the mouse
23:18 < Tobsn> basically a change event
23:18 < Tobsn> then fire ajax and retrieve the data
23:18 < Tobsn> maybe look into angular ;)
23:18 < whomp> this isn't web-based
23:18 < Tobsn> whats it then?
23:18 < whomp> this is native phone development. i can send whatever packet i want
23:19 < Tobsn> oh
23:19 < Tobsn> yeah do the same
23:19 < Tobsn> one request
23:19 < Tobsn> just use json
23:19 < Tobsn> keep the data minimal
23:19 < livinded> I'd just send json over tco
23:19 < livinded> tcp*
23:19 < Tobsn> mobile and constant connections is not a good idea
23:19 < Tobsn> sockets tend to drop a lot
23:20 < whomp> yeah all of that is figured out. i'm just wondering, since i don't have much experience with sys admin stuff, if it's better to keep a connection open or if it's ok to deal with the overhead of constantly oopening a new connection
23:20 < Tobsn> then you spend time finding out if its still alive etc.
23:20 < livinded> set super long timeouts
23:20 < Tobsn> what you mean?
23:20 < Tobsn> keep alive?
23:20 < whomp> as in, not close a connection
23:20 < livinded> don't close the connection
23:20 < Tobsn> close the connection right away, no keep alive if your backend is plain nodejs
23:20 < whomp> i am getting mixed messages...
23:20 < Tobsn> if you use apache/nginx/lighttpd in the middle just use keep alive
23:21 < livinded> whomp: are you planning to send a bunch of data back and forth?
23:21 < whomp> livinded, i want to send extremely short (~100 bytes) packets back and forth asynchronously
23:21 < Tobsn> you just write out a normal response
23:21 < whomp> a lot
23:21 < Tobsn> what are you doing?
23:21 < livinded> keep the connection open
23:21 < whomp> i'm not using anything in the middle
23:21 < livinded> closing it is stupid
23:22 < whomp> the user gives the server the longitude and latitude coordinates, the server gives it back some data. in google maps, this might be all of the pins in that region
23:22 < livinded> just add heartbeats on top to close the connection
23:22 < Tobsn> yeah, use single requests
23:22 < Tobsn> its not like you do more requests than 1 per 1-5 seconds
23:23 < whomp> ok, so i keep the connection open as long as the user responds to the heartbeat. how often should the heartbeat get sent?
23:23 < Tobsn> hehe
23:23 < Tobsn> oh well
23:24 < livinded> Tobsn: what's the point of doing the setup and tear down constantly
23:24 < Tobsn> tear down?
23:24 < Tobsn> its a node app
23:24 < Tobsn> it already runs, there is no teardown
23:24 < livinded> it's still a tcp socket
23:24 < Tobsn> and?
23:24 < livinded> you need to setup and tear it down
23:24 < whomp> SYN ACK
23:25 < Tobsn> why does no other app do that, every single mobile map app does single requests per map position
23:25 < Tobsn> foursquare, brewster, yelp
23:25 < Tobsn> etc.
23:25 < Tobsn> its easier to debug and easier to handle, scale etc.
23:25 < Tobsn> if you like to have one worker handle one connection, use keep alive and stick nginx in the middle
23:26 < Tobsn> if you want to scale, set up more and use nginx as load balancer or something else
23:26 < whomp> so you're saying, it's worth the cost of performance to gain the simplicity of short connections
23:26 < Tobsn> and you start distributing single http requests
23:26 < Tobsn> there is no lost of performance
23:26 < whomp> SYN ACK?
23:26 < Tobsn> meh
23:27 < Tobsn> vs a constant open tcp connection that sends heartbeats?
23:27 < Tobsn> you basically having a tunnel open while the user fires one even ever x seconds
23:27 < whomp> ok, i see. so since an open connection needs heartbeats, all performance gains for it are lost
23:27 < Tobsn> its not live
23:27 < Tobsn> so why a socket
23:27 < Tobsn> well not really the heartbeat, its just wasted resources keeping track of the open socket
23:28 < whomp> ahh i see
23:28 < Tobsn> also its mobile
23:28 < Tobsn> this shit will die all the time
23:28 < whomp> ok
23:28 < Tobsn> its more sane and safe to just do it the standard way
23:28 < livinded> with long timeouts it wont die all the time
23:28 < whomp> and would you say it's worth working with plain tcp to send these packets, or should i send them in http?
23:29 < Tobsn> it will because hes talking about an iphone app
23:29 < Tobsn> just http
23:29 < Tobsn> keep it simple
23:29 < whomp> ok there's no significant overhead with that? it's really only about 5 pieces of delimited data
23:30 < Tobsn> dont waste time on stuff you dont know yet. produce and log - if you see that everyone is sending 50 requests per second, you might want to use a tcp socket that stays open. which will never happen.
23:30 < Tobsn> just do it
23:30 < Tobsn> keep it simple
23:30 < whomp> :D just looking for the right direction to go down
23:30 < livinded> whatever works is the right direction
23:30 < whomp> and node.js bare vs. nginx?
23:30 < livinded> don't pre-maturely optimize
23:30 < Tobsn> yep
23:30 < whomp> indeed
23:31 < Tobsn> just get it working and out there, see what happens and optimize
23:31 < livinded> you said you weren't running over http which is why I suggested tcp
23:31 < whomp> it doesn't have to be http
23:31 < Tobsn> nah hes just building a mobile app, doesnt make sense to open a constant connection for some little map data points every once in a while
23:32 < Tobsn> whomp, in your case, it should be because its the easiest way - client and server side
23:32 < livinded> there's gonna be less overhead with straight json over tcp but you'll need more servers to support the users
23:33 < whomp> kk thx for the help guys
23:33 < livinded> and at a certain point the overhead will become irrelevant based on the size of the data
23:34 < whomp> that generally won't happen, the data is just a few ints
23:34 < whomp> *floats i mean
23:34 < livinded> right, but if the data were to grow larger it would become irrelevant
23:34 < whomp> yeah
23:35 < livinded> the overhead would be so small in comparrison to the data that it wouldn't matter anymore
23:35 < Tobsn> larger or more often
23:35 < livinded> I'm hoping that lte brings more stable connections
23:35 < livinded> latency sucks but it's not going to get fixed anytime soon
23:35 < Tobsn> i dont think so... they cant even keep 3g up
23:36 < livinded> Tobsn: lte has more bandwidth
23:36 < Tobsn> i love that people look forward to LTE... like 3g is working anywhere
23:36 < Tobsn> hehe
23:36 < livinded> the physical spectrum does
23:36 < Tobsn> true, but go get a LTE cell and find LTE spots
23:36 < Tobsn> we had it only in downtown san diego
23:36 < livinded> and verizon is running fiber to their lte towers rather than copper
23:36 < Tobsn> if you leave a ~4 mile radius = 3g
23:37 < livinded> the problem with at&t is that they don't have enough bandwidth from their towers into the data network
23:37 < livinded> so the towers can't support the bandwidth that people are pushing
23:37 < Tobsn> plus the number of towers is pretty low
23:37 < livinded> that's not as big of a deal
23:37 < livinded> I'll have great signal strength but no bandwidth
23:37 < Tobsn> at the mobile world congress one guy was showing off stats about towsers
23:38 < livinded> that's more common than not having any signal
23:38 < Tobsn> in urban areas (mid to big cities) the number of towers in the EU is 6 times higher than in the US
23:38 < livinded> over saturation of towers is just as bad
23:38 < livinded> you spend your time hopping between towers increasing latency
23:38 < Tobsn> he said, if you would compare madrid center with nyc - its 5-6 times more in madrid
23:38 < Tobsn> sure, but the connection is way more stable there
23:38 < livinded> they need to increase the bandwidth to the towers
23:39 < Tobsn> im in krakow right now - full bar 3g throughout the city and in buildings even far off, still full reception
23:39 < livinded> in santa monica I have full bars and can't use any data
23:39 < livinded> there's just too much saturation
23:39 < Tobsn> why is that? towers or too many users?
23:40 < livinded> towers can't push the data that's being sent through them fast enough
23:40 < Jimbly> Hey all!  I'm attempting to migrate from node 0.6 to 0.8, and getting a link error with the v8-profiler native module ("undefined symbol: _ZNK2v813HeapGraphNode16GetDominatorNodeEv"), any ideas?  Anyone using v8-profiler (used by node-webkit-agent, I think) on 0.8.9+?
23:40 < Tobsn> ha
23:40 < livinded> the towers can handle the users, they just don't have big enough pipes
23:40 < Tobsn> yeah that blows
23:40 < livinded> at&t doesn't want to run fiber out to them
23:40 < Tobsn> never had issues in germany/england and here right now - its fast as shit
23:40 < Tobsn> but i blame thaton more expensive contracts in england/german/etc. and lower income in poland
23:41 < bnoordhuis> wilornel: that's not necessary anymore, npm gets installed alongside node by default now
--- Log closed Sat Sep 15 00:00:19 2012
