--- Log opened Tue Oct 23 00:00:56 2012
00:01 < timeturner> lol, it's weird because the bootstrap site has the same laggy scroll
00:02 < timeturner> I'll have to look into this
00:03 < nathan7> timeturner: Probably your computer's performance
00:03 < tnorris> timeturner: what page exactly? I want to check that out as well.
00:03 < nathan7> timeturner: bootstrap site is just fine here
00:06  * ChrisPartridge is confused
00:06 < ChrisPartridge> Anyone have a clue why someone would reverse the bytes in a crc32 hash?
00:08 < niggler> ChrisPartridge: depends on the platform
00:08 < niggler> *byte endianness
00:08 < beckyisabunny> how do i set process.env.custom_variable at the shell launch command of a node.js application?
00:09 < airtanah> CUSTOM_VAR=bla node server.js
00:09 < beckyisabunny> thank you!! : )
00:09 <@konobi> well... `custom_variable=bla node foo.js`
00:10  * beckyisabunny adds to the make file
00:10 < airtanah> also chance to plug my node port of foreman, which loads a .env file into custom ENV vars
00:10 < airtanah> http://nodefly.github.com/node-foreman/
00:12 < nathan7> airtanah: <3
00:12 < nathan7> airtanah: I was including norman in something, I'll have to check this out
00:14 < airtanah> drop any issues on github
00:14 < airtanah> it also exports upstart jobs
00:16 < rvagg> Nexxy: I see Ninjablocks CTO will be at jsconf.au, you coming? more importantly, will there be FREE NINJABLOCKS FOR ALL?
00:19 -!- mode/#Node.js [+o piscisaureus____] by ChanServ
00:21 < dmilith> isaacs: * crypto: Reduce stability index to 2-Unstable (isaacs) - what does it means?
00:24 < ChrisPartridge> rvagg: where is jsconf.au being held?
00:25 < rvagg> sydney town hall
00:25 < rvagg> ChrisPartridge: 
00:25 < Sly> http://jsconf.com.au/
00:25 < Sly> Front page. >_>
00:26 < rvagg> dmilith: it means that there is choppy waters ahead for that module--the API is unstable and highly likely to change
00:26 < dmilith> I see
00:26 < dmilith> thank You
00:27 < dmilith> Sly: it's sad that's so far ;]
00:28 < Sly> dmilith, indeed. Plus, I hate planes.
00:29 < Sly> Which makes it even harder to get there. ;P
00:29 < dmilith> ;] yea.. pretty far from Europe
00:30 < ChrisPartridge> And you have to give paypal your credit card details by the looks of it
00:30 < jocafa> any Sencha kids here?
00:32 < jmoyers> so. ryans github emptied eh?
00:32 < rvagg> jmoyers: and twitter account gone
00:33 < jmoyers> guess sometimes you just need to disconnect
00:33 < ChrisPartridge> :o
00:33 < jocafa> has he ever been seen in the same place at the same time as _why?
00:34 < jmoyers> well, he looks nothing like him ;-)
00:35 < qmx> another _why =/
00:46 < nlf> there we go
00:46 < nlf> async.queue did the job nicely
00:47 < qmx> where node stores files like fs.js after install?
00:57 < AAA_awright> qmx: Where does node store the library files?
00:57 < qmx> AAA_awright: yup, not the npm modules, the core stuff like fs.js, util.js
00:57 < AAA_awright> Well npm is a completely different program
00:58 < AAA_awright> Let's see
00:58 < qmx> I'm trying to find those js files on my machine w/o luch
00:58 < qmx> luck*
00:58 < AAA_awright> They might be compiled in
00:59 < tonymilne> qmx if you just want to review their source code - check out: https://github.com/joyent/node/tree/master/lib
00:59 < AAA_awright> qmx: In the Git tree, they're in /lib
00:59 < qmx> the git part I know :)
00:59 < qmx> I wanted to know where those files go during the build/install
00:59 < AAA_awright> `make install` doesn't copy them anywhere
01:00 < qmx> hmmm, so how do they end into the node executable?
01:01 < qmx> still digging into it :)
01:01 < janmower> qmx: AAA_awright: they're transpiled to c compiled into node (the executable binary)
01:02 < AAA_awright> That's what I thought
01:02 < qmx> janmower: awesome, this helps a lot :)
01:02 < qmx> now I need to find where :)
01:02  * qmx is git grepping like there's no tomorrow
01:02 < janmower> node.gyp has the make rules for the library_files
01:02 < janmower> it runs node_js2c on all those library_files
01:03 < AAA_awright> qmx: What are you trying to do?
01:03 < qmx> AAA_awright: have you ever heard of dynjs?
01:03 < AAA_awright> No
01:05 < qmx> AAA_awright: ES6 implementation on top of the JVM - we've just started to do the node compatibility APIs
01:06 < AAA_awright> Pay careful attention to what Node.js actually does
01:06 < AAA_awright> Node.js is actually a really tiny project
01:06 < qmx> indeed
01:07 < AAA_awright> So I don't think it's important _how_ Node.js compiles in the native libraries, so long as it works correctly in your implementation
01:07 < TooTallNate> qmx: no Rhino?
01:08 < qmx> TooTallNate: nope, rhino potential sucessor
01:08 < qmx> AAA_awright: exactly, I was trying to figure out how to reuse the pure-js parts
01:09 < AAA_awright> qmx: Most all of them you can just use as regular modules, really
01:09 < TooTallNate> qmx: interesting. why start the VM over though?
01:09 < AAA_awright> If you can get them into your include path
01:09 < AAA_awright> Node.js is neat but I'd hardly say it does much of anything "correctly"
01:09 < qmx> TooTallNate: jsconf.eu 2011 - watch the preso :)
01:10 < TooTallNate> AAA_awright: what is "correct"?
01:10 < AAA_awright> http://magnode.org/nodejs-design-demantics
01:10 < qmx> TooTallNate: the TL;DR - Rhino is awesome, miracle tool, but full of bitrot :( - we're using modern tools, and trying to have readable compiler code
01:10 < AAA_awright> TooTallNate: Constistent with ECMAScript and OS semantics
01:11 < TooTallNate> qmx: sounds like good reasons to me :)
01:11 < cha0s> Has anyone ever tried to write a node extension that dlopen()'s more libraries?
01:12 < Hotroot> What are you guys using for captchas?
01:12 < cha0s> I link some symbols in my extension that the libraries it loads depend on, but I always get 'undefined symbol' trying to load those sub-libraries
01:13 < cha0s> It's an architecture where for instance, there is a 'Graphics' extension, and Graphics has a method called 'implementSpi' that will load SdlGraphics or SfmlGraphics or QtGraphics, etc. etc.
01:13 < cha0s> Based on the argument passed to implementSpi
01:14 < TooTallNate> cha0s: node-ffi calls dlopen()
01:14 < TooTallNate> cha0s: you might wanna use RTLD_LAZY
01:14 < cha0s> TooTallNate, I am using RTLD_LAZY, actually I'm using boost::extension, whcih does
01:15 < TooTallNate> cha0s: but if it depends on other libraries, i think you need RTLD_GLOBAL
01:15 < cha0s> So for instance I have a class called 'GraphicsService' which SdlGraphicsService extends
01:15 < TooTallNate> cha0s: and then load the dependencies first
01:15 < cha0s> and GraphicsService is 'undefined' in the dlopen
01:15 < cha0s> I did try hacking node (the only way to set that flag for the loading of my extension) and it still failed, and also I read that's not portable and potentially confusing...
01:16 < cha0s> I did try it though, unfortunately it didn't work :/
01:17 < TooTallNate> AAA_awright: i think what this guys considers "correct" in most cases were thought out decisions by the core team. the author doesn't get the benefits
01:17 < AAA_awright> TooTallNate: "Thought out" usually means "pragmatic"
01:18 < TooTallNate> like git submodules… everyone knows those suck and nobody uses them. just cause they're the "correct" git feature to use doesn't make it the best
01:18 < TooTallNate> which actually is unfortunate, but that's the world we live in :p
01:18 < AAA_awright> And pragmatic is just another way of saying "I don't understand the ramifications of what I'm doing well enough to consider all the unintended consequences"
01:18 < AAA_awright> TooTallNate: There's nothing wrong with Git submodules
01:19 < AAA_awright> The alternative is checking in all your dependencies which is far worse
01:19 < TooTallNate> AAA_awright: i'd, personally, rather have "git clone" just work, then have the checkout burden on my users
01:19 < Hotroot> I find it hard to believe that with this many people making sites in node, nobody is using a captcha system
01:19 < TooTallNate> AAA_awright: which is the same reason node does…
01:20 < AAA_awright> Git is supposed to revision a project as an atomic, coherent whole
01:21 < qmx> TooTallNate: git clone --recursive will do the job, afaik :)
01:22 < AAA_awright> Or --recursive
01:22 < TooTallNate> qmx: 10 chars too long :p
01:22 < AAA_awright> I'd like to see Git send the packfiles for the submodules, too, and check some of them out by default
01:22 < qmx> TooTallNate: it's just --r<TAB> :)
01:23 < qmx> AAA_awright: even better, paralellize the fetch, as it can be potentially different servers
01:24 < AAA_awright> That's why I include multiple URLs in .gitmodules
01:24 < AAA_awright> Even if Git complains about it, you've got multiple URLs
01:24 < TooTallNate> AAA_awright: sounds like a lot of work :\
01:25 < AAA_awright> Not at all?
01:27 < ipalaus> guys, how it's node.js usually scaled? actually our application in php needs to do somethings with Node.js… HAProxy and and two machines active/active?
01:28 <@konobi> ipalaus: that's one way
01:30 < ipalaus> konobi to be clear, I've no fucking idea on how node.js works but just i know they're asking me on use StatsD https://github.com/etsy/statsd and it's built on node.js so I've to read more about it… in the linux bug, i've just to "run" a node.js job?
01:31 < ipalaus> but I'm sure I can get a cluster on HAProxy and point our php application to the same node.js ip (on haproxy) and haproxy redirects to one box or another
01:37 < jergason> ipalaus: why do you need to scale statsd? it is pretty low overhead
01:38 < ipalaus> jergason well not scale, but i need it on high availability so if one box goes down it keep working
01:38 < ipalaus> for this i needed running on two boxes
01:39 < jergason> ipalaus: ah makes sense
01:40 <@konobi> no idea how statsd works =0)
01:40 < jergason> the way I have used statsd is to just have one on each box running locally
01:40 <@konobi> but the proxy failover should work fine... it's just IP traffic after all
01:40 < jergason> and they all just send stuff up to graphite
01:40 < jergason> konobi: it is just a server
01:40 < jergason> takes in udop traffic
01:41 <@konobi> jergason: yes... but in terms of the backend and shared data, etc... no idea
01:42 < jergason> aggregates it, sends it out once every 10 seconds by default
01:42 < jergason> oh
01:42 < jergason> statsd has no data store
01:42 < jergason> it just helps organize/format/aggregate your data
01:42 < ipalaus> jergason do you know where graphite data is stored?
01:42 <@konobi> jergason: sure... but once you flip between them... there's no historical data
01:44 < ipalaus> i imagine it will be easy to share it between machines, and if I can have the two node.js running and just haproxy redirecting the traffic it will be easy to setup
01:45 < jergason> but you have to send it somewhere else to do something useful
01:45 < jergason> konobi: indeed, nor should there be from statsd
01:45 < jergason> that is not what it is for
01:45 < jergason> ipalaus: graphite is a python app
01:45 < jergason> it uses a backend called carbon to store data
01:45 < jergason> ipalaus: so wherever you have that set up is where the data will be stored
01:45 < jergason> you can use other backends with statsd, but graphite is probably the most common one
01:45 < ChrisPartridge> ipalaus: npm search statsd <-- there are plenty of backend adapters
01:46 < ipalaus> i want to do something similar on what Etsy explains in http://codeascraft.etsy.com/2011/02/15/measure-anything-measure-everything/ so I think graphite its a good option
01:46 < ipalaus> thanks for that tip ChrisPartridge 
01:56 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
01:57 < Hotroot> Well, finally found ayah for node, looks like a nice captcha system. The package for node is unfortunately suffering from some of the worst documentation I've ever seen.
02:12 < wallo> hello, can anybody help me ?
02:13 < wallo> i can not build nodejs-0.6.18 on linux-2.6.9
02:13 < SomeoneWeird> what errors are you getting?/
02:14 < wallo> gcc version is 3.4.5, make is 3.82, python is 2.6.1
02:14 < SomeoneWeird> what errors?
02:14 < SomeoneWeird> lol
02:15 < wallo> tools/gyp_node -f make ['-f', 'make', '/home/bae/nodejs/software/node-git/node.gyp', '-I', '/home/bae/nodejs/software/node-git/common.gypi', '-I', '/home/bae/nodejs/software/node-git/options.gypi', '--depth=.', '--generator-output', '/home/bae/nodejs/software/node-git/out', '-Goutput_dir=/home/bae/nodejs/software/node-git/out', '-Dcomponent=static_library', '-Dlibrary=static_library'] make -C out BUILDTYPE=Release make[1]: Entering di
02:15 < wallo> link error
02:17 < wallo> has anybody successfully build nodejs-0.6.18 on linux-2.6.9 ?
02:26 < nlf> i just made a pure javascript riak protobuf library
02:26 < nlf> frickin c bindings
02:29 < airtanah> nlf link?
02:29 < nlf> haven't posted it yet
02:29 < nlf> it's very, very raw right now
02:29 < nlf> will upload to github in a bit
02:30 < airtanah> full protobuf support?
02:30 < airtanah> cuz that would be cool
02:30 < nlf> define "full"
02:30 < nlf> if you mean the library only communicates with riak over protobuf, then yes
02:31 < nlf> if you mean i've completely implemented all of protobuf, then no
02:31 < nlf> i do have all the APIs documented on basho's site implemented
02:31 < nlf> but they really don't use a significant number of protobuf types, so i didn't bother implementing them all
02:32 < airtanah> i look forward to checking it out
02:34 < airtanah> anyone know how to check if a system user exists from node?
02:39 < nlf> airtanah: if you really want to check it out - https://github.com/nathan-lafreniere/riakpbc
02:39 < nlf> no readme, no tests, no examples
02:39 < nlf> use the riak pbc api documentation for a hint on how the commands work
02:40 < nlf> it'll show how the requests are formatted, kind of
02:40 < SomeoneWeird> parse passwd lol
02:42 < flybyme> how do i find out the host of a running server?
02:42 < flybyme> server.address().host?
02:42 < flybyme> or server.address().address?
02:44 < airtanah> SomeoneWeird that doesn't work for windows, but i guess w/e
02:45 < SomeoneWeird> airtanah, node doesn't really have an API for unique OS interaction
02:45 < airtanah> SomeoneWeird no problem, i just regexed on passwd
02:45 < airtanah> worry windows
02:46 < airtanah> sorry*
02:46 < aaronj1335> i've got a couple questions about error handling with promises (specifically Q). i posted them here: https://gist.github.com/3936362 can anyone help me out? thanks!
02:50 < nlf> anyone know off the top of their heads when process.hrtime() was implemented?
02:51 < SomeoneWeird> have a look at the commits?
02:52 < chilts> nlf: v0.8.0 -> https://github.com/joyent/node/wiki/API-changes-between-v0.6-and-v0.8
02:52 < chilts> search for process.hrtime
02:53 < nlf> thought so
02:53 < nlf> lame
02:53 < chilts> no worries
02:53 < nlf> thanks for looking
02:54 < chilts> did you need it in v0.6 or something?
02:54 < nlf> yeah, was hoping to use it
02:54 < nlf> milliseconds will be good enough though
02:54 < nlf> no big deal
02:55 < SomeoneWeird> any reason you're still using .6?
02:56 < nlf> because i've been too lazy to switch? :)
02:56 < nlf> i'm doing it now
02:56 < nlf> most of my code should be pretty portable anyway
02:56 < chilts> yeah, I'd upgrade ... lots of nice things in v0.8 :)
02:56 < chilts> including process.hrtime() ;)
02:59 < nlf> hooray, weekend of bored coding is now validated
02:59 < nlf> made quick little benchmarks
03:00 < nlf> does a GET of a small json object 10,000 times
03:00 < nlf> my old http library: 0m27.449s
03:00 < nlf> new protobuf library: 0m8.301s
03:01 < chilts> nlf: sweet! :)
03:01 < nlf> that's even parsing the protobuf packets in javascript instead of using the c bindings
03:01 < chilts> which package are you using?
03:02 < chilts> (for the protobuf stuff)
03:02  * chilts is interested
03:02 < nlf> one i made earlier today
03:02 < nlf> heh
03:02 < chilts> are you going to release it?
03:02 < nlf> https://github.com/nathan-lafreniere/protobuf.js
03:02 < nlf> https://github.com/nathan-lafreniere/riakpbc for the basic riak client
03:02 < chilts> there are a few other protobuf packages, did you try those before making one or just want to have a go at it?
03:03 < nlf> i tried two, they didn't want to work
03:03 < nlf> even using code from their own test cases, they were failing for me
03:03 < nlf> i guessed possibly out of date and/or broken c bindings
03:03 < nlf> just made it in javascript, easy enough
03:05 < nlf> it's very ugly, i can say with all certainty the only data types that will work are varints and bytes/strings
03:05 < nlf> though embedded messages also work
03:06 < dnandez> trying to figure out if I can use the crypto library to decrypt something encrypted with http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p
03:10 < arcanin> I've got a problem with mongoose, it does not save nested objects
03:11 < arcanin> the schema is correctly set (the property type is 'Mixed')
03:11 < arcanin> I tried to add .markModified('property') on the parent, but no luck
03:16 < cryptopsy> how to install all 'require' in app.js in one command?
03:16 < arcanin> found. When an object is empty, mongoose drop it ..
03:16 < aaronj1335> anybody around that's familiar w/ Q and can answer a couple questions?
03:20 < RLa> arcanin, can you paste the schema somewhere
03:21 < arcanin> RLa, it was only { contacts : Mongoose.Schema.Types.Mixed }
03:21 < RLa> hm
03:21 < arcanin> I had to put { toJSON : { minimize : false } } as second parameter of Mongoose.Schema
03:25 < arcanin> ... actually it doesn't seems fix the problem.
03:25 < itarturosilva> everyone hi
03:31 < opus_> How do I increment an internal id field when inserting into mongodb
03:32 < opus_> fieldname : "{$inc : { my_id : n } }" ?
03:32 < RLa> internal to what
03:32 < opus_> to my data
03:32 < RLa> of, you mean update?
03:32 < opus_> I want to insert a row with the next id
03:32 < RLa> next to what? :)
03:32 < opus_> but its my internal id, which is a number like 1 2 3 4 5
03:32 < opus_> if I insert a new row, it'd have internal_id 6
03:33 < RLa> is that possible with mongo at all?
03:33 < opus_> it doesn't look like it...
03:33 < chapel> have to count and update
03:33 < chapel> or keep a counter outside
03:33 < RLa> i think it's not possible with eventual consistency at all
03:34 < opus_> omg. 
03:34 < chapel> well, you can use a unique index as well, will keep duplicate ids from happening
03:34 < chapel> but RLa has a point
03:34 < chapel> objectids are sequential
03:34 < chapel> by time and have a counter
03:34 < opus_> i need the user to eventually type in that id later on
03:34 < RLa> but only for a client
03:35 < RLa> hm, why not use uuid or objectid
03:36 < RLa> or is the ordering needed, as in the sequence 1,2,3, etc?
03:40 < opus_> just to be able to type it in or give the id over the phone
03:40 < opus_> doesn't exactly have to be a sequence, just short and to the point and unique
03:41 < chapel> well
03:41 < chapel> just use a unique index on that field
03:41 < chapel> and then when you create a new doc with an id, it will error if its taken
03:41 < chapel> so you can change it
03:44 < opus_> 'optimistic loop' 
03:44 < opus_> probably why transfers in dwolla fail every once and a while
03:53 < cryptopsy> how to list installed packages with npm?
03:53 < gkatsev> npm list?
03:53 < cryptopsy> thanks
03:54 < cryptopsy> what about for the present dir instead of global?
03:54 < daleharvey> $ brew upgrade node
03:54 < daleharvey> Error: node-0.6.18 already installed
03:55 < gkatsev> cryptopsy: it should tell you the ones installed locally
03:55 < daleharvey> thats weird, I want > 0.8.0 (I usually install from source on other machines), how do I get homebrew to give me something recent
03:55 < gkatsev> cryptopsy: locally I mean in current dir
03:56 < Sly> gkatsev, <3
04:05 < cryptopsy> should i use var express=require('express'); , or how do i load a module the proper way nowadays?
04:05 < cryptopsy> my chat example also have var app=express();
04:05 < cryptopsy> not sure if that's needed
04:05 < gkatsev> you need both
04:06 < gkatsev> var express = require('express') loads in the module into a variable called express
04:06 < gkatsev> var app = express(); creates your server
04:06 < gkatsev> or the object you'll be using
04:06 < cryptopsy> what does var http=require('http');
04:06 < gkatsev> same thing just with the http module
04:08 < sinclair> someone here was developing a JavaScript Win32 API wrapper 
04:08 < sinclair> anyone familiar with that?
04:08 < gkatsev> probably Benvie 
04:08 < opus_> in Jade, I'm getting an error message saying it can't find "length, undefined" but I'm not using the length function. Any idea?
04:08 < Benvie> yeah
04:08 < cryptopsy> gkatsev: where's the doc for socket.emit?
04:09 < Benvie> https://github.com/Benvie/node-Windows
04:09 < gkatsev> if it's node's sockets, on the node docs, otherwise, whatever module socket is.
04:12 < cryptopsy> gkatsev: what does this do?  res.sendfile(__dirname + '/index.html');
04:13 < gkatsev> send index.html to the response?
04:13 < themiddleman> Hello folks!
04:13 < airtanah> hello
04:13  * gkatsev goes to sleep
04:13 < gkatsev> night
04:14 < themiddleman> Is there a way to know when a file writeStream has successfully written "something" so the file exists?  I am piping an http request to fs.createWriteStream
04:15 < themiddleman> I assume the first data event from the write stream means it's starting to write the file which is too soon.
04:16 < EhevuTov> opus_, length is a string attribute, not a function
04:17 < themiddleman> Should I just poll fs.stat?
04:17 < EhevuTov> themiddleman, is there an error event that you can rely on? I suggest doing that if you can
04:19 < themiddleman> EhevuTov: when trying to read the file later you mean?  I am trying to find the point that a file is able to be read from
04:19 < EhevuTov> themiddleman, it's usually a bad idea to poll and do sync stuff while at the same time doing async stuff. For instance, if you do fileexists() in sync and you delete a file async, you'll have issues similar to race conditions
04:19 < EhevuTov> themiddleman, hrm. well, the stream writes in small chunks
04:20 < EhevuTov> themiddleman, so maybe just attach a listener to the .on('data',?) event
04:21 < EhevuTov> like mystream.on('data', function() { console.log("data?");});
04:22 < EhevuTov> themiddleman, actually hold up. That might be on read data event and not write...
04:26 < EhevuTov> themiddleman, I'm not sure if I'm following you, but I'd add another callback function on your 'data' event. Or better yet, just pipe that file to your reader functionality. That way the pipe will decide when it's time to read
04:27 < themiddleman> k, thanks
04:27 < EhevuTov> filewritestream.pipe(fileReadStream);
04:27 < cryptopsy> im running node locally and this popup that supposed to ask the user's name in the chat example never pops ups
04:27 < cryptopsy>  socket.emit('user', prompt("What's your name?"));// doc where?
04:27 < cryptopsy> how to visualize data on the socket?
04:27 < EhevuTov> themiddleman, and then do your read functions on the 'data' event of your fileReadStream
04:28 < EhevuTov> cryptopsy, not sure I follow, but I look at what has transpired over the wire via Chrome developer tools
04:29 < cryptopsy> trying to debug where that prompt is
04:34 < EhevuTov> cryptopsy, I think it was in the "Network" tab and then make sure you have All selected, and then granularize as warranted
04:34 < EhevuTov> Network->Websockets
04:34 < EhevuTov> cryptopsy, of course, if you degrade to XHR, it will be there I'd assume
04:47 < nezZario> how can i tell if node.js was built 'statically' or not 
04:48 < nezZario> or .. whatever .. really new to this .. not sure how python or whatever it's using works
04:48 < nezZario> 2nd time building .. i know the 1st time it complained that something wasn't built in some specific way and it might be slower than the 'other' way =)
05:06 < mscdex> nezZario: it's built "statically" by default
05:07 < mscdex> nezZario: but, you can examine the contents of process.config to see what the compile settings were
05:10 < mscdex> ryah is disappearing off teh internets? :O
06:16 <@konobi> Nexxy: any idea if owen puts his slides online somewhere?
06:18 < dehimer> I try remove element from array of document by name. What I do wrong? http://pastebin.com/jxjuBZyw
06:25 < crazy3k> Hi there.
06:26 < crazy3k> Anyone with experiencie with Express and Passport? I'm trying to do the simplest authentication example and I can't make it work: http://stackoverflow.com/questions/13008860/error-failed-to-serialize-user-into-session-wrong-function-passed-to-serialize
06:30 < TehShrike> mscdex: ...what?  Why would ryah leave us?
06:33 <@konobi> owenb: ping
06:34 < dileep> hello node.js
06:34 < EhevuTov> yo
06:34 < lukeholder> can you run node on the JVM?
06:34 < lukeholder> or v8 is C only?
06:34 < lukeholder> haha
06:34 <@konobi> c++
06:34 < dileep> check this out link any error in code plzzz   https://github.com/visionmedia/expressjs.com/tree/gh-pages/2x/examples/auth
06:34 < lukeholder> ok
06:35 < crazy3k> Express and authentication, that's exactly what my question is about :)
06:36 < crazy3k> Care to give it a look? http://stackoverflow.com/questions/13008860/error-failed-to-serialize-user-into-session-wrong-function-passed-to-serialize
06:39 < dileep> syskk is here
06:39 < dileep> someoneweird is here
06:39 < dileep> goku22 is here
06:39 < dileep> rla is here
06:40 <@konobi> ?
06:40 < syskk> yep..
06:40 < syskk> hi
06:41 <@konobi> mmalecki: recovered?
06:41 < dileep> hi syskk
06:45 < dileep> syskk,i am trying o run the code but i after running in browser i get two fields,nd when i put the fields values the page is still same as it opens...have a look of code...	git://gist.github.com/3937271.git
06:50 < airtanah>  lukeholder what are you trying to do?
06:51 < lukeholder> airtanah: see #ruby
06:52 < dileep> syskk, are you looking at the code
06:52 <@Nexxy> konobi, I hasn't a clue
06:52 <@Nexxy> konobi, also did I respond to you earlier?
06:54 <@konobi> yup!
06:56 <@Nexxy> oki
06:57 <@konobi> no worries, he's on channel so i pinged him
06:57 < sshaginyan> Guys I want to share an array between master and worker. Is the only way to do this is use process.send?
06:57 <@konobi> probably
06:57 < sshaginyan> or worker.send()
06:57 < TehShrike> sshaginyan: perhaps you want to check out dnode?
06:58 < crazy3k> syskk: Thanks for the reply, but unfortunately that didn't help :(
06:58 < sshaginyan> TehShrike: Your suggesting to use this instead of cluster?
06:59 < cryptopsy> nodejs serves my page but dont display images in it, i pass <img src="img.jpeg"> , redirects to localhost:img.jpeg ?
06:59 < cryptopsy> sorry localhost:8080/img.jpeg
06:59 < cryptopsy> so i guess nodejs have to serve my image somehow?
06:59 <@konobi> cryptopsy: sure... do you have something serving those files?
06:59 < cryptopsy> my web server is serving my html page
07:00 < cryptopsy> but the images in it are not being displayed, and the images are in the same dir as the page
07:00 < TehShrike> sshaginyan: I didn't know you were using cluster
07:00 <@konobi> cryptopsy: node won't do that for you... so it depends on your app
07:00 < sshaginyan> TehShrike: So would you know how to do it using cluster?
07:01 < TehShrike> I've never used cluster
07:01 < sshaginyan> TehShrike: For some reason I'm hesitate in using other libraries… Is this normal?
07:01 < sshaginyan> I*
07:02 < cryptopsy> konobi: what?
07:02 < cryptopsy> the source code is in my page
07:02 < cryptopsy> what app
07:02 < cryptopsy> app.js ?
07:02 < cryptopsy> or my browser?
07:02 < TehShrike> sshaginyan: I think it depends a lot on the library
07:03 < sshaginyan> TehShrike: There are so many libraries out there you barely have to write any code at all
07:04 < TehShrike> That'd be nice! :-)
07:04 < TehShrike> Think of all the things you could make!
07:05 <@konobi> cryptopsy: not sure what the deal is with app.js
07:05 < cryptopsy> app.js is serving my html page
07:05 < cryptopsy> the image is define din html page
07:06 < cryptopsy> node is fucking up the image paths
07:06 <@konobi> cryptopsy: i doubt that
07:06 < cryptopsy> y
07:06 <@konobi> lemme check the docs again
07:06 < deoxxa> cryptopsy: it's pretty unlikely that node is "fucking up the image paths"
07:06 < cryptopsy> deoxxa: no, it says right here
07:07 <@konobi> cryptopsy: #appjs is also available
07:07 < cryptopsy> localhost:8080/myimg.jpeg
07:07 < deoxxa> cryptopsy: maybe if you slow down a bit and explain what's actually happening
07:07 < cryptopsy> deoxxa: maybe you wanna slow down with your replies and read up
07:07 < deoxxa> get more mad
07:07 <@konobi> cryptopsy: you get served a "page"... but anything other than that needs routed... including image files
07:07 < cryptopsy> cry more
07:07 < TehShrike> :-|
07:08 < cryptopsy> konobi: <img img="myimg.jpeg"> is a relative path, so node must not serve me a literal 'localhost:8080' link
07:08 < cryptopsy> i run node from the same dir as the files
07:08 <@konobi> cryptopsy: no... it doesn't have to serve anything unless you tell it to
07:08 < cryptopsy> yea, its serving my page 
07:09 < cryptopsy> what do you want me to tell it?
07:09 <@Nexxy> cryptopsy, what is node?
07:09 <@konobi> https://github.com/appjs/appjs/wiki/Using-express-to-handle-local-http-requests
07:10 < cryptopsy> konobi: i don't understand
07:10 <@konobi> cryptopsy: try #appjs
07:10 < cryptopsy> do what there?
07:10 <@konobi> see how it routes requests
07:10 < cryptopsy> express is routing requests locally?
07:10 < deoxxa> lol
07:11 <@konobi> oh wait
07:11  * Sly pokes deoxxa.
07:11  * deoxxa pokes back
07:11 < TehShrike> no u
07:11 <@konobi> not appjs just a node server file called app.js ?
07:11 < cryptopsy> yes
07:11 <@konobi> heh
07:11 < deoxxa> cryptopsy: 1) paste source 2) ??? 3) profit
07:11 <@konobi> pastebin your app.js then
07:12 < cryptopsy> deoxxa: 1) die a gutter 2,3,4...n)??
07:12 < deoxxa> aw
07:12 < cryptopsy> in a *
07:12 < deoxxa> that's not nice
07:12 < cryptopsy> you're not very nice
07:12 < deoxxa> trying to help here, man
07:12 < cryptopsy> you wanna dick around and ride my ass because you're bored
07:12 < TehShrike> lulz.
07:12 < TehShrike> Yeah, deoxxa, quit saying things about stuff!
07:12 < deoxxa> letting us have a look at the code will be a good step towards us understanding the problem and eventually helping you work it out
07:12 < cryptopsy> best case scenario is we both get banned
07:12 < TehShrike> With your fancy "routing" and your "words"
07:12 <@konobi> cryptopsy: see that sign beside my name? i decide if your nice or not... and right not your not
07:13 < cryptopsy> konobi: yea, evil begets evil
07:13 < cryptopsy> i think i've been nice to you though, regardless of your ops
07:13 < TehShrike> Your MOM begat evil
07:13 < TehShrike> BAM
07:13 < deoxxa> OHHHH
07:13 < deoxxa> that's a burn
07:13 <@konobi> cryptopsy: so... i got confused because there's appjs.org
07:13 < cryptopsy> konobi: 'maybe you wanna read up' was followed up by 'get more mad'
07:14 < cryptopsy> konobi: np
07:14 <@konobi> cryptopsy: beyond that, we need to see the source
07:14 <@konobi> because we don't know what you're using... there's lots of libraries
07:14 < deoxxa> cryptopsy: well evidently you followed that advice - i'm placing you at "platinum mad" on the mad scale right now
07:14 < cryptopsy> konobi: its the typical basic chat app - the page is serving correctly, and the html elements should be interpreted --------------- not doing any redirection tricks
07:14 < cryptopsy> deoxxa: tldr
07:14 < Sly> TehShrike, I love you.
07:14 < Sly> That is all.
07:15 < TehShrike> Sly: <3
07:15 < Sly> <3
07:15 <@Nexxy> d'awww
07:15 <@konobi> cryptopsy: again... source 
07:15 < TehShrike> deoxxa: I'm palladium mad
07:15 < cryptopsy> konobi: which ile
07:15 < Sly> Nexxy, I love you too dear. <3
07:15 <@Nexxy> Sly, <3
07:15 < deoxxa> TehShrike: oh wow
07:15 < other_guy> other_guy: just released the first version of our nodemailer connect middleware called express-airmail… https://github.com/Coradine/express-airmail
07:15 <@konobi> cryptopsy: whatever node file is serving your html file
07:15 < Sly> Oh for fucks sake. I lost my lighter.
07:15 < deoxxa> TehShrike: i'm at a relatively mellow "kitten mad" right now
07:15 < TehShrike> lol
07:15 < TehShrike> THAT'S NOT EVEN AN ELEMENT
07:16 < deoxxa> see!
07:16 <@konobi> deoxxa: i dunno... i've had a kitten before... they can scratch the shit out of you
07:16 < deoxxa> very un-mad
07:16 < deoxxa> konobi: but they're all fluffy and cute most of the time :3
07:17 < cryptopsy> konobi: http://pastebin.com/HQnkFZ9R
07:18 <@konobi> ta
07:18 < TehShrike> Well, there you go I suppose
07:18 < nlf> other_guy: how's the multipart/mixed parsing going?
07:18 <@konobi> cryptopsy: k... have a look at the express 'static' middlewarte
07:18 < TehShrike> Serving up that one file quite nicely
07:19 < other_guy> nlf, great, I have it working well in nodiak
07:19 < cryptopsy> konobi: what's a middlewarte
07:19 < nlf> nice
07:19 < other_guy> I need to finalize the user facing API for link walking
07:19 < nlf> i pushed a very preliminary version of both a stripped down pure javascript protobuf parser, and a riak protobuf client earlier today
07:19 < other_guy> but nodiak 0.0.8 will include link-walking and the native C parser
07:19 < Sly> mdedetrich, <3
07:20 < other_guy> nlf, sweet :-)
07:20 < mdedetrich> Sly: yo
07:20 <@konobi> cryptopsy: node only does what it tells you... all you've done so far is tell it how to serve the html file.... nothing other than that will be served... so you can use the 'static' middleware to tell it to serve flat files from somewhere
07:20 < nlf> the first benchmark i did showed it's very significantly faster
07:20 < nlf> compared it and simpleriak, did 10,000 gets of a short json object
07:20 < other_guy> I need to reformat the nodiak README to make better use fo headings, it's hard as hell to follow right now
07:20 < nlf> simpleriak took ~27.4 seconds
07:20 < nlf> new client took 8.3
07:20 < other_guy> wow
07:21 < cryptopsy> konobi: i got some 500 pages, am i gonna have to modify all?
07:21 < other_guy> very nice
07:21 < other_guy> I'm actually surprised by that though
07:21 < chovy> can someone look at why my embedded document is failing (mongoose) -- I'm trying to add a comment to an item:
07:21 < cryptopsy> or is it something i define at the top of my app.js file?
07:21 < chovy> https://gist.github.com/e7ee308cfdeb7267f3e3
07:21 < nlf> a lot of it is just overhead from http
07:21 < cryptopsy> konobi: i've read about it just now and dont understand how it's relevant
07:21 < other_guy> did you happen to set your maxSockets higher in the HTTP client
07:21 < other_guy> ?
07:21 < crazy3k> I'm seeing the same pattern all the time in Node.js sample code. When they want to have a function doSomething(neededParm) they create a doSomething(neededParm, fn) function. And if the function succeeds, they call fn(null, result), and otherwise they call fn(new Error("something")); Why is that?
07:21 < nlf> nope
07:21 < other_guy> because the default is 5
07:22 < other_guy> so you're getting a lot of queued up backpressure in the HTTP library
07:22 < Sly> crazy3k, it's called asynchronous coding.
07:22 < nlf> well, it uses request
07:22 < nlf> which i think may tweak the maxSockets
07:22 < other_guy> right
07:22 < other_guy> nope, 5 :-)
07:22 < Sly> crazy3k, they do that so that functions aren't blocking the execution chain. Instead, the `fn` is called after the function has finished.
07:22 < other_guy> unless that's a different lib
07:22 < nlf> ah, well then, that's probably a contributing factor
07:22 < chovy> crazy3k: you need to provide a callback 
07:23 < Sly> chovy, he's asking what the callback does.
07:23 < other_guy> yeah, I've done a lot of Erlang-native driver benchmarking for HTTP and Protobufs
07:23 < nlf> i waited for callbacks to fire before triggering the next call
07:23 < cryptopsy> is there an express irc channel?
07:23 < nlf> so i'm sure it's at least a reasonably fair comparison
07:23 < opus_> in Mongodb, if I have a nested document, but I don't have an ID, and I want to delete it, how do I create an index
07:23 < cryptopsy> why am i even looking at express
07:23 < opus_> and refer to that index id as the one I want to delete?
07:24 < NodeX> opus_ : ask in #mongodb
07:24 < other_guy> nlf, I can say for sure that protobufs are faster in a lot of cases, but it's usually like 10-15% improvement on small requests.
07:24 < chovy> can you not use schemas for embedded docs in mongoose?
07:24 < opus_> NodeX, I know, but people seem to know more around here at this time of night
07:24 < nlf> i'd expect more of an improvement on small requests, just because of overhead
07:24 < other_guy> on large requests the overhead of data on the wire swamps the savings 
07:25 < deoxxa> cryptopsy: #express
07:25 < other_guy> yeah
07:25 < other_guy> nlf, nice work though :-)  I can't make heads or tails of protobufs implementation in JS, so you're way ahead of the curve compared to me :-)
07:25 < other_guy> I'd love for nodiak to have a protobufs backend just to make it feature complete.
07:26 < nlf> it wasn't as hard as i was expecting, honestly
07:26 < other_guy> My goal is for it to be as complete as the Erlang native client
07:26 < nlf> https://github.com/nathan-lafreniere/protobuf.js and https://github.com/nathan-lafreniere/riakpbc if you want to see what i've got so far
07:26 < nlf> there's very little documentation, but feel free to check it out
07:27 <@konobi> cryptopsy: sorry, my phone died... anything that isn't handled will be a 500 by default
07:27 < nlf> i implemented just enough of protobuf to allow for the riak client
07:27 < other_guy> sweet, thanks
07:28 < TehShrike> cryptopsy: http://expressjs.com/api.html#app.use
07:29 < other_guy> nlf, the next thing I'll be releasing is our Data Mapper library, Chinood
07:29 < other_guy> sort of like Ripple for nodiak and node.js
07:29 < nlf> i'm going to work on implementing riakpbc to be a more or less drop in replacement for simpleriak
07:29 < nlf> yeah? nice
07:30 < other_guy> yeah, we've been using it internally for a few months now.
07:31 <@konobi> cryptopsy: node is a lighwieght network server... express does http (remember, it's just ascii)... it's not a "webserver" in the apache sense... you need to enable functionality, either with middleware or your own code
07:31 < other_guy> Finally settled on a stable API, and I'm working on auto-backing a few primitive types with CRDT's so they auto-resolve on read.
07:31 < other_guy> So the CRDT's are transparent to the end-user
07:31 < nlf> that's cool, i'll definitely check it out
07:31 < other_guy> like they should be.
07:31 < other_guy> Because they're a bitch to manage manually
07:32 <@konobi> cryptopsy: make sense?
07:33 < [AD]Turbo> hi there
07:34 < nlf> next step for riakpbc is to learn enough erlang to write the mapreduce functions in that
07:34 < cryptopsy> konobi: yes
07:35 < cryptopsy> thanks
07:35 <@konobi> cryptopsy: cool... so we're calmer now, yes? =0)
07:35 < cryptopsy> n
07:35 < cryptopsy> first, don't know what you want from me beyond this level of respect
07:35 < cryptopsy> maybe i throw in a smilee every 5 lines
07:35 < other_guy> nlf, I really like Erlang, but it took a long time to get used to
07:36 < nlf> i've not really tried using it
07:36 < cryptopsy> but don't understand what effect this will have when i deploy remotely
07:36 < nlf> i started reading on it a little
07:36 < other_guy> but that's exactly the way I learned it.  starting with Riak MapReduce and a copy of "Learn You Some Erlang for Great Good" on my Kindle
07:36 < nlf> yeah that's what i've been reading
07:37 <@konobi> cryptopsy: you're learning... that's fine... but node != (anything else you know)
07:37 < cryptopsy> i'm not learning anything
07:37 < other_guy> I wanted to do our whole REST API as a WebMachine app, but I went with node.js instead for speed of development and maintainablity
07:37 < nlf> really i just need to make myself write something with it
07:37 < other_guy> yeah, for me it was a necessity
07:37 < cryptopsy> konobi: node not serve http isn't the confusion here
07:37 < other_guy> I couldn't do MapReduce in JS effectively
07:37 <@konobi> cryptopsy: ?
07:37 < cryptopsy> the entropy is there
07:38 < nlf> i've got it working with javascript functions, i've just read enough benchmarks to realize i can make it quite a bit faster if i make it work with erlang instead
07:38 < cryptopsy> i tell node to load express, so now question is why express want this long command to display images
07:39 <@konobi> express is a framework... it's not apache
07:39 <@konobi> express does not serve anything by default
07:40 < cryptopsy> i don't have a line to tell it to use static path for html
07:40 <@konobi> comment out your "app.get('/'..." and you'll get a 500
07:40 < nlf> and it definitely makes sense, just spinning up the javascript interpreter is quite a bit of delay
07:40 < cryptopsy> app.get have __dirname prefix
07:40 < cryptopsy> app.use(express.static(path.join(__dirname, '')));
07:40 <@konobi> cryptopsy: try "localhost:8080/index.html"
07:40 < cryptopsy> still don't know how to use pwd instead of public in ''
07:41 < cryptopsy> what do you mean try it
07:41 <@konobi> cryptopsy: it's serving localhost:8080/ not localhost:8080/index.html
07:41 < cryptopsy> yea, so what
07:41 < cryptopsy> konobi: is . in quotes in that line?
07:41 <@konobi> and you app spits out the content of pwd/index.html
07:42 < other_guy> nlf, it's basically impossible to use the JS mapreduce in production
07:42 <@konobi> when you hit /
07:42 <@konobi> if you hit /index.html it will be 500
07:42 < nlf> just because of the overhead?
07:42 < cryptopsy> yea s owhat
07:42 < other_guy> once you have any non-trivial amount of data it's way too easy to choke the JS VM's to death and run out of RAM allocated to them
07:42 <@konobi> so... you've told the app how to serve / and nothing else
07:42 < nlf> oh yeah, that i can definitely see
07:43 < cryptopsy> what exactl does __dirname do?
07:43 < nlf> most of the mapreduce i do is pretty trivial anyway
07:43 <@konobi> tells you which directory you're running in
07:43 < other_guy> and since the RAM allotment is static the only solution is to eat up valuable RAM all the time to make sure they don't get starved, but then you're sucking up hundreds of megabytes of RAM in reserve just for MR
07:43 < nlf> things like checking for extra indexes
07:43 < cryptopsy> konobi: i guess that don't apply to images
07:43 <@konobi> it's a directory
07:44 < cryptopsy> '/index.html' resolves to mydir/index.html, but not the images
07:44 < cryptopsy> konobi: in that line i pasted, where do i put it? how to give pwd?
07:44 <@konobi> try app.use(express.static(path.join(__dirname, 'mydir')));
07:44 < other_guy> ah, well it's definitely worth learning Erlang to use mapreduce in Riak… it takes MR from being a "you can sorta use this, but don't expect much" to "yeah go ahead and use this in realitime as long as you're not expecting miracles"
07:44 < cryptopsy> konobi: mydir can change, want it to be __dirname
07:45 <@konobi> and are your files in that directory?
07:45 < cryptopsy> yes
07:45 < other_guy> ultimately the problem with all those features though is that they scale inversely to the size of your cluster
07:45 < other_guy> which sorta sucks
07:45 < other_guy> since KV scales with the cluster, which is awesome
07:45 <@konobi> and you're executing from the dame directory?
07:45  * deoxxa waits
07:45 < cryptopsy> konobi: yes
07:46 < other_guy> so you can only really use those features like Search, 2i's, MR, Link walking, etc. when you know you're going to have a small cluster.
07:46 < other_guy> I've had to un-use a fair number of those features.
07:46 < nlf> right
07:46 <@konobi> cryptopsy: k... remove your app.get('/' and then use static... and try to get index.html served by the middleware... at that point the images will work
07:46 < nlf> i use 2i's like crazy
07:46 < other_guy> yeah, we used to too
07:46 < nlf> what do you use instead?
07:46 < nlf> just maintain a key of links?
07:46 < cryptopsy> static what
07:46 < cryptopsy> the line i pasted?
07:47 <@konobi> app.use(express.static
07:47 < other_guy> Basically.  We try to rely on key composition (so we can programatically derive keys) and our own 2i's stored on certain objects or in Redis
07:47 < cryptopsy> yea that's pretty useless, i dont know where the doc is and the express channel is ignoring me
07:48 < other_guy> There are some cases where we use Riak Search to get a key list to feed MR
07:48 < deoxxa> cryptopsy: i pasted links to the docs
07:48 < cryptopsy> deoxxa: you pasted a lot of useless shit
07:48 <@konobi> http://expressjs.com/
07:48 < cryptopsy> could have figured that out while high on crack
07:48 < cryptopsy> right?
07:48 < nlf> gotcha, so for the most part you just track your relationships in redis or using key names and avoid 2i/mapred/search when possible
07:48 < other_guy> but we've basically had to abandon 2i's, though I've been working with the guys at Basho to figure out how to change the locality of 2i's so that they're more like Riak Search so they don't scale so poorly
07:49 < deoxxa> cryptopsy: ... seriously man, i'm not trying to offend you. i'm trying to help. if you can just stop acting like i'm screwing with you, maybe we can get somewhere.
07:49 < nlf> search scales ok?
07:49 < other_guy> well it scales less bad
07:49 < cryptopsy> deoxxa: i think you got a personality problem, where you're a big dickhead but don't realise it --- this takes the form of pasting links and assume its all obvious, or ignore question that seem banal, like i asked if . is pwd, or if it should bei n quotes, and then vanish because that's too little of a question for you to answer
07:49 < other_guy> It still scales inversely and it has problems with balance based on terms
07:50 < other_guy> kenperkins in the #riak room from Clipboard.com is a treasure trove of information on Riak Search
07:50 < other_guy> He's up in Seattle
07:50 < nlf> that explains why the basho guys told us that we probably shouldn't use 2i
07:50 < cryptopsy> why would you give me the expressjs website like 5 times, but can't tell me if . is in quotes or not --- i think any person can go to the expressj website considering i joind the channel
07:51 <@konobi> cryptopsy: warning 1
07:51 < other_guy> yeah, I had a come to jesus lunch with Casey Rosenthal here in PDX over that issue.
07:51 < cryptopsy> konobi: np
07:51 < sshaginyan> Can I attach an event to an array when it's not empty?
07:51 < cryptopsy> konobi: ban me now, i don't give a fuck
07:51 < sshaginyan> array.on('notEmpty')
07:51 < other_guy> He also shuddered when I said, "and we're using post-commit hooks to feed PubSub channels"
07:51 < nlf> it seems like they're really not happy with any of their indexing/linking/searching methods
07:52 < other_guy> well, it's a really, really hard problem to solve
07:52 <@konobi> cryptopsy: seriously... we're trying to help you out... but you are making it a little tricky
07:52 < nlf> so it really does become a matter of store your relationships elsewhere and just put the data in riak
07:52 < cryptopsy> konobi: that's really not what it is
07:52 < cryptopsy> what have you got against me personally?
07:52 < other_guy> I think they're trying, bit yeah they're basically throwing spaghetti at the wall and seeing what sticks
07:52 < cryptopsy> its not like i rage at you
07:53 < nlf> i've got one project that will probably never have a cluster more than a handful of nodes, so performance isn't really as big of a concern
07:53 < nlf> but i've got another that could potentially see quite a few more
07:53 <@konobi> cryptopsy: i've been doing this stuff for years... yet you assume that i'm stupid about it
07:53 < cryptopsy> not at all
07:53 < nlf> so it's kind of tricky to figure out how to store this stuff
07:53 < other_guy> I think Search has the best shot at being the go to indexing scheme in the future
07:53 < Sly> cryptopsy, I like how you think anything that's been said to you is a personal attack.. when absolutely none of us know who you are.
07:53 < nlf> that's good to know
07:53 < Sly> I think you need to get over the "everyone's out to get me" shit.
07:53 < cryptopsy> i think you got expertise in many general cases and have to guess from a larger set of possiblities than im familiar with
07:53 < nlf> which is counterintuitive seeing as it's disabled by default
07:53 < Sly> /my two cents
07:53 < cryptopsy> Sly: i have no idea who you are
07:53 < other_guy> lol, yeah
07:54 < nlf> i haven't really used it enough to know
07:54 <@konobi> cryptopsy: so index.html is special, right?
07:54 < Sly> cryptopsy, that's probably a good thing. Can we keep it that way?
07:54 < cryptopsy> hopefully i won't have a dollar full of bullshit
07:54 < other_guy> well the built-in JSON indexer is great
07:54 < nlf> the pbc api in their documentation sucks for it
07:54 < cryptopsy> konobi: i don't know
07:54 < nlf> i just get errors out of it
07:55 < other_guy> so if you're storing JSON it's very easy to search your data using it… you still get pretty nasty balance problems, but they're working on those
07:55 < nlf> yeah, we store almost exclusively json
07:55 < other_guy> likewise
07:55 < nlf> and it's definitely easy enough to just put the keys i index directly into the object
07:56 < nlf> i would like if the docs were a little more clear
07:56 < other_guy> I wrote a MsgPack indexer for it, but we ended up not using it, because the encode/decode speed in node.js and Erlang was actually quite a bit worse than JSON, and it didn't really save that much time on the wire, and it sucked not to be able to just wireshark the traffic to see what was going on
07:57 < nlf> yeah, i played with msgpack for a while too and found the same thing. json is faster and already there, no reason to not just use it
07:57 < chovy> res.json({comment: item.comment}) includes comment.user
07:57 < chovy> my password hashes are being returned in json output
07:57 < other_guy> my first Riak project was using 0.12… feel grateful for the docs you have :-)
07:57 <@konobi> cryptopsy: in HTTP terms "/" and "/index.html" are entirely different things... so you need to treat express the same way
07:58 < nlf> the parameters say that q is the bucket to search, and index is "the name of the index to search"
07:58 < cryptopsy> dont know what you're getting at or why you're telling me this
07:58 < other_guy> that doesn't make sense
07:58 < other_guy> q is the solr query
07:58 < nlf> http://docs.basho.com/riak/latest/references/apis/protocol-buffers/PBC-Search/
07:58 < other_guy> index is the bucket
07:58 <@konobi> in "app.get('/'" you are pointing to a specific file to deliver... so that's why "/" is working fo you
07:59 < other_guy> yeah no
07:59 < other_guy> q is the solr query
07:59 < cryptopsy> konobi: ye so what?
07:59 < other_guy> index is the bucket
08:00 < other_guy> check the HTTP API it's more clear about that
08:00 <@konobi> the express middleware 'static' says if you get HTTP "/foo.img" serve it from "express.static('this/folder/here' which is this/folder/here/foo.img
08:00 < other_guy> that's a pretty nasty screw up in the docs
08:00 < nlf> i don't see where they even have search documented in the http api any more
08:00 < other_guy> which they should have noticed on this line...
08:00 < cryptopsy> path.join isn't even required in that command
08:00 < other_guy> q: "pig*"
08:01 < other_guy> that's clearly a wildcard search parameter
08:01 <@konobi> sure, it can be relative or absolute... but it's relative to where the server is being run from
08:01 < nlf> so index is the bucket?
08:01 < nlf> and q is the actual query
08:02 < other_guy> yeah
08:02 < cryptopsy> do all dirname end in / ?
08:02 < other_guy> nlf, http://docs.basho.com/riak/latest/cookbooks/Riak-Search---Querying/#Querying-via the Solr Interface
08:02 < nlf> so if i wanted to find anything with a field named "owner" set to "me" in the bucket "articles" i'd do { index: 'articles', q: 'owner:me' } ?
08:02 < other_guy> yep
08:02 < cryptopsy> dirname+'..' is literal .. or interpreted .. ?
08:02 < nlf> that makes way more sense
08:03 <@konobi> cryptopsy: ?
08:03 < nlf> and if i don't specify a field with 'field:' as a prefix, it just searches the whole object?
08:03 <@konobi> cryptopsy: tried console.log() with the variable in mind?
08:03 < cryptopsy> konobi: static(dirname+'..') = /a/b/../ ?
08:03 < other_guy> technically it's the index name, you can create indexes that have no relationship to buckets if you want, by by default when you enable indexing on a bucket (rather than completely manually manipulating the index yourself) the index == the bucket name
08:03 < cryptopsy> konobi: i try nothing
08:04 < other_guy> nlf, that I'm not sure of.  I think so
08:04 < nlf> oh ok
08:04 < nlf> so by default the indexes created are based on bucket
08:04 < other_guy> you might have to supply a query like q: "*:*" to get everything
08:04 <@konobi> cryptopsy: well, give it a try
08:04 < cryptopsy> i get 100s of commands from tech geeks that trying dont work or even worse work with a side-effect
08:04 < cryptopsy> not even sure what to try
08:04 < Sly> cryptopsy, that's because you're picking and choosing what you want to read.
08:04 < other_guy> yeah, there's technically a way to just ad-hoc dick around with creating indexes adding things to them, removing things from them, etc. all completely unrelated to stuff that's actually stored in Riak
08:04 < nlf> will it build an index without me actually doing anything other than enabling search? or do i have to build it manually?
08:05 < Sly> It's been explained to you numerous times.
08:05 <@konobi> cryptopsy: log the dirname
08:05 < cryptopsy> Sly: yea, like i choose not to read 95% of what you have to say, because its 95% irrelevant and incomplete, good point
08:05 < Sly> cryptopsy, apparently that was 5%. Does that mean you're done?
08:05 < other_guy> if you want to auto index a bucket you have to enable search and then add the appropriate pre-commit hook to your bucket
08:05 < cryptopsy> looks like you're trying to derail me to get my attention
08:05 < cryptopsy> how benevolent of you
08:05 < other_guy> and it doesn't go back and index old data
08:06 < other_guy> only new data you write
08:06 < Sly> Rather pointing out that other people are trying to be benevolent, and you continuously bitch about their suggestion.
08:06 < Sly> But whatever you say.
08:06 < cryptopsy> finally, now that i can have things my way, please leave me alone
08:06 < cryptopsy> tnx
08:06 < nlf> oh that's kind of lame
08:06 < other_guy> nlf, oh, and just so you don't completely screw your Riak data/indexes… the index data for the buckets is stored in special buckets with special objects that are preceded by an _
08:07 < nlf> so to index old data i have to do it manually
08:07 < other_guy> yeah, you'd have to read each object and write it back to Riak
08:07 < other_guy> anyway… DO NOT DELETE THE DATA IN THE BUCKETS THAT START WITH _
08:07 < nlf> good to know, i'm in a position where i can throw away data and not hurt anything currently, so that's not a big deal
08:07 < nlf> that's good to know
08:07 < other_guy> unfortunately you can't just delete the data.
08:08 <@konobi> cryptopsy: what background are you coming from, so we can intercept the assumptions?
08:08 < nlf> and i assume the pre-commit for indexing is a built in?
08:08 < other_guy> yeah
08:08 < other_guy> it's enabled in the tests for nodiak… once sec
08:08 < cryptopsy> konobi: graduate level academia
08:08 <@konobi> php, rails, ruby, django?
08:09 < cryptopsy> c, r, mathematica, haskell
08:09 < other_guy> nlf https://github.com/Coradine/nodiak/blob/master/test/test.js#L36
08:09 < nlf> awesome
08:09 < cryptopsy> [primarily]
08:09 <@konobi> cryptopsy: so zero practical experience?
08:09 < Pitel_IPEX> is there some `rm -rf somedir` equivalent in node.js?
08:09 < cryptopsy> konobi: n
08:09 <@konobi> well, that's what i'd read that as
08:10 < nlf> i already feel quite a bit more enlightened than i did before
08:10 < cryptopsy> not sure what you mean
08:10 < nlf> i might be re-implementing some of this tomorrow (technically today)
08:11 <@konobi> cryptopsy: so... express... work out using console.log(__dirname) to work out where that is
08:11 < nlf> for now, i'm headed off to get some sleep
08:11 < cryptopsy> just wanna know how .. is interpreted in quotes
08:11 < other_guy> nlf, great :-)  Well I've been working with this platform for a while, and I try to keep up on all the sciencey research on distributed systems, so you know where to find me if you ever have questions
08:11 < nlf> other_guy: thanks for the advice
08:11 < other_guy> likewise, night man
08:11 <@konobi> then you can work out where to run your .static() call from
08:11 < nlf> night
08:11 <@konobi> cryptopsy: it means different things in different respects
08:12 < cryptopsy> yes, and in this respect?
08:12 < deoxxa> cryptopsy: ".." is a literal string, it's not interpreted at all
08:13 <@konobi> cryptopsy: i have no idea in which "respect" you're running it, so you need to tell me what __dirname actually resolves to
08:14 < cryptopsy> express.static like before
08:15 < Tobsn> who was working for pusher in here again?
08:15 < Tobsn> creationix, was it you?
08:15 <@konobi> cryptopsy: what does console.log(__dirname) in you app give you
08:16 <@konobi> damn, i need to clean my keyboard... too many sticky keys
08:16  * Sly has no comment.
08:16 < cryptopsy> konobi: xahlee.info/UnixResource_dir/writ/html5_vs_intelligence.html
08:17 <@konobi> cryptopsy: counter with XY Problem
08:17 < cryptopsy> ?
08:17 < cryptopsy> oh tech geek humor
08:17 < cryptopsy> KISS
08:20 <@konobi> actually XY problem is a useful thing
08:20 < rendar> cryptopsy: whats that?
08:21 < deoxxa> > My website xahlee.org is 5 thousand pages of hand-crafted html
08:21 < deoxxa> hahaha
08:21 < mdedetrich> anyone know if there is a tag soup library for node
08:21 < mdedetrich> I can't seem to find one
08:21 < Sly> mdedetrich, ??
08:21 < deoxxa> mdedetrich: soupselect?
08:22 < deoxxa> mdedetrich: or cheerio
08:22 < Sly> ^
08:22 <@konobi> mdedetrich: apricot?
08:22 < Sly> ^ Whatever they said.
08:22  * Sly 's brain isn't working.
08:22 < Sly> It checked out about 3 hours ago.
08:22 < mdedetrich> thanks guys <3
08:28 <@konobi> cryptopsy: did you work out what __dirname actually was in your context?
08:28 < cryptopsy> deoxxa <-- never heard of emacs
08:28 < cryptopsy> konobi: n
08:28 < cryptopsy> i got confused and stopped
08:28 < deoxxa> ...
08:28 <@konobi> k... i'll be back in a bit then
08:28 < cryptopsy> is deoxxa still peck-typing?
08:29 < cryptopsy> deoxxa: i hope you get RSI like richard stallman, jamie zawinski, and forced to take up hard labor to feed yourself
08:29 < deoxxa> lol!
08:29 < deoxxa> i like you
08:29 < deoxxa> Nexxy: can we keep him, plz
08:30 < cryptopsy> there's lifetime of study in applied mathematics but you wanna explain over the course of two hours how to display images with relative paths
08:30 < cryptopsy> that's sad, and i'm ashamed to associate with you
08:32 < deoxxa> cryptopsy: do you like bowling
08:32 < deoxxa> cryptopsy: we should go bowling sometime, it'd be fun
08:33 < cryptopsy> do you have a personal blog?
08:34 < deoxxa> cryptopsy: i do! let's be blog-buddies! http://www.mastercj.net/blog/
08:34 < cryptopsy> i wish nothing more than god to smithe you for your impudence
08:34 < deoxxa> haha
08:35 < cryptopsy> blogging about your trips all over the world, real neat-o
08:35 < deoxxa> oh, oh, do more
08:35 < deoxxa> make fun of me for watching anime
08:36 < cryptopsy> i rather read 200 of xahlee's blogs in maths, literature, ergonomics, tech geek cults, and even xah's page on math jokes
08:37 < deoxxa> is this where it ends? :<
08:38 < cryptopsy> xahlee's p humble for someone cited in books, associates with renown scientists, and still have the time to talk to me on skype, but now i have the opportunity to associate with someone over irc who don't give a damn about his own commands, likes to paste them randomly, and answers his own questions at opportunistic times (like when its too late) to cover for shabby service
08:38 < deoxxa> keep going! keep going!
08:38 < deoxxa> i believe in you
08:38 <@konobi> deoxxa: shush
08:39 < deoxxa> lol
08:39 < cryptopsy> deoxxa trying to be a tough guy :)
08:39 <@konobi> deoxxa: you're such a troll baiter
08:39 < deoxxa> whaaaat
08:40 <@konobi> cryptopsy: academia means fuck all here... we're all just trying to get stuff done... take the ego out of the equation and just JFDI
08:41 < mdedetrich> how do you get the string from a buffer chunk?
08:41 < cryptopsy> xahlee never graduate college
08:41 < abrkn> is there an event in socket.io for any message?
08:41 < cryptopsy> and talks bad about the haskellers for being isolated in academia
08:41 < mdedetrich> haskell is beutiful
08:41 < mdedetrich> but
08:42 <@konobi> mdedetrich: .toString... check to see which charset you want
08:42 < mdedetrich> it really is stuck in acedemia
08:42 < cryptopsy> mdedetrich: 2deep for this channel
08:42 <@konobi> actually, i know a few places haskell is used in production
08:42 < mdedetrich> cryptopsy: the language design is beautiful, the ecosystem is terrible
08:42 < cryptopsy> konobi: i came in here ask how to display local images, pls dont pidgeonhole me into not being practical
08:42 < cryptopsy> mdedetrich: can't talk about that here
08:42 < abrkn> programming language debates - yay
08:42 <@konobi> cryptopsy: what is __dirname in your env?
08:42 < cryptopsy> abrkn: in pm, without me
08:42 < cryptopsy> konobi: pwd
08:43 <@konobi> you can console.log(__diname)
08:43 < cryptopsy> yes
08:43 <@konobi> so `pwd`/foo.img exists?
08:43 < mdedetrich> @konobi: awesome that worked, thanks. Is there a way to make http.get() automatically redirect if you hit a 302
08:43 < cryptopsy> express.static goes in app.get ?
08:43 < cryptopsy> konobi: yes
08:43 < mdedetrich> @konobi or any other type of redirect
08:44 <@konobi> mdedetrich: try the request npm lib
08:44 < cryptopsy> konobi: have no idea what im supposed to do, got a line that may not belong where it is
08:44 <@konobi> cryptopsy: k, and when you changed everything you restared your node app inbetween?
08:44 < cryptopsy> i didnt change everything, i only added a line after module loading
08:45 <@konobi> the app.use line?
08:45 < cryptopsy> yes
08:45 <@konobi> k... and have you tried hitting the url for the image directly?
08:45 <@Nexxy> wat
08:45 < cryptopsy> sure
08:45 <@konobi> cryptopsy: and it was a 200 or ?
08:46 <@konobi> Nexxy: ullo!
08:46 <@Nexxy> o hai
08:46 < cryptopsy> you mean localhost:8080 url or direct to image url?
08:46 <@Nexxy> this whole OS X thing is a trip
08:46 <@konobi> localhost:8080/foo.img
08:46 < mdedetrich> konobi: cheers man
08:46 < mdedetrich> konobi: <3
08:47 <@konobi> mdedetrich: np!
08:47 < cryptopsy> abrkn: at the peak of my malevolence, i will talk about abortions and haskell in the #religion channel around a crowd of teenagers
08:47 <@konobi> Nexxy: oh... that's quite the change, eh?
08:47 < cryptopsy> konobi: i have like 200 tabs, just gonna load it
08:47 < cryptopsy> sec
08:48 < cryptopsy> konobi: yes now it works
08:49 < cryptopsy> are there other http servers competing with express?
08:49 < AAA_awright> require(http) ?
08:49 < Tobsn> anyone an idea how the google web optimizer replaces those areas?
08:49 <@konobi> there's several
08:49 < cryptopsy> AAA_awright: why is that used in tandem with express sometimes?
08:49 <@Nexxy> konobi, yeah lol
08:49 < cryptopsy> any competition for socket.io?
08:49 < AAA_awright> cryptopsy: idk, I don't use express
08:49 <@konobi> Nexxy: surge protector next ime, eh?
08:49 <@Nexxy> cryptopsy, shoe
08:50 < Tobsn> <script>func('areaname')</script>default content</noscript> thats how you set it up - how would they replace the area between script end and noscript?
08:50 < cryptopsy> Nexxy: have you used it?
08:50 <@Nexxy> konobi, wouldn't have made a difference
08:50 < AAA_awright> It's really not that hard to serve HTTP requests yourself, guys, heh
08:50 <@Nexxy> cryptopsy, it's what I use yeah
08:50 < cryptopsy> it dont come up on google search
08:50 <@Nexxy> konobi, the current came from the USB port
08:50 < AAA_awright> I wonder why people feel the need to use some wrapper around http
08:50 <@Nexxy> through the AC adapter
08:50 <@Nexxy> into the wall
08:50 < AAA_awright> Just, why
08:50 <@Nexxy> out the other outlet into my phone
08:50 <@konobi> Nexxy: was it just me or was nodedublin a great time?
08:50 <@Nexxy> it was ridiculously amazing
08:50 <@konobi> cian++
08:50 <@Nexxy> srs
08:51 < cryptopsy> Nexxy: what's the homepage?
08:51 <@Nexxy> http://github.com/substack/shoe
08:51 < cryptopsy> are you the dev?
08:51 <@Nexxy> I typed it out for you.
08:51 <@Nexxy> no
08:51 <@Nexxy> lol
08:51 <@Nexxy> ^ SUBSTACK 
08:51 <@Nexxy> oh his nick is in caps now lol
08:52 <@Nexxy> <3 afplay
08:52 < purr> Let it be known that Nexxy hearts afplay.
08:52 < cryptopsy> back in the day geeks use 3 letter naming convention, now names are based on tech-geek by-product of the industry; works like file-system, stack, monad, lambda, recursion
08:53 < cryptopsy> maybe in the future nicknames will be based on lols-cats and pron
08:53 <@Nexxy> already are
08:53 < cryptopsy> words*
08:54 < cryptopsy> careful when talking to mona_d , may be a fat dude with a bib instead of a cute persian girl named mona
08:54 <@Nexxy> please be appropriate.
08:54 <@Nexxy> you're...
08:55  * Nexxy shifts awkwardly
08:55 < cryptopsy> is shoe abandoned?
08:55 <@Nexxy> no lol
08:55 < cryptopsy> url don't work
08:55 < cryptopsy> server was down, nvm
08:55 <@Nexxy> it's great
08:55 <@Nexxy> it uses streams
08:56 <@Nexxy> you should use it
08:56 < cryptopsy> any solution for wrapping images around images?
08:56 <@Nexxy> what?
08:56 < cryptopsy> imagine you have many small square images, and want to wrap around a large image
08:57 < cryptopsy> this isn't a trivial problem with border-image and canvas
08:57 < mdedetrich> @konobi: I'm trying to debug the dom I am using with soupselect, how do you print the dom contents as a string
08:58 < cryptopsy> for example - if user resize , should wrap more, and in the same order (popularity from top to bottom)
08:58 < cryptopsy> Nexxy: thumbnails around a video would be an example
08:59 < cryptopsy> is there a node package for hdf5 ?
09:00 <@Nexxy> I have no clue
09:01 < AAA_awright> hdf?
09:01 < cryptopsy> AAA_awright: its a database, good for storing mixed data
09:01 < cryptopsy> high performance
09:01 < mdedetrich> @konobi: mmv, appears to be an issue with the scraper
09:01 < cryptopsy> NASA uses it
09:01 < cryptopsy> Nexxy: any attempts to make animations/graphics easier with node?
09:03 < AAA_awright> Oh huh
09:03 <@Nexxy> cryptopsy, that's not really something I've spent too much time looking into
09:03 <@Nexxy> cryptopsy, I know there are image libraries for node
09:03 < cryptopsy> where did you find shoe?
09:03 < cryptopsy> word of mouth or consult some listing?
09:04 <@Nexxy> substack
09:04 <@konobi> cryptopsy: oh... you need a consult!?
09:04 < cryptopsy> ?
09:04  * konobi pushes down the urge to pimp himself... dammit
09:04 < cryptopsy> i'm not offering work
09:05 <@konobi> =0P
09:11 < Bioshox> Can anybody point me in the right direction, the following code doesn't give a response although it does when the resonse.end(); is inside the cursor fetch
09:11 < Bioshox> https://gist.github.com/b35e42bf637b1dbd3134
09:12 < mdedetrich> hmm, does anyone know if there is something similar to request; but works better with dynamic pages
09:12 < mdedetrich> something like phantom that does not require an external application to be installed
09:13 <@konobi> Bioshox: you need to do it at the end of each() rather than after the call to it
09:13 < Bioshox> The response.write?
09:14 <@konobi> so .each() gets called, and then directly afterwards you call response.end() even though you may not be finished
09:15 < Bioshox> Ah
09:15 < Bioshox> Thats an issue because I need to iterate all the mongodb objects out the database and respond them to the browser
09:16 < Bioshox> Thats works, placing it at the end, before the each finishes, but now my MongoDB doesn't iterate. 
09:18 <@konobi> Bioshox: had a look at the async lib? might help here
09:18 <@Nexxy> I have a registered version of sublime text 2
09:18 <@Nexxy> I feel so accomplished
09:19 < Bioshox> Hmm I've never looked into that, would this also be something socket.io coud help out wiht
09:19 <@Nexxy> or shoe
09:20 < Bioshox> okay cool
09:20 < Bioshox> ill look into shoe and socket.io
09:30 < SoulRaven> anyone use lo-dash module?
09:31 < SoulRaven> i don't know if _.orderBy can return numeric arrar
09:36 <@konobi> so cryptopsy gave up it seems?
09:38 <@konobi> deoxxa: also... behave... egg-ing on is not cool bro
09:42 <@konobi> mmm... jetlag... a pita
09:49 < deoxxa> konobi: wut
09:49 < deoxxa> konobi: dude if someone's attacking me personally (which he was), i'm going to do my best to waste their time
09:50 < deoxxa> gotta do something while databases migrate
09:50  * deoxxa shrugs
09:50 <@Nexxy> you're just adding that much more trash into the channel
09:50 <@Nexxy> be teh moar mature oen pl0x
09:50 <@Nexxy> kthnx bai
09:51 < deoxxa> you do realise i genuinely wanted to help the dude, right?
09:51 <@Nexxy> of course
09:51 <@Nexxy> that's why we love you
09:51 < deoxxa> right
09:51 <@Nexxy> like this, <3
09:54 < Bioshox> Could anybody point me in the direction as to why the following code returns a <Buffer > to the console
09:54 < Bioshox> https://gist.github.com/0bc1ebcf3faeaa2ad9bd
09:54 < Bioshox> when console.log(data) is outside the cursor.each, but when inside cursor.each it works perfectly?
09:55 < deoxxa> Bioshox: ah, you've fallen victim to callback confusion
09:55 < Bioshox> :(
09:55 < Bioshox> any suggestions on how to fix it?
09:55 < deoxxa> Bioshox: basically when you call console.log(data) outside that .each callback, `data` isn't defined properly yet
09:55 < Bioshox> I see
09:55 < Bioshox> So the best way to tackle this would be?
09:56 < deoxxa> well, what's the end goal?
09:56 < Bioshox> I need to iterate and respond objects from a MongoDB collection
09:56 < deoxxa> ok, lemme fork that gist and add some comments about what's happening at each point
09:56 < deoxxa> plz hold!
09:57 < Bioshox> Thanks!!
10:01 < deoxxa> nearly done
10:01 < sinclair> would anyone here be interested in a node.exe wrapper for windows
10:02 < sinclair> one that, manages node projects, automatically restarts on file change, and on error?
10:03 < Bioshox> Thanks Deoxxa
10:06  * sinclair gives to the community http://pastebin.com/QdGaYTP7
10:07 < deoxxa> Bioshox: https://gist.github.com/51d09ee5987fd62ad48e
10:07 < Bioshox> Fantastic!
10:07 < deoxxa> Bioshox: of special note is line 23
10:07 < Bioshox> I'll take a look over that
10:07 < Bioshox> Thanks so much Dexxa!!
10:08 < deoxxa> no problem :)
10:09 < sinclair> any C# people in here?
10:09 < deoxxa> Bioshox: the important part is that the cursor tells you about documents as it receives them - this will probably be a long time (in javascript land) after line 47 is actually executed
10:09 < Bioshox> I'll check that now
10:09 <@konobi> deoxxa: of course i got it, but yeah... it's way too easy to devolve into pain
10:10 <@konobi> deoxxa: when he did the personal attack thing, i also gave a warning
10:10 < deoxxa> Bioshox: it's like if you asked someone to go to the store to get milk for you, then immediately turned around to make some delicious coffee and went "hey what, where's my milk? i told that guy to go get some..." - the guy's probably still walking to the store and you're getting all impatient
10:11 < Bioshox> I see
10:11 < Bioshox> Well I'm looking into the code now
10:11 < deoxxa> cool :)
10:11 < Bioshox> but I still seem to be getting the buffer issue
10:11 < Bioshox> <Buffer 3c 68 74 6d 6c 3e 0a 09 3c 68 65 61 64 3e 0a 09 09 3c 74 69 74 6c 65 3e 4e 6f 64 65 6c 69 73 74 72 21 3c 2f 74 69 74 6c 65 3e 0a 09 09 3c 6c 69 6e 6b 20 ...> 
10:12 <@konobi> deoxxa: nice way to describe it!
10:12 < deoxxa> konobi: ;)
10:13 < Pete2> Anyone else having trouble getting to npmjs.org and nodejs.org web pages (npm seems to working ok in console)
10:14 < fermion> Pete2 nope, I can hit npmjs.org
10:14 < fermion> same for nodejs.org
10:14 < deoxxa> Bioshox: the solution is basically to put your console.log inside the callback that gets called for each document. also, you're going to have a bad time if you have more than one document - you'll end up end()ing your response more than once. you probably want to watch for when "doc" is === null.
10:14 < Pete2> weird :s
10:14 < Bioshox> Ah
10:14 < Bioshox> You see thats my issue
10:15 < Bioshox> I'm trying different solutions to make the damn thing iterate through documents and respond them
10:15 < deoxxa> Pete2: there was some weirdness with routing from the UK to joyent earlier today... not sure if it's still a problem
10:15 < Bioshox> I'm having a bad time before the response ends
10:15 < Bioshox> and I only get one document
10:15 < Bioshox> I'm try to stop it ending
10:15 < Pete2> ok thanks
10:15 <@konobi> deoxxa: you need to stick that somewhere
10:16 < deoxxa> konobi: the milk thing?
10:16 < deoxxa> i should write a blog post or something
10:16 < deoxxa> which means i should start a blog
10:16 < deoxxa> haha
10:16 < deoxxa> konobi: feel free to stea^H^H^H^Huse it
10:17 < deoxxa> you probably have a wider audience
10:17 < Bioshox> Almost working
10:17 < Bioshox> http://launchigniter.org/
10:17 < Bioshox> You can problable see the issue
10:20 < deoxxa> Bioshox: https://gist.github.com/51d09ee5987fd62ad48e
10:20 < deoxxa> check the lines i added
10:22 < deoxxa> Bioshox: there are still some issues there - you're mutating the "data" variable which seems to be global. also your `docs + ": " + doc[docs]` thing is confusing and probably not what you were wanting to do. i'll leave them up to you though :)
10:23 < Bioshox> Thanks man!
10:23 < Bioshox> I'll mull this over and see what I can get going
10:23  * deoxxa dinner
10:31 < vivek__> i'm looking for a chat framework built on node.js
10:32 < vivek__> any suggestions???
10:33 < aandy> what kind of chat? xmpp, web, irc, ..?
10:33 < eddyb> I was talking with someone in #radare about the node.js module loader and how you can add file extension handlers
10:33 < eddyb> [13:31] <eddyb> you can make require('foo.c'); synchronously compile foo.c to foo.so, extract all symbols, lookup their definition in the source file, and provide a ffi interface to foo.so
10:33 < eddyb> now I feel the urge to do exactly that
10:40 < Bioshox> Is node deplyoment reccomended behind a front end server such as nginx?
10:40 < deoxxa> eddyb: ha wow
10:40 < deoxxa> eddyb: that'd be both amazing and horrible, and i support your endeavour
10:42 < eddyb> well, it's not *that* hard
10:42 < eddyb> I have 8-9 hours ahead of me, I don't need all of them :P
10:42 < deoxxa> heh
10:44 < _kud> is there someone who rocks in grunt?
10:45 < syskk> is there any mirror for node.js's api doc? nodejs.org seems down from here
10:46 < syskk> well mm its in Google's cache
10:46 < eddyb> syskk: gotta love that cache integration for the search results :)
10:47 < syskk> yea.. or in chrome: cache:url.com/aa/a/a
10:47 < eddyb> syskk: wow, I didn't know they had that built-in
10:49 < AAA_awright> Bioshox: For load balancing yes, Nginx is fantastic for static files too
10:49 < aandy> Bioshox: it usually is, yes. haproxy, pound, varnished, nginx, pick your poison :)
10:49 < Bioshox> aweomse
10:50 < syskk> :)
10:51 < syskk> are people running node behind nginx or running nginx behind node?
10:51 < aandy> :D
10:51 < aandy> i was actually running nginx behind node in one setup once
10:51 < aandy> with http-proxy in front
10:52 < raz> hmm http://teespring.com/node
10:53 < syskk> is there any package that will provide "console.dev()"
10:53 < aandy> what the..
10:53 < syskk> which should only output messages when NODE_ENV = developemnt
10:54 < aandy> syskk: something like console.dev = function() { if (process.ENV["NODE_ENV"]) { console.error(args); } } ?
10:54 < aandy> pseudocode, it's too early for actual references
10:54 < syskk> yes
10:54 < aandy> i mean, couldn't you just do it like that?
10:55 < syskk> no :D
10:55 < aandy> ah ok :p
10:55  * aandy climbs up the tree again
10:55 < syskk> well. i guess i could :o
10:55 < syskk> but i remember there was a package similar to that
10:56 < eddyb> syskk: console.dev = process.env.NODE_ENV == 'production' ? console.error : function() {};
10:56 < eddyb> err
10:57 < eddyb> s/production/development/ my brain is weird
10:57 < aandy> let me know if you find it
10:57 < aandy> but yeah that's what i'd do aswel
10:57 < syskk> ah right
10:57 < aandy> but we can make it into a package.json if that's what you're into? 
10:58 < eddyb> syskk: maybe debug?
10:58 < syskk> maybe i should use console.err for debugging and console.log for HTTP logs? that way i could redirect output to error.log and access.log?
10:58 < syskk> interestinggg
10:58 < aandy> not a bad idea
10:58 < eddyb> if you want actual logging, look into FileStreams or a dedicated solution
10:59 < eddyb> redirect console.error to error.log and console.access to access.log
10:59 < syskk> i'd like to avoid reinventing the wheel as much as possible
10:59 < syskk> isnt there any package dedicated to logging?
11:00 < aandy> are you using express?
11:00 < syskk> yep
11:00 < stevedomin> syskk: https://github.com/flatiron/winston
11:00 < syskk> stevedomin: thanks, will take a look
11:01 < eddyb> stevedomin: looks like one can do console = require('winston');
11:01 < syskk> looks like a good solution
11:02 < aandy> syskk: or you could do it in express directly: e.g. app.use(express.logger({stream: fs.createWriteStream('my.log', {flags: 'a'}) });
11:02 < tonymilne> Does anyone know if it is considered "safe" to use multiple write streams (from different node processes) into the same file? I've tried testing it and it doesn't seem to cause any problems with the resulting output.
11:03 < aandy> or whichever you want to do with the streams
11:03 < syskk> aandy: yeah, that's good for HTTP logs
11:03 < syskk> but doesnt help if i want to log errors or some other info
11:03 < syskk> aandy: thanks for the tip
11:03 < aandy> ah okay, sorry i misunderstood
11:05 < eddyb> you can have it mail your logs
11:06 < eddyb> then you can burn those logs during the winter
11:07 < aandy> keeping the fireplace warm with logs and logs
11:08 < eddyb> *warn
11:19 < vivek_> @aandy anything... xmpp or web is ok
11:32 < syskk> does anyone spot what's wrong with my code? https://gist.github.com/3938291
11:32 < Tobsn> http://jsfiddle.net/3y8YA/8/ - anyone a better idea? ;)
11:34 < SomeoneWeird> what happens/doesnt syskk ?
11:34 < syskk> it just hangs there after the first console.log
11:34 < syskk> and server not launched
11:35 < syskk> no error message nothing
11:35 < syskk> no 'uhuhhh' on the screen
11:36 < syskk> cb() is just never called
11:38 < syskk> ah maybe its my TZ=
11:38 < syskk> but im not even getting an error:(
11:43 < syskk> it's getting weirder and weirder
11:43 < Tobsn> that's what she said
11:43 < syskk> https://gist.github.com/3938321
11:43 < syskk> im not seeing any output here except for the first console.log
11:45 < sinclair> hey guys, how do i specify the process.env.port ?
11:45 < syskk> oops
11:45 < syskk> PORT=80 node server.js
11:46 < sinclair> syskk: ?
11:46 < sinclair> on windows?
11:46 < syskk> in bash
11:46 < syskk> on windows dont know..
11:54 < mauritslamers> hey all, I am having issues with installing an npm module under windows
11:55 < mauritslamers> one of the deps is a git repo, and npm quits with an error: git clone git://[repo url] CreateProcessW: The system cannot find the file specified
11:55 < mauritslamers> git is installed on the system, and manually cloning of the repo works fine
11:57 < dimaka> hi guys! anybody interested in remote node.js job? 
11:58 < mklappstuhl> hey
11:58 < dimaka> please drop me a line at dmitry@toptal.com - we need ninja guy with good english.
11:58 < mklappstuhl> I'm looking for a blog entry that said something like "stop writing package managers; npm is awesome" ... anyone here who could point me to that one?
11:59 < syskk> mm how to detect if current user is root? or runs the command with sudo?
12:00 < simong> syskk: run 'id'
12:00 < mauritslamers> syskk: try running whoami?
12:00 < simong> if the uid is 0 you're running as root
12:01 < syskk> mmm yea. can't i just look somewhere in process.ENV?
12:01 < syskk> a code example would help me :(
12:05 < mauritslamers> syskk: http://nodejs.org/api/child_process.html
12:06 < syskk> mauritslamers: yeah i know. i mean the part where i detect if user is root
12:06 < mauritslamers> whoami and id are command line utils
12:07 < mauritslamers> so, it means that you execute them in this child process as if it would be git or something :)
12:07 < mauritslamers> you catch the output through the stdout
12:07 < mauritslamers> then parse the return data
12:08 < syskk> is it possible to have more than one root user on a linux system?
12:08 < syskk> if its possible then i cant rely on uid=0 
12:08 < mauritslamers> syskk: no
12:08 < syskk> ok good, wasnt sure for a second
12:08 < mauritslamers> uid is => unique identifier 
12:09 < mauritslamers> uid is for user, gid is for groups
12:10 < syskk> `id -u` will do it
12:11 < jhernandez> hi!
12:11 < RLa> syskk, what about selinux stuff?
12:11 < syskk> what about it :)
12:11 < jhernandez> I'm having problems with a node.js module
12:12 < jhernandez> when requiring my module
12:12 < RLa> you can give root-like permissions with it?
12:12 < jhernandez> Error: Module version mismatch. Expected 10, got 1.
12:12 < RLa> hm, maybe it does not matter in your case
12:12 < syskk> RLa: ah I don't know. I just want to show a error message to say maybe they should run as sudo if they use port below 1024
12:13 < RLa> that's ok i guess
12:13 < jhernandez> any hint about my problem?
12:14 < RLa> is that the whole stacktrace
12:15 < stevedomin> jhernandez : where do you have this error ?
12:15 < mauritslamers> jhernandez: package.json inconsistency?
12:15 < jhernandez> I'm pretty new with node.js
12:15 < stevedomin> check if you haven't a typo error in package.json
12:15 < jhernandez> you can see the complete trace here http://issues.gpii.net/browse/GPII-48
12:15 < RLa> node itself has no concept of module versioning, npm does versions but does not check versions itself at runtime
12:16 < syskk> any idea how i can catche the "Error: listen EACCES" error?
12:16 < syskk> I tried a try/catch block when starting the server but no luck
12:16 < jhernandez> and the module is here https://github.com/javihernandez/linux/tree/master/node_modules/gsettingsBridge
12:16 < mauritslamers> can anyone tell me what the reason could be that a git repo as npm dependency fails installing?
12:16 < RLa> oh, i guess it's throwing async
12:16 < jhernandez> mauritslamers: let me check the package.json file
12:17 < mauritslamers> on windows npm quits with an error: git clone git://[repo url] CreateProcessW: The system cannot find the file specified
12:18 < RLa> jhernandez, you could paste stacktrace to somewhere that does not require register/login
12:18 < jhernandez> RLa: oops, sorry
12:19 < jhernandez> RLa: http://pastebin.com/wkLyhZ7W
12:20 < SomeoneWeird> weird jhernandez 
12:20 < jhernandez> the problem is when I'm requiring the module
12:20 < jhernandez> SomeoneWeird: yup
12:21 < jhernandez> it worked before ... weird
12:21 < RLa> is that coming from native module loading?
12:21  * jhernandez nods
12:22 < RLa> what if you recompile the native part
12:23 < jhernandez> same result
12:23 < jhernandez> I did a distclean, remove cache and so ...
12:24 < RLa> https://github.com/joyent/node/blob/master/src/node.cc#L1763
12:25 < RLa> so it's some kind of native module check in node
12:25 < RLa> some dev could help to make it clear
12:25 < syskk> damn it, process.getuid() 
12:25 < jhernandez> RLa: yup, I also arrived there, but I'm not used with node.js code
12:26 < RLa> jhernandez, how many nodes you have installed
12:26 < jhernandez> I saw that NODE_MODULE_VERSION is defined in https://github.com/joyent/node/blob/master/src/node.h#L217
12:27 < RLa> but where's the other part of the check, mod->version?
12:28 < jhernandez> RLa: just one node
12:28 < jhernandez> and ... let me check the mod->version thins
12:28 < jhernandez> *thing
12:29 < RLa> there is no version in the native source of your module
12:29 < RLa> it probably comes from the build system
12:29 < jhernandez> hm
12:29 < jhernandez> makes sense ...
12:29 < RLa> make sure you have not multiple copies of module installed
12:30 < jhernandez> RLa: I cleaned all a couple of times before to be sure about it
12:31 < RLa> and check timestamps it actually creates/modifies the .node file where you expect it to be
12:32 < jhernandez> RLa: already checked
12:41 < jhernandez> btw, thanks for the help provided ...
12:41 < jhernandez> still diggin' into this 
12:41 < jhernandez> :]
12:44 < jhernandez> RLa: maybe is caused by https://github.com/joyent/node/commit/de32b38
12:44 < jhernandez> dunno
12:44 < jhernandez> :/
12:44 < mauritslamers> I found why git doesn't execute on windows
12:44 < mauritslamers> that is: git as subprocess of npm
12:45 < mauritslamers> reason seems to be that in a child process under windows .bat files and .cmd files are not executabls
12:45 < RLa> jhernandez, you should migrate to node-gyp indeed
12:45 < mauritslamers> and the default installation of git only installs the path to git.cmd, not git.exe
12:46 < RLa> jhernandez, that might or might not cause your problem tho
12:46  * jhernandez nods
13:10 < Nopik> hi, when i have node program running some http server (basically express app), and when http request handler do some async operation, is it possible to get current request from inside of the callback of that async operation? i mean, without passing request as argument, of course
13:13 < deoxxa> Nopik: the short answer is no, the long answer is maybe
13:13 < Nopik> deoxxa: maybe how?
13:14 < Nopik> i see that in 0.8 Domains were introduced, this seems slightly similar
13:14 < Nopik> i have no problem creating some kind of object beforehand in each request, if then i can reach to 'active' object during processing
13:14 < deoxxa> it depends on the scope of the functions - you could either define them all within a scope that has access to the request (bad way) or .bind() your callback to a scope that has access to the request (kind of better way)
13:16 < Nopik> deoxxa: the reason why i'm asking is this: i have some non-trivial app (~10k lines of coffeescript), with simple wrapper around mongo driver. There are few db functions exposed there which talk to mongo internally. I'm measuring how much time each request took, which is trivial with connect middleware. But, db functions do not get request as parameter, so i cannot know how much db queries each request triggered (and I would like to know
13:16 < Nopik> that)
13:17 < Nopik> and, passing request there would basically mean that i need to pass request virtually to every function in my code, which would be painful
13:17 < Nopik> ideal solution would be to get some 'current request'
13:18 < deoxxa> Nopik: problem is that there might be 100 "current request"s
13:19 < Nopik> deoxxa: exactly. but only one of them caused given operation to trigger, i.e. if i would analyze callstack, i would see at most 1 request handler in the history
13:19 < deoxxa> actually you won't, if you go past one tick of execution
13:19 < sinclair> hey all
13:19 < Nopik> deoxxa: yes, with this exception :)
13:19 < sinclair> any c# people around?
13:19 < deoxxa> what i'd do, though it might not be the cleanest way, is .bind() a context that has access to a logging or profiling thing
13:20 < sinclair> no one here does C#?
13:21 < rp123> can anyone have a quick look at tell me why my code doesn't return back to the command line http://pastebin.com/AXS2cPmZ
13:21 < rp123> i am  unable to save any data because of this 
13:21 < Nopik> deoxxa: the only .bind() i see is in Domain, are you talking about other class?
13:22 < deoxxa> Nopik: i'm talking about Function.bind
13:22 < Nopik> deoxxa: ah, ok
13:24 < sinclair> well, for anyone interested, here is a small C# console application that lets you start and stop node script, and redirect the output of node into the application. it could be useful for some form of automation. http://pastebin.com/fpd1B8jT
13:24 < Nopik> deoxxa: but i dont think this will work. basically, there might be many calls between request handler and the actual db operation. i would probably need to bind all the way down
13:24 < deoxxa> Nopik: yep
13:25 < Nopik> deoxxa: so, i can pass the request, which will be easier :)
13:25 < deoxxa> probably ;)
13:25 < sinclair> ok, i guess no one here is even slightly interested in C# 
13:25 < deoxxa> https://labs.ericsson.com/blog/bowser-the-world-s-first-webrtc-enabled-mobile-browser ooooooh
13:28 < rp123> anyone?
13:30 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
13:41 < sgallagh> bnoordhuis: Putting my money where my mouth is: https://github.com/joyent/node/pull/4183
13:41 < deoxxa> don't do that. you don't know where that money's been.
13:41 < sgallagh> deoxxa: Don't worry, it's been laundered
13:41 < sgallagh> *rimshot*
13:41 < deoxxa> zing!
13:49 < syskk> mmm i have the following problem: i need to run node as sudo to open port 80, but i would prefer if my server ran under a different user for security reasons
13:49 < deoxxa> welcome to the fun and exciting world of iptables
13:50 < syskk> ah
13:50 < tubbo> does anyone here run a Hubot on nodejitsu?
13:54 < sgallagh> syskk: The way apache handles this is to start the process as root, open the listener and then setuid to the non-privileged user
13:57 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:15 < mscdex> TehShrike: dunno, he's no longer on irc or twitter
14:24 < tubbo> uh oh, npm registry down?
14:24 < tubbo>  npm http GET https://registry.npmjs.org/githubot
14:25 < tubbo> on everything
14:26 < gildean> npm is still down?
14:27 < bradleymeck> seems up from here
14:28 < gildean> yeah, it's just really slow
14:30 < tubbo> hmm, must just be heroku
14:31 < bradleymeck> tubbo: we have some db providers that use heroku that are a bit odd right now, so maybe
14:40 < tubbo> bradleymeck: yeah...heroku and node don't play nice haha
14:40 < tubbo> not too bad though, i rather like the support
14:40 < tubbo> err, framework
14:40 < tubbo> lol
14:46 < syskk> sgallagh: thanks for the tip
14:47 < sgallagh> You're welcome
14:48 < syskk> sgallagh: do you know if I can get the user's UID which used sudo?
14:49 < syskk> sgallagh: is it somewhere in  env variables?
14:49 < sgallagh> syskk: No, that's not how you want to do it
14:49 < bradleymeck> syskk: why do you want the calling pid?
14:49 < MI6> joyent/node: yangguo@chromium.org v0.8 * 9fa953d : v8: use correct timezone information on Solaris  `timezone` variable cont - http://git.io/BosPDg
14:49 < sgallagh> syskk: You want to have it be part of the configuration
14:49 < syskk> not pid, uid
14:50 < sgallagh> bradleymeck: He needs node to start as root to claim port 80, but not to run as root after that.
14:50 < sgallagh> His misconception is that it should drop privs to the UID that ran sudo
14:50 < mscdex> process.setuid/setgid
14:50 < syskk> sgallagh: Hmmm. yeah maybe. but im trying to minimize config as much as possible
14:50 < bradleymeck> drop to nobody if possible
14:50 < sgallagh> I'm telling him that it should just be a config file that sets the UID to drop to
14:50 < sgallagh> Yes, nobody is a good choice as well
14:50 < mscdex> or you could use iptables to route port 80 to something else
14:50 < bradleymeck> or a nobody like user, like sgallagh said
14:51 < bradleymeck> mscdex: that works too as long as you dont need other root privs
14:51 < sgallagh> Although it's probably better to drop to a 'node' user so that node-specific access control policies can be implemented, if desired
14:51 < syskk> the thing is I'd rather not hardcode the user in my configs
14:51 < syskk> I will most likely create a dedicated user for node on my server 
14:51 < brianc> i just use iptables
14:52 < syskk> well, not a bad solution either
14:52 < brianc> simple
14:52 < brianc> and the added benifit of 0 downtime deploys by swapping iptable routing
14:52 < sgallagh> brianc: nothing about iptables is simple :)
14:52 < syskk> brianc: ah that's interesting. I'll look into that
14:52 < mauritslamers> npmjs.org does work for me
14:52 < brianc> route 80 -> 3000.  deploy new version to 3001. route 80 -> 3001.  send the old app on 3000 a signal to stop accepting new connections and shutdown when the server goes idle.
14:53 < syskk> brianc: that's a good idea. I think I'll use iptables for that
14:53 < aandy> you can do that with nginx and kill -HUP also. and i think Nexxy showed a good system for doing that internally in node aswel (as in, the app itself)
14:54 < aandy> Nexxy: sorry to highlight, but you mentioned another project besides supervisor one day, do you remember which?
14:57 < syskk> aandy: so you put nginx in front of your node server right?
14:57 < FunnyLookinHat> Does anyone here use Sublime Text 2 ?  I'm hoping to get code completion for installed ( via npm ) modules like redis and socket.io
14:59 <@isaacs> dmilith: check the docs
14:59 <@isaacs> dmilith: or just read the commit
14:59 < dmilith> I already got the answer. thanks
14:59 < syskk> i think i might be able to achieve this simply with amazon load balancer
14:59 < dmilith> but its always easier to ask You ;] sorry
14:59 <@isaacs> dmilith: kewl :)
15:01 < syskk> damn router
15:02 < syskk> did I miss the conversation
15:04 < Fabryz> Hello
15:04 < Fabryz> is it possible to launch a vlc video from terminal?
15:04 < Fabryz> do I simply spawn a child process with vlc and the params?
15:05 < aandy> syskk: yes, nginx with a upstream of node instances defined (using dns wouldn't be a bad idea either). you can then change the up/down status, change ports, add/remove nodes and refresh "without" downtime
15:07  * Sembiance wishes there was a more mature Octopress like blog site generator for node.
15:08 < bradleymeck> Sembiance: https://github.com/flatiron/blacksmith ?
15:08 < FunnyLookinHat> Anyone here know why this would print "18" instead of 4 ?   http://hastebin.com/cekosowuwa.js
15:08 < FunnyLookinHat> Using redis 
15:11 < FunnyLookinHat> duh.
15:11 < FunnyLookinHat> My database still has the other values in it.
15:11 < FunnyLookinHat> Duhhh.
15:11 < aandy> boo
15:11 < aandy> i mean buh
15:11 < FunnyLookinHat> hah
15:12 < FunnyLookinHat> aandy, I'm completely new to Redis - do you know what the standard practice is for specifying a database and making sure it's exclusive only to my app instance ?
15:13 < nlf> FunnyLookinHat: we use a configuration file to specify the database the app should use, and manually track which are in use already. there's not really a great way to do it
15:14 < aandy> no, i don't use redis, sorry :/
15:14 < FunnyLookinHat> nlf, Could you hastebin an example?  I'm not even seeing a configuration place to specify the DB in createClient()
15:14 < nlf> there was at one point a bug in a library we used where when it would reconnect, it would always reconnect to database 0
15:14 < FunnyLookinHat> haha
15:14 < nlf> which library are you using?
15:14 < FunnyLookinHat> ummm...
15:14 < FunnyLookinHat> default ?
15:14 < FunnyLookinHat> oh
15:14 < FunnyLookinHat> https://github.com/mranney/node_redis
15:14 < nlf> we learned to just always namespace our keys
15:14 < FunnyLookinHat> Ah that's not a bad idea.
15:14 < nlf> myapp:whateverkey
15:14 < FunnyLookinHat> But then the data is global...
15:14 < FunnyLookinHat> Isn't that...  a bad idea?  :D
15:15 < nlf> yeah, for his library you have to use the select command right after you connect
15:15 < nlf> FunnyLookinHat: yup, sure is
15:15 < nlf> another alternative we've used is to run multiple redis servers
15:16 < MI6> joyent/node: Ben Noordhuis v0.8 * b6b8813 : test: add typed arrays regression test  Ensure that uint8 values >= 128 a (+1 more commits) - http://git.io/VHlA9A
15:16 < FunnyLookinHat> nlf, Oh wow  - and then auth them each?   I guess that could work....
15:16 < nlf> then you just point their data directories to different paths and run them on different ports
15:16 < nlf> isolation, and no concerns of accidentally exposing another app's data
15:16 < FunnyLookinHat> nlf, databases are always keyed with unsigned ints ?
15:16 < FunnyLookinHat> i.e. 0, 1, 2 ,3 etc.
15:17 < nlf> yes, up to 15
15:17 < FunnyLookinHat> Ah ok.
15:17 < FunnyLookinHat> thx nlf !
15:17 < nlf> no problem
15:18 < FunnyLookinHat> nlf, err - one more question.  You don't use Sublime Text 2, do you?  Wondering about code completion for installed modules...
15:18 < nlf> i don't, no. i use vim
15:18 < jocafa> vim ftw!
15:18 < nlf> sublime text 2 seemed nice, but i'm pretty stuck on my vim key bindings
15:19 < mscdex> nano ftw!
15:19 < jocafa> st2 has "vintage" mode, which adds vim keybindings
15:19 < nlf> i saw that, but it seems like it didn't cover very many
15:19 < jocafa> *nod*
15:19 < jocafa> i'm still using vim :)
15:20 < nlf> i use "ci" a lot and most key binding emulations skip that
15:21 < jocafa> same here
15:22 < bbtra> hi does anybody knows of a module for turn based card game server?
15:23 < jocafa> my tmux+vim setup: https://www.dropbox.com/s/t6ymophq9ghsvbe/tmux.png   :D
15:27 < yawnt> jocafa: what's the color scheme?
15:27 < jocafa> molokai
15:28 < Sembiance> bradleymeck: that and several others are 'almost' there. They all seem to be missing some things specific to blogs (disqus comments, RSS feed, etc)  However I guess it shouldn't take me too long to roll my own ;)
15:29 < jkominar> hey all - is there a recommended alternative to hook.io that's still supported?  I'm looking to build an app that will be deployed to multiple phys/virt servers that has some emailing responsibilities and requires some inter-instance master/slave type communication to ensure emails aren't sent out multiple times.  Hook seems to have what I want, but makes me a bit squeemish that it's no longer 
15:29 < jkominar> an active project.
15:29 < christophsturm> I have a problem with node cluster. I have 12 workers for my 12 core cpu, but it does not really use all the workers. instead workers that have requests queued already take on new requests
15:30 < MI6> joyent/node: isaacs master * 18beea4 : Merge remote-tracking branch 'ry/v0.8' (+6 more commits) - http://git.io/BOmx0Q
15:31 < syskk_> does node's http server wait to have no pending connections until it exists? when you send it the kill signal
15:33 < aandy> syskk_: welcome back :) check this out: http://blog.argteam.com/coding/hardening-node-js-for-production-part-3-zero-downtime-deployments-with-nginx/
15:33 < CoverSlide> syskk_: the http server only closes when you tell it to close()
15:34 < aandy> calling .close() will cause it to refuse taking in new - so no pending connections
15:36 < syskk> aandy: thanks buddy ;)
15:36 < syskk> not sure if my router or my ISP sucks
15:36 < syskk> CoverSlide: well i mean if I kill it with ctl-c
15:37 < syskk> does it send a signal handler on that
15:37 < syskk> i'd like to prevent terminating the process if there are active connections
15:37 < CoverSlide> syskk: ctrl-c is SIGTERM
15:37 < CoverSlide> IIRC
15:37 < syskk> an accident happens so fast :D
15:37 < CoverSlide> err SIGINT
15:39 < aandy> you can handle that in your app aswel if that's what you're into ;)
15:41 < CoverSlide> aandy: you dirty dirty man
15:45 < MI6> joyent/node: isaacs crypto-buffers * 55cfca9 : crypto: Fix breakage from v0.8 merge  and @bnoordhuis's comments (+19 more commits) - http://git.io/wAP6gw
15:46 < MI6> joyent/node: Ben Noordhuis master * 160e4d0 : build: re-enable gdbjit, honor --gdb again  Note that you need to start n (+1 more commits) - http://git.io/6aDL0Q
15:49 < mscdex> is there anything like riemann but written in node out there?
15:50 < cordoval> o/
15:50 < cordoval> i am getting an error saying i miss request module
15:50 < cordoval> but i just installed it
15:50 < cordoval> with sudo npm install request -g
15:50 < cordoval> what is going on?
15:51 < mscdex> cordoval: don't use -g
15:51 < mscdex> and you should be fine
15:51 < cordoval> then it wouldn't install
15:52 < cordoval> ok now it installed
15:52 < cordoval> weird
15:52 < MI6> joyent/node: isaacs crypto-buffers * dcfb685 : crypto: Remove many unnecessary ToObject calls (+20 more commits) - http://git.io/EPMjTA
15:52 < gildean> cordoval: don't use sudo?
15:52 < cordoval> really, ok now i need to install express
15:52 < bradleymeck> cordoval: -g means its a global install, require does not look in global modules
15:52 < cordoval> i see is a mess
15:52 < bradleymeck> global modules are for links / executables
15:52 < cordoval> all should be local
15:52 < cordoval> global is evil
15:52 < gildean> if you accidentaly use sudo with local install on first time, the ~/.npm gets created with root as owner
15:53 < cordoval> hmm
15:54 < jaha> Anyone know a node based file manager (GUI) for amazon S3? 
15:55 < bnoordhuis> mscdex: riemann? i don't think we're at the stage yet were we can simulate full human personalities
15:55 < mscdex> bnoordhuis: http://aphyr.github.com/riemann/
15:55 < bnoordhuis> oh, *that* riemann
15:57 < CoverSlide> jaha: there's chrome/firefox plugins that do that. there's very few node-based gui projects
15:59 < jaha> CoverSlide: yea i figured, thanks, just thought id ask
16:02 < jkominar> hey all - is there a recommended alternative to hook.io that's still supported?  I'm looking to build an app that will be deployed to multiple phys/virt servers that has some emailing responsibilities and requires some inter-instance master/slave type communication to ensure emails aren't sent out multiple times.  Hook seems to have what I want, but makes me a bit squeemish that it's no longer 
16:02 < jkominar> an active project.
16:05 < syskk> does anyone know how to change the UID of a child process?
16:09 < syskk> ahh you can pass it as option to spawn, but its not in the docs yet
16:09 < syskk> where can i fork the docs and pull request?
16:10 < MI6> joyent/node: isaacs crypto-buffers * 5d6fcd7 : crypto: Style.  Prefer 'char*' over 'char *' - http://git.io/_atz1Q
16:12 < syskk> damn does not work
16:12 < syskk> isaacs: any way to setuid a child process?
16:13 <@isaacs> syskk: it's the 'uid' arg
16:13 <@isaacs> syskk: spawn(..., {uid: 12345})
16:13 < syskk> isaacs: thanks. I don't think it's in the API doc by the way
16:13 <@isaacs> syskk: it should be
16:14 <@isaacs> oh, indeed, it appears to be missing
16:14 <@isaacs> well, patch welcome
16:14 < syskk> isaacs: yep, not here: http://nodejs.org/api/all.html#all_child_process_spawn_command_args_options  .. the docs live in the main repo? I'll pull request
16:16 < syskk> isaacs: also, process.setuid() supports a username but the uid for child processes  option does not "TypeError: options.uid should be a number" . any chance of getting merged if I implement this?
16:22 < aandy> anyone used formidable behind HAproxy (or any proxy for that matter)? so far, the only working solution i've found is either varnishd or by letting node be in front (http-proxy)
16:26 < vicapow> how can I debug maximum call stack size exceeded errors?
16:27 < gildean> vicapow: you're looping something aren't you
16:28 < vicapow> gildean: well. I must be. because of the error. but I don't know where.
16:28 < vicapow> oh, actually...
16:28 < CoverSlide> vicapow: step 1: find the loop. step 2: fix it
16:28 < vicapow> maybe i do. lol
16:29 < superjoe> aandy, why proxy at all?
16:31 < aandy> for load balancing, serving static content, virtual hosts
16:31 < aandy> i only have outgoing ip :(
16:32 < vicapow> okay, so I actually don't know where this loop is… is there no tool for showing the stack after the error?
16:33 < gildean> vicapow: you're prolly doing some functions in a for-loop?
16:34 < vicapow> gildean: why would a for loop cause a maximum stack error?
16:34 < CoverSlide> gildean: if the 2nd expression is impossible to be met
16:35 < gildean> vicapow: not the loop itself, but perhaps you're loading up too many functions in the loop
16:35 < abrkn> i'm working on a game where the player only has x sec to make a move. if the server sends to client how many sec he has left, then lag will make it unreliable. i cant compare client time and server time because system clocks are rarely synced. what's a common approach to this?
16:35 < vicapow> gildean: you mean i could be adding too many function callbacks on the event loop?
16:36 < vicapow> gildean: i image that's what's happening but i can't tell what function's doing it
16:36 < gildean> vicapow: i'm just throwing out ideas, i'd start looking at the for-loops if you use some
16:36 < MelkorNemesis> hello, can anyone give me a hint please?
16:36 < MelkorNemesis> I am still getting 404 error when trying to reach socket.io/socket.io.js in browser, http://d.pr/i/9Osu+
16:36 < MelkorNemesis> i am very new
16:39 < vicapow> MelkorNemesis: I'm not sure if this is related but you seem to declare the variable "io" twice
16:40 < sgallagh> bnoordhuis: I'd like to sign the CLA, but I'm currently having it reviewed by the Red Hat lawyers. I'm a little wary of what looks like a copyright assignment clause.
16:40 < vicapow> MelkorNemesis: actually. i'm sure that's not the problem
16:41 < vicapow> MelkorNemesis: are you sure you dont have another route that might be capturing it before socket gets a chance to?
16:41 < MelkorNemesis> vicapow: that's ok, but in every tutorial i found that when i try to reach "/socket.io/socket.io.js" from browser, the server will handle it itself and sends me back the file somehow
16:42 < vicapow> MelkorNemesis: that's what it should do but there's a few different ways you can mess that up without realizing it
16:42 < vicapow> what error code do you get when you go do that path?
16:42 < vicapow> MelkorNemesis: is it a 404?
16:42 < analphabet> did anybody in here try react, yet?
16:43 < analphabet> looks like a python project
16:43 < MelkorNemesis> vicapow: normal 404 file not found
16:43 < CoverSlide> MelkorNemesis: I don't see where the socket.io client script is included
16:43 < CoverSlide> on the browser
16:43 < MelkorNemesis> sorry, old version - http://d.pr/i/e801+
16:44 < analphabet> it eveon supports socket.io i believe
16:44 < MelkorNemesis> can't "app.use(express.static(path.join(__dirname, 'public')));" somehow cause the problem?
16:44 < MelkorNemesis> the server has a socket.io support
16:45 < CoverSlide> MelkorNemesis: did you do io.listen on the http server? 
16:45 < MelkorNemesis> that should be "io = socket.listen(server)"
16:45 < CoverSlide> oh nvm i see it
16:45 < MelkorNemesis> i am quite new, but very interested in, so sorry for dumb questions
16:45 < CoverSlide> wait wait wait
16:45 < CoverSlide> why are you creating 2 servers?
16:45 < analphabet> in order to get a 404, in there you need to do
16:46 < analphabet> some http magic:
16:46 < MelkorNemesis> CoverSlide: damn, i see :/
16:46 < CoverSlide> you have http.createServer(app) twice
16:46 < MelkorNemesis> i was combining two tutorials together
16:46 < analphabet> req->status(404)
16:46 < analphabet> MelkorNemesis: never a good idea
16:46 < CoverSlide> yeah line 41 could just be server.listen( ...
16:47 < analphabet> CoverSlide: or req->status(404)
16:47 < MelkorNemesis> thank you guys!
16:47 < MelkorNemesis> it works now
16:47 < analphabet> you're welcome
16:47 < CoverSlide> np
17:16 <@isaacs> syskk: What I'd really like to see is a native passwd binding of some sort.
17:17 <@isaacs> syskk: something that can say, for win32 and for unix, "What's the uid for this name?" and "What do you know about this uid?"
17:19 < syskk> isaacs: agreed. that would be cool. I don't think I could do it for Windows, but could definitely give it a short for *nix. When you say native, do you mean a native extension or a core API written in JS?
17:19 < syskk> isaacs: or a standalone npm package
17:20 < syskk> isaacs: ah ok, you meant native to the OS I guess
17:21 < syskk> isaacs: by the way, added uid to docs: https://github.com/joyent/node/pull/4185
17:35 < baudehlo1> isaacs: except I don't think users have "id"s in Windows, do they?
17:42 < syskk> baudehlo: they must have an equivalent on windows
17:44 < uranus> is it possible to compile node for powerpc arch?
17:44 < uranus> debian powerpc to be precise
17:45 < syskk> mmm looks like there's no way to catch httpserver's error when cannot open port
17:47 < syskk> "Error: listen EACCES"
17:57 <@isaacs> syskk: var s = http.createServer(...); s.on('error', function(er) { console.error('server error', er) });  s.listen(1234, function() { console.error('now listening') })
17:57 <@isaacs> syskk: listen() is asynchronous
17:57 <@isaacs> uranus: i do'nt know if that's ever been done
17:57 <@isaacs> uranus: it's certainly not supported.
17:57 < bradleymeck> isaacs: is there a glob module that can just check strings that you know of, i know yours is ideal but it must go to fs
17:57 <@isaacs> bradleymeck: minimatch
17:58 <@isaacs> bradleymeck: that's what glob uses to test the path against the pattern
17:58 < bradleymeck> <3
17:58 <@isaacs> bradleymeck: minimatch is pretty hook-able, too
17:58 < syskk> syskk: ah, I thought the error would be passed to the listen callback, thanks
17:59 <@isaacs> bradleymeck: it works by compiling the pattern into a regexp, but it can also do partial matching, etc.
17:59 <@Nexxy> \o/
17:59 <@isaacs> syskk: hm.  yeah, i guess that'd be good, but it's not that way :0
17:59 < bradleymeck> reading it, using it probably
18:04 < syskk> isaacs: ok, that worked thanks
18:05 < syskk> isaacs: does httpserver set a signal handler to wait for all connections to be closed before exiting? or should i do that by myself like a big boy?
18:05 <@isaacs> syskk: server.close() will stop listening
18:06 < MI6> joyent/node: isaacs crypto-buffers * 1122e3a : crypto: Style.  Prefer 'char*' over 'char *' (+8 more commits) - http://git.io/juUs5g
18:06 <@isaacs> syskk: but if there are connections still, i'll still keep the program alive
18:06 <@isaacs> syskk: ie, it won't be calling accept() any more, but it might still have an active socket open
18:07 < gildean> isaacs: would it keep for example an open websocket connection alive indefinetly
18:07 < syskk> isaacs: so if I kill my server with ctl-c, any chance of dropping connections?
18:07 < gildean> if the connection otherwise wouldn't break
18:07 < syskk> isaacs: or should i catch the signal and call http.close() by myself?
18:11 <@Nexxy> http://2012.realtimeconf.com/video/ if anyone is interested; live stream
18:17 < CoverSlide> where the hell does meteor get money to sponsor anything?
18:18 < invisib> Hi guys, I'm new to the whole Node scene. I'm trying to get Stylus Nib (http://visionmedia.github.com/nib/) working and in the installation instructions it says to use Express and/or Connect packages.json to import Nib. I has no idea.
18:22 < uranus> isaacs: ok, thanks, i ran it blindly on a PPC G4, which errored, then saw archs are x64, ia32, arm
18:23 < __underscore> CoverSlide: http://www.h-online.com/open/news/item/Meteor-web-platform-gets-11-2-million-funding-1652949.html
18:24 < CoverSlide> and where do they plan to get revenue? meteor support?
18:24 < CoverSlide> oic
18:24 < __underscore> no idea
18:24 < CoverSlide> oh hosting
18:27 < jocafa> i wish someone would just pay me to write my illustration app
18:27 < MI6> joyent/node: isaacs master * 3570f20 : Merge branch 'crypto-buffers' (+9 more commits) - http://git.io/VbKRjA
18:28 <@isaacs> uranus: it's probably not going to happne, since I don't believe V8 runs on PPC
18:28 <@isaacs> uranus: even if it does, i'd suspect that there are a lot of things that just won't be nearly as optimized, since there's some custom generated asm code in openssl, also.
18:28 <@isaacs> uranus: your best bet is to get a new computer :)
18:29 < uranus> ah, right, i see
18:29 < uranus> lol
18:30 < uranus> i was trying to use groovebasin
18:30 < uranus> but i have other boards
18:30 < uranus> mac sucks
18:36 < airtanah> i am taming the everyauth beast
18:39 < syskk_> for anyone who was following the discussion earlier about not running your server as root: http://syskall.com/dont-run-node-dot-js-as-root/
18:41 < aalex-sat> hello
18:42 < aalex-sat> How can I create a v8::Array and populate its elements from a node addon?
18:42 < syskk> aalex-sat: are you writing a native extension?
18:42 < bradleymeck> syskk: sounds good as long as i dont need other root functionality :/
18:42 < syskk> bradleymeck: right
18:43 < CoverSlide> syskk: usually i use a proxy
18:43 < syskk> bradleymeck: you can always setuid a specific program if you want better security
18:43 < CoverSlide> iptables feels too "permanent" a solution
18:43 < aalex-sat> syskk, what does that mean? I write a wrapper in C++ for some of my C++ stuff.
18:43 < syskk> CoverSlide: yea, should mention that too
18:44 < CoverSlide> for my test / debug stuff, I wrote my own module "broxy"
18:44 < bradleymeck> aalex-sat: Array::New(my_length); arr->Set(uint_thing, value)
18:44 < syskk> aalex-sat: easiest way would probably to use: https://github.com/rbranson/node-ffi … harder way would be to try understanding my tutorial: http://syskall.com/how-to-write-your-own-native-nodejs-extension
18:45 < MI6> joyent/node: isaacs v0.8 * 76a6c4b : V8: Reapply patches (+2 more commits) - http://git.io/oGk9pA
18:45 < CoverSlide> syskk: you should update that blog, node-waf is deprecated
18:46 < aalex-sat> bradgignac, ah the first arg of Set is a uint, not a v8::Number?
18:46 < bradleymeck> aalex-sat: v8.h /Set\(uint , yes it is overloaded depending on the argument
18:46 < CoverSlide> shouldn't the key be a string?
18:47 < aalex-sat> It says "error: ‘class v8::Local<v8::Array>’ has no member named ‘Set’"
18:47 < syskk> CoverSlide: ah didn't know that. I'll write a notice on top
18:47 < bradleymeck> aalex-sat: you used -> not . right?
18:48 < aalex-sat> bradgignac, oh, I must use ->?
18:49 < bradleymeck> handles need to dereference to get Values so yes
18:50 < aalex-sat> bradleymeck, it was it! thanks!! ... 
18:51 < syskk> ok, added a notice on top
19:01 < MI6> joyent/node: isaacs master * c3ca783 : Merge remote-tracking branch 'ry/v0.8'  Conflicts: 	deps/v8/src/arm/code- (+5 more commits) - http://git.io/NdlA1A
19:01 < phrearch> hello
19:01 < phrearch> anyone knows why i cant access .all's render property from line 22 when using a 'decorator' like function? http://paste.kde.org/579044/
19:04 < phrearch> i get something like DEBUG: TypeError: Object #<Promise> has no method 'render'
19:06 < pickels> phrearch, why did you go with a wrapper instead of adding auth middleware?
19:06 < pickels> your is_authenticated wrapper can perfectly be converted to middleware.
19:06 < phrearch> pickels: i wanted to have another mechanism that i can put onto individual views
19:06 < phrearch> like have something on a view level, and on the middleware level
19:07 < phrearch> or within the view itself for that matter
19:07 < pickels> you mean route level?
19:07 < phrearch> yea indeed
19:07 < pickels> you know routes can take multiple middleware right?
19:07 < pickels> even arrays
19:07 < bradleymeck> phrearch: did you mean app.render instead of this.render?
19:07 < bradleymeck> well… self.render
19:07 < phrearch> ehm yes. but dont these count for all routes then?
19:08 < pickels> well if you want to have global middleware you use it at global level
19:08 < phrearch> bradleymeck, ehm no its part of http://paste.kde.org/579068/
19:08 < phrearch> line 205
19:08 < pickels> app.l4n.all('^/blog/$', is_authenticated, function (req, res) {});
19:08 < pickels> you can do that
19:09 < phrearch> aha
19:09 < phrearch> thats the common pattern for middleware per view?
19:09 < phrearch> cool thanks
19:09 < pickels> yeah tj even has a video where he does the exact same thing.
19:09 < pickels> it's how I found out
19:10 < MI6> joyent/node: isaacs created branch v0.9.3-release - http://git.io/uTnTdQ
19:10 < phrearch> the second parameter is either a function or an array of functions?
19:14 < pickels> phrearch, it can have unlimited parameters
19:14 < Xenplex> General question: If you're developing a complex system, which consists of multiple components (client, server, network,...)
19:14 < Xenplex> how would you concentrate your ressources? One component at a time or working on all components simultanously?
19:14 < pickels> get('/', middleware, middleware, middleware) or get('/', [ middleware, middleware]);
19:15 < phrearch> aha the second way seems to be easier to handle
19:15 < phrearch> not really sure how to grab params[1:-1] from within the handler
19:18 < jcrew> xenplex, define concentrate your resources
19:22 < hpe1> I'm trying to make socket.io available to my express routes using this approach, but get the error message 'sockets' is undefined. https://groups.google.com/forum/?fromgroups=#!topic/express-js/m7VAdpl2OLI Can anyone see any flaws in the approach?
19:23 < jcrew> hpe1: what is your end game of passing io to a request?
19:23 < Xenplex> thx jcrew
19:24 < jcrew> Xenplex: do you mean people or hardware?
19:25 < hpe1> What I'm doing is making a realtime tracking app. A call to '../count/ios/ will increment the counter after I do the call, but I also need it to fetch data from the DB when I load the page. So I figured: make a route app.get('/', ..) route and emit tracking data fetched from the database. I'm a total node.js/socket.io/express noob btw.
19:26 < hpe1> jcrew: Right now i listen for events in my index.html, and my server.js will emit events. I want to move this to my routes so that I can also use it to populate the page with tracking data onload. Did it make sense?
19:27 < jden|plane> realtime sll the things
19:27 < jden|plane> all*
19:27 < jcrew> hpe1: ahh okay - is there a reason your client doesn't emit "givemetrackingdata" and your socketio doesn't emit the tracking data back to the server?
19:29 < hpe1> jcrew: that might be a good approach
19:29 < hpe1> jden|plane: page still needs to be populated on load.
19:30 < hpe1> so…emit from client onload and ask for data from server?
19:31 < jcrew> yea if you're looking to get something other than the default page
19:31 < hpe1> nice. will give it a try! thanks a lot
19:38 < pspeter3> how do underscore and backbone generate their annotated source code?
19:38 < zonetti> pspeter3, sorcery
19:38 < zonetti> pspeter3, kiddin... idk
19:39 < pspeter3> zonetti: It's a one to one mapping with the comments in the file so it seems like they have some tool to do it
20:02 < exit2> hi noderz
20:07 < gf3> NO!
20:19 < chovy> exit2: hello
20:19 < exit2> this channel is full of people leaving and joining
20:20 < jeremyw> That's pretty typical for open source channels, people have day jobs and lurk to keep up or get help.
20:20 < chovy> i ignore all that
20:21 < sblom> Is github.com/joyent/node/wiki where we collect node dev knowledge? I'm stumbling through some of the early steps involved in building/testing/debugging on Windows, and would love to share what I learn.
20:21 < chovy> joins, parts, quits
20:21 < ikkedee> Wow, it's amazing that IRC is still used so extensively..
20:22 < chovy> there's nothing else like it
20:22 < ikkedee> Haven't been on an IRC server in years heh
20:22 < chovy> i've been on irc for over a decade and a half.
20:22 < cpsubrian> tjholowaychuk, Hey, how set in stone is jog?  I'd be interested in adding some 'bunyanish' features such as 'object serializers' and output formatters for the CLI.
20:22 < bradleymeck> sblom: write blog posts, be sure to notify community on google group or ping ppl like the nodeup guys
20:23 < cpsubrian> tjholowaychuk, The code base of bunyan is a mess but some of the API is nice.  I like how clean jog is though.
20:24 < sblom> bradleymeck: I'm fine with blog posts, but it doesn't seem like Google should be a required step to find our developer docs from nodejs.org
20:24 < mscdex> chovy: that's a long time to stay connected ;-)
20:24 < bradleymeck> sblom: nodeup guys will propagate things properly
20:24 < sblom> alright
20:25 < sblom> Are you making the assertion that there's not really a wiki? Or just suggesting that it's not the best place for this.
20:25 < bradleymeck> sblom, its not terribly well maintained
20:26 < mynodey> is there a channel specifically for native extension development?
20:26 < bradleymeck> mynodey: just ask your questions here :)
20:28 < mynodey> ok.  I'm getting a lazy symbol binding failed: Symbol not found: on macosx, when I do nm on the .o file, I see the symbol there, but when it is linked, it is not in the native binding, what can I do to further debug the issue?
20:30 < bradleymeck> mynodey: you linked against a static library or a .o specifically?
20:30 < mynodey> a .o specifically
20:30 < exit2> should I have an extensive background in JS before trying to get into Node?
20:30 < bradleymeck> gist your gyp file somewhere, may be able to see it
20:30 < zezikaro> Hi everyone, just wondering what CI environments people use for nodejs?
20:31 < bradleymeck> exit2: you should have knowledge of closures, but generally that is all. I would recommend you do learn some before doing any big projects though
20:31 < jcrew> exit2: jump into node - copy & pasting for "web" js isn't a great way to learn, going through some tutorials and reading about how it actually works would put you ahead of the curve
20:32 < exit2> bradleymeck: I'm coming from Python and my JS is pretty weak, but I'm finding things like eloquent js to be a bit too introductory 
20:32 < exit2> jcrew: word
20:32 < bradleymeck> exit2: have you seen garran means book?
20:32 < exit2> bradleymeck: nope
20:33 < mynodey> bradleymeck: https://gist.github.com/a36996363375dedaad82  the undefined symbol is reported in src/mytokeniser.cc but the symbol can be found in libhubbub/src/tokeniser/tokeniser.c
20:33 < bradleymeck> exit2: http://www.amazon.com/Node-Front-End-Developers-Garann-Means/dp/1449318835 , less hand holding since it expects some knowledge, nothing python person wouldnt get I would think
20:35 < garann> bradleymeck: exit2: it's in bad shape right now, though, cause it used a lot of connect examples
20:35 < garann> gonna start on v2 in december
20:36 < exit2> garann: I'll check it out either way
20:37 < bradleymeck> mynodey: nothing stands out on a glance
20:37 < garann> exit2: cool, just wanted to give you a fair warning :)
20:37 < mynodey> bradleymeck: yup, that's why I'm asking here :P
20:37 < exit2> garann: Do you recommend any other starting points?
20:38 < ashnur> morning
20:38 < mynodey> bradleymeck: it's a linker question, and I'm sure it's not specific to nodejs
20:38 < jcrew> garann: you have a bad review from someone you cannot read the description of the book
20:39 < ashnur> i need a bit of help. is it possible to emit events on the server which are initiated on the client by using shoejs?
20:39 < garann> exit2: not as far as resources, no - sorry
20:40 < garann> jcrew: i'm not sure what you mean
20:41 < jcrew> the description of your book on amazon, says "Although Node has a complete library of developer-contributed modules to automate server-side development, this book will show you how to program with Node on your own" and you have a review bitching about how you didn't cover all the cool contributed modules node has
20:41 < VooDooNOFX_> how can I change the port number --debug listens on so I may have several node processes in debug mode simultaneously?
20:41 < bradleymeck> jcrew: a complete library != all , bad reviewer
20:42 < ashnur> VooDooNOFX_: --debug[=port] ?
20:42 < garann> jcrew: haha, ohhhh.. yeah, i got a lot of weird reviews from people who i would not have recommended it to :)
20:42 < jcrew> bradleymeck: yea i know, just thought it was funny
20:42 < VooDooNOFX_> garann, that was silly of me. Thank you. Sorry for the dumb q.
20:42 < ashnur> VooDooNOFX_: it was me. but you are welcome anyways :)
20:43 < VooDooNOFX_> oops! fail twice! ty.
20:43 < ashnur> i guess i have to rephrase my own questions
20:43 < chovy> VooDooNOFX_: NOFX?
20:43 < chovy> the punk band?
20:43 < VooDooNOFX_> chovy, indeed, the band.
20:43 < chovy> nice
20:43 < chovy> i'm a Pennywise fan
20:44 < ashnur> is it possible to emit events on the server which are initiated on the client by using websockets?
20:44 < kevin_> Can I have a second pair of eyes on this code please? I'm not sure why, but its coming back undefined when it clearly is there.
20:44 < kevin_> http://pastebin.com/G47DR1Si
20:44 < chovy> ashnur: i dont' knwo about sockets, but you can use an event stream for that too
20:44 < ashnur> chovy: ok, thx
20:44 < VooDooNOFX_> chovy, nice as well. They're also on a frequent pandora playlist for me.
20:44 < chovy> ashnur: https://github.com/chovy/nodejs-stream
20:45 < chovy> they have a new album out i saw
20:45 < chovy> is NOFX still playing?
20:45 < bradleymeck> ashnur: look at dnode 
20:46 < VooDooNOFX_> chovy, yeah, it's alright. sounds too much like green day for my taste though.
20:46 < ashnur> bradleymeck: ok
20:46 < bradleymeck> kevin_ im unsure what .method comes fromm also which part is undefined how are you calling it etc, need complete test case
20:47 < kevin_> bradleymeck: let me send another pastebin with more info... 2 secs
20:50 < kevin_> bradleymeck: http://pastebin.com/eBM0EDJT I added a comment at the top.  Hope that helps.  I am looking for maybe ways to debug that.. because to me, that should work.. I should get a TRUE
20:51 <@mbalho> i'm sad that 'npm search session' results don't contain the word 'stream'
20:52 < arronhunt> Hey guys, does node have a way to make a json object human friendly?
20:52 < tnorris> kevin_: um, so you're wondering why typeof this.groups[needle] returns undefined?
20:52 < bradleymeck> kevin_: because you are looking up a string property on an array
20:52 < tnorris> arronhunt: JSON.stringify allows you to pass an option for prettifying.
20:52 < ashnur> bradleymeck: thanks, this was it.
20:53 < bradleymeck> kevin_ this.groups.indexOf(needle) !== -1 not 0
20:53 < bradleymeck> > 0 will barf if result is first object
20:53 < firebalrog> json already readable
20:53 < kevin_> ok, let me try that
20:54 < kevin_> bradleymeck: yup. that would be it
20:54 < kevin_> thanks
20:54 < guybrush_> arronhunt: JSON.stringify(obj,null,2)
20:54 < tnorris> arronhunt: like so: JSON.stringify(<object>, '', '    ')
20:55 <@mbalho> substack: im gonna write an http session store that uses monkeycats or whatever the gossip protocol thing is
20:55 < arronhunt> guybrush_ tnorris  awesome guys. Thanks :)
20:55 <@mbalho> substack: scuttlebutt
20:55 < tnorris> guybrush_: awesome, didn't realize you could pass a number.
20:55 <@mbalho> substack: WHAT SAY YOU SIR
20:55 < aandy> hi, i use csrf protection (and serve over https), but i'm wondering about best practice for what to store in cookies. my sole purpose, initially, is to authenticate/hold session, that's it. some simple examples have trivial cookies like: name=<username>, but i've also seen people talk about useragent+ip+whatnot. any tips? my thought was to store something like a session id, but dunno if that's "enough"?
20:55 <@Nexxy> THAT YOU ONLY MEANT WELL
20:57 < MI6> joyent/libuv: saghul master * 61ecb34 : win: support compilation with Visual Studio 2008 - http://git.io/QcOytw
20:57 < guybrush_> tnorris: yah i didnt know too, until i read it somewhere in isaacs code :D
21:00 < bradleymeck> aandy: session id and then store the user, ip and refresh maxage associated with session is how i tend to do it
21:00 < bradleymeck> avoids replays or accidental send when changing gateways
21:01 < aandy> right. so e.g. session_id=...;ip=x.x.x.x;expire=<unixtime>? 
21:02 < vincentmac> Question: In a user signup flow, I want to verify the users email address by sending a token link to them.  At a high level, what should this token be and what should I verify in it? 
21:04 < elcuervo> Hey, anyone it's getting login problems with npm?
21:04 < disjunction> Answer: the hash sum divided by 999 should make 666
21:04 < bradleymeck> aandy: do not store the data on the client
21:04 < bradleymeck> aandy: store a session id that maps to the data in a secure place
21:05 < aandy> ah, right, of course, d'oh
21:05 < aandy> thanks
21:05 < visnup> vincentmac: a long random (secret) string
21:05 < aandy> or a signed url?
21:07 < visnup> vincentmac: or if you don't want to keep that much state, an HMAC'ed version of their email address maybe
21:08 <@mbalho> isaacs: i wish redsess wasn't redis specific and was just a k/v store api
21:08 <@mbalho> isaacs: WHAT SAY YOU SIR
21:09 < vincentmac> visnup, right now I'm creating a random string made up of date.now() and math.random, then creating my token like so: crypto.createHmac('sha256', id).update(seed).digest('hex');
21:09 <@mbalho> visnup: oh wassup dogg
21:09 < vincentmac> where id is the user id and seed is the random string generated
21:09 <@mbalho> require('crypto').randomBytes(30).toString('base64')
21:11 <@isaacs> mbalho: but a lot of redsess actually is very very redis specific.
21:11 <@isaacs> mbalho: it flattens objects, coerces things to strings, and uses a shared redis.createClient, and does auth using redis, etc.
21:11 <@mbalho> isaacs: i see del, delAll and set functions that could be pluggable
21:11 <@mbalho> (And get and getAll)
21:11 <@isaacs> mbalho: yeah, but that just means that redsess would be the one of those that talks to redis.
21:12 <@isaacs> mbalho: if you want to create a redsess-compatible session store that talks to some other thing... then fine.
21:12 <@isaacs> mbalho: but it'd mean rewriting redsess to make it not redis-specific, and then you'd still need most of the redsess code somewhere.
21:12 < visnup> vincentmac: what mbalho said
21:12 <@mbalho> the redsess constructor function has useful code in it
21:12 <@mbalho> but i dont want to use redis
21:12 < visnup> .replace('+','-').replace('/','_') to make it url-savvy too
21:12 <@isaacs> mbalho: what do you want to use?
21:12 <@mbalho> scuttlebutts
21:13 < visnup> mbalho: hollaaa
21:13 <@mbalho> ahah i can name my module session-butts
21:13 < tnorris> guybrush_: wonder how he figured that out. couldn't find that documented anywhere.
21:13 <@isaacs> mbalho: ohh... hm.  actually, it seems that you can pass in your own 'client' in the opts
21:13 < visnup> vincentmac: crypto.randomBytes gives you all the randomness you probably need (pretty sure from /dev/random)
21:13 <@isaacs> mbalho: i guess i could make redis an optional dep.
21:14 <@isaacs> mbalho: but if it doesn't have redis, and you don't pass in a "client", then it'll fail.
21:14 <@mbalho> yea kinda weird
21:14 < visnup> mbalho: btw, wanna do a couchdb blog post for blog.nodeknockout.com?
21:14 <@mbalho> ill just fork it
21:14 <@mbalho> visnup: you should link to jsforcats
21:14 <@isaacs> mbalho: actually, i take back what i said about it not being possible.  it's actually really easy.
21:15 < visnup> mbalho: I knew you were going to say something like that
21:15 <@mbalho> visnup: im busy for the next couple of weeks is all
21:15 <@isaacs> mbalho: hm.  but then you have to plug hkeys and hgetall and shit
21:15 < visnup> mbalho: damn, k. I'll bug mikeal though he's probably busy too
21:15 <@isaacs> mbalho: which is rather redisy
21:16 <@mbalho> isaacs: ahh yea good point
21:16 <@isaacs> mbalho: just make an implementation of redis that uses the scuttlebutt module.
21:16 <@isaacs> mbalho: or a clone of redsess that is the redsess api with not-redis behind it
21:16 <@mbalho> oh right!
21:16 < visnup> mbalho: or can you recommend anyone who has lotsa time + likes to write blog posts + knows lots of couch?
21:16 <@mbalho> redis-butt
21:17 <@mbalho> visnup: daleharvey if you ask him to write a pouchdb/couchdb blog post
21:17 <@isaacs> mbalho: redbutt
21:17 <@isaacs> mbalho: clearly, that is the correct name.
21:17 <@mbalho> visnup: pouchdb runs in node now
21:17 < vincentmac> visnup, I'm sure that the randomness like that should be fine.  my question is mainly what should I do with the token?  Right now I'm storing the token in redis as the key and the user_id as the value and then setting that to expire in x days.  To verify I just retrieve the user_id by the token/key and then activate the user.  Is this enough? Or are there better best practices?
21:17 <@mbalho> haha
21:17 < visnup> vincentmac: that's a great practice
21:17 <@mbalho> npm install macaque
21:18 <@mbalho> http://2.bp.blogspot.com/-_4bKqdI6ua8/TZIJIvf_hsI/AAAAAAAADn4/EliVwNK0N1I/s1600/MonkeyCelebesCrestedMacaque.jpg
21:18 < daleharvey> lol, 'lots of time' isnt the best description for me :P
21:18 <@isaacs> mbalho: i think redbutt is easier to remember, and spell
21:18 <@mbalho> YEA BUT ITS NOT AS PUNNY
21:18 < chilts> vincentmac: already answered in #express
21:18 <@mbalho> daleharvey: :D
21:18 <@isaacs> mbalho: i guess.
21:18 < chilts> why do people ask the same question in two different channels and ignore it in one
21:18 < visnup> ooh, pouchdb would be good too
21:18 <@isaacs> mbalho: not a benefit, if you ask me
21:18 < chilts> hmm
21:18 <@mbalho> chilts: there is no expectation of answers in irc
21:18 <@isaacs> mbalho: memorable and understandable is more important.
21:19 < chilts> mbalho: yeah, but it's been answered before he posted here
21:19 < vincentmac> visnp chilts cool, thanks
21:19 < visnup> chilts: 'cuz irc is still kinda hard
21:19 <@mbalho> isaacs: i only care about the lulz
21:19 < vincentmac> visnup thanks
21:19 < scott_gonzalez> isaacs: Can you explain what `npm outdated` is supposed to do? I can't seem to get it to every output info.
21:19 <@mbalho> isaacs: and a bonus is that macaque is super hard to spell
21:20 < daleharvey> but I wouldnt mind blogging about couch / pouch if someone wants it
21:20 < elcuervo> Anyone knows a workaround for the "Document update conflict" after reseting a npm account?
21:20 <@mbalho> hah
21:20 < cpsubrian> mbalho, isaacs : what would cause more lulz than this in a README http://3.bp.blogspot.com/_1nOiIPDvfr0/TNg-RLMqVfI/AAAAAAAADTw/h5SgTfCy6r0/s1600/Monkey+Butt.jpg
21:20 <@mbalho> LOL
21:21 <@mbalho> exactly!
21:21 < jcrew> dem hemms
21:22 < brianc> http://github.com/brianc/node-omf readme lulz
21:22 < vincentmac> chilts I asked the question in two different channels to up the chance of getting a response.  Sometimes #express is silent.
21:22 < brianc> elcuervo: reset your account on the npm admin page I believe
21:23 < elcuervo> @brianc I already did, but when trying to login with the new credentials... boom
21:28 < MI6> joyent/node: isaacs v0.9.3-release * 47ccb51 : wip - http://git.io/V5eRCA
21:28 < chovy> VooDooNOFX_: the new pw sounds like greenday? that sucks
21:29 < chovy> i haven't listed to it yet
21:39 < scott_gonzalez> isaacs: Is `npm outdated` supposed to show packages in package.json which are older than what's in the registry or installed packages which are older than package.json?
21:40 < gnarf> isaacs: I'm curious on that one too ^^^
21:41 < gnarf> scott_gonzalez: you trying to solve that "stop trying to grunt without npm installing" issue ?
21:41 < scott_gonzalez> gnarf: yup, trying to get more info about https://github.com/isaacs/npm/pull/1279
21:42 < gnarf> scott_gonzalez: well, hopefully if isaacs shows up one of us is still here to receive wisdom ;)
21:49 < syskk> anyone using winston for loggin?
21:49 < syskk> logger.error(new Error('what da.... ffff....'));
21:49 < syskk> for some reason, this will save an empty error in the log
21:49 < syskk> the error is not detected as "meta"
21:58 < naquad> people, is there advanced ORM following ActiveRecord pattern for node.js?
21:58 < yawnt> for sql?
21:58 < naquad> mysql
21:58 < yawnt> not really.. i wrote mine though
21:58 < naquad> to be more specific
21:58 < yawnt> if you want to check it out :)
21:59 < naquad> yawnt, show it :)
21:59 < yawnt> github.com/yawnt/hater
21:59 < yawnt> note: it lacks docs
21:59 < naquad> yawnt, thanks, will take a look at it
21:59 < yawnt> naquad: and because it's alpha stuff
21:59 < yawnt> you should install from git
22:00 < yawnt> naquad: lemme know what you think ;) ..
22:00 < naquad> kk
22:01  * nathan7 eyes naquad 
22:01  * naquad asks natha7: What?
22:01 < naquad> *nathan7
22:02 < nathan7> Perhaps you should use tab-complete
22:02 < visnup> naquad: mde/model?
22:02 < lowtax2> scumbag reddit
22:02 < naquad> visnup, ?
22:02 < visnup> naquad: https://npmjs.org/package/model
22:03 < visnup> naquad: whoops, sorry. works on postgres, not mysql yet
22:03 < pspeter3> is there a way to have the resulting source code of a require function? Meaning I could turn a node.js app into a single js file to return to the client?
22:04 < visnup> pspeter3: browserify?
22:04 <@mbalho> pspeter3: check out browserify
22:04  * mbalho high fives visnup
22:04 < pspeter3> visnup mbalho, will do
22:04  * visnup fist bumps mbalho
22:04  * mbalho break dances
22:04  * mbalho is in brooklyn right now
22:04 < visnup> mbalho: ohhh that's a good place to breakdance
22:05 < pspeter3> visnup mbalho, browserify is awesome
22:05 <@mbalho> ya rly
22:05 < nathan7> no wai
22:05 < eph3meral> hi - so I am building an app where I think I could potentially benefit from (at least one thing) I hear node.js has to offer which is basically a "persistent" or "socket like" connection so that the users browser essentially gets "instant updates" - I'm wondering where to find out more about what something like that would look like - from what I understand this requires or entails rolling your own web server from scratch in node.js? is t
22:05 < eph3meral> true?
22:06 < eph3meral> do I need to use node on the client side as well?
22:06 < eph3meral> is it generally pheasible for the frontend to be a mix of requests to say, an apache server and also a node server?
22:07 < eph3meral> I mean, given that it's javascript, I guess I don't see why not
22:08 < chovy> eph3meral: that's pretty typical to setup a proxy inbetween for handling static requests.
22:08 < eph3meral> chovy: usually I proxy everything with nginx, myself
22:08 < eph3meral> be it PHP, ruby, python, whatever
22:09 < eph3meral> so I am looking at the wiki, and the FAQ is a bit thin
22:09 < eph3meral> chovy: is this "socket like" connection real? or is node just good at writing/running really fast web servers so it seems instantaneous?
22:09 < gildean> eph3meral: you're asking about websockets
22:10 < eph3meral> gildean: ahh, interesting, ok - I've done socket programming in C, haven't checked out websockets yet
22:10 < gildean> eph3meral: check out the ws module and also socket.io
22:10 < eph3meral> will have to give that a look, thanks
22:10 < eph3meral> gildean: awesome, thanks
22:10 < gildean> or net.io
22:10 < gildean> iirc net.io was bit like socket.io but leaner
22:11 < ikkedee> was?
22:11 < gildean> is
22:12 < ikkedee> ah sorry, thought you meant development was discontinued or something
22:12 < gildean> as in was the last time i looked
22:13 < gildean> but going with nodejs and websockets, there should be more than enough for you to google around
22:13 < eph3meral> k, will do
22:15 < ashnur> is there some kind of auth/session management for dnode?
22:15 < eph3meral> ahh, wikie Resources has an article on websockets
22:15 < eph3meral> wiki*
22:17 < ashnur> dnode-session
22:17 < ashnur> kewl
22:19 < eph3meral> is there a standards body for websockets? like the W3? is there a spec or an rfc or something?
22:19 < `3rdEden> There's a RFC
22:19 < `3rdEden> http://tools.ietf.org/html/rfc6455
22:23 < harrydog> anyone know how i can install/run redis on osx?
22:24 < airtanah_> harrydog: homebrew
22:24 < joehoyle> harrydog: i think i have done it via brew
22:24 < harrydog> ok, that worked, installed, but how do i launch it
22:25 < joehoyle> harrydog: did the install print some steps?
22:25 < airtanah_> redis-server
22:26 < harrydog> yep, that worked, thanks
22:29 < harrydog> what npm makes jade prettify the html output
22:30 < CoverSlide> harrydog: that statement makes absolutely no sense
22:30 < harrydog> ok
22:30 < CoverSlide> harrydog: you can use this: https://github.com/rickeyski/node-beautifier
22:31 < CoverSlide> it's a generic beautifier for html / js / css
22:31 < harrydog> app.set('view options', { pretty: true }); worked for me
22:32 < CoverSlide> hmm i thought tj removed jade beautification
22:32 < CoverSlide> maybe he put it back
22:32 < harrydog> though it puts spaces not tabs
22:32 < tjholowaychuk> it's still there
22:33 < CoverSlide> someone should make slim templates for node
22:34 < nathan7> harrydog: tabs are old skool
22:34 < CoverSlide> only thing that should have tabs in it is make
22:34 < CoverSlide> but that's because of its shitty design
22:34 < harrydog> seriously?
22:35 < harrydog> i'd think tabs would make it more readble
22:35 < CoverSlide> not if you're on a console machine where tabs are 8 spaces long
22:36 < CoverSlide> and the possibility of mixing tabs and spaces can lead to all sorts of bad readability
22:36 < harrydog> so, you curl the get request to view what's output?
22:36 < CoverSlide> so better to pick one, and pick the one that you have control over
22:37 < CoverSlide> harrydog: if I need to look at something quickly, I'll use cat
22:37 < CoverSlide> this goes for xml docs, or any source code
22:37 < harrydog> what's cat
22:37 < CoverSlide> and if you need to look at a diff
22:37  * CoverSlide sighs
22:38 < gildean> harrydog: man cat
22:38 < tnorris> question for vim users, anyone have any good syntax highlighters? been using vim-javascript, but it's out-of-date.
22:38 < tnorris> i'm updating it to contain all the new stuff, and Node specific things, but it's taking a while.
22:39 < mynodey> anyone here familiar with v8?  I'm not sure why my extension is hanging when I do something like this:  v8::Object::New()
22:39 < sblom> tnorris: does node extend javascript syntax?
22:39 < tnorris> sblom: keywords like "Buffer, global, process" are node specific.
22:40 < ashnur> https://github.com/tblobaum/dnode-session/issues/5 fuck :(
22:48 < mdedetrich> I'm using the npm request library to get body of html pages
22:49 < mdedetrich> and I am getting raw unicode characters in the body (such as &#039;)
22:49 < ChrisPartridge> tnorris: theres a vim page on the joyent wiki (gh)
22:50 < mdedetrich> is there a way to fix this with request (or alternately is there a quick way to parse it to the actual string characters)
22:51 < nrmL> GLOBAL.eventObj = require('event').EventEmitter is this a good idea? is there another way to implement this?
22:52 < SomeoneWeird> global?
22:52 < SomeoneWeird> global vars are badddd
22:53 < nrmL> SomeoneWeird: yea, i was thinking the same thing. Could I just pass the event object to whatever process/file/etc i need? And then bind on it?
22:54 < tnorris> and.. i'm back. freakin fire alarms. so any vim users have a syntax package they're using?
22:55 < tonymilne> Does anyone know if it is safe to write to a single file using write streams from multiple processes?
22:55 < eph3meral> tonymilne: as long as you perform decent locking it's probably fine
22:56 < tonymilne> hmm - i won't have any locking :S
22:56 < ChrisPartridge> nrmL: use a singleton
22:56 < tonymilne> NodeJS docs say: "Note that it is unsafe to use fs.write multiple times on the same file without waiting for the callback. For this scenario, fs.createWriteStream is strongly recommended."
22:56 < tonymilne> but i assume that means from the same process.
22:56 < ChrisPartridge> tnorris: i did suggest checking out the vim page on the joyent wiki (on github)
22:56 < joehoyle> Anyone know of a module for Amazon S3 mutlipart uploads? Knox appears not to support them
22:57 < tnorris> ChrisPartridge: thanks. when the fire alarm went off my laptop disconnected from the wireless.
22:58 < tnorris> ChrisPartridge: awesome stuff. the syntax package is the one I'm updating now. it's out of date, and don't contain any Node globals.
23:04 < tnorris> anyone ever had use for the `try...finally` syntax? seems a little superfluous.
23:08 <@isaacs> scott_gonzalez: it shows installed pacakges where a newer one is available on the registry
23:08 <@isaacs> mbalho: you should spell it mcack
23:08 <@isaacs> mbalho: like "McAck"
23:08 < gnarf> isaacs: the use case we are trying to solve with our need there is the other case.
23:09 < gnarf> We want to make sure that the installed packages are the versions requested in package.json
23:09 < gnarf> because people just type "git pull; grunt"
23:09 <@isaacs> gnarf: npm ls will tell you if anything is missing
23:09 < gnarf> and then didn't update some lib and it blows up
23:09 <@isaacs> yeah
23:09 <@isaacs> npm ls
23:10 < gnarf> isaacs: is like the exit code of that useful, or do i need to try to parse out the verbose response?
23:11 < nrmL> ChrisPartridge: ty
23:11 < MI6> joyent/node: isaacs v0.9.3-release * a3bc76d : 2012.10.24, Version 0.9.3 (Unstable)  * V8: Upgrade to 3.13.7.4  * crypto - http://git.io/d0RFlw
23:12 < gnarf> aha
23:12 < gnarf> kinda useful
23:12 < rvagg> Nexxy: are you coming to jsconf.au?
23:19 <@isaacs> gnarf: add the -p flag
23:19 <@isaacs> gnarf: it's easy to parse
23:19 <@isaacs> gnarf: i think --json might even work there
23:20 < gnarf> isaacs: the exit code is actually perfect from what i can tell
23:20 < gnarf> but those two other pro-tips are getting written down :)
23:21 <@isaacs> gnarf: npm ls --parseable --long (or `npm ls -pl` for shorthands)
23:21 < ChrisPartridge> isaacs: can i easily turn off the npm WARN messages also?
23:22 < ChrisPartridge> (regarding no README.md)
23:25 < r4m0n3> hey all... anyone know why the socket docs don't include readable/writable properties, but the source does?
23:25 <@Nexxy> rvagg, I hope so
23:25 <@Nexxy> rvagg, no one has asked me to yet but we'll see
23:26 <@Nexxy> rvagg, are you going?
23:26 <@Nexxy> I know thatguydan will be there! :D
23:26 < MI6> joyent/node: Olivier Lalonde v0.8 * 626db18 : doc: child_process: document uid and gid spawn() options - http://git.io/ZOMg_Q
23:29 < thatguydan> Nexxy: that's what i'm being told :p
23:29 <@Nexxy> thatguydan, :D
23:30 <@Nexxy> I want to go too
23:30 <@Nexxy> it would be cool to work on stuff in person for a bit
23:30 < thatguydan> Office is always open :p
23:31 <@Nexxy> :D
23:31 < thatguydan> speaking of which, time i head in ;)
23:32 <@Nexxy> drive safe
23:37 < jaha> how do you base64 encode JSON?
23:37 < jaha> for an amazon policy for example
23:39 < rvagg> Nexxy: I'm going, is thatguydan dan friedman? I was excited to see his talk listed!
23:39 <@Nexxy> rvagg, yus!
23:39 < brianloveswords> How do people feel about using `const` in node since v8 supports it?
23:39 <@Nexxy> rvagg, if you want to see me talk you could tell them
23:39 < jesusabdullah> all y'all need to have a conference here
23:39 <@Nexxy> brianloveswords, I use it
23:39 < jesusabdullah> without bikes
23:39 < jaha> nvm
23:39 < jesusabdullah> because I am a fat lump of shit
23:40 < rvagg> Nexxy: will do!
23:40 <@Nexxy> :D
23:40 < jesusabdullah> I wish I could sit still for talks :(
23:40 < jesusabdullah> but I do read like a motherfucker :)
23:40 < mscdex> Nexxy, \o/
23:40 <@Nexxy> mscdex, \o/
23:42 < mscdex> brianloveswords: are you asking because you love words (like const)?
23:42 < brianloveswords> mscdex: EXACTLY
23:42 < mscdex> :-D
23:43 < gnarf> jaha: return new Buffer(str, 'binary').toString('base64'); (dug out of a module called 'btoa')
23:43 < jaha> gnarf: haha yea just figured out the same
23:46 < codingstream> anyone have couchdb 1.2 on a joyent smartmachine?
23:50 < rvagg> brianloveswords: I'd be using const if jshint didn't bork at it
23:51 < brianloveswords> rvagg: oh, interesting!
23:51 < brianloveswords> I didn't realize that jshint hated it.
23:51 < phpnode> hey, does anyone know of any db wrappers for node that deal with more than one RDBMS, a bit like PDO in php?
23:51 < xer0x> rvagg isn't there a config option to enable const in jshint?
23:52 < rvagg> xer0x: ummm
23:52  * rvagg is looking
23:52 < rvagg> oh snap! `esnext`! bingo!
23:52 < brianloveswords> rvagg, xer0x: Nice!
23:52 < xer0x> rvagg cool
23:52 < jerrysv> Nexxy: are you taking the train up with us for cascadia?
23:53 < rvagg> `let` will be fun once it gets in
23:53 < jerrysv> brianloveswords: i love const :)
23:53 < rvagg> fwiw I'll be tracking Node ES6 features here: http://kangax.github.com/es5-compat-table/es6/
23:54 < rvagg> it's different from the Chrome columns cause that's run with 'experimental' on
23:56 < sh1mmer> is anyone using libpcap on OSX right now?
23:56 < sh1mmer> Is it just the waf that's busted I see some other bugs that sounds like horrible breakage
23:57 < rauchg> sh1mmer no but 
23:58 < sh1mmer> but...
23:58 < rauchg> i think someone needs to implement
23:58 < rauchg> http://www.cs.uit.no/~daniels/PingTunnel/
23:58 < rauchg> in node
23:59 < brianloveswords> rvagg: yeah, I'm really looking forward to let
--- Log closed Wed Oct 24 00:00:01 2012
