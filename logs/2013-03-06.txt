--- Log opened Wed Mar 06 00:00:25 2013
00:01 < AlphaPinky> the linux I have access is a server and it runs 24/7 non-stop which might be interesting to have things available all the time. my win8 notebook is only for development. my plan is to keep using the notebook but keep node running in a linux box. how I am going to make changes to the code that is remote is what I´m trying to figure out.
00:01 < euoia> AlphaPinky: do you have a low-latency connection to the box?
00:01 < AlphaPinky> yes.
00:02 < AlphaPinky> my connection is very good.
00:02 < euoia> AlphaPinky: in that case I would say use vim and get used to it :)
00:02 < AlphaPinky> it is in another city but it is usually good.
00:02 < AlphaPinky> really?
00:02 < euoia> AlphaPinky: yes of course, vim is a great editor
00:02 < AlphaPinky> I prefer Sublime or Notepad++ over VIM.
00:02 < faceleg|lunch> AlphaPinky: there is an sftp plugin that has upload on save
00:03 < AlphaPinky> I´m not saying it is not, but there are things that are not very pratical there. for example. switching between files isn´t as good as in an IDE like Sublime.
00:03 < nlf> sublime is nice, i just can't get used to graphical editors
00:03 < Eigen_> DEBUG: Error: This socket is closed.
00:03 < Eigen_> does this mean
00:04 < euoia> AlphaPinky: vim will most likely require a lot of configuration to be usable for you if you are used to a graphical editor
00:04 < Eigen_> my database connection is being closed prematurely?
00:04 < d48> oo, IDE discussion. hellooo vim
00:04 < Eigen_> ....
00:04 < euoia> AlphaPinky: how do you switch between files in Sublime?
00:04 < Eigen_> euoia: use the command numbers
00:04 < Eigen_> like
00:04 < Eigen_> chrom
00:04 < euoia> the ctrl-t thing?
00:04 < Eigen_> *chrome
00:04 < Eigen_> go like
00:04 < Eigen_> ctrl 1
00:05 < AlphaPinky> euoia, there are tabs. ctrl+tab.
00:05 < ChrisPartridge> i just use ctrl+p
00:05 < Eigen_> and then to go to each tak
00:05 < Eigen_> *tab
00:05 < Eigen_> you go
00:05 < Eigen_> ctrl/command {
00:05 < euoia> ah right, yeah I have mapped command-n to switch to tab n in macvim
00:05 < Eigen_> or }
00:05 < euoia> just like chrome
00:05 < Eigen_> depends where you want to go
00:05 < Eigen_> yea
00:06 < euoia> I think it is command-pgup and command-pgdown for previous and next tab in chrome
00:06 < euoia> so I have mapped those as well
00:06 < euoia> the point is that all this stuff if configurable
00:06 < euoia> unfortunately vim's default configuration is not the best
00:07 < nlf> yeah, buffers are kind of confusing
00:07 < nlf> as are split windows
00:07 < nlf> you get used to it though
00:08 < euoia> I have configured macvim to show an angry face emoji in my tab if there's more than one window open in the tab :D
00:08 < euoia> and various other icons based on a regexp match of the path
00:09 < rocket> Anyone have input on what the best technology for traversing is?
00:09 < euoia> the minimap in sublime is pretty cool though
00:10 < euoia> rocket: I find my feet are quite good at traversing
00:10 < rocket> lol
00:10 < faceleg|lunch> :tabn/p
00:10 < rocket> and no input on technology of choice ?
00:10 < ChrisPartridge> euoia: is there something like that for sublime (icons based on file path) that you know of?
00:11 < euoia> ChrisPartridge: I don't use sublime so I have no idea
00:11 < jrajav> rocket: I think you could do with better technology for communicating what you mean exactly.
00:11 < jrajav> Traversing.... a tree? HTML? Paris? The lines on a wood floor? What?
00:11 < rocket> I'm sorry I don't follow jrajav
00:12 < rocket> What it would need to be good at is crawling the web pages of a site and finding certain things e.g. hidden text, etc
00:13 < rocket> html yes sorry
00:13 < euoia> rocket: I used a python library called beautiful soup ages ago that I was quite impressed with
00:13 < rocket> what did you do with it euoia if you dont mind me asking
00:14 < euoia> I crawled craigslist housing ads and mapped them on google maps
00:14 < AlphaPinky> I managed to find a good solution SFTP with Notepad++. Thanks for the ideas. :)
00:16 < rocket> pretty slick. This looks pretty cool similar to scrapemark
00:18 < ChrisPartridge> rocket: you could just use one of the http clients, or even phantomjs if you want to load everything and inject your own js
00:19 < rocket> Hey ChrisPartridge thanks for the input. That's actually the second time someone has mentioned to me about phantomjs
00:20 -!- mode/#Node.js [+o TooTallNate] by ChanServ
00:23 < faceleg|lunch> nick faceleg|work
00:24 < faceleg|work> facepalm
00:27 < ChrisPartridge> faceleg|work: get your gyp module working? 
00:28 < faceleg|work> ChrisPartridge: I was able to figure out how to do things the "right" way
00:28 < faceleg|work> but that was @ 2:30 AM
00:28 < faceleg|work> it always worked, just the way it worked was horrible
00:29 < faceleg|work> now I'm just going to update the small section of functionality to use the "right" way, and continue working on my main project, updating bits of the module as I use them
00:29 < niggler> lol faceleg|sleep 
00:29 < ChrisPartridge> faceleg|work: still wrapping the object? 
00:29 < faceleg|work> it's at: https://github.com/tbranyen/nodegit
00:29 < niggler> woah woah now textual is really fucked up
00:29 < niggler> faceleg|sleep
00:29 < niggler> faceleg|work
00:29 < niggler> oh you are logged in twice
00:29 < faceleg|work> niggler: sleep is at home
00:29 < niggler> false: sleep is at work
00:30 < faceleg|work> lol
00:30 < niggler> work is for sleep
00:30 < faceleg|work> ChrisPartridge: some kind and paitient souls on this chat helped me solve my issues
00:30 < faceleg|work> I can now instantiate JS objects inside C++ and return them
00:30 < ChrisPartridge> awesome
00:31 < faceleg|work> instead of the super-hacky passing a JS object to a C++ function, changing its values in C++ then passing it back
00:31 < faceleg|work> which the whole library seems to do
00:31 < gaf> hello, I'm trying to get proficient with node to get a job. i'm already able to do simple things, like a blog, simple api's, install npm pacakges,user authenticaiton, etc. my question is, how can i get an idea of what is being commercially requested for companies, so I could focus my studies and experiments to that..
00:31 < faceleg|work> fair'nuff, doing it the "right" way was a ****ing mission and a half
00:31 < yakubori> gaf: intern
00:32 < faceleg|work> ChrisPartridge: I was so excited when I solve it that I woke my wife so I could rant at her about it
00:32 < niggler> gaf solve problems
00:32 < niggler> wait a second, has so ever reared his or her or its head?
00:33 < ChrisPartridge> faceleg|work: hah, I'm guessing that didn't go down too well
00:33 < faceleg|work> niggler: I'm not sure how what you jsut said makes sense
00:33 < faceleg|work> ChrisPartridge: no she was happy
00:34 < niggler> faceleg|work I'm trying this irc client called "textual"
00:34 < faceleg|work> I've been horrible company the past 1 1/2 weeks while I've been working through the initial stages of re-learning C++ and learning how to node with C++/V8
00:34 < niggler> and it marks nicks with colors
00:34 < faceleg|work> niggler: weechat-curses ftw
00:34 < niggler> so every time someone says "so", that word shows up in a color
00:34 < faceleg|work> doesn't strike me as a useful behaviour
00:35 < niggler> and sure enough, if you look at the channel list, so and so- are logged in
00:35 < ChrisPartridge> faceleg|work: you'll have to write a nice lengthy blog post now :-)
00:35 < gaf> niggler, what you mean by that ?"solve problems"
00:35 < faceleg|work> gaf: invent a problem, solve it. repeat.
00:35 < niggler> faceleg|work write a tutorial
00:35 < faceleg|work> ChrisPartridge: I know, I wish I had time to... sorry internet.
00:36 < faceleg|work> ChrisPartridge: *none* of what I had to do was obvious at all
00:37 < faceleg|work> right now I have a very vague understanding of the whole thing
00:37 < faceleg|work> all the differentdocs were only "sort of" helpful
00:37 < niggler> faceleg|work it is your job to write the docs you wish you had
00:37 < niggler> this is the perfect time to do it, too
00:37 < faceleg|work> niggler: yeah I want to, noob friendly
00:37 < faceleg|work> yeah while still in noob space
00:38 < faceleg|work> fine fine
00:38 < faceleg|work> I'll do it tonight
00:39 < faceleg|work> "Constructing a JS Object within C++ and returning it"
00:40 < faceleg|work> doesn't sound like a great headline
00:40 < ChrisPartridge> faceleg|work: Yeah, I felt the same - albeit my C++ experience was quite limited at the time - might give it another shot again soon
00:40 < ChrisPartridge> hence why I was hoping you'd write a blog post :P
00:40 < havvy> faceleg|sleep: Constructing JSON Within C++  work better?
00:41 < faceleg|work> not JSON though
00:41 < faceleg|work> thery're instances of JS objects that normally are constructed with new ObjectName()
00:42 < faceleg|work> really they're like"masks" for a C++ class
00:42 < faceleg|work> as their functions all pass thorugh to C++
00:43 < faceleg|work> ChrisPartridge: I haven't touched C++ since first year @ uni, which was over 5 years ago now
00:43 < faceleg|work> havvy: "Constructing JS Objects Within C++"
00:43 < faceleg|work> sth like that
00:44 < havvy> Ah.
00:44 < faceleg|work> writing code for these objects, so thery're created in JS with new ObjectName()
00:44 < faceleg|work>  is well documented
00:45 < faceleg|work> i just flailed wildly and failed miserably when trying to do the same *within* js
00:46 < faceleg|work> ChrisPartridge: I find now that I don't worry so much about the language, if I have to do something in it then eventually it'll sink in
00:46 < motaro> MongoDB or PostgreSQL?
00:46 < faceleg|work> motaro: do you want a document store or rdbms?
00:47 < niggler> c++ sucks 
00:47 < faceleg|work>  hear that
00:47 < faceleg|work> I*
00:47 < motaro> From nodejs point of view Document store makes more sense, easier data transitions. Relational seems more scalable on my view.
00:48 < faceleg|work> why does it seem more scalable to you?
00:48 < motaro> Setup BI, DataCubes, Data Warehouse, that sort of stuff.
00:49 < amurdaca> ever tried cassandra?
00:49 < motaro> No I haven't...
00:49 < faceleg|work> niggler: I find the C++, or at least V8 syntax difficult to look at
00:49 < Eigen_> what is the best frontend mvc out there right now
00:49 < faceleg|work> but I guess if I ever run out of colons I'll know where to look
00:50 < faceleg|work> AngularJS for all of your forntend needs
00:50 < amurdaca> BackboneJS ftw!!!!!!!!
00:50 < niggler> std::cout << " this " << std::setw(5) << "really " << "pisses " << "me " << "off" << std::endl; 
00:51 < motaro> niggler is closer to the machine
00:51 < faceleg|work> Handle<Value> handle = Object::constructor_template->NewInstance(); Object *objectInstance = ObjectWrap::Unwrap<Object>(handle);
00:51 < faceleg|work> motaro: doesn't mean we have to like it
00:51 < niggler> gnu printf is also sad motaro -- it mallocs
00:52  * niggler wonders if also is awake
00:52 < Eigen_> does angular js
00:52 < Eigen_> not break the back button
00:53 < Eigen_> is this what they mean by deep linking?
00:53 < euoia> Eigen_: I believe it's possible to manipulate the browser history from javascript
00:53 < motaro> Have anybody been reading about the algorithms that people are proposing for the quantum computer?
00:53 < Eigen_> yea
00:53 < euoia> Eigen_: search for browser history api
00:54 < faceleg|work> angluar lets you use the history api
00:54 < faceleg|work> afaik that doesn't break back
00:54 < faceleg|work> but to make links open normally you have to add rel="_self" to them
00:55 < ChrisPartridge> faceleg|work: ah, are you in AU?
00:56 < Eigen_> wow
00:56 < Eigen_> they have really extensive docs
00:57 < faceleg|work> ChrisPartridge: no, NZ
00:57 < faceleg|work> Eigen_: yes AngularJS is great, thanks Google.
00:57 < deric_skibotn> On Windows, when I run 'npm install coffee-script', where is coffee.exe (or whatever it's called on Windows) installed?
00:57 < deric_skibotn> THe command ended with "coffee-script@1.6.1 node_modules\coffee-script"
00:57 < ChrisPartridge> faceleg|work: close enough :P
00:57 < deric_skibotn> node is installed in the default c:/Program Files/nodejs/bin location
00:58 < Eigen_> can you update node from npm
00:58 < deric_skibotn> Eigen: how do I do that?
00:58 < faceleg|work> ChrisPartridge: basically another state
00:58 < deric_skibotn> npm update node ?
00:59 < Eigen_> lol
00:59 < Eigen_> i was asking a question
00:59 < Eigen_> not you
00:59 < deric_skibotn> Eigen_: "npm update node && echo ok" says ok, but does nothing
00:59 < deric_skibotn> ah
00:59 < deric_skibotn> irc
00:59 < faceleg|work> should I do function nameOfFunc() {} or var nameOfFunc = function() {}
00:59 < Eigen_> oh
01:00 < Eigen_> deric_skibotn: you can use nvm
01:01 < deric_skibotn> Actually, I only needed the '-g' flag....
01:01 < deric_skibotn> All installs on Windows should be global by default
01:01 < Eigen_> man
01:01 < Eigen_> you use windows server?
01:01 < Eigen_> really?
01:01 < Eigen_> uh
01:01 < Eigen_> *ugh
01:02 < faceleg|work> man all the windows hatin' up in here
01:02  * Sly gets the pitchforks and a torch.
01:02 < niggler> woah windows sucks
01:02 < faceleg|work> I know!
01:02 < faceleg|work> just thinking about it makes me glad I don't have to use it
01:02 < faceleg|work> I'm the best at sentances
01:03 < Eigen_> i can see that
01:03 < Eigen_> lol
01:03  * ChrisPartridge is on windows right now
01:04 < faceleg|work> Eigen_: I've been up until 3AM for the past 10 days
01:05  * AlphaPinky realises how popular windows is. :)
01:06 < Eigen_> man
01:06 < Eigen_> as cool as it is having a transparent term
01:06 < Eigen_> its really hard to see
01:08 < faceleg|work> headache material
01:27 < Eigen_> what does this mean R! message EACCES, permission denied '/usr/local/bin/npm'?
01:28 < tjfontaine> /usr/local is usually only writable by root
01:28 < Eigen_> oh
01:28 < Eigen_> I can't use npm w/out sudo
01:28 < Eigen_> is that why?
01:28 < tjfontaine> you can't use `npm -g` in a system install without sudo
01:28 < gluxon> Eigen_: What are you trying to do?
01:33 < base698> tjfontaine: you say...  what if /usr/local is chown :)
01:34 < tjfontaine> base698: hence "usually"
01:34 < tjfontaine> base698: also more likely is someone using the chmod hammer
01:35 < Eigen_> is it better to store files is postgres
01:35 < Eigen_> or store them on an nginx server
01:35 < Eigen_> w/ linkbacks to the db
01:36 < tjfontaine> Eigen_: what size files and are you willing to use the blob io libpq functions
01:36 < Eigen_> like
01:36 < Eigen_> 4 page pdfs
01:37 < Gambit--> how often will they change?
01:37 < Eigen_> not often
01:37 < Gambit--> *shrugs*
01:37 < Gambit--> filesystem's pretty effective for that.
01:37 < Eigen_> very inoften
01:37 < Gambit--> if they were dynamic, I'd stick them in the database.
01:37 < Eigen_> idk what the proper word is for that
01:37 < Gambit--> static
01:37 < Eigen_> but
01:37 < tjfontaine> is this for a dms or?
01:37 < Eigen_> maybe if I use dynamic
01:37 < Eigen_> dms?
01:38 < Eigen_> document management
01:38 < Eigen_> oh 
01:38 < Eigen_> yea
01:38 < Eigen_> its for lockheed martin lol
01:38 < tjfontaine> I'm sure they already have 4 or 5 systems for this
01:38 < Eigen_> its just storing pdfs
01:38 < Eigen_> yea i know
01:38 < Eigen_> I'm not doing it to be innovative tjfontaine
01:39 < tjfontaine> Eigen_: fair enough, basically I don't think there's a good reason for you to store them in the db, there are valid use cases for it, it's not likely you'll hit that
01:39 < Eigen_> ok
01:53 < teadict> My application is dying when a server error fires up, despite using forever... How to keep the server alive despite all errors?
01:55 < Eigen_> can i populate a jade block somehow
01:55 < Eigen_> from a express res
01:55 < ChrisPartridge> Eigen_: certainly
01:55 < ChrisPartridge> should be able to run res.render
01:55 < havvy> http://stackoverflow.com/questions/7160767/help-with-displaying-a-variable-in-jade-express
01:58 < tim_smart> isaacs: https://github.com/joyent/node/issues/4929
01:58 < tim_smart> Or anyone who sees something wrong ^
01:59 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:02 < niggler> tim_smart whats the issue?
02:02 < niggler> seq 1 5 | node … works
02:02 < niggler> and (assuming on mac/linux) are you ending with control-D ?
02:03 < mscdex> tim_smart: does .resume() enable the old stream functionality?
02:04 < mscdex> yep it looks like it
02:04 < mscdex> https://github.com/joyent/node/blob/master/lib/_stream_readable.js#L633
02:35 < faceleg|work> kill me
02:43 < zivester>  /join #bitcoin
02:50 < chakri> i am using zlib to gunzip a bytearray written to db by java process. But i get "incorrect header check -3" error. am i missing something
02:50 < chakri> ?
02:51 < chakri> does node zlib library gunzip string? 
02:52 < ChrisPartridge> faceleg|work: ruh roh, back onto the c++ eh?
02:56 < faceleg|work> ChrisPartridge: I wish
02:57 < faceleg|work> ChrisPartridge: clients murdering their chances of ever having a good website
03:01 < ChrisPartridge> hah
03:13 < faceleg|work> nah actually I can't wait to go home and do more C++
03:13 < faceleg|work> actual progress can be made - PROGRESS
03:13 < faceleg|work> likely progress towards segfaults but wahtever
03:14 < AlphaPinky> Hi. In my debian box, I´m trying to auto start up a node application at start up. But the script is runned but the application doesnt start. I wonder what I can make to have it working.
03:14 < ChrisPartridge> segfaults are better than "hedfaults" ;)
03:14 < ChrisPartridge> AlphaPinky: errors? logs?
03:15 < faceleg|work> paste your code into some pasting service
03:15 < faceleg|work> and link it to us
03:19 < AlphaPinky> I dont see any output. But I know the script is runned because I did an echo to a file and the file had data inside it after reboot. The command I am using is: supervisor --watch '/home/nodejs/socialapp/' /home/nodejs/socialapp/app.js >> /home/nodejs/socialapp/log-app.log &
03:28 < AlphaPinky> faceleg| were you talking to me? are you reffering to the node code or the bash script code? the node code seems to be okay. i think the problem might be dependencies. I dont know. What is the method you use to auto execute a node application at start-up?
03:30  * AlphaPinky is back to google. so fun :)
03:33 < tim_smart> mscdex: If I don't call resume() stdin doesn't work at all.
03:34 < AlphaPinky> ChrisPartridge, you asked for logs, errors, but I cant find them. I know the bash is executed. But I have no output from the Node. This is a remote server I´m not sure how I can see the boot progressing. Is there an output file for that?
03:34 <@Nexxy> tim_smart, http://nodejs.org/api/process.html#process_process_stdin
03:35 <@Nexxy> tim_smart, that might be it (if you're talking about process stdin)
03:35 < tim_smart> Nexxy: https://github.com/joyent/node/issues/4929
03:35 < AlphaPinky> welcome NodeJSDeveloper :)
03:35 < NodeJSDeveloper> hey
03:37 < faceleg|work> AlphaPinky: I meant any code
03:38 <@Nexxy> tim_smart, ah sorry. I just caught your last msg
03:39 < tim_smart> Nexxy: np
03:42 < JamesMGreene> Any "easy" way to rename a published package and keep its historically published versions (but under the new name)?
03:42 < JamesMGreene> Assuming not, given the implications
03:42 <@TooTallNate> JamesMGreene: you gotta talk to isaacs 
03:43 < ohnoesitsraphy> Is nodejs the wrong tech to be using for CRUD websites?
03:43 < JamesMGreene> More like "you must deprecate/unpublish the old one and then re-publish all versions under the new name"
03:43 <@TooTallNate> JamesMGreene: but personally, i keep the old versions published under the old name
03:44 <@TooTallNate> i.e. https://npmjs.org/package/node-ffi -> https://npmjs.org/package/ffi
03:44 < JamesMGreene> Right, makes sense
03:44 < AlphaPinky> it´s late here. gotta go. thanks for the help. tomorrow i´ll be back. :)
03:44 < JamesMGreene> but the package in question is very new and doesn't have any downstream dependents yet
03:44 < JamesMGreene> Well, no published downstream deps
03:45 < JamesMGreene> ohnoesitsraphy Express allows for pretty easy CRUD setup
03:46 < JamesMGreene> http://expressjs.com/ https://npmjs.org/package/express
03:46 < ohnoesitsraphy> The reason why I ask is because some comments on HN pointed to how stupid it is to using NodeJS for regular web projects.
03:46 < ohnoesitsraphy> I use Express currently, and I'm really doing Node to get away from PHP
03:46 < JamesMGreene> Well if it's on HN it must be true ;)
03:46 < ohnoesitsraphy> I use HN as a guide for what's coming up, haha
03:46  * JamesMGreene shrugs
03:47 < JamesMGreene> My philosophy: if it meets your needs and you like using it, why not?
03:47  * ohnoesitsraphy agrees
03:47 < JamesMGreene> There's always more than one good way to do something :)
03:48 < ohnoesitsraphy> I don't want to spend a lot of time diving into a whole new language when I could be more productive elsewhere, Rails, for example.
03:48 < ohnoesitsraphy> I love node though, honestly
03:48 < JamesMGreene> sure, a smart distinction
03:49 < ohnoesitsraphy> I just cannot get into Rails, and I have a really good idea of how to properly develop projects in Node
03:49 < faceleg|work> ohnoesitsraphy: I use it with AngularJS for CRUD and it is amazing
03:50 < faceleg|work> like the perfect combination
03:50 < faceleg|work> node, socketio, angular
03:50 < ChrisPartridge> ohnoesitsraphy: I moved a couple inhouse crud apps over to node (from PHP), certainly consume less resources than their http/php counter parts, and since we've added websockets for some realtime notifications - so don't be steered away by HN comments :P
03:51 < ohnoesitsraphy> Thank you
03:52 < ohnoesitsraphy> anyways, quick question. I have this code and it works (https://gist.github.com/raphaelcaixeta/f5b65f6e998378ff8266), but when you send a POST request for second time, the responses triple. Any idea why?
03:52 < ohnoesitsraphy> Basically, the first request only goes to the console once. Which is what is expected
03:52 < ohnoesitsraphy> if I send the request again, I get 3 responses in the console. I'm not using a browser, just curl
03:54 < AAA_awright> ohnoesitsraphy: Please note that Math.random() is not cryptographically secure
03:54 < AAA_awright> If you're trying to generate a wholy unpredictable string then that won't work
03:55 < ohnoesitsraphy> AAA_awright, I'm aware, it's just a quick solution to see if I can get this end result done
03:55 < AAA_awright> Also it looks like you have two res.end() calls
03:55 < AAA_awright> You probably want a "return" after each one
03:56 < AAA_awright> ohnoesitsraphy: And you probably want to check that "err" variable
03:56 < AAA_awright> Make sure that it's not set
03:56 < ohnoesitsraphy> what should I return?
03:57 < AAA_awright> ohnoesitsraphy: Nothing, just "return;"
03:57 < SomeoneWeird> nothing
03:57 < ohnoesitsraphy> after the res.end();, correct?
03:57 < SomeoneWeird> return;
03:57 < AAA_awright> Correct
03:57 < ohnoesitsraphy> Thanks
03:57 < AAA_awright> And after the callbacks too
03:58 < AAA_awright> Even if just for clarity
03:58 < AAA_awright> You definitely don't want to call the callback twice
03:58 < AAA_awright> Which I forsee happening in the future after modifications are made
03:59 < ohnoesitsraphy> done and done, thank you
04:00 < faceleg|work> agood job
04:00 < faceleg|work> *good
04:02 < ohnoesitsraphy> boom, works. Thank you guys!
04:17 < mscdex> tim_smart: that script works for me on Windows at least
04:17 < tim_smart> mscdex: 0.9.11?
04:17 < mscdex> yeah
04:17 < tim_smart> mscdex: Weird. I never get the EOF
04:33 < faceleg|work> guys php is the worst
04:34 < SomeoneWeird> faceleg|work, you don't say
04:35 < havvy> faceleg|sleep: There's worse.
04:35 < greg5green> ^^ that.
04:35 < greg5green> (doesnt mean i like reading or writing php, of course :)
04:38 < havvy> I actually don't mind writing PHP. It's better than Java in certain ways.
04:38 < havvy> It has json_encode and json_decode for example.
04:40 < faceleg|work> I dislike it greatly
04:40 < faceleg|work> everything is hacked on
04:40 < faceleg|work> actually I don't wnat to get started moaning about it
04:44 < mscdex> node.php
04:46 < ChrisPartridge> php paid my bills for several years
04:46 < ChrisPartridge> i'm even a "zend" certified engineer, apparently
04:47 < havvy> ChrisPartridge: How do you become a "Zend" certified engineer?
04:47 < asadpakistani> Have js people over at v8 thought about making javascript optionally typed like:
04:47 < asadpakistani> /*int*/ var i = 10;  to enable faster execution for js.
04:47 < asadpakistani> with backward compatibility
04:48 < ChrisPartridge> havvy: from Zend, http://www.zend.com/services/certification/
04:48 < havvy> asadpakistani: Ask the v8 team that. Not the Node.js team.
04:49 < asadpakistani> havvy: they don't have freenode :(
04:49 < havvy> Anyways, Microsoft certainly thought about it, and they made an optionally typed language instead. ;)
04:54 < asadpakistani> TypeScript?
04:56 < asadpakistani> will TypeScript run on other browsers?
04:56 < asadpakistani> havvy: will u provide both a TypeScript and js and browser will select?
04:57 < havvy> TypeScript is compiled into JS.
04:57 < asadpakistani> havvy: do browsers do it for u?
04:57 < havvy> It will not run in the browser uncompiled.
04:57 < havvy> No. It's an extra build step.
04:57 < asadpakistani> havvy: i mean do browsers compile it if they support it
04:57 < asadpakistani> havvy: u give javascript to the users still?
04:57 < SomeoneWeird> no
04:57 < havvy> No. No browser compiles TypeScript.
04:57 < SomeoneWeird> yes
04:58 < asadpakistani> havvy: yeah but what about the ones that dun?
04:58 < asadpakistani> havvy: do u provide alternative?
04:58 < SomeoneWeird> no, you compile it to JS yourself
04:58 < SomeoneWeird> and give the JS to the browsers
04:58 < havvy> asadpakistani: There are a lot of languagse that compile to JS. The general rule of using them is:
04:59 < asadpakistani> SomeoneWierd, havvy: yeah but then theres still inline caching and all
04:59 < havvy> Write in that language. Pass the code through the compiler on your computer. Upload the JavaScript output to the web server.
04:59 < asadpakistani> havvy: cuz the compile script will lose all the typing
04:59 < asadpakistani> havvy: the typing can be used to speed up execution
04:59 < havvy> Note that nobody on the ECMAScript committee is asking for optional types.
04:59 < asadpakistani> havvy: i understand it keeps you from doing hidden class changes
05:00 < asadpakistani> havvy: but theres still a loss in performance
05:00 < havvy> Not big enough of one to be worried.
05:00 < asadpakistani> havvy: cant take it to c levels
05:00 < asadpakistani> havvy: thats the goal at the end of the day right
05:00 < havvy> That's not the end all be all goal.
05:01 < asadpakistani> havvy: if you javascript was like <script src="blah.js" alternate-typescript="blah.typescript"></script>
05:01 < asadpakistani> havvy: those that believe it to be the end goal, can have so
05:02 < havvy> Anyways, JITs are pretty smart about determining types for the functions that actually matter.
05:02 < asadpakistani> havvy: they are great, but if u wanna choose to assist them, whats wrong with that
05:03 < havvy> Well, for one...the people who write the JITs haven't been clamoring for optional types.
05:03 < havvy> Why not ask in #jsapi on irc.mozilla.org if they think optional types would help.
05:04 < asadpakistani> havvy: k cool...thanks...
05:06 < shmoon> i need a module that takes a time in past and gives me '12 minutes ago' 'about a year ago' like Rails does, any suggestion?
05:07 < ChrisPartridge> shmoon: Momentjs
05:07 < asdf12> http://npmjs.org/moment
05:09 < shmoon> hm let me try, my datetime is from mongo, wonder how i'll parse for it
05:11 < ChrisPartridge> shmoon: look at the moment docs, they pretty much cover every possible use case/scenario
05:11 < ChrisPartridge> http://momentjs.com/
05:13 < shmoon> yes it works thank you very much ChrisPartridge  :)
05:15 < ChrisPartridge> yw
05:17 < faceleg|sleep> hmm
05:18 < faceleg|sleep> has anyone here implemented a C++ async object factory ?
05:18 < faceleg|sleep> or does anyone know of any C++ node modules that do this?
05:18 < asdf12> wouldn't be worth it
05:18 < shmoon> this is strange http://pastie.org/6402477 - why doesnt the second console.log logs 10 ? :O
05:19 < faceleg|sleep> asdf12: talking to me?
05:19 < asdf12> yea
05:19 < asadpakistani> faceleg|sleep: async meaning in a different thread?
05:19 < MI6> joyent/node: Nathan Rajlich v0.8 * 4d809e2 : process: invoke EventEmitter on `process`  This properly sets the `_maxLi - http://git.io/Dhg7rA
05:20 < freon> shmoon: cos it has a toString
05:22 < shmoon> freon: um how does that relates ? I mean on line 5 I am setting it to 10
05:22 < asadpakistani> asdf12: wouldnt be worth it for all objects, might be for some?
05:23 < freon> yep, you've set your date to 10 seconds past the epoch
05:24 < shmoon> hm i thought i set it to int 10
05:24 < shmoon> weird
05:24 < freon> h,lmgtfy: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/toString
05:25 < asadpakistani> Can foreign compiled bytecode be trusted or its as dangerous as machine code?
05:26 < shmoon> freon: http://i.imgur.com/Kvq1j4E.png
05:29 < faceleg|sleep> asadpakistani: yeah
05:29 < shmoon> :(
05:31 < freon> yeah but what is data
05:32 < shmoon> data is an object with created_at as a property and 2 more properties that are strings, freon 
05:32 < shmoon> modifuying those string properties work fine but this date (created_at) property doesnt works
05:32 < shmoon> wat the heck
05:32 < freon> whered that object come from
05:33 < shmoon> mongodb
05:33 < shmoon> mongoose
05:33 < shmoon> findOne
05:41 < freon> there you go. you probably should werk with mongoose's helpful behaviour, that acts on knowledge of your data's types, but if you need to work around it then use data._doc
06:00 < shmoon> so you think mongoose is messing up?
06:07 <@isaacs> tim_smart|away: what os?  also, have you tested on the latest master, or just 0.9.11?
06:11 < draginx> isaacs: are domains required for http hangups still ( http://clock.co.uk/tech-blogs/preventing-http-raise-hangup-error-on-destroyed-socket-write-from-crashing-your-nodejs-server ) or did 8.21 fix this? I see some related updates but my skills are not quite there to actually decipher the source :(
06:39 < deoxxa> streams2 in the browser - yes? if so, how/where?
06:41 < ChrisPartridge> deoxxa: here's a stream in the browser - http://t3.gstatic.com/images?q=tbn:ANd9GcQDrnVkoAfMtM866eqiG2P-mM1uadkP3-GhdkRTs-B55pjRXAYz
06:41 < deoxxa> awesome
06:41 < JamesMGreene> isaacs: So is it possible to wholesale update a package's name (including historically published versions)?
06:41  * deoxxa ticks off that feature
06:42 < deoxxa> ChrisPartridge: it's flowing quite well, seems to be a good implementation
06:42 < SomeoneWeird> lol.
06:42 < ChrisPartridge> deoxxa: here's streams2 in the browser https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcSbApG9ryGoiFn2gm3LOKrx9ixuhfeI387PHm2ZauTQg8NVyS5u7A
06:43 < deoxxa> hoo boy
06:43 < deoxxa> slow down there, tiger
06:43  * ChrisPartridge giggles
06:46 < deoxxa> looks like i should be able to get https://github.com/isaacs/readable-stream to run in a browser with some messing about
08:01 < wsieroci> is anybody here from usa? i have some english language question
08:04 < erisco> node.js is a difficult technology to grok. I saw in a blitz of slides that controller and view layers were off-loaded to the browser. Where is a simple tutorial that demonstrates this?
08:10 < juliangruber> erisco: that was just one way of doing it
08:10 < erisco> one way of doing what? I haven't seen any demonstration of what is really being done
08:11 < juliangruber> erisco: you can make the server only an api but you can also send rendered html to the client
08:11 < juliangruber> erisco: that's it, it's done in so many different ways
08:12 < juliangruber> erisco: check expressjs for something easy to begin with
08:12 < shad0wstalk3r> Hello
08:12 < juliangruber> shad0wstalk3r: oh hai there :)
08:12 < shad0wstalk3r> Just found out about node...had a question
08:13 < erisco> I am trying to decern if this is exclusively a server technology or if there is some attempt to bridge the gap between client and server (that is in terms of AJAX and client <--> server javascript)
08:13 < juliangruber> Only one? :P
08:14 < shad0wstalk3r> making a news scraper type website. have the clients using ajax to request the articles from my database...would node.js be a good way to have the database update itself continuously like every 30 seconds? Is this even what its for? haha
08:14 < juliangruber> erisco: it is a server technology but since it's only javascript it helps bridge the gap by removing the need for multiple languages. have you seen meteorjs?
08:15 < juliangruber> shad0wstalk3r: so you want to batch updates rather than update immediately?
08:15 < shad0wstalk3r> yep
08:15 < erisco> julianduque, okay, thanks. No I haven't, but I'm not interested in nodejs then.
08:15 < shad0wstalk3r> I didnt want the users to force my server to scrape everytime their client refreshed because then my server would continously be trying to scrape. I would rather them just pull the update from my database
08:15 < julianduque> erisco: ?
08:18 < juliangruber> shad0wstalk3r: oh, I think now I get what you want. The server scrapes every 30s and stores the scraped results in a database. Everytime the client requests a site you serve the scraped content directly from the datbase.
08:18 < juliangruber> shad0wstalk3r: so setInterval(scrape, 30000)
08:18 < shad0wstalk3r> yes, the client would be using ajax to refresh every 30 seconds
08:18 < juliangruber> but scraping would never be triggered by a client's request
08:19 < shad0wstalk3r> but I just have no idea what I should use to make my server updating itself continuously... node looks like its for this?
08:19 < shad0wstalk3r> or any ideas?
08:20 < juliangruber> shad0wstalk3r: setInterval(scrape, 30000) executes the scrape function every 30000, no matter if requests come in or not
08:20 < juliangruber> shad0wstalk3r: a node server is always running, not like with php where stuff is only run when a request comes in
08:20 < shad0wstalk3r> perfect
08:20 < shad0wstalk3r> so node is pretty much the best option i should be using
08:21 < juliangruber> shad0wstalk3r: well you could also use a bash script to execute a php/shell/whatever script every 30s to do the scraping thing
08:21 < juliangruber> shad0wstalk3r: but node is quite handy here, indeed
08:23 < shad0wstalk3r> im on a shared linux server.... you think a mysql database and node would be my best shot? :p
08:24 < shad0wstalk3r> first time ive ever attempted something like this
08:24 < eighty4> Anyone know of a solution that will store data sent to socket.io if no client is connected? So that when I do socket.io.emit() the data will be saved to a buffer/database until a client connects?
08:27 < erisco> julianduque, ah, sorry, I just looked at meteorjs now. this may be exactly the thing I was brainstorming. Just started doing AJAX myself and the redundancy between client and server was becoming largely apparent
08:33 < juliangruber> erisco: you talked to me ;)
08:33 < erisco> julianduque, sorry?
08:34 < julianduque> erisco: no problem
08:36 < killing-joke> i just fed node 0.8 a program with a little over a million functions. cpu on the server is pegged at 100%, but the first drip of data has not come out yet.
08:37 < killing-joke> is there a slow(er) step in parsing the source that might be causing this?
08:38 < SomeoneWeird> wat
08:38 < SomeoneWeird> a million functions?
08:38 < bradleymeck> killing-joke: v8 heap is probably thrashing from memory limits
08:38 < g0z> whoa wait killing-joke like the band?
08:39 < g0z> SICK
08:39 < killing-joke> bradleymeck, thanks.  yes, stuck at 1.7GB even with more than a dozen free.
08:39 < erisco> julianduque, yeah this seems to be precisely what I was envisioning only a couple hours ago... already developed and fleshed out in full detail. amazing. glad I did a little research first ;)
08:39 < bradleymeck> killing-joke: v8 heap is going to crap out at 1GB
08:40 < bradleymeck> shard your fns, for w/e reason you want 1M functions, you don't need them in a single process, and you probably don't want them
08:40 < juliangruber> erisco: still, you're mentioning julianduque ;)
08:40 < erisco> oh...
08:40 < julianduque> juliangruber: and my irssi is beeping :p
08:40 < deoxxa> killing-joke: a million functions? i'm intrigued... what's the deal?
08:40 < deoxxa> killing-joke: purely curious here
08:40  * erisco was oblivious
08:40 < bradleymeck> probably just because they can load 1M fns
08:41 < bradleymeck> ah, jabberwocky was here?
08:41 < killing-joke> deoxxa, AOL keywords "fuzz" "network" "vandalism"
08:41 < deoxxa> oh, ha
08:41 < deoxxa> neat
08:41 < [AD]Turbo> hola
08:42 < killing-joke> technically my hat is white. but this stuff sees off-label use sometimes.
08:42 < deoxxa> yeah it sounds like interesting stuff
08:42 < deoxxa> poking and prodding at things like that usually yields weird results
08:43 < deoxxa> sometimes fantastically weird
08:43 < zot> anybody here knowledgeable about libev/libuv event loops (other than bnoordhuis, who ain't here)?
08:44 < bradleymeck> zot,i have some knowledge, but #libuv might be better
08:44 < shad0wstalk3r> @juliangruber I guess if im using shared linux hosting via GoDaddy I could just use a cron job running a php script?
08:44 < deoxxa> lol godaddy
08:44 < deoxxa> more like nodaddy, amirite
08:44 < bradleymeck> deoxxa: clients :/
08:44 < juliangruber> shad0wstalk3r: yup
08:44 < zot> bradleymeck: cool, didn't know it existed.  will try there :)
08:45 < shad0wstalk3r> deoxxa just using it as a testing ground for right now!  And juliangruber thanks for all your help though!
08:46 < juliangruber> shad0wstalk3r: but you should really really just be using nodejitsu
08:48 < shad0wstalk3r> juliagruber: well on godaddy other people have had trouble installing node on there on a shared linux server which is all I have right now.
08:48 < deoxxa> that sounds like a good reason to... not... use godaddy
08:49 < deoxxa> shad0wstalk3r: nodejitsu is free for open source stuff, so you won't have to invest much but your time
08:51 < asdf12> i don't understand that policy
08:51 < MI6> joyent/node: Scott Blomquist master * 323120b : child_process: handle ENOENT correctly on Windows - http://git.io/NYx57g
08:51 < asdf12> does it mean just because you have an open source project you get a free 'drone' ? or does it mean only if your open source project requires
08:51 < asdf12> usage of a server
08:52 < deoxxa> asdf12: free drone, as far as i know
08:52 < shad0wstalk3r> deoxxa I literally thought you meant I just should man up and use node jujitsu skills. but now i realize its a host they offer haha
08:52 < asdf12> because most open source stuff don't require a need for a server
08:52 < deoxxa> oh shad0wstalk3r lol, yeah, it's a platform as a service thingy
08:52 < deoxxa> asdf12: i think it's meant to work as a promotional tool
08:53 < deoxxa> asdf12: which is a perfectly acceptable way to promote your product - give it away for free to people who are doing cool stuff
08:53 < juliangruber> shad0wstalk3r: nodejitsu is like...almost free
08:53 < pixie79> when using child_process.fork how do i tell when the child process is complete so as to collect the exit code as the docs say I must send process.exit() explicitly (or does it mean in the child process i must send that?) in which case i just look for child.on('exit') ?
08:54 < juliangruber> asdf12: deoxxa: you get free hosting for open source projects, however their queue is quite full atm as everyone wants it
08:54 < juliangruber> pixie79: child.on('exit', cb)
08:54 < asdf12> so even if i made a lib, i dont really need a host, i can still apply?
08:55 < deoxxa> juliangruber: interesting! i didn't know that
08:55 < pixie79> juliangruber: ok i think that makes more sense - the docs confused me slightly
08:55 < juliangruber> pixie79: http://nodejs.org/api/child_process.html#child_process_event_exit
08:56 < asdf12> there's also appfog and heroku which offer free plans
08:56 < asdf12> but they do not support websockets
08:58 < asdf12> (basically i don't know why anyone pays for hosting anymore for small time stuff)
09:08 < juliangruber> asdf12: long-polling and ajax are fine in many cases
09:18 < pixie79> if i call a sub script that is in bin that same place as the main script when executing it via a fork will it look in bin/ if i set that or will it look in CWD/bin/ ? I know for libs i require them with ../lib but i am unsure here on the bin
09:19 < pixie79> e.g my CWD is ~ and i run ~/test/bin/main.js which then needs to fork and call ~/test/bin/fork.js
09:20 < ningu> pixie79: I would spawn './fork.js'
09:20 < pixie79> ningu: ok i was not sure if it would find that or would have looked in my current working dir - thanks
09:21 < ningu> it should
09:30 < faceleg> nitpick please: http://pagesofinterest.net/blog/2013/03/constructing-js-objects-in-cpp/
09:30 < faceleg> Hopefully this will save others from the many hours of pain I had 
09:32 < pixie79> what is the best way to tell if a fork failed to start? I know client.on('exit',cb) gives me the exit code but i dont think that is the case if it fails to start or find the script to be called in the first place is it ? 
09:33 < pixie79> catch err ?
09:46 < juliangruber> pixie79: client.stderr.on('data', cb)
09:47 < juliangruber> pixie79: check the 3rd example under http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options
09:47 < pixie79> ok
09:49 < pixie79> juliangruber: tried that and get, TypeError: Cannot call method 'on' of null
09:50 < pixie79> and it throws an error saying it cant find the module
09:50 < juliangruber> pixie79: child_process?
09:50 < juliangruber> ah
09:50 < juliangruber> that require('bad_command')
09:50 < pixie79> no my script that child_process is calling - i have deliberatly given it the wrong name to check
09:51 < juliangruber> no, forget the last line
09:51 < shmoon> so who can help with this http://pastie.org/6403288
09:51 < juliangruber> pixie79: can you create a gist with your code?
09:52 < juliangruber> shmoon: post.created_at propably is a getter, so you can't overwrite it
09:52 < pixie79> juliangruber: https://gist.github.com/pixie79/5098151
09:53 < shmoon> juliangruber: how can i confirm that? there should be some way to know? I wasted an hour pondering on why this doesnt work
09:53 < juliangruber> shmoon: look at the source. why do you want to change that field anyway?
09:54 < juliangruber> pixie79: can you paste how you call that function and what exactly the output is too? Just add those to the gist
09:54 < shmoon> i just wanted to change that and use in the template as it is. look at which source ? mongoose's source ? lol
09:54 < pixie79> processTest( custDir, custEmpl, custResSpool, filename, debug )
09:55 < juliangruber> shmoon: yes, mongoose's source
09:55 < juliangruber> pixie79: I mean, exactly what parameters and exactly the output
09:55 < shmoon> meh ok
09:56 < juliangruber> shmoon: the easy way would be to pass only what you need to the template and create a new object for the post
09:56 < juliangruber> shmoon: or use a template helper that formats dates
09:56 < faceleg> how does one debug malloc errors?
09:56 < shmoon> yeah new object it is then :S
09:57 < pixie79> juliangruber: https://gist.github.com/pixie79/5098181
09:58 < juliangruber> pixie79: try fork('./bin/test.js')
09:59 < pixie79> so "carsgo = try fork('./bin/test.js')"
09:59 < juliangruber> pixie79: no, carsgo = fork('./bin/test.js')
10:00 < juliangruber> pixie79: however, when using fork you can't catch errors the way you do it right now
10:00 < juliangruber> there won't be this execvp output on stderr
10:01 < pixie79> because i used silent 
10:01 < juliangruber> it will just throw when you're calling fork() with the module path
10:01 < pixie79> is there anyway to capture the 'throw'
10:01 < juliangruber> yes
10:01 < faceleg> try catch?
10:01 < g0z> try-catch
10:02 < juliangruber> try { fork(...the path) } catch(err) { console.log(err); process.exit(1); }
10:02 < faceleg> try { // something that throws } catch (exception) { console.log(exception); }
10:02 < juliangruber> or better console.error(err)
10:02 < pixie79> i tried catch when calling the function but the function works, just not the fork
10:02 < juliangruber> so it gets to stderr
10:02 < juliangruber> fork() is the function
10:02 < faceleg> ^ this
10:03 < faceleg> crap, any c++ people here?
10:04 < juliangruber> faceleg: I did some with node-leveled
10:04 < pixie79> juliangruber: still not really sure sorry, if i do try fork(bin/test.js) , how do i or where do i set carsgo so that i can do the carsgo.on('exit) ?
10:04 < juliangruber> pixie79: if fork() doesn't work then the carsgo variable will be of no value for you
10:06 < pixie79> juliangruber: i get that  but how do i set the carsgo variable if it does? surly try fork(bin/test.js) actually does try and run the program?
10:07 < juliangruber> pixie79: https://gist.github.com/juliangruber/5098248 here the program will just die if it couldn't fork
10:08 < pixie79> thanks i will take a look
10:12 < shmoon> juliangruber: how can a property be defined as a getter ONLY btw in JS ?
10:13 < juliangruber> shmoon: there can be a setter that doesn't to anything
10:13 < MI6> joyent/node: isaacs master * 74784b6 : cares: Set process._errno, not global.errno  This makes test-internet pas - http://git.io/PeKd1g
10:25 < faceleg> anyone know what callback->Dispose() does?
10:25 < faceleg> I mean, I know what it does for me (malloc error)
10:33 < juliangruber> faceleg: https://github.com/kkaefer/node-cpp-modules/blob/master/05_threadpool/modulename.cpp#L123
10:35 < jetienne> q. is there a tool to easily create a package.json based on the content of node_modules ?
10:35 < MI6> joyent/node: Pavel Lang master * 2ad9872 : DNS: Support NAPTR queries  They were previously removed in a90bc78534d94 - http://git.io/PExZPw
10:38 < faceleg> juliangruber: I was delete'ing once too many
10:49 < jetienne> npm init <- this was the answer :)
10:52 < Deepak> dfd
10:52 < Deepak> hello is there anyoone
10:52 < Deepak> i need some help
10:52 < pmurias> is there a particular documentation format I should use for documenting my modules?
10:53 < faceleg> jsdoc?
10:53 < Deepak> i need help regarding socket 
10:53 < Deepak> is there anyone who can help me
10:53 < Deepak> ??
10:53 < faceleg> Deepak: easier to ask question if it's quick
10:53 < chaobin> Deepak: yeah just name ur question
10:54 < Deepak> actually i am getting response in socket get data in chunked format
10:54 < Deepak> how can i get the data in composite form
10:54 < Deepak> when  i am getting less data so it is fine
10:54 < chaobin> r u using socket object in node.js?
10:54 < Deepak> but when my data is increasing then it is getting problem
10:55 < Deepak> yes
10:55 < Deepak> i am using socket object
10:55 < pmurias> faceleg: does that have any integration with npmjs.org or other parts of the ecosystem?
10:55 < Deepak> socket.on('connect', function(client){ 			  socket.emit("loadchessboard", qString); 						   			});
10:56 < Deepak> socket.on('message', function(html){
10:56 < Deepak> here i am getting html data in chunked format
10:56 < Deepak> linke data is breack in two requests
10:57 < Deepak> same data is comming in two different request half in first and another half in second request
10:57 < Deepak> plz give me some help
10:58 < faceleg> pmurias: I have no idea sorry
10:58 < armetiz> Hi there.
10:59 < Deepak> yes here
10:59 < armetiz> Anyone using Express, Mojito or Meteor Web stack ?
10:59 < chaobin> Deepak: i am sorry i don't have a clue about that either man
10:59 < Deepak> k let me know there is any good documentation where i can get learn nodejs
10:59 < chaobin> Deepak: but if i try to think about it, why your client ended up with more than one send()
11:00 < chaobin> ?
11:00 < gildean> Deepak: by socket which module do you actually mean? socket.io?
11:00 < chaobin> in sending one complete piece of data
11:00 < Deepak> yes socket.io
11:00 < chaobin> oh, u r using socket.io
11:00 < Deepak> socket = io.connect(
11:00 < chaobin> okay?
11:00 < chaobin> go on
11:01 < Deepak> is there any solution??
11:01 < chaobin> can u show me some of your code
11:01 < chaobin> ?
11:01 < chaobin> go to pastebin
11:01 < Deepak> hmm
11:02 < Deepak> var qString = 'PHPSESSID='+PHPSESSID+'&method=post'; 		qString = qString+'&module=chess&action=chessboard&gid='+gameID; 		socket = io.connect('http://'+server_address+':8080/chessboard');//184.106.158.63 		socket.on('connect', function(client){ 			  socket.emit("loadchessboard", qString); 				//t=setTimeout("socket.emit('loadchessboard', '"+qString+"')",500)			   			}); 		 //socket.on('reconnect', function () { 			//socket.emit("load
11:02 < chaobin> Deepak: let me have a look
11:03 < Deepak> k
11:03 < chaobin> Deepak: i don't see anything in here could go wrong
11:03 < chaobin> you simply created one socket.io connection instance in here
11:04 < Deepak> hmm
11:05 < Deepak> as it is running until my data length is small
11:05 < Deepak> as my data length is goes to long then it is generating problem
11:05 < chaobin> Deepak: i might not give you the direct answer to your problem
11:05 < chaobin> but ...
11:05 < Deepak> as i am able to get understand it is getting half data from one request and another half data from another request
11:05 < gildean> Deepak: in the future please use some web-paste for the code, don't paste straight on the channel
11:05 < chaobin> have u tried to use console of a chrome to observe the frames?
11:06 < chaobin> in the network panel
11:06 < Deepak> yes
11:06 < chaobin> you can observe the network frames being passed
11:06 < Deepak> i have use the console
11:06 < Deepak> so that's why i end up with this problem
11:06 < chaobin> does that look normal to you?
11:06 < Deepak> that the single request is getting data in doble response
11:07 < chaobin> right, so things already get weird from there 
11:07 < faceleg> I've been getting some weird double emissions from socket.io as well, haven't had time to debug mine yet.
11:07 < chaobin> Deepak: than my clue would be that your server somehow double-responded your request
11:08 < Deepak> no it is not double responding
11:08 < faceleg> put a console.log before your socket.emit to verify this 
11:08 < chaobin> able to show me a snippet of your server code that corresponds to this emit?
11:08 < Deepak> in the first respond it is sending half response
11:08 < Deepak> and in another response another half data
11:09 < chaobin> this 'half' thing indeed is weird
11:09 < Deepak> if there was problem of server resposing so it send both time same response
11:09 < chaobin> i didn't run into this before
11:09 < faceleg> have you googled "socket.io sending data in chunks"
11:10 < Deepak> k let i show you the server emit cod
11:10 < Deepak> e
11:10 < chaobin> Deepak: so when you observe the network frames, the data being sent is incomplete? is that what you r saying?
11:10 < Deepak> where can i show you snippet
11:10 < iaincarsberg_> Hey, does anyone know if forever can be used to keep a script started by 'npm start' running?
11:10 < Deepak> yes exactly i am saying this
11:10 < chaobin> http://collabedit.com/
11:11 < chaobin> Deepak: after you create a new document, you will get a link to your code, and give me the link
11:12 < Deepak> I have to pay money for that??
11:12 < chaobin> of course not
11:13 < SomeoneWeird> no..
11:13 < chaobin> u don't even have to sign up
11:13 < chaobin> just click the button where is says 'Create a new document'
11:13 < Deepak> k
11:13 < Deepak> http://collabedit.com/wf8u3
11:14 < Deepak> is it this
11:14 < chaobin> i ll look
11:17 < chaobin> Deepak: so when you call socket.send(data), is the data complete in there?
11:17 < SomeoneWeird> why the hell are you wrapping php
11:17 < SomeoneWeird> >.<
11:18 < chaobin> Deepak: this wrapping php thing also looks pretty odd to me, but this is not what i am getting to right now
11:19 < chaobin> so Deepak, when you call socket.send(data), is the data in good shape in there?
11:20 < Deepak> when data length
11:20 < Deepak> is small
11:20 < Deepak> then it is fine but when data length goes long then it break the data in two chunk
11:20 < chaobin> Deepak: voila, there it is
11:21 < chaobin> the problem is there the data being produced from php.stdout.on('data')
11:21 < Deepak> yes 
11:21 < chaobin> this should not have anything to do with socket.io, emit(), or whatsever
11:22 < Deepak> so what should i do?
11:22 < chaobin> and as to why you are wrapping php in a spawned child process, i am sorry i didn't have much to say about this
11:23 < Deepak> k
11:23 < Deepak> friend no problem
11:23 < chaobin> programmatically, u can write a tester function to test the completion of your data
11:23 < Deepak> thanks to try
11:23 < chaobin> and then decide whether to call socket.send or not
11:23 < Deepak> k
11:24 < chaobin> but the root cause might be why the data turned into chunks
11:24 < chaobin> from a child process
11:25 < chaobin> is it because it is too large that exceeds some sort of limit, such as cache
11:26 < chaobin> because generally speaking, when reading/writing on IO, you Do have some kind of cache that limits the size
11:27 < chaobin> Deepak: sorry couldn't help much. FYI, the code you posted, you can erase it if you don't want other people to stumble upon it, because the pad can be preserved for 48 hours
11:34 < zonetti> is there a way to limit cpu usage by node processes?
11:35 < gildean> Deepak: so your problem is that the answer from php is coming in chunks?
11:35 < Deepak> yes
11:35 < Deepak> gildean
11:36 < gildean> Deepak: so it's actually a problem of knowing when the answer from the php-code is complete
11:37 < Deepak> when the answer of php length is less
11:38 < Deepak> but when its length increase it is not getting response
11:38 < Deepak> sorry
11:38 < Deepak> it getting response in chunk
11:39 < gildean> Deepak: just to clear up, it's the message sent to the client that gets chunked?
11:39 < Deepak> yes
11:41 < gildean> Deepak: so i'd presume your php-code invokes the data event more than once, so instead of just sending the data you need to buffer it and then send when you know the php code is done answering
11:41 < thealphanerd> good evening all...
11:41 < thealphanerd> is anyone in the bay area?
11:42 < thealphanerd> https://ccrma.stanford.edu/events/brian-crabtree-small-beautiful
11:42 < thealphanerd> this is going on tomorrow
11:42 < thealphanerd> highly suggest checking it out if you have time
11:42 < thealphanerd> (sorry for spam)
11:42 < Deepak> how can i identity my php data answering is done
11:43 < zonetti> is it possible to limit cpu usage by node processes?
11:45 < gildean> Deepak: if the php code terminates after running, then you can just listen to it's exit or close events
11:45 < Deepak> k
12:14 < faceleg> any c++ types ehre
12:14 < faceleg> ?
12:26 < soulslayer> hello guys does some one here suffers problems while converting utf-8 to cp1251 via node-iconv
12:27 < soulslayer> i search someone to give a hand with such issue
12:27 < RLa> what is the problem
12:28 < soulslayer> i does not convert it correctly .. i use the output of the conversion to build a serial(rs232) message
12:29 < RLa> anyway, i think you cannot reliably convert from utf-8 to anything that is tiny-tiny subset of all characters
12:29 < soulslayer> i think that the problem is that i'm trying to forward it to the tty as a buffer ... but when i try toString() it convert it backowrds to utf8
12:29 < RLa> first make sure the byte stream is correct
12:30 < soulslayer> RLa, you mean the iconv input right ? 
12:30 < RLa> both input and output
12:30 < RLa> cp1251 is for cyrillic characters?
12:31 < RLa> buffer's toString takes encoding name argument
12:32 < RLa> i think you have to use 'binary' here
12:32 < soulslayer> RLa, i tried that but the result is junk again
12:32 < pixie79> does anyone here use winston-syslog ?
12:32 < RLa> try to write to file and check bytes with hex editor
12:33 < RLa> it could be something else that does some stupid reencoding too
12:34 < RLa> btw, what device it is that accepts cyrillic over rs232?
12:35 < soulslayer> RLa, don't ask :( 
12:35 < soulslayer> a shitty fiscal printer
12:35 < RLa> hm, with current solution it prints random garbage?
12:36 < RLa> does it duplicate some characters, ie for one input char there appears to be 2 junk characters?
12:37 < RLa> sometimes this can be used to detect what goes wrong
12:38 < soulslayer> actualy yes
12:38 < soulslayer> i think there is duplication
12:38 < soulslayer> when fs.write the iconv buffer 
12:39 < soulslayer> :O RLa there each charcter is transformed to two junk charcters
12:40 < RLa> that means no utf-8 is actually encoded to cp1251
12:41 < soulslayer> huh
12:41 < RLa> i guess most cyrillics are 2 bytes in utf-8, now when interpreted as cp* each char gives 2 bytes and that's 2 chars in cp*
12:42 < soulslayer> exactly
12:42 < soulslayer> huh i dont want to make custom implementation of utf -> cp1251 conversion
12:42 < soulslayer> :(
12:43 < RLa> first try if iconv works, pick some cyrillic char, input to iconv and check that result buffer length is 1 byte
12:43 < RLa> haha, i once had to do manual conversion table for encoding
12:44 < RLa> it was giant case-statement
12:44 < RLa> in turbo pascal
12:45 < soulslayer> blah .. no no no i wont do this .. i rather right it on python then do that 
12:45 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:45 < soulslayer> and yes node-iconv is total mess .. it coverts utf8 "A" to cp1251 "B"
12:46 < soulslayer> which makes me wonder why i have douplication of char counts .. on string with several "A"'s 
12:46 < soulslayer> ?!
12:46 < soulslayer> wtf
12:48 < RLa> soulslayer, i think you can bug bnoordhuis about it
12:49 < Kakera> which license is usually used for node modules?
12:49 < soulslayer> :D well well mr bnoordhuis we finally met 
12:49 < soulslayer> :D 
12:50 < asdf12> Kakera: i mean that's entirely up to you
12:50 < RLa> Kakera, but MIT license seems to be quite popular
12:50 < Kakera> I see
12:52 < soulslayer> Kakera, but if you will publish in something different then GPL .. you can think about yourself as a sinner and you will burn in unholy fire for eons
12:52 < soulslayer> RLa, mr bnoordhuis is totaly idle :D poor me 
12:53 < RLa> soulslayer, are you on windows?
12:53 < soulslayer> no
12:54 < asdf12> actually its the opposite
12:54 < asdf12> why would you use GPL ?
12:54 < asdf12> here is some free stuff, but hey its not entirely free, there's a price to pay
12:55 < soulslayer> asdf12, im not here to discuss a religious issues but you can think for the gpl like a world balance holder
12:56 < RLa> i think gpl v2 has implicit patent license grant (explicit in gpl v3), not sure about the other licenses
12:57 < asdf12> why do you keep referencing gpl with religion? heh
12:57 < soulslayer> :D because it is 
12:58 < asdf12> whatever, i dont want to talk about licenses either, i was just pointing out it's silly to recommend use of GPL always
13:00 < faceleg> GPL is good if you want to deter people from using your work 
13:00 < asdf12> yea exactly
13:01 < bnoordhuis> soulslayer: you rang?
13:01 < faceleg> If I see MIT / BSD I rejoice
13:01 < faceleg> bnoordhuis, my hero
13:01  * bnoordhuis blushes
13:01 < soulslayer> bnoordhuis, ohhh thanks god you are here :D 
13:01 < faceleg> I made a opst for future noobs
13:01 < faceleg> bnoordhuis: pagesofinterest.net/blog/2013/03/constructing-js-objects-in-cpp/
13:01 < soulslayer> bnoordhuis, i have issues when converting utf-8 to cp1251
13:02 < bnoordhuis> soulslayer: go on
13:03 < soulslayer> when i try to convert a single utf-8 cyrilic charcter i recieve 2 junk charcters from iconv
13:03 < bnoordhuis> faceleg: nice
13:03 < bnoordhuis> soulslayer: do you have a test case i can try?
13:03 < soulslayer> just a second
13:07 < soulslayer> bnoordhuis, 
13:07 < soulslayer> http://pastebin.com/vLeJwwEN
13:07 < soulslayer> here ... maybe my usage is wrong ? 
13:08 < soulslayer> where data is valid utf charcter
13:08 < soulslayer> i use node  v0.8.16 if this is factor but i doubt it 
13:12 < bnoordhuis> soulslayer: convert() operates on buffers, not strings (though in this case it works)
13:17 < soulslayer> bnoordhuis, WOW 
13:18 < soulslayer> Excuse me then 
13:19 < soulslayer> i just saw that kind of usage in the README.md
13:19 < soulslayer> but how im supposed to extract the cp1251 string from the buffer ? 
13:20 < bnoordhuis> soulslayer: i wrote that in the README? /me checks
13:20 < soulslayer> var buffer = iconv.convert('Hello, world!');
13:20 < bnoordhuis> ah...
13:21 < bnoordhuis> okay, one sec
13:21 < soulslayer> its not big of a deal ...
13:21 < bnoordhuis> ah well, maybe it's easy to fix, maybe it's a bug in node-iconv
13:22 < bnoordhuis> but i need to fix something else first
13:23 < soulslayer> wait wait 
13:23 < soulslayer> it works with buffer ...
13:23 < soulslayer> i doubt it's bug ... but i wonder how to extract the string from the buffer 
13:23 < soulslayer> because .toString('windows-1251/cp1251/win-1251') are not recongized encodings 
13:25 < bnoordhuis> soulslayer: when you convert to something that's not utf-8, you have to stick with buffers
13:25 < bnoordhuis> v8 simply doesn't know how to deal with strings in other encodings
13:26 < soulslayer> uhh :) 
13:26 < soulslayer> okay thank you :D
13:27 < d4Mn> i have some problems with node-dirty when i try to save string "2132385434243369526" it returns integer 2132385434243369000 maby someone knows why it converts it?
13:27 < d4Mn> can it be done by JSON.stringify function?
13:28 < bnoordhuis> d4Mn: js numbers are only exact up to 53 bits
13:29 < d4Mn> yes so thats why i'm trying to save as string
13:30 < bnoordhuis> oh, the question is 'why does it convert it'. i don't know
13:52 < MI6> joyent/node: Ben Noordhuis master * 3dbbfd7 : src: remove unused symbols in node_file.cc - http://git.io/-2NpXA
14:16 < sinclair|work> has anyone here worked on differential synchronization or operational transformations in nodejs
14:16 < sinclair|work> ???
14:18 < juliangruber> sinclair|work: check dominictarr/{crdt,r-text,r-array,scuttlebutt,...}
14:19 < sinclair|work> juliangruber: thanks, ill look
14:21 < sinclair|work> juliangruber: oh, hes from New Zealand
14:28 < milani> hi, why v8 downgraded on 0.9.11?
14:29 < milani> is there a chance to see newer v8 versions for next releases?
14:34 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
14:41 < _ior> anyone used node-libmysqlclient? i'm trying to find how to deal with prepared statements, but can't quite make it out
14:41 < pixie79> are there any good syslog modules out there ? node-syslog seems to be a bit random in that sometime it adds my pid and other times it does not and sometimes it logs to stdout which it should not, i have also tried winston-syslog but that seems to fail completly
14:47 < _ior> for what it's worth, i can't use felixge's node-mysql because it doesn't support SSL connections yet
15:05 < alchimis_> hi
15:06 < alchimis_> I am using jmeter to stress my app(server)
15:06 < alchimis_> when i send get request to the homepage of my app
15:06 < alchimis_> i get always 500 error
15:08 < alchimis_> and this is the what i see in terminal, when i run the jmeter to do the requests: for every request i see this https://gist.github.com/anonymous/e587fd4cef3f0a5b2582
15:08 < alchimis_> any idea how to solve this problem
15:08 < alchimis_> thanx
15:10 < asdf12> you never made a route for GET /
15:11 < asdf12> ?
15:12 < alchimis_> i hve
15:24 < jameshowe> looking for some native module help
15:25 < jameshowe> .node-gyp/0.8.20/src/node_object_wrap.h:71: void node::ObjectWrap::Wrap(v8::Handle<v8::Object>): Assertion `handle->InternalFieldCount() > 0' failed.
15:25 < jameshowe> appears to be in my New function, on the args.This() 
15:26 < jameshowe> yet I have ->InstanceTemplate()->SetInternalFieldCount(1); in the init
15:29 < micha149> Hey guys. Can I rely on `require()` will always return the same instance of the object I put in `module.exports`?
15:33 < lpin> micha149 if you expose an object instance yes
15:33 < bnoordhuis> micha149: and no one clears require.cache
15:33 < lpin> true
15:34 < bnoordhuis> jameshowe: can you gist your code somewhere?
15:35 < jameshowe> some of it
15:35 < brianc1> hey guys
15:35 < brianc1> got a quick question
15:36 < brianc1> brb
15:36 < brianc> k that's better
15:37 < brianc> so here's my question: I have an event emitter that emits either 'connect' or 'error'.  I want to handle either 'connect' or 'error' once in total.  Meaning if 'error' fires, unsubscribe me from the 'connect' event and if 'connect' fires unsubscribe me from the 'error' event.  Is there already a module that will do this?
15:38 < holzp> i think that is too easy for a module
15:38 < brianc> cool
15:38 < brianc> i'll publish my module then
15:43 < jameshowe> oh, don't worry about it, I was having precedence issues
15:43 < jameshowe> new require('./foo').Bar() doesn't do what I thought it did
15:48 < MajorMcDoom> hello guys. i have a question about NAT punchthrough. anyone here familiar with it?
15:52 < bnoordhuis> MajorMcDoom: you mean upnp?
15:52 < MajorMcDoom> upnp?
15:52 < SomeoneWeird> bnoordhuis, nah
15:52 < SomeoneWeird> MajorMcDoom, i am, but it's not really the right channel
15:52 < MajorMcDoom> SomeoneWeird, man, someone referred me here. i'm sorry. :(
15:53 < MajorMcDoom> maybe i got trolled
15:53 < SomeoneWeird> try ##security
15:53 < MajorMcDoom> alrighty. thanks! :)
15:54 < micha149> Ah, OK. I asked, because I want't to mock some dependencies on other modules. Like `mock = sinon.mock(require('wrench'));`
15:55 < micha149> It works, but I wasn't sure if it will run stable
15:57 < brianc> published: https://github.com/brianc/node-either
15:59 < diogogmt> I need to create packages for all major linux distro wrapping a nodejs app. My questions is what would be the best practice to deploy a nodejs app, one thing is to have the app running in your servers, another is to have the server powering a local API on the client's machine.
16:00 < diogogmt> should I link the packages to the source code hosted on github and assume the user has all the dependencies installed locally?
16:01 < diogogmt> or is it better to add the decencies to the package as well have a make file to build/install them/
16:01 < micha149> dependecies should be handled by npm
16:01 < diogogmt> I mean external dependencies
16:01 < diogogmt> the app needs redis and openssl to run
16:01 < diogogmt> as well nmap
16:01 < micha149> ah, ok
16:02 < duveborg> whats the best alternative to express?
16:02 < diogogmt> or is even possible to compile the whole nodes app into  a binary and only deploy that?
16:02 < OliverJAsh> I need to write a module to get the RSS feed of a website when given a URL, aka search the head tags and return the RSS feed URL. Can anyone give me any tips as to how to do something like this?
16:05 < mstrcnvs> how can I tell where's node is looking for packages when I call a require?
16:05 < diogogmt> OliverJAsh: you can use the request module to get the feed and apply some regex to parse the head
16:07 < SomeoneWeird> mstrcnvs, ./, ../, ../.., ../../.. etc up to /
16:07 < pachet> mstrcnvs: http://www.bennadel.com/blog/2169-Where-Does-Node-js-And-Require-Look-For-Modules-.htm
16:07 < pachet> and i'd argue that if there are multiple possible contenders for a given .require() call, think about renaming one of them :[
16:17 < oskude> hi, can i get JSON.parse syntax error line with try/catch?
16:17 < oskude> *line number
16:17 < milani_> bnoordhuis: What about v8 3.16.x ? does it have performance issues?
16:17 < SiTLar> Hello! I'm trying to make my first steps in Node.js. I've encountered a weird problem. a server from http.createServre doesn't respond to any network activity. At the same time a low level server works fine
16:18 < SiTLar> I'm using v0.8.18 on NetBSD
16:19 < context> sitlar: lsof / is it actually receiving the conenction ?
16:19 < OliverJAsh> How can I use jQuery with jsdom? I see the NPM jQuery module has included a node version but i'm not sure how to use it with jsdom
16:19 < hrjimgo> Alguien que hable español
16:19 < context> oliverjash: http://blog.nodejitsu.com/jsdom-jquery-in-5-lines-on-nodejs
16:20 < context> oliverjash: google knows all.
16:20 < SiTLar> context: I don't actualy know
16:20 < bnoordhuis> milani_: yes
16:20 < OliverJAsh> context: that doesn't refer to the npm jquery module, just a built version of jquery
16:20 < bnoordhuis> as does 3.17
16:20 < context> sitlar: console.log ? lsof is the socket open?
16:21 < SiTLar> context: the first line in the request callback is console.log and it remains silent
16:22 < milani_> bnoordhuis: oh. bad luck. I wanted to update my chromium build which uses 3.17 :/ 
16:22 < context> oliverjash: https://github.com/tmpvar/jsdom, i imagine jquery module lets you get the jq source, then put it in src: like example there
16:22 < SiTLar> context: I try to debug with curl, it hangs wating for data
16:22 < context> sitlar: http://nodejs.org/api/http.html#http_event_connection
16:25 < SiTLar> context: srv.on('connection', function(){console.log("connected");}); works
16:26 < SiTLar> context: it logs every the connection, but the server doesn't advance to the request state
16:27 < MI6> joyent/libuv: Bert Belder master * f89125e : win/tty: fix typo in color attributes enumeration (+2 more commits) - http://git.io/yJhhjA
16:27 < context> sitlar: the example http server on here does NOT work? http://nodejs.org/
16:27 < context> sitlar: are you calling res.end() ?
16:27 < OliverJAsh> context: i'm trying to use the npm module directly like so: (doesn't work) https://gist.github.com/OliverJAsh/c584fc174f9351740607
16:28 < SiTLar> context: I defenetly do a req.end()
16:28 < context> reS not reQ
16:28 < brianc> OliverJAsh: parsing hacker news, yah?
16:29 < OliverJAsh> trying :P that's just an example brianc 
16:29 < brianc> ah okay
16:29 < brianc> usually I use the request module to get the source
16:29 < brianc> and then I load the entire thing into jquery (which uses jsdom) by just doing var doc = $(html)
16:29 < SiTLar>  function onRequest(request, response) {
16:29 < SiTLar>  console.log("Request received.");
16:29 < SiTLar> response.writeHead(200, {"Content-Type": "text/plain"});
16:29 < OliverJAsh> ;o
16:29 < SiTLar> response.write("Hello World");
16:29 < OliverJAsh> cheers brianc!
16:29 < SiTLar>  response.end();
16:29 < context> sitlar: pastie.org
16:30 < SiTLar> context: OK, sorry
16:31 < brianc> OliverJAsh: https://github.com/brianc/node-hacker-news-parser
16:31 < bradleymeck> best way to check if a path is non-relative and non-absolute on both win and *nix?
16:31 < AnonymousPrime> i'm getting ready to set up a node-proxy to handle multiple apps on one server. anybody have any advice on the best place to put the proxy 'app'? i'm also running apache so the dir structure is /var/www/vhosts/<domainname>.foo/ then in there i have my apache-hosted dir and the node app
16:31 < OliverJAsh> well that's certainly a coincidence brianc 
16:32 < brianc> OliverJAsh: haha - it might not do what you want
16:32 < brianc> OliverJAsh: but hopefully the source code can give you some tips on how to use jquery to parse the fucking horrible hacker news html
16:32 < AnonymousPrime> maybe i should just put it in /var/www/node-proxy-app  since it handles requests for all the apps in the dir below that
16:32 < OliverJAsh> very helpful brianc 
16:33 < AnonymousPrime> how've others handled this?
16:33 < SiTLar> http://pastie.org/6405193
16:33 < kenperkins> morning
16:33 < brianc> OliverJAsh: groovy - if you'd rather fork my module that's cool too - all pull requests are welcome
16:33 < bradleymeck> AnonymousPrime: im always a fan of holding a home folder as a last bastion of defence
16:33 < brianc> OliverJAsh: I just used it for http://hackernewsjob.com
16:34 < brianc> OliverJAsh: if you're going to scrape them very often they _will_ block your ip forever
16:34 < AnonymousPrime> bradleymeck how you mean? /var/www/home and put the proxy app in there?
16:34 < brianc> OliverJAsh: i suggest using an http proxy if you need to scrape them on an interval
16:35 < OliverJAsh> brianc: good advice, cheers. fortunately i don't think i'm going to need to scrape a website more than once as i cache the result (getting the RSS feed url from the head)
16:35 < brianc> OliverJAsh: they have an rss feed?
16:36 < OliverJAsh> nope, not hacker news, just any website
16:36 < brianc> indeed they do
16:36 < brianc> oh okay cool
16:36 < brianc> OliverJAsh: well good luck. :)
16:37 < bradleymeck> AnonymousPrime: for `apps` that are only used by one user (web or w/e you call your user) and throwing it in web's ~/ so that I can do quick checks rather than goofing around trying to figure out which user this thing should be running as. i consider /opt /usr /var to be for library use rather than applications running out there (daemons are thrown into that). but meh, i have opinions
16:38 < AnonymousPrime> bradleymeck oh ok, see where you are coming from now. good point
16:38 < JohnMcLear> Guys, anyone using a library for WebRTC / Peer Communication type stuff?  I'm thinking about writing a plugin for Etherpad and wondering if there is a popular module already?
16:38 < SiTLar> context: That was an example from the web. Is there a way to understand what's going on between 'connection' and 'request'?
16:43 < cxreg> isaacs: is there any chance of getting something like "tick-local storage"?  that is, an object that is wiped out after each tick so that i can be certain of the context of a particular piece of data?  similar to domains, but general purpose...
16:43 < cxreg> i guess an alternative would be if domains had an enter hook
16:45 < AAA_awright> cxreg: That's what local variables are for...
16:48 < brianc> AnonymousPrime: just curious -- why are you running node-proxy if you also have apache on the box? You can use apache to reverse-proxy afaik
16:48 < AnonymousPrime> brianc that hadn't even crossed my mind
16:48 < AnonymousPrime> the node apps are running on a different port, though
16:48 < AnonymousPrime> than the apache stuff
16:49 < brianc> AnonymousPrime: yeah, you can reverse proxy apache to those ports based on the host name
16:49 < brianc> AnonymousPrime: basically the same thing you were going to use node-proxy for probably
16:49 < cxreg> AAA_awright: what?
16:49 < AnonymousPrime> host names are shared b/w apache and node apps
16:49 < brianc> dunno...could be simpler. and often simple > awesome
16:49 < AnonymousPrime> brianc i'll look into that...would def take one more thing out of the chain, and that would be nice
16:50 < AAA_awright> cxreg: What are you trying to do?
16:50 < brianc> AnonymousPrime: other than taht, I agree w/ what bradleymeck said. i don't put any apps in any "system" folders
16:50 < ccowan> isaacs: just change simple-protocal to simple-protocalify and there you go. (I'm listening to nodeup)
16:50 < bradleymeck> simply-protocalifornicationify
16:50 < AnonymousPrime> gotcha, it's a little ubuntu aws for some of my own projects, so i ran with the default /var/www/ apache setup. agree that a home dir per project would be ideal
16:51 < ccowan> bradleymeck: exactly :D
16:51 < RLa> AnonymousPrime, is there a reason you prefer apache over nginx?
16:51 < AnonymousPrime> bradleymeck brianc thx to you both for the input, big help
16:52 < AnonymousPrime> RLa no, i love nginx, use it a lot
16:52 < AnonymousPrime> if these projects grow they will prob end up there...this was just a 30 min quick setup to get an environment up and running
16:52 < AnonymousPrime> haven't bullet-proofed and/or gold-plated yet
16:53 < RLa> i recently tried nginx+node+forever+git deply in a vm
16:53 < RLa> works very well
16:53 < AnonymousPrime> nnice
16:53 < AnonymousPrime> am using forever for all these node apps, pleased with it so far
16:53 < RLa> spent lots of time finding nginx package sign key tho :/
16:53 < brianc> RLa: what flavor of operating system?
16:53 < RLa> debian
16:53 < brianc> I wouldn't use forever for a production proc monitor
16:54 < brianc> RLa: could use something like monit
16:54 < cxreg> AAA_awright: local variables would work great if they were more akin to perl's dynamic scope locals
16:54 < brianc> buuuut that's just me. :P
16:54 < RLa> i did not want debian's own package because those are just ancient most of time
16:54 < AnonymousPrime> brianc you anticipated my question on forever
16:54 < AAA_awright> cxreg: But what are you trying to do?
16:54 < cxreg> AAA_awright: but local variables arent visible to functions you call... and i dont want to add this context to every interface of every function i call
16:54 < cxreg> it's preserving context of a piece of work across multiple async components
16:55 < rounce^work> RLa: Maybe update your apt sources?
16:55 < AAA_awright> cxreg: Then pass it as an argument to the function
16:55 < cxreg> yeah .. no
16:55 < RLa> rounce^work, update to what?
16:55 < AAA_awright> cxreg: You know what a "tick" is right?
16:55 < cxreg> it's mean to be aspect-oriented
16:55 < rounce^work> to newer repo urls
16:55 < AAA_awright> That would be the most useless thing ever
16:55 < cxreg> yes, of course I do, and no, it wouldn't
16:55 < SiTLar> if I modify the code to intercept the data that goes through the socket, I actually don't get anything http://pastie.org/6405310
16:55 < rounce^work> if apt-get is yeilding some old ass shit
16:56 < RLa> rounce^work, if you mean using "unofficial" nginx repo then that was exactly what i did
16:56 < rounce^work> 'zactly
16:56 < cxreg> meh, maybe I'll write a patch and see if it works out.  it will probably have a significant performance hit though
16:56 < cxreg> it would make it easier to show the value though
16:56 < AAA_awright> cxreg: So then when your function is first called starting the new tick, create a variable, and every call introduces a new scope in ECMAScript, that resets the value for you
16:57 < cxreg> yes thank you I understand scoping.  you're completely missing my point.
16:57 < AAA_awright> Then what are you trying to _do_
16:57 < cxreg> forget it, i will solve it
16:58 < AAA_awright> No, you're doing something wrong
16:58 < AAA_awright> Then what are you trying to _do_
16:58 < cxreg> heading to work bbiab &
17:07 < masch> hey folks. i'm using fluent-ffmpeg to convert a http audio stream into another format (mp3=>ogg). i use request to get the input stream and pipe the whole thing to a http response object. Now, when the browser closes the connection (for example if you close the tab) the node process crashes becaus fluent-ffmpeg calls fd.close on my inputstream which is a network socket, not a fs stream. Now the question: how 2 fix?
17:15 < spion> masch, EPIPE error?
17:17 < masch> spion: TypeError: Bad argument
17:18 < spion> that could be a bug of fluent-ffmpeg
17:18 < masch> cause fluent-ffmpeg calls fs.close(options.inputstream.fd) while options.inputstream is a http.ClientResponse
17:19 < masch> yes it is, because fluent-ffmpeg makes assumptions about the source of the input stream
17:19 < spion> well, maybe fluent-ffmpeg is not a very good library
17:20 < masch> spion: it does exactly what i need right now but that little thingy is what breaks everything. is there a correct way to close any readable stream?
17:22 < SiTLar> It looks like socket.on("data", ...) is not been triggered. Any ideas?
17:22 < superjoe> does node-gyp fit my use case if I need to generate a binary executable which my node code will shell out to?
17:22 < superjoe> s/generate/compile/
17:23 < spion> masch, closing the file stream should close the fd.
17:23 < spion> let me check
17:23 < bradleymeck> superjoe: i use it for random executables now days since i dont have to fudge with windows and can easily integrate node later if I really need it in process
17:24 < superjoe> bradleymeck, nice - do you have publicly available an example binding.gyp file for compiling a random executable?
17:25 < spion> masch, yup, closing the stream created by fs.createReadStream closes the underlying file descriptor.
17:25 < bradleymeck> i can gist one… sec
17:25 < spion> so... options.inputstream.close()
17:25 < masch> spion: that will work with http.ClientResponse ? 
17:26 < spion> it should work on any stream
17:26 < brianc> I need a tip for the best benchmakr library for node
17:26 < spion> ... I think
17:26 < brianc> i want to benchmark one of my modules
17:26 < masch> spion: i'll try :D 
17:27 < spion> oops, its .destroy() apparently.
17:28 < spion> fs's ReadStream exposes both .close() and .destroy(), and destroy() calls .close() when there is an underlying fd
17:28 < masch> ohh, great thanks
17:29 < masch> seems to work fine, thanks
17:29 < bradleymeck> superjoe: stripped out priv junk https://gist.github.com/bmeck/5101168
17:29 < bradleymeck> call gyp not node-gyp
17:30 < superjoe> thanks bradleymeck 
17:30 < bradleymeck> node-gyp will try to do extra stuff
17:31 < kenperkins> anyone have an example of jsdoc code that has params for object properties?
17:34 < jameshowe> how do I catch a std::exception and then ThrowException something that maintains the stack trace?
17:44 -!- mode/#Node.js [+o sblom] by ChanServ
17:50 < freezy3k> with the risk of sounding like a noob, how can i catch the end of a loop like http://xregexp.com/api/#forEach when the callback is only for each item?
17:52 < pringlescan> Hello all, I was wondering if anyone has attended the Joyent training sessions on SmartOS?
17:58 < asdf12> this is the most helpful stacktrace ever: http://hastebin.com/kojanapeqa.avrasm
17:59 < daekano> I detect sarcasm
18:00 < context> nice
18:00 <@isaacs> draginx: yes, 0.8.21 solves that throw
18:01 <@isaacs> draginx: domains are still a great idea for penty of other reasons, though :)
18:01 < draginx> isaacs: thanks! :)
18:06 < asdf12> thats weird
18:07 < cxreg> .oO(saving throw?)
18:08 < asdf12> i guess there's an issue with iriscouch
18:08 < asdf12> it seems better now
18:09 < asdf12> but slow, anyone using iriscouch and experiencing connection issues?
18:11 < MI6> joyent/node: Ben Noordhuis master * fb3ec32 : net: use close callback, not process.nextTick  Don't emit the 'close' eve (+2 more commits) - http://git.io/e4-maQ
18:12 < brianc> anyone have a recommended benchmarking module they use?
18:16 < asdf12> there's benchmark
18:17 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:18 < Shini_> Could someone explain how I could have a node.js application render output onto a webpage (like it is embedded) on an Apache server?
18:19 < asdf12> though i guess it's only really good for comparison
18:19 < havvy> Shini_: Node.js can accept HTTP Requests by default.
18:19 < asdf12> not so much for timing
18:19 < havvy> Without needing to go through a web server layer.
18:20 < havvy> That said, you should set up nginx or something like nginx between Node.js and the HTTP request so that you can do static file hosting quickly.
18:20 < ccowan> just use node… forget nginx and apache
18:21 < Shini_> havvy: I wouldn't use Apache if I could, but the website already exists using Apache.
18:21 < ccowan> Shini_:  you will need to proxy requests either from Apache to Node
18:21 < havvy> Shini_: Then nginx can be especially useful for you.
18:21 < ccowan> Shini_: or from node to apache
18:22 < havvy> Since you can say which routes to pass to Node.js and which rotes to pass to Apache (and which routes to handle directly)
18:22 < ccowan> so if you want to go through apache to node then you will need to use mod_proxy
18:22 < ccowan> but you will have issues with websockets 
18:23 < Shini_> Sounds rather confusing. I'll look into mod_proxy, thanks.
18:28 < Shini_> ccowan: From what I'm reading, I can't use mod_proxy for only part of the page I am requesting. I simply want to load the main page of my website and load everything on it normally without node, and then there's a small application created with node that I want to have used on the same page. Mod_proxy is capable of doing that?
18:29 < ccowan> Shini_: For that you will need to do the rest on the client side
18:29 < ccowan> OR
18:29 < ccowan> Shini_: What language is the main page done in?
18:30 < Shini_> php
18:31 < ccowan> Shini_: You could just make a curl request to the node process then render the results on the page. But mixing and matching gets really ugly
18:32 < ccowan> I think there a few ways to do what you want but each has an ugly bit to it
18:32 < Shini_> ccowan: Which would be the easiest to implement you think?
18:34 < ccowan> Shini_: Hum… What is the node bit doing that PHP can't?
18:36 < Shini_> ccowan: It's not that PHP cannot do it, it's more of we found a way to do it in Node that is more efficient.
18:36 < Shini_> ccowan: Though if it's this much of a hassle to do, it probably is more efficient. :(
18:36 < Shini_> isn't*
18:38 < ccowan> Shini_: So my approach to this would be to create a client side module that would call an api via REST (endpoint in node) and render it client side using something like Backbone 
18:39 < azylman> Could you do something like jam the node app in an iframe?
18:39 < azylman> Wherever you want to include it?
18:39 < Shini_> azylman: I spent around 2 hours trying that, it didn't work.
18:41 < context> ccowan: yes fetch the data from node separately
18:49 < shogun_> what should be the default behaviour if I add an attribute to a function directly? for example:  var f = function () {}; f.name = "name"
18:49 < shogun_> where is name saved?
18:49 < shogun_> in the f prototype?
18:49 < MI6> joyent/node: Eugene Girshov master * 25ba971 : http: fix multiple timeout events  Fixed up slightly by @isaacs so as not - http://git.io/CeX_og
18:54 < superjoe> shogun_, directly onto the function object
18:54 <@TooTallNate> shogun_: the "name" property of function objects is special
18:55 <@TooTallNate> you can't really mutate it
18:55 < superjoe> ah, I did not realize that
18:55 <@TooTallNate> but there is a special API in V8
18:55 <@TooTallNate> https://npmjs.org/package/function-name
18:55 <@TooTallNate> only exposed at the C++ level usually though
18:57 <@TooTallNate> shogun_: however, properties other than "name" are fine to set on function objects :)
19:21 < g0z> should http be able to handle file:/blah url type?
19:21 < g0z> (in node.js I mean of course)
19:21 < othiym23> g0z: that doesn't look like an http URL to me
19:21 < othiym23> so, no
19:22 < abe_> ola all
19:22 < brianc> anyone familiar with benchmark.js?
19:22 < brianc> it's more complicated than I expected
19:22 < brianc> where's the easy button on this thing. :p
19:23 < abe_> i just got node workin on port 80 someone just told me that i should not run it on port 80 directly for security reasons and i should change it so it forwards on to another port
19:24 < g0z> othiym23: k I figured I'd ahve to use fs but I thought I'd check (I don't get a warning or error when I try it though so thought I'd ask)
19:24 < abe_> is that right?
19:25 < superjoe> g0z, I don't think that question makes sense
19:25 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
19:25 < superjoe> there must be something that you don't understand correctly
19:26 < superjoe> g0z, err you mean as a client?
19:28 < bradleymeck> abe_: basically never ever run any code on port 80 unless you really want to check it yourself (in any language) port forward it or load balance it if you care enough
19:30 < ohnoesitsraphy> is heroku the best way to quickly deploy a node app?
19:30 < superjoe> bradleymeck, what do you mean "check it yourself"
19:30 < abe_> bradleymeck: sry what do you mean by chk it my self
19:30 < superjoe> ohnoesitsraphy, depends. it's a pretty ok way
19:30 < abe_> jinx
19:31 < g0z> superjoe: I have to "gather" some files for node to do some work on. some are http some are local files.
19:31 < bradleymeck> for network security flaws you introduce, if you introduce parse errors on privileged processes running with perm (to listen on port 80) it is significantly worse than running it on some port above 1024 and forwarding to that since you dont need privileges
19:31 < ohnoesitsraphy> superjoe, any other alternatives?
19:31 < faceleg|work> hrjimgo: nodejitsu exists
19:31 < bradleymeck> look at rails' yaml issue
19:32 < abe_> bradleymeck: so it is insecure buggger took me hours to figure out how to do it lol...thx
19:32 < superjoe> g0z, I had to solve that same problem. I filed https://github.com/visionmedia/superagent/issues/170 and then coded this: https://github.com/LearnBoost/juice/blob/master/lib/juice.js#L229
19:33 < bradleymeck> abe_: on any language and system avoid it unless you want to spend a lot of time checking it
19:33 < superjoe> ohnoesitsraphy, if you already have a server up and running, you can simply run your new project on another port
19:33 < superjoe> ec2 is more expensive but more flexible
19:34 < superjoe> bradleymeck, you know that you can downgrade your uid and guid after binding to 80 right?
19:34 < superjoe> and there is authbind
19:34 < abe_> bradleymeck: for sure i get it its not just node but anything was trying to replace apche...no good reason just cuase
19:35 < abe_> superjoe: i used authbind at first but when the server restarted the proccess died
19:35 < bradleymeck> superjoe: yes i do, and i still don't like it in case i leak a privileged fd
19:36 < abe_> would u run a demon to start it at restart again?
19:36 < bradleymeck> sure, but id start it as a diff user
19:37 < abe_> diffrent to the root user?
19:38 < bradleymeck> abe_: the www user, anything that replaced wheel, etc
19:39 < bradleymeck> daemon starts, spawns the actuall program as a diff user
19:40 < abe_> bradleymeck: sry to be a pain but i have just consumed all the info...if im going to port forward i dont need a deamon and i can just use forever with no kind of high privileges 
19:40 < bradleymeck> abe_: sure
19:40 < bradleymeck> yes*
19:40 < abe_> sweet lemonad thx bradleymeck
19:41  * abe_ off wishing there was a global undo button 
19:42 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
19:43  * g0z hands abe_ the history eraser button
19:43 < d4Mn> does anyone had problems with setting cookie on IE9 with express.js ?
19:43 < d4Mn> i can't set cookie on IE9 with express 
19:44 < Advant> Are there any colorize node.js packages that will not break console.log() deep inspecting an object and printing it?
19:45 < d4Mn> oh and it's only then when i use <script src="http://www.domain.com/script"></script> when openeing in new tab cookie is set
19:48 < MI6> joyent/node: isaacs master * 9208c89 : stream: Raise readable high water mark in powers of 2  This prevents exce (+7 more commits) - http://git.io/4rw4uQ
19:50 < abe_> presses g0z history erase button :-p
19:50 < shogun_> TooTallNate: what if I create a "non special" property, for example; var f = function () {}; f.abc = "something", or f.anotherFunction = function () {};
19:50 < shogun_> how would I be able to access those attributes?
19:50 < shogun_> are they in the function's f prototype? 
19:50 <@TooTallNate> shogun_: just access f.abc directly
19:51 <@TooTallNate> shogun_: a Function is the same as a regular JS Object… it's just "invokable"
19:52 < MrGlass_> Hello. has anyone here worked with socket.io? (i tried asking my Q in #socket.io, but had no luck)
19:53 < genazt> yes i did
19:53 < oskude> hmm, tab character is not allowed in a json string attribute? (JSON.parse throws a SyntaxError: Unexpected token)
19:53 < shogun_> TooTallNate: but if I say var ojb = new f()
19:54 < bradleymeck> > JSON.parse('\t{}')
19:54 < shogun_> can I run : obj.abc or obj.anotherFunction() ?
19:54 < bradleymeck> oskude: ^
19:54 <@TooTallNate> shogun_: no that wouldn't work
19:54 <@TooTallNate> shogun_: but you have access to "f" there (since you're calling `new` with it), so you can just as easily just access "f.abc"
19:54 <@TooTallNate> shogun_: but if "obj.abc
19:54 < shogun_> so abc and anotherFunction don't belong to f's "this" ?
19:54 < oskude> bradgignac: i mean if its inside an attribute, like { foo: "foo\tbar" }
19:55 < genazt> >> JSON.stringify({"test": "\tjdj"});
19:55 < bradgignac> bradleymeck: ^^
19:55 <@TooTallNate> shogun_: but if "obj.abc" *is* what you want, then you'd do `f.prototype.abc = 'blah'`
19:55 < oskude> bradgignac: eh, meant bradleymeck 
19:55 < bradleymeck> oskude: no JSON's spec says \u only
19:56 < oskude> bradleymeck: ok, thanks
19:56 < shogun_> TooTallNate: I was just trying to understand what internal mechanisms javascript uses when an attribute is append directly to the function
19:56 < oskude> bradleymeck: oh and what is \u?
19:56 < shogun_> it it adds as a member, or in the prototype, or some place else
19:56 < bradleymeck> oskude: wait no im being dump json.org says \t should be fine, did you need to double escape?
19:56 < bradleymeck> \uXXXX where XXXX is hex for the utf16
19:56 <@TooTallNate> shogun_: a function is just an object, so setting a prop on it… just sets the prop on it :D
19:56 < oskude> bradleymeck: hmm, well i add the tab with the tab key in text editor. utf-8 file. or hmm, maybe i need to tell fs to read it as utf-8
19:57 <@TooTallNate> there's no other magic
19:57 < bradleymeck> oskude: JSON.parse('\t{"x":"y\\tz"}') seems fine
19:57 < sinclair|work> any coffeescripters in here?
19:57 < shogun_> TooTallNate: but if the object is instantiated those properties will not be copied to the new one?
19:57 <@TooTallNate> shogun_: correct
19:58 < sinclair|work> in the statement ->    c[field] = op[idx][field][offset..]  what does offset.. mean?
19:58 < shogun_> TooTallNate: makes sense
19:58 < shogun_> TooTallNate: thanks!
19:58 <@TooTallNate> np
19:59 < tgriesser> sinclair|work: .slice(offset)
19:59 < sinclair|work> tgriesser: not sure i follow
20:00 < tgriesser> sinclair|work: http://bit.ly/107IKYg
20:00 < sinclair|work> there is also c[field] = op[idx][field][offset...(offset + n)]
20:00 < tgriesser> ^ just paste stuff in that link
20:00 < sinclair|work> ah right
20:00 < sinclair|work> tgriesser: weird syntax for slice
20:01 < sinclair|work> tgriesser: so [offset...(offset + n)] means .slice(offset, offset + n)
20:02 < sinclair|work> tgriesser: that is such bizarre syntax, not sure i follow the intention 
20:02 < sinclair|work> but ok
20:02 < tgriesser> splats are more intended for use with arguments
20:02 < tgriesser> or something with a variable length
20:02 < oskude> bradleymeck: hmm, this code http://sprunge.us/ejPJ reading this file http://sprunge.us/bgcC throws a SyntaxError: Unexpected token at the tab char :/
20:03 < bradleymeck> oskude: aaaah now i get it, you have an unescaped control char
20:03 < sinclair|work> tgriesser: thanks for your help
20:03 < tgriesser> sinclair|work: sure
20:03 < bradleymeck> so in answer a raw \t would blow up according to http://json.org/
20:04 < oskude> bradleymeck: ah!
20:04 < oskude> bradleymeck: ah, right on the right there. thanks :)
20:09 < brycebaril> http://teespring.com/keep-calm-and-node-on
20:12 < phpbot> phpbot, welcome to channel #Node.js. Try following commands: !Say, !Weather, !Joke, !Ip, !Poke, !Join, !Part, !Timeout, !Quit, !Restart
20:13 < phpbot> ptdorf, welcome to channel #Node.js. Try following commands: !Say, !Weather, !Joke, !Ip, !Poke, !Join, !Part, !Timeout, !Quit, !Restart
20:13 < phpbot> aheckmann, welcome to channel #Node.js. Try following commands: !Say, !Weather, !Joke, !Ip, !Poke, !Join, !Part, !Timeout, !Quit, !Restart
20:13 < phpbot> spion, welcome to channel #Node.js. Try following commands: !Say, !Weather, !Joke, !Ip, !Poke, !Join, !Part, !Timeout, !Quit, !Restart
20:14 < euoia> well, that's not annoying in the slightest
20:14 < phpbot> wramthun, welcome to channel #Node.js. Try following commands: !Say, !Weather, !Joke, !Ip, !Poke, !Join, !Part, !Timeout, !Quit, !Restart
20:14 < euoia> !Quit
20:15 < phpbot> phpbot, welcome to channel #Node.js. Try following commands: !Say, !Weather, !Joke, !Ip, !Poke, !Join, !Part, !Timeout, !Quit, !Restart
20:15 < ptdorf> !Joke
20:15 < phpbot> Some people ask for a Kleenex when they sneeze, Chuck Norris asks for a body bag.
20:15 < phpbot> admc, welcome to channel #Node.js. Try following commands: !Say, !Weather, !Joke, !Ip, !Poke, !Join, !Part, !Timeout, !Quit, !Restart
20:15 < ptdorf> !Quit
20:35 < tuhoojabotti> lol
20:36 < keke> tuhoojarobotti taitaa olal suomesta :D
20:36 < tuhoojabotti> Ei, en
20:36 < keke> Aa, luulin sit väärin :/
20:36 < tuhoojabotti> Joo
20:37 < ptdorf> !md5
20:37 < MI6> joyent/node: isaacs master * db5d58e : bench: Use environ to run compares more than once  This will run the benc - http://git.io/1zGD8g
20:38 < ptdorf> !md5 l
20:39 < pedro345> MD5 4a3004542dae5e501bc43053aa9a875c
20:39 < tuhoojabotti> ptdorf: This is the best channel to test a bot?
20:39 < ptdorf> tuhoojabotti: Apologies.
20:49 < dwierenga> can anyone recommend a module that parses apache-sytle config files? i.e. simple key-value pairs delimited by whitespace. (i realize it's trivial to write one, but, ya know.. wheels already exist too..)
20:54 < FunnyLookinHat> dwierenga, You could just split the line into an array using whitespace as a delimiter, couldn't you ?  Then just clean the array a bit.
20:55 < inspiron> how do I add regular expressions in express.vhost(). For instance:  express.vhost('(?:www\.|)myurl.com', bapp)
20:55 < niggler> is it standard practice to put node_modules in .gitignore or is there something more clever?
20:59 < euoia> niggler: what are you trying to do?
21:00 < niggler> set up git lol
21:00 < euoia> niggler: if I don't want to commit my modules then I'll put them in .gitignore
21:01 < superjoe> niggler, it's standard practice to put node_modules in .gitignore.
21:02 < diogogmt> niggler: ^^^^ yeah, just like they said 
21:03 < euoia> niggler: Sorry, when I say them I mean it, i.e. node_modueles
21:03 < euoia> ugh typo
21:03 < MI6> joyent/node: isaacs created branch v0.9.12-release - http://git.io/6HFwCw
21:04 < inspiron> anyone know if you can put regular expressions inside the first argument of express.vhost
21:05 < euoia> dwierenga: not that I know of anything, but do you mean apache-style config files or do you mean key/value pairs? Because apache config files aren't just key/value pairs
21:06 < sshaginyan> Hey guys why can't I do a response.sendfile('../'); in express
21:06 < sshaginyan> It gives me a Error: Forbidden
21:06 < euoia> dwierenga: there's also a few things to consider, like - what are you splitting the key from the value on? any whitespace? what if you want a key or a value with whitespace in it... is that allowed? What happens if the same key is used twice?
21:06 < MI6> joyent/node: isaacs v0.9.12-release * 719e487 : 2013.03.06, Version 0.9.12 (Unstable)  * stream: Allow strings in Readabl - http://git.io/jQ6wkg
21:07 < Sendoushi> here i was thinking... is there any system /service like whm / cpanel for node?
21:07 < Sendoushi> that i could install on my machine and have several node accounts?
21:10 < MI6> joyent/node: isaacs v0.9.12-release * 0debf5a : 2013.03.06, Version 0.9.12 (Unstable)  * stream: Allow strings in Readabl - http://git.io/mY4O-g
21:11 < tpayne> how can i get the previous path?
21:11 < Sendoushi> so... no one
21:13 < euoia> Sendoushi: not sure what you mean by a node account
21:13 < Sendoushi> euoia: are you familiar with cpanel , whm and plesk?
21:13 < euoia> Sendoushi: yes a bit
21:13 < Sendoushi> where you have lets say a client or a project
21:13 < Sendoushi> you create a new account with a new domain
21:14 < Sendoushi> and you have services destined to that new domain
21:14 < euoia> so you want one of these things, but written in node?
21:14 < Sendoushi> lamp, email, ftp...
21:14 < Sendoushi> well... not exactly in node
21:14 < Sendoushi> i don't really care about that
21:14 < euoia> I mean, could you not use cpanel?
21:14 < Sendoushi> but something that also gives me the ability of node
21:14 < euoia> as far as I'm aware cpanel kind of sits above that layer and lets you install services
21:14 < Sendoushi> so i can use whm or other thing to create "node accounts"
21:15 < Sendoushi> so i can resell or make accounts for different applications
21:15 < Sendoushi> and they all run at the same time
21:15 < Sendoushi> lets say i want a normal php shared system but instead of php... node
21:15 < tpayne> What's the $_SERVER['HTTP_REFERER'] of node?
21:15 < Sendoushi> so something that automatically does Node instead of LAmp
21:15 < euoia> perhaps it's the case that one of those systems you mentioned already supports node
21:15 < tpayne> nm
21:16 < euoia> Sendoushi: http://www.jvmhost.com/articles/install-node-js-cpanel-shared-account
21:16 < Sendoushi> euoia: hmmm
21:16 < othiym23> Sendoushi: it sounds like you want a PaaS platform written in Node, and there are a few of them out there
21:16 < euoia> othiym23: he mentioned that he doesn't actually care if it is written in node
21:16 < Sendoushi> no i don't
21:16 < euoia> othiym23: just that the environments that are created will run node programs
21:16 < Sendoushi> i want something simple that gives me node abilities
21:17 < euoia> if I understand correctly
21:17 < Sendoushi> exactly
21:17 < othiym23> right,
21:17 < MI6> joyent/node: isaacs master * d258fb0 : http: More useful setTimeout API on server  This adds the following to HT - http://git.io/B8f9cw
21:17 < othiym23> but most of the things that do things like that are also written in Node ;)
21:17 < Sendoushi> i could use a vps to do that
21:17 < euoia> I think that so long as you install node on the system then you could probably just use cpanel or one of the other existing solutions
21:17 < Sendoushi> but that cost wise wouldn't be that interesting
21:17 < Sendoushi> euoia: well not entirely true since you still have to open the app
21:18 < euoia> I'm not familiar enough with configuring cpanel from the perspective of a reseller, just as an end user
21:18 < Sendoushi> for the reseller part i use WHM panel
21:18 < euoia> I have also used that but it was ages ago
21:18 < Sendoushi> but yeah i'm used to be the end user also
21:18 < MI6> joyent/libuv: isaacs created tag node-v0.9.12 - http://git.io/-t7ILQ
21:19 < Sendoushi> but my hoster gives me a reseller account for node if i help him with this
21:19 < Sendoushi> :P
21:19 < Sendoushi> and that would be awesome
21:19 < euoia> othiym23: did you have any recommendations?
21:22 < dwierenga> euoia: yes, any whitespace pretty much. and it's just key/value pairs, no containers. 
21:23 < euoia> dwierenga: I ran npm search parse and then if I found something with an appropriate description looked it up on github
21:23 < niggler> if you put a script in the `bin` section of package.json and it is installed, will it be called via node or directly (aka do i need a shebang line)
21:23 < euoia> dwierenga: there's a few things that might help, but if it's really that easy then as FunnyLookinHat said it would probably be really easy to do yourself
21:24 < euoia> dwierenga: this for example: https://github.com/Floby/node-parser
21:24 < euoia> but it's possibly overkill
21:25 < dwierenga> euoia: yes, as i said, probably trivial to write, but it's one of those things that can have a lot of edge cases that i'd rather not slog through myself if someone else already has
21:25 < dwierenga> i was looking on the wiki though, hadn't thought of using npm search. i'll try that, thanks
21:26 < euoia> dwierenga: not likely to have many edge cases if you don't need whitespace or newlines in your keys or values
21:33 < MI6> joyent/node: isaacs master * 51c8b0e : V8: Reapply floating patches (+1 more commits) - http://git.io/eOiBMA
21:37 < garciawebdev> hi, i'm trying to run `npm install` for it to install project's dependencies on Ubuntu for the first time (works ok on OS X) and i get a EACCESS error: Error: EACCESS, open '/home/alejandro/.npm/cba964e3-grunt-0-4-0.lock'
21:37 < garciawebdev> "Please try running this command again as root/Administrator."
21:38 < garciawebdev> why does it needs root privileges to write to my user directory?
21:38 < niggler> garciawebdev re-chown .npm
21:38 < niggler> i think if you run an npm install -g once it messes up the permissions file
21:38 < garciawebdev> uhhh, you're right
21:38 < garciawebdev> the first run was `sudo npm install -g grunt`
21:39 < garciawebdev> there it created the .npm/ with root user
21:39 < niggler> so just chown -R your_user_name ~/.npm
21:39 < niggler> holy crap so really?  do you really not notice?
21:40 < garciawebdev> niggler just noticed a second before i've read your message
21:40 < garciawebdev> niggler, thanks for help
21:40  * niggler pets garciawebdev 
21:42 < garciawebdev> ~/tmp/ also needed re-chowning
21:50 < MI6> joyent/node: isaacs created tag v0.9.12 - http://git.io/X8JJLQ
21:55 < Gambit--> how do I prevent the node.js http server from responding to a 1.1 get request with a chunked response?
22:00 < superjoe> Gambit-, set the content length header
22:02 < MI6> joyent/node: isaacs v0.8 * 116d6c4 : blog: Post for 0.9.12 - http://git.io/63vf1A
22:03 < MI6> joyent/node: isaacs master * 7df4652 : Now working on 0.9.13  Probably that will be 0.10.0 instead, though. (+3 more commits) - http://git.io/TIUDQg
22:05 < oinkon> is there an easy way to figure out why my node code isn't exiting. as far as i know i cleaned up everything that should be doing any kind of listening, but the process continues to just hang there. so i guess i missed something
22:07 < asdf12> yea
22:07 < asdf12> open socket?
22:09 < euoia> oinkon: https://groups.google.com/forum/?fromgroups=#!topic/nodejs/Nn-j_a7ZfTc
22:09 -!- Topic for #Node.js: "have it your way" - gildean || http://nodejs.org || http://logs.nodejs.org || http://en.wikipedia.org/wiki/Nodejs || http://stackoverflow.com/questions/tagged/node.js
22:09 -!- Topic set by isaacs [~isaacs@173-203-97-118.static.cloud-ips.com] [Fri Mar  1 22:20:02 2013]
22:09 < euoia> oinkon: what happens if you send SIGUSR2 to the process?
22:09 -!- isaacs changed the topic of #Node.js to: "have it your way" - gildean || http://nodejs.org || http://logs.nodejs.org || http://en.wikipedia.org/wiki/Nodejs || http://stackoverflow.com/questions/tagged/node.js
22:10 -!- isaacs changed the topic of #Node.js to: v0.10 comes Monday 2013.03.11 - http://nodejs.org - http://logs.nodejs.org - http://stackoverflow.com/questions/tagged/node.js
22:20 <@isaacs> OMG YOU GUYZ!
22:20 <@isaacs> 0.9.12 is 0.10
22:20 <@isaacs> install it
22:20 <@isaacs> use it
22:20 <@isaacs> love it
22:20 <@isaacs> it's so fast!
22:20 <@isaacs> streams are good!
22:21 < d4Mn> isaacs what who where?
22:21 < dshaw_> wowowoowowoowowoowow
22:21 < dshaw_> :)
22:21 < oinkon> euoia: I just get "User defined signal 2"
22:21 < oinkon> and the process dies
22:22 < asdf12> needs to be an alias at http://nodejs.org/docs/ to point to the latest development release 
22:22 < asdf12> isaac^
22:22 < asdf12> isaacs*
22:22 < havvy> http://blog.nodejs.org/2013/03/06/node-v0-9-12-unstable/
22:23 < Platz> compiling 0.9.12 now and will test if it proccesses my 70 MB file faster
22:23 < asdf12> that doesn't help havvy
22:24 < havvy> It was to complement's isaacs's statement, not yours.
22:25 < oinkon> is this sigusr2 a newer node feature maybe?
22:25 <@isaacs> asdf12: well, after monday we won't need it :)
22:25 < oinkon> i'm on v0.8.21
22:25 <@isaacs> asdf12: since it'll be 0.10, and it'll be at nodejs.org/
22:25 <@isaacs> oinkon: no, it's been around since around the 0.2-ish days
22:26 <@isaacs> oinkon: try `node debug -p <pid>` where <pid> is the process id
22:26 < ericjung> havvy: hi
22:26 < shesek> isaacs, awesome :) congrats
22:26 < havvy> 'ello.
22:26 < ericjung> havvy: reading http://www.nodebeginner.org
22:27 < ericjung> no idea if that's any good yet
22:27 < shesek> was the changelog for 0.10 published yet?
22:27 < oinkon> well i'm connected to the process with the debugger.
22:28 < havvy> I'm skimmed it for details.  It ends abruptly asking for $10 to read the full things.
22:29 < oinkon> is there a way to list listeners or things in the event queue?
22:30 < bingomanatee> hello node
22:30 < shesek> oinkon, event listeners and things in the event queue are two different things
22:31 < bingomanatee> what is the best way to upgrade node versions, on OSX or Ubuntu?
22:31 < faceleg|work> brew
22:31 < shesek> oinkon, for event listeners, you have http://nodejs.org/api/events.html#events_emitter_listeners_event
22:31 < oinkon> shesek: i meant to say and
22:31 < oinkon> i just want to figure out what's keeping my node process from exiting
22:31 < faceleg|work> bingomanatee: ubuntu could use apt-get
22:31 < faceleg|work> bingomanatee: os x I use homebrew
22:31 < bingomanatee> thx
22:31 < faceleg|work> bingomanatee: package management will save you time and grief
22:31 < asdf12> bingomanatee: there's an official os x pkg
22:32 < shesek> as for the event queue... I'm not quite sure, but I don't think you can access that
22:32 < euoia> bingomanatee: On OS X I use the .pkg http://blog.nodejs.org/2013/03/06/node-v0-9-12-unstable/
22:32 < mscdex> there's also binary tarballs
22:32 < mscdex> just unpack and go
22:32 < faceleg|work> what a plethora of choices
22:32 < mscdex> wait, let me rephrase that
22:32 < mscdex> just unpack and node
22:32 < faceleg|work> oh node you di'nt
22:45 < superjoe> whoa, v0.10 release date
22:46 < azylman_> v.10 comes the day before Starcraft 2: Heart of the Swarm :p
22:48 < kenperkins> v0.10 comes on first day of new job :P
22:48 < azylman_> Sorry kenperkins, more excited for HotS than your new job
22:49 < azylman_> ;)
22:49 < kenperkins> no offense taken
22:49 < wiwillia> Anyone here behind teespring.com/keep-calm-and-node-on?
22:51 < faceleg|work> been doing so much C++ lately that I'm writing JS like: object->SomeFunction
22:51 < faceleg|work> before noticing and deleting it
22:51 < faceleg|work> *SomeValue
22:55 < ericjung> why isn't response.writeHead() called response.writeHeader()?
23:01 < jgaui> is there a way in npm or some module to show me if there are newer versions of packages available? (ignoring my package.json versions)
23:02 < freewil> jgaui, npm outdated
23:02 <@mbalho> jgaui: also https://david-dm.org
23:03 < jgaui> if I understand outdated, it only shows latest that are within your semver range in package.json
23:04 < jgaui> mbalho: I'll check out david
23:07 < euoia> that david-dm website is great
23:07 < shesek> you also have https://npmjs.org/package/npmedge and http://pksunkara.github.com/npm-police/
23:08 < shesek> (never used any of them myself though)
23:08 < jgaui> shesek:  I've tried both of those, but neither really worked
23:09 < jgaui> well, they didn't work for the project I tried it in.  might have been because it was private
23:10 < shesek> npm-police has "Support multiple npm registries (custom)" on his TODO list
23:28 < oinkon> so i never figured out how to attack my, "what's keeping my node process running" issue
23:29 < oinkon> but I did find out there is a bug in the mongodb driver that causes this. i'm going to chalk it up that
23:30 < oinkon> and explicitly call process.exit
23:34 < ENK|2> hello
23:35 < ENK|2> what is the best method for add widget "node.js" in php web based? 
23:36 < ENK|2> I search it for internet but don't see good answerd
23:41 <@mbalho> ENK|2: put nginx in front of php + node
23:42 < ENK|2> mbalho: I think this work for use diferent web to php or node but I say about add a node chat in a site 100% php
23:43 < ENK|2> I think firt time in use iframes but google dont like iframes
23:44 < MI6> joyent/node: isaacs v0.8 * 80fb580 : npm: Update to 1.2.14 (+1 more commits) - http://git.io/y7LP9g
23:44 < tylersmith> well, if you're using node it isn't 100% php
23:44 < ENK|2> Is good idea use jquery to load in to a div web from node?
23:45 < cloudbender> Am I connected ?
23:45 < tylersmith> cloudbender: nope ;)
23:45 < cloudbender> dang
23:45 < tylersmith> ENK|2: I'd probably write it such that node is listening for a web sockets connection.  then search your html/js with php, then in the JS connect to your node socket server to handle the chatting
23:46 < cloudbender> Any opinions on Adobe Illustrator ?
23:46 < cloudbender> I know this is node chat
23:46 < tylersmith> ENK|2: I'd probably use socket.io + handlebars templates on the client
23:47 < MI6> joyent/node: isaacs master * f780c6f : Merge remote-tracking branch 'ry/v0.8' into master  Conflicts: 	deps/npm/ (+4 more commits) - http://git.io/minCgQ
23:47 < ENK|2> mm ok thanks I think about this idea :)
23:48 < cloudbender> hmmm
23:48 < cloudbender> NickServ says my password is not valid
23:50 < CoverSlide> U BEEN HAXXORED!
23:51 < cloudbender> I been ?
23:51  * CoverSlide shrugs
23:51 < cloudbender> hope not
23:51 < cloudbender> anyway this client seems to be working
23:53 < niggler> lol
23:53 < cloudbender> chatzilla's not bad
23:53 < willwh> cloudbender: when did you last connect to freenode?
23:53 < willwh> pretty sure there is a 30 day expiry
23:53 < cloudbender> a week or so
23:53 < willwh> on nickserv reg
23:53 < willwh> you'd have to look it up >.>
23:53 < ChrisPartridge> 30 day? I think it's longer than that
23:53 < cloudbender> oh so if I ignored the nickserve messages before then maybe that was a bad thing
23:54 < cloudbender> I was connecting, so I figured all was well
23:54 < willwh> http://freenode.net/faq.shtml#userexpirations
23:54 < cloudbender> ty willwh
23:54 < willwh> you don't need to register to connect
23:55 < cloudbender> I registered for python, I thought ...
23:55 < cloudbender> they are invite only
23:55 < cloudbender> anyway sorry for off topic
23:56 < MI6> joyent/node: isaacs created branch v0.8.22-release - http://git.io/QBfnDw
23:56 < faceleg|work> ChrisPartridge: http://pagesofinterest.net/blog/2013/03/constructing-js-objects-in-cpp/
23:58 < cloudbender> Is there a place where evryone shares pics ?  Like, GitPix, or something ?
23:58 < faceleg|work> cloudbender: imgur?
23:58 < niggler> can you fork images in imgur?
23:59 < cloudbender> only images of forks
23:59 < niggler> how does one fork an image of forks
--- Log closed Thu Mar 07 00:00:30 2013
