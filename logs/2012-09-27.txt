--- Log opened Thu Sep 27 00:00:27 2012
00:33 < ang3lfir3> rawr ... someone say something interesting
00:35 < bindr> Pi is an irrational number.
00:36 < Schoonology> How about this: Is there any way to know when a child Node instance created with child_process.fork would otherwise exit?
00:36 < benDos> I'm using emit stream and it seems to break whenever the streams encoding isn't utf8?
00:36 < benDos> Schoonology, SIGCHLD?
00:36 < Schoonology> I know child_process prevents it from exiting, but I seem to have no way of knowing when to kill it...
00:37 < Schoonology> Are you suggesting I listen for SIGCHLD on the ChildProcess instance, benDos?
00:40 < Schoonology> Answer: call disconnect on the returned ChildProcess instance, and proceed as normal. The only thing keeping it alive in the first place was the automatically-created IPC channel. Groovy.
00:44 < ang3lfir3> bindr.... meh in Alabama ... pi is 3 :p 
00:46 < benDos> Does JSONStream work with none utf8 encodings?
00:48 < rvagg> substack: how are you load balancing your internal services on testling? are you just doing a Math.random() on the services you get from seaport.get()?
01:02 < Almindor> is there a way to get specific location for parse errors on JSON.parse?
01:02 < Almindor> I'm getting an "unexpected token" error on something which passes validation on online validators when I copy&paste it
01:03 < Almindor> I also don't see anything wrong on it, so I'm thinking it's some special char or something
01:06 < prk> hello
01:07 < ang3lfir3> hihi
01:09 < bingomanatee> Can anyone give me a hand with http-proxy?
01:13 < ang3lfir3> ^^^ chan subject is incorrect ..... stable is 0.8.10 :p 
01:15 < rvagg> Almindor: search npm for 'json' and try out an alternative JSON parser perhaps, there are other non-native implementations that give better output
01:16 < rvagg> or google for json3 perhaps, I'm not sure if it's error output is any better but you could give it a try
01:16 < rvagg> s/it's/its
01:17 < toothr> Almindor, have you checked for some kind of escaping issue?
01:21 < Almindor> toothr: yeah there's no ', " or \ there is / but it's inside ""
01:22 < Almindor> toothr: also it passes when I copy& paste online so I think it's probably some special char which gets lost on "print" (which can be the case because it's taken from MSSQL server with latin encoding)
01:22 < toothrot> well, can you try reducing it down
01:22 < Almindor> I have ignored the comment field on specific types of import events I do which should avoid it now, but if it pops up again I plan to ascii the input in python (python gets the data from SQL anyhow)
01:23 < Almindor> it's a bit annoying with 130000000 documents in the queue ;)
01:33 < timeturner> I love regex
01:33 < BennyLava> And regex loves you!
01:34 < timeturner> haha
01:34 < timeturner> it's crazy how complicated a regex one can make
01:34 < timeturner> or a super simple, yet effective one
01:38 < niggler> timeturner: wait till you see perl regex
01:41 < timeturner> what type of regex does bash use? I use mainly js regex but I just applied it to bash and it works their too
01:41 < timeturner> it was a fairly simple one to select files though
01:42 < timeturner> there*
01:57 < ChrisPartridge> timeturner: pretty sure bash just uses ERE regex, could be wrong
02:02 < Raynos_> Stream spec: https://gist.github.com/3791742
02:02 < Raynos_> Would love feedback on bad assumptions of mine
02:32 < TandemAdam> anyone here used node with Flash/ActionScript 3 before?
02:39 < TandemAdam> I am looking for a simple example of both client and server side
02:41 < Aria> What kind of server? It's capable of several kinds of connection.
02:45 < zivester> somedays I wish node had *less* options for things.... ie. templates, sigh
02:55 < zivester> someone just be sure to let me know if there is something better than jade before I dive into this project...
03:02 < ChrisPartridge> zivester: if you don't like it, you can easily change it :)
03:02 < ChrisPartridge> play around with a few views, if you don't like it, switch to something you know/prefer
03:03 < zivester> I know html... and i have been kind of partial to template languages that still require a lot of html... but I'm starting to think... well why
03:04 < zivester> jade seems pretty simple.. just taking out all the excess, with all the designer friendly functions i may need
03:05 < zivester> one thing jade docs don't say, but I'm guessing is true.. is that indendation is a part of the language... forcing me into this python world :)
03:06 < ChrisPartridge> zivester: ya
03:07 < zivester> next I'll be using a css preprocessor :-X
03:08 < torm3nt> you're right, y es
03:08 < torm3nt> and that forced indentation can cause logic problems
03:08 < torm3nt> having to change how you might code something because of indentation is a righteous pita
03:09 < torm3nt> tbh I've been using ejs
03:09 < SomeoneWeird> ejs ftw
03:25 < Nuck> Theoretically speaking, could I pipe a UDP socket into a crypto decrypter?
03:26 < Nuck> This API I'm (regrettably) working with reimplements HTTPS over UDP, basically.
03:29 < SomeoneWeird> lolwat
03:30 < ChrisPartridge> HTTPS.. over UDP.. Nuck.. I'd start running
03:30 < Nuck> ChrisPartridge: Inorite?
03:30 < Nuck> It's fake HTTP
03:31 < niggler> nuck fode
03:31 < Nuck> It's got a status code in the response
03:31 < Nuck> But the SSL part is true, they use AES 128
03:31 < torm3nt> rofl wtf
03:33 < Nuck> I had the same reaction
03:33 < Nuck> But this is the only anime database and my programmer self will never be satisfied if I keep manually downloading anime when it's released
03:34 < ChrisPartridge> :|
03:37 < niggler> maybe you need to find new anime
03:39 < Nuck> niggler: Or a communtiy that lacks perlists
03:50 < torm3nt> start your own anime site :P
03:51 < niggler> whats the difference between anime and manga
03:52 < Aria> Manga is printed. Anime is ... animated.
03:52 < Aria> Heh. Perlists. My coworker is probably one of the people who inflicts perl and anime on people.
04:03 < torm3nt> haha
04:38 < torm3nt> is there someway I can register a directory for requires?
04:38 < torm3nt> for example, I have a models directory in my root
04:41 < mscdex> torm3nt: dump them in node_modules ?
04:41 < torm3nt> *facepalms*
04:41 < torm3nt> of course! haha
04:42 < mscdex> torm3nt: you can even put them in a subdirectory like node_modules/models and then do require('models/foo')
04:44 < torm3nt> yup, that's EXACTLY what I want
04:44 < torm3nt> ty :D
04:48 < chilts> torm3nt: you can also just do require('./models/whatever')
04:48 < chilts> assuming it's in your top level directory
04:48 < chilts> :)
04:48 < torm3nt> ohhhh
04:48 < chilts> the initial . or / means to look there rather than node_modules
04:48 < torm3nt> which is a more preferred approach?
04:48 < chilts> I personally wouldn't mess up node_modules since I keep that for npm installed stuff
04:48 < torm3nt> yeah, ok
04:48 < chilts> I guess either works - up to you :)
04:48 < timeturner> yeah never put app related stuff in node_modules
04:49 < chilts> :)
04:49 < timeturner> unelss you plan on installing it from npm
04:49 < timeturner> unless*
04:49 < SomeoneWeird> unless you release it as a module :p
04:50 < torm3nt> hmmmm
04:50 < torm3nt> doing that appraoch doesn't seem to work, chilts
04:50 < torm3nt> seems to want only relative paths
04:50 < chilts> yeah, it does ... check where your file is
04:50 < SomeoneWeird> it does work
04:50 < chilts> oh, yeah, it needs to be relative if you are a directory down :)
04:51 < torm3nt> that's what I'm saying, which isn't what I want. heh
04:51 < chilts> ./ is if your file is in your top level
04:51 < torm3nt> so I'm back to relative paths.
04:51 < chilts> right, so it's just like a website then :)
04:51 < chilts> except / doesn't work :)
04:51 < chilts> ah well
04:52 < torm3nt> I don't like the idea of putting in node_modules now either, now that I think about it.
04:54 < SomeoneWeird> put it up a level then
04:54 < torm3nt> well I currently have it in /models/user.js
04:54 < SomeoneWeird> what's the problem then?
04:54 < torm3nt> but it still means that my routes a few levels down need to do: require('../../../models/user.js')
04:55 < torm3nt> is there a way to get the path of the file that was called?
04:55 < torm3nt> ie. node app.js
04:55 < SomeoneWeird> __dirname + "/" + __filename
04:56 < torm3nt> I assume that would return the path of the file I'm currently in, though?
04:56 < torm3nt> not the file executed from node
04:56 < SomeoneWeird> heh, dunno
04:57 < mscdex> __dirname and __filename are for that script
04:57 < mscdex> where those variables are used
04:58 < torm3nt> bah, I'll coem back to this later
04:58 < torm3nt> can clean up if necessary later :)
05:17 < chid> hey hey!
05:17 < chid> are there any open source projects written in node.js?
05:18 < chid> I'm not sure how to describe, for example like wordpress/joomla/gallery scripts
05:19 < torm3nt> not sure about blogs yet
05:19 < torm3nt> but there's a pretty large number of projects
05:19 < chid> torm3nt what are the 'big' ones? or most widely used one
05:19 < chid> ones*, I don't mean modules
05:19 < torm3nt> they're all modules.
05:20 < torm3nt> so you just outlawed all of them.
05:20 < chid> sorry I meant not libraries :P
05:20 < torm3nt> tbh I'm really not sure
05:20 < torm3nt> I'm sure a google search would get you what you want
05:20 < torm3nt> bear in mind node.js is still very young
05:25 < chid> Yeah I know _Oddman
05:28 < badem4o1> I'm looking for a set of JavaScript exercises/challenges that will help me get me more familiar with the language. Does anyone have any suggestions. I'm open to all beginner to intermediate and advanced. Thanks in advance.
05:30 < _Oddman> www.google.com
05:30 < _Oddman> there's a site there somewhere htat does a pretty neat JS course, but hell if I can remember what it is
05:30 < lz> badem4o1, did you try the codecademy.com exercises?
05:30 < badem4o1> :-D
05:30 < _Oddman> ah that's it
05:30 < _Oddman> code academy :)
05:30 < lz> _Oddman, Code Cademy, easy mistake
05:31 < _Oddman> i wasn't correcting you
05:31 < badem4o1> code academy is a little too basic.
05:31 < _Oddman> thought they had more advanced courses?
05:32 < _Oddman> they have an intro one for free though, which yes is rather basic
05:35 < badem4o1> Any other suggestions? 
05:37 < davidban_> substack: Thanks for pulling that request on fleet so quickly!
06:40 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
07:28 < jmoyers> anything like templatizer that is template engine agnostic?
07:28 < jmoyers> https://github.com/HenrikJoreteg/templatizer
07:34 < [AD]Turbo> hola
07:34 < gildean> morning
07:35 < tuhoojabotti> morning
07:35 < tuhoojabotti> tai huomenta
07:35 < shac> heheh nod
07:36 < shac> oops. Wrong channel. Morning Node.js :)
07:36 < gildean> tuhoojabotti: huomenta vaan
07:36 < tuhoojabotti> gildean: Sun sivut ei toimi. :u
07:36 < gildean> mitkä niistä?
07:37 < tuhoojabotti> http://salaliitto.com/~gildean/ linkit väärin
07:37 < gildean> tuhoojabotti: kumma juttu, koitas http://julkinen.salaliitto.com
07:38 < tuhoojabotti> kyllähän nuo toimaa
07:38 < tuhoojabotti> eri subdomain
07:38 < tuhoojabotti> gildean: esim <base href="http://julkinen.salaliitto.com" /> korjais
07:39 < tuhoojabotti> vissiin
07:39 < gildean> joo, ongelmana on että oon laittanu polut relatiivisiks juureen, jollon ne ei toimi kun suoraan subdomainista
07:39 < tuhoojabotti> Jeps
07:39 < tuhoojabotti> Eipä tuota kai oo tarkotus käyttää. :P
07:39 < tuhoojabotti> </offtopic>
07:39 < gildean> kai sinne joku aina välillä eksyy, pitää korjata
07:40 < tuhoojabotti> Laita robots.txt niin ei eksy
07:40 < tuhoojabotti> Mut joo, base tagi on ihan kiva.
07:41 < gildean> tuhoojabotti: nah, i'll just rewrite the whole page, it's been up for a while already
07:41 < gildean> maybe do some singlepage design
07:42 < tuhoojabotti> Always a good choice! :P
07:42 < tuhoojabotti> gildean: Like mine: http://tuhoojabotti.com
07:42 < gildean> tuhoojabotti: not bad
07:43 < mikrowelt> mornin guys )
07:44 < tuhoojabotti> I guess I could blame node taking all my time to make a new website.
07:44 < mikrowelt> guys can some one help me with connect-mongodb? im having a issue with storing expressjs seesion data (http://pastebin.com/GA60rA6h).... its gives error every time i try to log in
07:45 < gildean> mikrowelt: iirc connect-mongodb hasn't been updated for a while
07:45 < gildean> mikrowelt: why not try mongojs instead, it's nice and simple
07:46 < mikrowelt> and iknow mate... but how can i store seesion data with it?
07:46 < rio{> I had lots of problems with connect-mongodb and different versions as well
07:46 < mikrowelt> can u help me with that
07:46 < mikrowelt> ?
07:46 < mikrowelt> with mongodb native
07:47 < mikrowelt> im already using mongodb... and was like google'in alot how to sotre the session data in it....
07:47 < mikrowelt> everybody uses or mongoose or connect-mongodb
07:48 < mikrowelt> i think there is no way to do it in native mongodb
07:48 < rio{> I just use the mongo db uri as as url parameter to session
07:48 < rio{> dunno if thats different from what youre trying to do
07:49 < mikrowelt> url: mongodb//blabalbal ???
07:49 < mikrowelt> im passing an object
07:49 < rio{> ye
07:49 < mikrowelt> with db name host and port
07:49 < mikrowelt> db: sdaf, host: sadf, port: 123
07:49 < mikrowelt> let me try
07:50 < risto_> well the express world has changed a bit
07:50 < rio{> Ye as I said I dont know if the results are different. I just remember that I had problems with different versions of express and connect-mongodb
07:50 < risto_> there are more template engines like hogan.js
07:50 < risto_> is it good? I only have used template engine jade 
07:50 < rio{> ye implementations had changed alot and all articles I read said different things
07:56 < rio{> app.use(express.session({ cookie: {maxAge: 3600000 }, secret: mySecret, url: app.set('db-uri') })); and 'db-uri' is set differently in app.configure if it's production or development environment. app.set('db-uri', 'mongodb://localhost/myApp'); for example
07:56 < rio{> that's how I did.
08:37 < Philip_> Hey can someone please explain whats wrong with that?    var signer = crypto.createSign('pkcs7');
08:38 < Philip_> Unknown message digest pkcs7 this is what i see in the console
08:44 < theblackbox> mornin all
08:50 < ashr> morning theblackbox 
09:02 < claudio> Hi. I've just released jecho, and before "going public" I'd like to make it semi-public here :) https://github.com/claudioc/jecho
09:03 < claudio> it's more or less a lightweight weinre
09:05 < spion_> https://github.com/dominictarr/through
09:15 < spion_> hey. the topic is a bit old :)
09:16 < spion_> (0.8.10)
09:21 < _Tristan> anybody know of an image manipulation library (mainly changing hue/saturation/brightness of images, combining them as layers) that works in node?
09:25 < rounce^work> there are GD bindings for node i believe
09:26 < _Tristan> huh
09:26 < rounce^work> also imagemagick 
09:27 < rounce^work> https://github.com/joyent/node/wiki/modules#wiki-graphics
09:38 < pellis> hello
09:38 < pellis> i have around 2000 api requests that i need to make concurrently
09:38 < pellis> problem is, i get out of memory issues (node getting to 1.6GB), and connections run out
09:38 < pellis> is there a way I can throttle this ? (but still just let node do everything in parallel)
09:44 < aandy> pellis: https://github.com/coopernurse/node-pool perhabs?
09:46 < pellis> aandy, yep, that's interesting. i'm useing mikeal/request, wondering if the two go well together
09:47 < aandy> it should, but i haven't tried it
09:47 < aandy> wether your "resource" call is an internal mysql query (the example) or a external http api call shouldn't play a role
09:48 < aandy> but of course, shouldn't !== doesn't, so a small proof of concept which launches 2000 requests to localhost might be a good idea :)
09:50 < staar2> dam my pacman does not run at all 
09:53 < Ralt> claudio: sounds awesome
09:54 < claudio> Ralt, thanks :)
10:08 < chobo> Hey, does anyone know how to use Mongoose ODM's populate function to populate nested models attributes? e.g. Game -> Rounds -> Players... when I retrieve the Game, i wanna also get the populated player models.
10:11 < shanse> chobo: http://mongoosejs.com/docs/populate.html like so?
10:13 < chobo> shanse: nah, those examples are only for 1 level down, mine is 2 levels down and Im not quite sure how to tell mongoose that... ive tried populate(...) with 'rounds', 'rounds.players' and 'players' and none of them worked.
10:17 < shanse> oh
10:18 < shanse> well
10:18 < shanse> you could populate the player in the callback
10:20 < chobo> shanse: yeah true, I just found it as an open issue (FYI https://github.com/LearnBoost/mongoose/issues/601)
10:21 < pellis> is it possible i'm still getting out of memory and crash with node 0.8.x ?
10:21 < pellis> isn't it supposed to use a VM where the heap memory limit is off?
11:53 < Innocentus> hi
11:55 < SomeoneWeird> herro
12:43 < Philip_> How do i get an PKCS#7 signature with node?
12:44 < SomeoneWeird> from?
13:33 < Philip_> How do i get an PKCS#7 signature from a manifest.json file with node?
13:58 < superjoe> is there a way to use mocha without it adding globals?
13:58 < superjoe> I want to explicitly require describe, it, beforeEach, etc.
15:11 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:16 -!- mode/#Node.js [+o bnoordhuis] by ChanServ
15:18 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:25 < milani> can anyone help me figuring out why defining index on an schema causes 'Error: connection closed due to parseError' ( using mongoose )
15:27 < plato> milani: i've only used couchdb, not mongoose. couchdb defines 'views' using JSON. perhaps your schema definition is improperly formatted
15:28 < milani> plato, I used "order: { type: Number,   require: true, index:true }" 
15:28 < milani> which I guess is right way for mongoose.
15:28 < plato> hmm is the whitespace OK?
15:28 < wltsmrz> The non-quote-wrapped object properties are ok?
15:28 < plato> do you need to use strings? 'type':'Number' etc
15:28 < wltsmrz> ^
15:29 < wltsmrz> Easier to just JSON.stringify({type:Number, require:true, index:true})
15:30 < plato> or maybe JSON.stringify({order:{type:Number, require:true, index:true}})
15:30 < wltsmrz> Woops, yeah, that
15:31 < plato> although, looking at https://github.com/LearnBoost/mongoose, it appears that milani's method is correct
15:32 < milani> it is not the string that causes it. I quoted it here to separate from the other parts of my message:)
15:32 < milani> without index it works fine.
15:32 < milani> but when I add index, I get the error above.
15:33 < draginx> https://gist.github.com/54c4da3818fa2fe5e84d am I doing async incorrectly..?
15:34 < wltsmrz> Doesn't underscore have a mapping function?
15:34 < prosquare> yes
15:34 < prosquare> _.amp
15:35 < prosquare> *_.map
15:35 < RLa> otherwise code looks ok
15:35 < wltsmrz> You can reduce the indentation a bit
15:36 < plato> value.country_code is a string?
15:36 < draginx> yeah im not concerned about style atm :P
15:36 < draginx> plato: yes
15:36 < draginx> "USA" is a string :P
15:36 < draginx> prosquare: yeah I was thinking of the map and im using lodash :) much faster than underscore
15:36 < draginx> thanks guys
15:36 < plato>  redis.hmset('countries'... will probably execute before _.each(results, ... is done
15:37 < draginx> so then im not doing async correctly
15:37 < draginx> feck
15:37 < prosquare> draginx: i'll have to check that out
15:37 < draginx> i thought node was all synchrnous with code unless u code asyncronously ;)
15:37 < plato> it is
15:37 < draginx> so then doesnt it go top to bottom before left to right?
15:37 < plato> it executes _each(results ..., which takes some time, and immediately proceeds to the next line
15:38 < draginx> ah I see
15:38 < plato> does _.each have some 'final' callback
15:38 < draginx> so im going to have the use the asynch library
15:38 < plato> that executes after everything is complete
15:38 < draginx> no i dont think so which sucks
15:38 < plato> weak
15:38 < draginx> i wish someone made a underscore-asynch lib :P
15:38 < rounce^work> each
15:38 < draginx> each?
15:39 < plato> draginx: i don't think i cover your specific case in this example, but it shows how to use async.series, async.parallel, async.waterfall
15:39 < plato> https://github.com/therealplato/node-async-demo
15:39 < wltsmrz> https://raw.github.com/gist/b5b7aef4b7437cc674f2/797ca05fd0c80d05087e3e983d56a6ca6a096441/gistfile1.txt
15:39 < rounce^work> _(array).each(function(v, k, l) { if(k == (l.length-1)) next(); });
15:40 < rounce^work> cannae remember the order of the arguments for underscore's each
15:40 < plato> yeah wltsmrz that should do it probably
15:41 < plato> although - won't it stop execution when it encounters the if (!_isNull(_.r))
15:44 < draginx> im pretty sure it would if we return :)
15:44 < draginx> or is this where I need processNextTick?
15:47 < wltsmrz> If you have a big else clause that is synchronous anyway, you can decrease indentation by returning early under the opposite condition. That's the only difference in the code I posted.
16:07 < zackiv31> jade question.. how do i put a var as the id to a div? like - var a = 'something' to get <div id="something"></div>
16:07 < RLa> try div(id=#{a})
16:07 < TooTallNate> the interpolation isn't necessary
16:08 < TooTallNate> just: div(id=a)
16:08 < RLa> nice, webstorm 5 supports jade
16:09 < RLa> brb
16:13 < zackiv31> tx, didn't know if there was some shorthand
16:14 < context> anyone possible know a good tool or simply a template for documenting a web api
16:25 < indianburger> hello! I have a question state of variables in a module..
16:26 < gkatsev> npm install -g tetris
16:27 < draginx> how can I use underscoe's _.each function with nodejs?
16:28 < gkatsev> var _ = require('underscore'); _.each(obj, fun)
16:28 < gkatsev> or something like that
16:28 < draginx> no
16:28 < draginx> not what i meant..
16:28 < draginx> https://gist.github.com/54c4da3818fa2fe5e84d/9fcdcbf7e364c16be4111f2ba9c59b7ba5792282
16:28 < draginx> line 8 and 11 will execute at the same time correct?
16:29 < gkatsev> no
16:29 < draginx> u sure?
16:29 < gkatsev> yes
16:29 < gkatsev> node/js is single threaded.
16:30 < draginx> but this isnt fully async is it?
16:30 < gkatsev> i'm pretty sure that _.each isn't asynchronous, so, it'll finish running before redis.hmset starts
16:30 < gkatsev> lunch, bbl
16:39 < chapel> draginx: line 8 will run first
16:39 < chapel> if its a small array/object, it won't take long
16:40 < balgarath> anyone know how i can write a little script that opens a node cli, runs a couple commands, and leaves the cli open for me? I'm looking to automatically require a couple files so I dont have to manually type in the requires everytime I want to use the node cli
16:43 < astropirate> yes
16:43 < zpmorgan> Is Joose pretty nice?
16:43 < astropirate> balgarath, what OS are you running?
16:44 < balgarath> ubuntu
16:44 < astropirate> balgarath, you are looking to write the script in node as well?
16:44 < balgarath> doesn't matter to me. bash or node
16:46 < CoverSlide> ooh, i hope Joose doesn't add those classes to global
16:48 < astropirate> balgarath, hmmm.....
16:48 < astropirate> you would open node in a terminal like so:  gnome-terminal -x bash -c "node"
16:48 < zpmorgan> CoverSlide: Joose, Klass, or Selish?
16:48 < zpmorgan> (should I use..)
16:48 < astropirate> now, the trick to write toits stdin..
16:51 < CoverSlide> klass is dead simple
16:52 < CoverSlide> although selfish looks pretty tiny as well
16:53 < CoverSlide> If you want to use the standard constructors built into javascript, I'd use klass
16:53 < zpmorgan> is joose the only metaclass system?
16:54 < CoverSlide> if you want the absolute minimal library as possible, i'd use selfish
16:54 < CoverSlide> Yeah I guess so
16:54 < zpmorgan> okay, thanks CoverSlide 
16:56 < CoverSlide> Joose gives you all the class introspection you'd want coming from Java, but personally, I hate having to require such a big library just to make JavaScript classes more like Java Classes
16:57 < CoverSlide> personal choice
16:58 < CoverSlide> my last 3 jobs I've worked at used klass on the frontend side, so it's a pretty common abstraction
16:58 < CoverSlide> although personally I prefer not to use a lib for classes, and just use .prototypr
16:58 < CoverSlide> *prototype
17:02 < plato> balgarath: one simple option would be to write a requires.js that includes e.g var foo = require('foo'); var bar = require(bar);
17:02 <@Nexxy> balgarath node has a repl
17:03 < plato> i guess running node requires.js would still exit after completing the script
17:03 <@Nexxy> not if you start the repl
17:03 < plato> Nexxy: is there some command that starts the repl?
17:04 <@Nexxy> repl.start 
17:04 <@Nexxy> lol
17:04 <@Nexxy> http://nodejs.org/api/repl.html
17:06 <@mbalho> Nexxy: are you in europe right nao!?
17:06 <@Nexxy> mbalho not yet!
17:06 <@Nexxy> on the 6th
17:07 <@mbalho> oh sweet
17:07  * mbalho noted
17:07 <@Nexxy> jsconfeu and nodedublin
17:08 <@mbalho> no nodecopter/
17:08 <@mbalho> ?
17:08 <@Nexxy> oh
17:08 <@Nexxy> yes
17:08 <@mbalho> YES
17:08 <@Nexxy> and reject
17:08 <@Nexxy> js
17:08 <@mbalho> nice
17:08 <@Nexxy> I just got the tickets
17:10 <@Nexxy> mbalho I still have no clue what to demo @jsconf
17:10 <@Nexxy> ideas welcome
17:10 <@mbalho> Nexxy: are you giving a talk?
17:10 <@Nexxy> yes
17:10 <@Nexxy> at both
17:11 < mscdex> Nexxy: hidstream!
17:11 <@Nexxy> ermahgerd!
17:11 < mscdex> :-D
17:11 <@mbalho> Nexxy: getusermedia({audio: true}) landed in canary this week
17:11 <@mbalho> Nexxy: https://gist.github.com/3786030
17:12 <@mbalho> Nexxy: so you could probably whip up a pretty cool live mic demo
17:12 <@Nexxy> Im on my phone
17:12 <@Nexxy> oh sweet
17:12 <@Nexxy> link me on twitter!
17:12 <@mbalho> like, tweet https://gist.github.com/3786030 at you?
17:13 <@Nexxy> yus
17:13 <@Nexxy> cant get links on connectbt
17:13 < jerrysv> Nexxy: going to cascadia.js?
17:13 <@Nexxy> yes!
17:13 <@Nexxy> carter just asked me about it the other day
17:14 <@Nexxy> you?
17:14 < jerrysv> Nexxy: i'm part of the organizers
17:14 < jerrysv> so, yeah :)
17:15 <@mbalho> pshhh who does confs in seattle anymore phssshhh
17:15 <@Nexxy> lol
17:15 < jerrysv> Nexxy: check your pm's!
17:15 <@Nexxy> jerrysv :P
17:15 <@Nexxy> I has to go
17:15 <@Nexxy> <3
17:16 < munro> jerrysv: what did you talk about at pdxjs last night?
17:16 < jerrysv> munro: plv8
17:17 < munro> ah cool
17:17 < jerrysv> yeah, i love databases
17:19 < CoverSlide> I'm going to conquer a small island, call it javanese samoa, and register the .js tld with ICANN
17:20 < rendar> CoverSlide: LOL!
17:27 < Cogito_Ergo_Sum> heya
17:28 < Cogito_Ergo_Sum> i want to implement something in node, but the question is not node specific necessarily
17:29 < Cogito_Ergo_Sum> let's say i have an array of integers with e length of 256
17:30 < Cogito_Ergo_Sum> i want to increment from 0 to 255 the value of each cell starting from the end...when it becomes 255.. the last-1 element becomes 1 and the last element becomes 0 and starts all over
17:30 < Cogito_Ergo_Sum> in other words this would be expressed as a really large number increment by 1
17:31 < Cogito_Ergo_Sum> where the large number is stored in a 256^256 bytes buffer
17:31 < nkuttler> integers? bytes?
17:32 < Cogito_Ergo_Sum> it doesn't matter
17:32 < Cogito_Ergo_Sum> whichever would be faster
17:32 < nkuttler> wouldn't it be better to have a var point at some array position instead of shifting data around?
17:33 < Cogito_Ergo_Sum> nkuttler let me put it this way... i have an image of 32x32 pixels ( 1024 pixels... ) 
17:33 < Cogito_Ergo_Sum> each pixel can take a gray value from 0 to 255
17:33 < Cogito_Ergo_Sum> i don't want a random stuff
17:33 < Cogito_Ergo_Sum> i want a brute force technique
17:33 < Cogito_Ergo_Sum> so the last pixels starts from black ( pixel color 0 ) to white ( pixel color 255 )
17:33 < Cogito_Ergo_Sum> pixel*
17:34 < Cogito_Ergo_Sum> then the last-1 pixel does the same
17:34 < Cogito_Ergo_Sum> and so on
17:35 < Cogito_Ergo_Sum> so esentially it's it's a "string" or buffer of 1024 bytes ( 8192 bits )
17:36 < Cogito_Ergo_Sum> with initial value of 0 and last value of 2^8192-1
17:36 < plato> that's gonna take a while
17:36 < Cogito_Ergo_Sum> true but that's nto my problem
17:36 < plato> why do you want to iterate through that?
17:36 < plato> what's your question?
17:37 < Cogito_Ergo_Sum> my problem is i don't know HOW to iterate 
17:37 < Cogito_Ergo_Sum> it would be easy to iterate if it was just a 64 byte ( long int ) number
17:38 < Cogito_Ergo_Sum> sorry..8 byte i mean*
17:41 < darthdeus> hey guys, is there some kind of advanced node.js screencast series? something where it's about control flow, testing larger apps and so on ... everything I'm able to find is just stupid simple examples which don't really help that much
17:43 < plato> Cogito_Ergo_Sum: define a function that takes your buffer and an index. if b[i] = 1; set b[i] to 0 and call function(b[i-1]) recursively
17:43 < wltsmrz> Not that I'm aware of, darthdeus 
17:43 < wltsmrz> There is the nodeup podcast but that is mostly commentary, not so instructional
17:43 < darthdeus> or a book or something that isn't "beginner node"
17:43 < darthdeus> yeah i'm listening to that
17:44 < plato> so if you have 00001111 and you try to add 00000100 it would return 00010011
17:44 < substack> darthdeus: here is a thing I'm working on https://github.com/substack/stream-handbook
17:45 < mikrowelt> Guys im having some magig issue... What im doin is getting info from my mongoDb and compare it with elemnt of a socket event data.... so when i do console.log(var1) - it shows 'asdf1234' when i do console.log(var2) it shows 'asdf1234' and when i do var1==va2 it returns false..... help)) 
17:46 < substack> I have a lot of materials for a talk I'm giving tomorrow that will end up in the stream handbook soon too
17:46 < plato> pastebin it mikrowelt 
17:48 < mikrowelt> plato: http://pastebin.com/K2xvvPpZ
17:48 < Cogito_Ergo_Sum> plato ah so impltementing binary addition manually
17:48 < Cogito_Ergo_Sum> sounds good
17:49 < jocafa> substack, one day i may have to commission silly illustrations from you
17:49 < mikrowelt> plato: i fixed
17:50 < mikrowelt> plato: dont worry but tnbx anyway
17:50 < mikrowelt> plato: im just kinda noob )
17:50 < plato> Cogito_Ergo_Sum: i dont see any way around it with such a big buffer
17:51 < EweR> having error with fs.watchfile when changing the .json which contains server attributes http://pastie.org/4830817
17:52 < plato> mikrowelt: hey BTW never store passwords in database in plaintexty
17:53 < mikrowelt> plato: i know that mate... im like just super new to node... and im just looking around and stuff....
17:53 < plato> mikrowelt: instead, generate a 'salt' value. combine the user's password with the salt, hash it. store the has and the salt in your db
17:53 < plato> example of how to do that in node: https://github.com/therealplato/passport-multiauth-demo/blob/master/app.js#L490
17:53 < mikrowelt> plato: yeah i know that tnx mate... i done php alot ))
17:53 < plato> kk
17:53 < mikrowelt> i making my own auth
17:53 < mikrowelt> couse it was to hard for me to understand the passport thing and make it work
17:54 < plato> ok, good luck
17:57 < mikrowelt> ohhh my god how i hate this god damn callbacks
17:58 <@isaacs> mikrowelt: http://callbackhell.com
17:58 -!- Topic for #Node.js: node.js - latest stable: http://nodejs.org/dist/v0.8.9/ - latest beta: http://nodejs.org/dist/v0.9.2/
17:58 -!- Topic set by bnoordhuis [~bnoordhui@ip125-96-214-87.adsl2.static.versatel.nl] [Tue Sep 18 11:17:27 2012]
17:59 -!- isaacs changed the topic of #Node.js to: node.js - latest stable: http://nodejs.org/dist/v0.8.11/ - latest beta: http://nodejs.org/dist/v0.9.2/
17:59 < mikrowelt> yeah)) hi by the way ).... i linked me that already
17:59 <@isaacs> mikrowelt: kewl :)
18:01 < jocafa> callbacks = :(    reactive programming = :D
18:03 < txdv_> i've got a stream, I need to convert the entire content which it returns to a string
18:03 < txdv_> any ideas?
18:10 < darthdeus> how can i make mocha run all specs under test/**/*.js
18:14 < jocafa> hey tjholowaychuk, what exactly IS "component"?
18:14 < tjholowaychuk> jocafa https://github.com/component/component/wiki/F.A.Q
18:14 < jocafa> ah gracias
18:15 < tnorris> txdv_: http://nodejs.org/api/stream.html#stream_stream_setencoding_encoding
18:16 < tnorris> set the encoding to utf8, then all 'data' events will return a string
18:16 < mikrowelt> isaacs: mate can u tell where i get more exaples how not to get to the CB hell
18:19 < MLL> hello
18:19 < MLL> i am having some trouble using node js and socket io
18:19 < MLL> is this the right place to ask for some help?
18:19 < tnorris> yup
18:19 < jocafa> tjholowaychuk:  you're a freaking machine, man.
18:20 < MLL> i am trying to make the first example on socket.io website
18:20 < MLL> but the client only shows something when i close the server
18:20 < tnorris> MLL: put your code in a pastebin or something. much easier to help.
18:22 < MLL> ok
18:22 < MLL> just a sec
18:23 < mikrowelt> guys is it bad to use Fibes Coffee and sutff like that to esxape the callback hell?
18:24 < CoverSlide> how does coffee esxape callback hell?
18:24 < MLL> here: http://pastebin.com/prWUb1iY
18:25 < tjholowaychuk> mikrowelt fibers are fine but there's a memory tradeoff
18:25 < tjholowaychuk> coffeescript wont help at all though
18:25 < MLL> that line console.log("worked"); only appears in the log of my browser (chrome) when i close the server
18:25 < mikrowelt> im really screwed with this callback stuff)))
18:26 < mikrowelt> need to google a little to get for info 
18:26 < CoverSlide> it's beneficial to learn
18:27 < plato> mikrowelt: http://shinetech.com/thoughts/thought-articles/139-asynchronous-code-design-with-nodejs- and https://github.com/caolan/async
18:27 < mikrowelt> tnx alot plato ))
18:27 < mikrowelt> ur great <3
18:28 < tnorris> MLL: um. just ran the code. it's working for me.
18:29 < MLL> running
18:29 < MLL> but nothing appears in the log
18:29 < mikrowelt> MLL: try to reinstall socket.io
18:29 < mikrowelt> npm install socket.io
18:29 < tnorris> MLL: what version of node are you using?
18:29 < mikrowelt> some times it helps
18:30 < MLL> i will check
18:30 < MLL> 0.6.8
18:30 < MLL> 0o
18:31 < jocafa> damnit tjholowaychuk, i really could have used this six months ago hehe
18:31 < tnorris> MLL: try what mikrowelt said. i'm running v0.8.10 of node and v0.9.10 of socket.io.
18:32 < MLL> i will update node, and reinstall socket
18:32 < mikrowelt> istall node form git
18:32 < mikrowelt> but dont take the last version its a little buggy with socket
18:33 < mikrowelt> take 8.9
18:34 < tnorris> yeah, forgot about that. installed 0.8.10 to test out the new openssl asm changes.
18:34 < samholmes> Anyone have any tips on creating a mobile version of my app; m.mydomain.com version that you get redirected to if you're on a mobile client?
18:35 < owen1> i have two sequential functions. is it better call foo(bar); or without passing a callbock - foo(); and call bar at the end of foo?
18:35 < tnorris> samholmes: use something like the following and redirect: http://detectmobilebrowsers.com/
18:35 < tnorris> owen1: if bar is always going to be the same, then no need to pass it.
18:35 < tnorris> imho
18:35 < timeturner> owen1: if those two functions aren't dependent upon each other then they should be fired in parallel imo
18:36 < owen1> timeturner: they are
18:36 < owen1> git pull + restart my node server
18:36 < samholmes> tnorris: in other words, I just need to read the user agent string?
18:36 < owen1> i use post-recieve hook that calls this endpiont
18:36 < owen1> endpoint
18:36 < tnorris> samholmes: well. that's the way they do it. but really, a mobile device is a regular computer with a really small screen (sort of).
18:37 < owen1> tnorris: thanks
18:37 < samholmes> tnorris: and no keyboard or mouse
18:37 < tnorris> timeturner: what do you mean by "in parallel"?
18:37 < tnorris> samholmes: don't forget blackberries
18:37 < owen1> tnorris: foo(); bar()
18:37 < tnorris> they have a tiny mouse cursor over the screen.
18:38 < txdv_> all these template libraries are made for streaming
18:38 < tnorris> owen1: ah, ok. so sequentially. when I think of "in parallel" i think firing them up in different processes or something.
18:38 < timeturner> parallel(foo(), bar(), function(err, stuff){ // deal with err or use stuff.foo and stuff.bar
18:38 < samholmes> tnorris: blackberries don't exist
18:39 < timeturner> just firing the functions and letting the callbacks return at their own time
18:39 < timeturner> it's still sequential but it allows you to deal with both functions once both of them have returned
18:40 < samholmes> tnorris: How do I manage a subdomain to serve the mobile front-end from my app?
18:40 < samholmes> It's an express app
18:40 < tnorris> samholmes: I assume if you're building a mobile site, then the layout will be different. but I don't want a mobile layout on an ipad. it's just ugly.
18:40 < tnorris> samholmes: I'd recommend using nginx in front, then pass the connections to each node app based on the base url.
18:40 < owen1> timeturner: in my case, foo is doing git pull. and bar is restarting the node server. i don't want to call bar until foo is done.
18:42 < timeturner> then it should be in the callback
18:42 < timeturner> foo's callback
18:43 < timeturner> because otherwise bar() will be called just after firing foo() and foo() will not have finished the git pull yet
18:43 < timeturner> assumming foo() is async
18:43 < timeturner> assuming*
18:46 < txdv_> sometimes I wish some of the template engines would be just sync
18:46 < txdv_> I KNOW
18:46 < txdv_> FIBERS!
18:47 < tnorris> samholmes: here's a link how to do it: http://www.letseehere.com/reverse-proxy-web-sockets
18:50 < samholmes> tnorris: I don't want to use nginx. I'm already using bouncy, so I suppose I could just proxy m.mydomain.com to a different port.
18:52 < tnorris> samholmes: that's cool. don't have experience with "bouncy" (or even know what that is). I guess you could run from the same domain and deliver either the desktop or mobile content based on the browser.
18:52 < tnorris> but then you wouldn't have 'm.mysite.com'
19:08 < DaMorpheuS> can someone here help me out with something
19:10 < DaMorpheuS> I'm relative new with node.js well actualy brand new :P. Question is : when I install some api's with npm it puts an api dir on the location you are at. Is this the only position I can use it from or is het now just embedded to the node.js lib
19:10 < owen1> timeturner: foo is doing git pull (using child_process) i call bar in the exit event
19:12 < thl0> DaMorpheuS: you can also use it from any folders below the location (ie subdirs)
19:12 < thl0> DaMorpheuS: if you want to install globally use npm install -g ... 
19:12 < DaMorpheuS> so every poject you use npm to install the apis needed
19:12 < thl0> DaMorpheuS: libraries used fro a project should be installed locally though
19:13 < thl0> yes
19:13 < DaMorpheuS> well something as riak-js or connect is not project specific
19:13 < DaMorpheuS> but if I use -g option where does the installer puts it then?
19:14 < thl0> well, if you want to deploy somewhere else you should install locally and include it in your package.json
19:14 < thl0> in some user specific folder - don't know exactly
19:15 < thl0> DaMorpheuS: find more info here:https://npmjs.org/doc/install.html
19:23 < DaMorpheuS> sorry thl0  my connection dropped
19:24 < DaMorpheuS> what i wanted to ask because I';m not used to the nodejs way do you have some leads in how to start to make an app in nodejs
19:25 < rio{> What kind of app?
19:25 < DaMorpheuS> app has to process uge amount of data from multiple data sources
19:26 < DaMorpheuS> and have to produce data to be used in a web based user interface .. for this I was thinking of amberjs
19:27 < CoverSlide> you mean emberjs?
19:27 < DaMorpheuS> typo sorry
19:28 < DaMorpheuS> yep but this event based programming is completely new for me so I have problems getting a good start and I don't want to create a faultive program ofcourse
19:30 < wltsmrz> That wasn't a typo. Emberjs was originally Amberjs, wasn't it?
19:30 < DaMorpheuS> what's the differense then?
19:31 < DaMorpheuS> just new version
19:31 < wltsmrz> Just renamed
19:31 < CoverSlide> i don't think it got released as amberjs
19:31 < gkatsev> wasn't ember sproutcore before?
19:31 < rio{> yes and yes
19:31 < wltsmrz> Yeah, CoverSlide. I think that's right.
19:31 < wltsmrz> And yes gkatsev.
19:31 < CoverSlide> there was another project called amber which was a smalltalk-to-javascript compiler
19:32 < gkatsev> didn't know it was supposed to be amber at first
19:32 < rio{> They used Amber for a long time (not official) as they knew they hade to rename from sproutcore
19:32 < CoverSlide> they announced the name change as amber, but were notified of the other project
19:32 < DaMorpheuS> so now it's emberjs
19:32 < rio{> ye
19:32 < DaMorpheuS> ?
19:32 < DaMorpheuS> oh ok
19:32 < wltsmrz> For a few days
19:33 < rio{> ;)
19:33 < DaMorpheuS> but still can you guys give me some advice in how to start something like this
19:33 < DaMorpheuS> :)
19:33 < DaMorpheuS> so my idea was nodejs + riak for the backend and emberjs for the frontend (correct?)
19:34 < wltsmrz> That is a conceivable arrangement, yes
19:35 < wltsmrz> Maybe you want to combine Riak & Redis after you understand their relative strengths
19:35 < wltsmrz> I've heard whispers about that
19:35 < DaMorpheuS> but then how to start in node js is there some good howto start webinar or documentation that's not telling me how to prgram in js because i know that but how to set stuff like this up in this setting
19:36 < wltsmrz> To be honest I'm not sure what problem you are trying to solve
19:37 < wltsmrz> Care to elaborate?
19:37 < CoverSlide> is there any simple way? not really
19:37 < CoverSlide> i don't think there's really any easy pre-set build stuff you can use
19:38 < CoverSlide> kind of read through the libraries and set up your own thing
19:38 < CoverSlide> you do understand how the http module works right?
19:38 < DaMorpheuS> well I don't want that I just want to know a startup in nodejs and why/how I should do my stuff in nodejs 
19:38 < wltsmrz> Express is probably a good framework to acquaint yourself with. Simple stuff. Intuitive.
19:39 < DaMorpheuS> when i typed npm install express it said that my version wasn't compatible
19:39 < DaMorpheuS> still have to look in to that also :)
19:39 < wltsmrz> What's your version?
19:39 < wltsmrz> (Node version)
19:39 < CoverSlide> o_O
19:39 < DaMorpheuS> how do I tell that
19:40 < DaMorpheuS> :S
19:40 < wltsmrz> node --version
19:40 < DaMorpheuS> 0.6.12
19:40 < DaMorpheuS> ofcourse :)
19:40 < wltsmrz> That's a pretty old version but I'm surprised that Express is giving you lip
19:40 < TheEmpath> its a sassy framework
19:41 < wltsmrz> Experiment with the old version if you like npm install express@2.5.11
19:41 < DaMorpheuS> i'm trying to upgrade now on my ubuntu
19:41 < wltsmrz> 0.8.11 was released just today I think
19:41 < DaMorpheuS> yeah but is it allready available to install it with apt
19:42 < DaMorpheuS> or do I have to compile it myself then
19:42 < wltsmrz> You should compile
19:42 < tjholowaychuk> DaMorpheuS almost always best to install from source unless you want really old shit all the time
19:43 < tjholowaychuk> they're always way behind with everything
19:43 < DaMorpheuS> lol
19:43 < DaMorpheuS> so I see
19:43 < DaMorpheuS> well then I will compile myself a new version in a bit
19:43 < DaMorpheuS> you guys run nodejs on linux?
19:44 < TheEmpath> anyone tried getting node running on an raspberry pi?
19:44 < BennyLava> a*
19:44 < TheEmpath> b :(
19:44 < DaMorpheuS> lol my windows version is much higher :)
19:46 < gkatsev> yeah, no point in installing it from apt
19:48 < thl0> DaMorpheuS: here is some info on installing node on linux: https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
19:49 < DaMorpheuS> thanx ill try that right away
19:56 < DaMorpheuS> now the version is 0.8.10 thanx for the tip
19:59 < DaMorpheuS> damn it
19:59 < wltsmrz> What's up
20:01 < DaMorpheuS> my irc was kicking me twice
20:01 < DaMorpheuS> wltsmrz my version is now 0.8.10
20:01 < DaMorpheuS> that's quit up to date isnt it
20:04 < duko_> is there something a person can do on a server that would ensure a browser does not use its own cached version of an index file?
20:04 < wltsmrz> Yes, DaMorpheuS. As I said the latest is 0.8.11 which was released today
20:05 < wltsmrz> It was advocated that 0.8.10 be ignored because of some fs.stat size regression (I think)
20:05 < wltsmrz> But I think you will be fine for now
20:05 < wltsmrz> duko_ the browser will use its cached version under the condition that it receives a 301 response
20:06 < wltsmrz> Sorry 304
20:08 < CoverSlide> wltsmrz: unless it's IE or Mobile Safari for iOS6
20:08 < CoverSlide> it gets a 304 header based on etag
20:08 < duko_> how would I find out what code is being send with index file?
20:08 < CoverSlide> otherwise you need the cache-control headers
20:08 < duko_> is there a `client` I may use
20:09 < CoverSlide> umm .. your browser?
20:09 < wltsmrz> Open up dev. tools in Chrome (ctrl + shift + i) and observe the Network tab. Lots of useful information there.
20:09 < wltsmrz> Or just curl -I
20:11 < koara> after cluster.fork, do the workers see all variables/memory set before forking?
20:11 < koara> in other words, is the forked process memory copy-on-write as expected?
20:11 < duko_> CoverSlide, wltsmrz thank you
20:12 < duko_> indeed I am sending a 301 response
20:12 < duko_> but 304 is the code that prompts a browser to use its cached version?
20:13 < jryans> are there any CLI dev servers (like http-server) with SSL support?
20:13 < CoverSlide> duko_: yes
20:14 < CoverSlide> koara: each forked process is a new process, they don't "share" anything, but the variables on initialization should be the same
20:15 < wltsmrz> Yes, duko_
20:15 < koara> so if i fork in the middle of something, the module is loaded/run from start, not from forking point, right?
20:15 < wltsmrz> 304 is not-modified
20:15 < CoverSlide> right
20:15 < koara> thx CoverSlide 
20:16 < koara> not much of a "forking" if you ask me, but i guess getting forking to work on windows properly would be a PITA
20:17 < John> How easy is it to write a chatroom thing for your site in node?
20:19 < wltsmrz> The "chatroom" concept, like most things, could range wildly in complexity 
20:36 < superjoe> if you listen on port 0 and get assigned a port, how do you check which port you got assigned?
20:37 < superjoe> ah, server.address
20:40 < samholmes> If I'm developing two applications, a desktop site and a mobile site, how do I make them seperate (two directories and two processes on the server), but at the same time use all of the same model files that I have in the desktop version on my mobile version?
20:40 < superjoe> samholmes, maybe your models should be their own module?
20:40 < samholmes> superjoe: you mean it's own process?
20:41 < superjoe> samholmes, no, I mean its own module
20:41 < samholmes> superjoe: they already are modules in the since that I require() them.
20:41 < superjoe> so you have 3 repositories: desktop, mobile, and models
20:42 < superjoe> however now that I think about it, does it really make sense to have a different server for mobile?
20:42 < samholmes> superjoe: No. I never said that though.
20:42 < samholmes> I said only it's own processes
20:42 < samholmes> It can run on the same server just on a different port.
20:42 < superjoe> samholmes, sorry, I don't think I understand your question.
20:44 < chakrit> samholmes, what do you mean by "same model files"?
20:44 < samholmes> superjoe: I'm setting up a mobile version of my site. I decided to server the mobile app from a different port on my server. My main app serves on 8000, the mobile app will server on 8002. I'm already using bouncy to route the different ports to the different domains, so I plopped m.mydomain.com in the bouncy routes.json file and set it to port 8002.
20:44 < samholmes> superjoe: follow me so far?
20:45 < samholmes> chakrit: I have a directory in my desktop app /models. Each file in there is a module that I require() and they expose a collection of functions that operate on the database and emit events on an exposed event emitter. I use the model files throughout my app.
20:45 < superjoe> samholmes, ok I think so
20:46 < samholmes> superjoe: So, instead of speghetti-ing the mobile version of the site into a big monolithic process, I was thinking of seperating the mobile verison in it's own process for sanities sake.
20:48 < samholmes> superjoe: however, the issue is, how can I use the same model files to keep a consistent database layer abstraction and communicate to the desktop version via the event emitters and what not.
20:48 < superjoe> samholmes, you know how to write modules, correct?
20:48 < samholmes> Maybe, I could make a datacenter process that I could interface.
20:48 < samholmes> superjoe: Depends on what you mean by "modules"
20:49 < chakrit> samholmes: I think he means a proper npm module. (i.e. with its own package.json)
20:49 < samholmes> I'll just put the mobile version in it's own directory, and just ../models/ from within the mobile process.
20:49 < chakrit> then npm install it to both your desktop app and mobile app
20:49 < samholmes> chakrit: to some extent yes.
20:50 < mikrowelt> guys what fo you think about promises?
20:50 < superjoe> I never keep them
20:50 < chakrit> lol
20:51 < samholmes> then why do you make them? :\
20:51 < mikrowelt> lol )
20:51 < mikrowelt> node-promise
20:52 < samholmes> mikrowelt: is that a high level of promise then regular promise?
20:52 < superjoe> sorry, I didn't actually have anything constructive about promises
20:53 < mikrowelt> samfalkner: huh? %)
20:56 < deviantgeek> superjoe: what happened to naught? Its not in your github anymore
20:58 < chieffancypants> Anyone have much experience with jsdom?  It doesn't seem to "FetchExternalResources" for images (only scripts)
21:04 < zygote> Anyone know any JS developers who can take on some serious high performance js/jquery tasks, like data loading, performance optimizations etc. in a data rich project. Please pm me, preferably someone in LA or near Toronto. 
21:09 < superjoe> deviantgeek, I put it here: https://github.com/indabamusic/naught
21:09 < superjoe> deviantgeek, because I developed it mostly at work
21:35 < DaMorpheus_2> .
21:38 < DaMorpheuS> someone here can help me out with riak??
21:49 < rio{> I might build a site which should handle alot of image uploads and the images needs to be cropped down etc (using imagemagick I guess). How would you handle this? Would you have a separate server taking care of the manipulation?
21:51 < deviantgeek> superjoe: oh, i see... It's amazing, im using it now for my blog, any idea why it needs to be run as root to work?
21:51 < superjoe> deviantgeek, try using authbind
21:51 < superjoe> http://en.wikipedia.org/wiki/Authbind
21:52 < superjoe> you set up a couple files in /etc/authbind and then your start command looks something like `authbind --deep npm start`
21:53 < superjoe> deviantgeek, I've been thinking about how to implement setuid/setguid but I haven't thought of how to do it cleanly yet.
21:54 < superjoe> in order to do it, I need to figure out how to, using node's cluster API, reserve a port in the master process.
21:55 < Smashcat> Hi, anyone know if there's a serial port extension for node.js for Windows?
22:04 < Steve^> Hi, is nodeunit being maintained? Github seems to be full of open bugs and pull requests.. and there are some pretty glaring bugs with it
22:04 < jaha> How can I add modules to client side dynamically? id like my JS app to check if a module is installed, if so, require and run, if not, download, then require and run, id like to use something like npm but the modules will be more like javascript apps instead of node modules (node.js will server multiple "minigames" to the local browser and download them from a server if out of date or not installed)
22:06 < plato> google 'asynchronously load javascript' jaha
22:11 < jashkenas> quick question: Do y'all usually see the new npmjs.org update quickly after you push a new version?
22:12 < jashkenas> I pushed 1.4.0 to https://npmjs.org/package/underscore a few minutes ago, and it shows up on the homepage, but not here: https://npmjs.org/package/underscore
22:14 < jashkenas> oops -- there it goes. looks like maybe a 10 minute cache.
22:21 < jaha> plato: thanks! what about browserify? are you familiar with substack's lib? im thinking it could be nice and clean to let npm/node handle making sure the package is downloaded and available and then telling the JS app to "require" the new module via browserify?
22:22 < jaha> i havent played with it much yet so I apologize for any ignorance ;)
22:25 < Smashcat> Is there an alternative to serialport on node.js that works with Windows 7? the serialport extention only works with Mac/Linux apparently
22:27 < context> anyone here touched deployd ?
22:59 < ngl> Hi all. Somebody help me end my work day with success!? I made a service in node on my Centos system. But, "arguments" doesn't seem to transport "start|stop|status" from my call: service MyNodeService start
23:00 < ngl> Can anybody tell me how to determine what was passed when calling: service MyNodeService ______
23:00 < mykul> Hello.  I'm working with multipart streams trying to process some uploaded audio data and simultaneously stream the data to rackspace cloudfiles container, without storing the data on the filesystem.  I'm currently hung up trying to strip out the parts of the multipart data that aren't the mp3 file I want to pass on to cloudfiles, while still leaving the stream 'intact'.  I'm pretty new to working with
23:00 < mykul>  streams, so any help would be appreciated.
23:05 < Smashcat> Ahh! All my problems disappeared by installing node.js 32bit instead of 64bit. Guess the devs don't test on 64bit windows ;-))
23:06 < nicholasf> hi, what are peeps using for code coverage in their CI runs?
23:18 < zivester> what would make an npm package different then a github repo? https://npmjs.org/package/imagemagick and the github repo... have 3 differences in imagemagick.js that totally crashes for me
23:18 < zivester> in this case, github works, npm doesn't
23:18 < chilts> zivester: if someone uploaded to npm and then changed the GitHub repo, that means they'll be different
23:18 < chilts> they'd have to update npm again with what's in master
23:19 < zivester> whats the best way to contact them... email? file a bug on github?
23:20 < terinjokes> either?
23:21 < chilts> file a bug probably :)
23:21 < chilts> means it keeps things in the open and everyone can see what is going on
23:21  * chilts prefers bug reports to emails
23:23 < mscdex> node.js rules!
23:24 < chilts> heh
23:24 < chilts> mscdex++
23:24 < chilts> hmm, no counter here
23:26 < zivester> chilts: my only thought there is that the bug isn't actually in github... because its working there
23:29 < mscdex> zivester: tell the maintainer in the github bug report that they need to push a new version to npm ?
23:32 < chilts> zivester: yeah, it could be considered a bug that it's not on NPM :)
23:32 < chilts> gotta be careful on that one though, they might be preparing it or not too worried
23:32 < chilts> so yeah, maybe email in this case - up to you :)
--- Log closed Fri Sep 28 00:00:32 2012
