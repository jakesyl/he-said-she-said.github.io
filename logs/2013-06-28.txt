--- Log opened Fri Jun 28 00:00:04 2013
--- Day changed Fri Jun 28 2013
00:00 < sinclair|net> shesek: splice
00:00 < sinclair|net> are arrays in JS represented as linked lists?
00:01 < sdrulea> for testing restify REST API
00:08 < ckknight> sinclair|net: no, they're contiguous memory buffers or hashmaps, based on how they are used, at least in V8
00:08 < sinclair|net> ckknight: so, if i want a linked list, id need to roll it myself?
00:08 < ckknight> yes
00:08 < ckknight> not that that would be hard
00:08 < sinclair|net> right
00:09 < sinclair|net> of course not
00:09 < ckknight> function Cons(head, tail) ...
00:09 < ckknight> sinclair|net: and to answer your previous question, the only thing more inefficient that removing or adding items from the middle of an array is to do it at the front. :P
00:10 < sinclair|net> ckknight: i am doing some threejs
00:11 < ckknight> oh?
00:11 < sinclair|net> ckknight: i have a list of faces, and i need to efficiently add and remove them
00:11 < ckknight> either don't use a list or design your own list type
00:11 < ckknight> don't use an Array, I mean
00:11 < sinclair|net> ckknight: well, i have TS and Generics
00:11 < sinclair|net> class LinkedList<T> {} // ftw
00:12 < ckknight> I don't see how that's relevant
00:12 < ckknight> yep
00:12 < sinclair|net> ckknight: i can do lists, and i can use generics to type them, of course its relevant, TS pwns
00:13 < ckknight> well, it might make your coding easier, but it won't affect the resultant efficiency or anything
00:14 < sinclair|net> of course, hey, did you hear that the TS team are looking into async await ?
00:14 < sinclair|net> with generators
00:15 < ckknight> not surprising
00:15 < ckknight> it's very nice
00:15 < ckknight> I wonder how they'll do it
00:15 < ckknight> in GorillaScript, I use a state machine with a while and a switch
00:19 < neeky> git:  can I have a branch that ONLY tracks two files from master? I have an 'amazon' branch that needs to track master except for two files
00:20 < neeky> so instead of constantly having to merge and resolve conflicts since I'm in heavy development
00:22 < Technodrome> what if i have a site with 50 pages of static content
00:22 < Technodrome> how would you guys deal with this?
00:24 < disorder> hi
00:29 -!- mode/#Node.js [+o TooTallNate] by ChanServ
00:31 < breck7> Technodrome: use express and app.use('/', express.static(__dirname, { maxAge: 31557600000 }))
00:33 < breck7> i'm looking for a module that let's me read/write files in the browser via an express proxy. anyone know of any?
00:34 < breck7> like file = new File('some data'); file.save(); would send an HTTP or proxy request to a running server that would fun the fs.writeFile method on that
00:37 < joeytwiddle_> thanks shesek, i see you have gone for 'fail' as the first argument, which certainly makes sense for coffeescript, so i think i will follow suit
00:38 < shesek> joeytwiddle_, in many cases, the error callback is just the "parent callback" that you delegate errors to
00:38 < shesek> while the success callback is where most of the code is
00:39 < shesek> you can also create an `throwerr` helper, which is just `iferr.bind(null, function(e){ throw e; })`, than `readFile(path, throwerr(function(contents) { }))`
00:40 < joeytwiddle_> yes exactly.  all this if(err) { cb(err); } is obviously redundant.  i'm glad you feel the same :)
00:41 < joeytwiddle_> i may mirror the whole library to create a new library.  just iferr the last argument each time, before calling the original function
00:42 < joeytwiddle_> i wasn't sure about the argument order, but now i am :)   tailing -> ftw
00:42 < joeytwiddle_> trailing*
00:44 < xcm> :w
00:53 < Scathenc^C> hey all, can anyone explain to me how session stores work (to say eg. redis)? If I setup a redis store, does that mean req.session.variable = 'hi'; gets stored in redis? Same for read?
00:58 < sinclair|net> ckknight: you wanna know whats frustrating ?
00:58 < ckknight> all those girls in short skirts?
00:58 < sinclair|net> well, that
00:58 < Lorentz> and long jackets
00:58 < ckknight> hehe
00:58 < sinclair|net> but my npm module is like the "LAST" damn typescript project that shows up when people search typescript on npm
00:59 < ckknight> hmm
00:59 < ckknight> SEO!
00:59 < sinclair|net> ckknight: everytime i try, it drops down 1 or 2
00:59 < sinclair|net> i give up
00:59 < sinclair|net> ckknight: people still find it via google i think, its had 50 people give it a try
01:00 < sinclair|net> but on npm, i doubt anyone is visiting the second page in a search list, im preceeded by many grunt projects and 1 line hacks
01:01 < sinclair|net> ckknight: its a quality module https://npmjs.org/package/typescript.api imo
01:01 < ckknight> but it doesn't sound sexy enough
01:01 < sinclair|net> typescript.api?
01:01 < ckknight> that's how I choose my libraries
01:01 < sinclair|net> should it be typescript-api
01:01 < ckknight> yeah
01:01 < harbhub> hey is anyone familiar with Authentication on Amazon's AWS S3 service?
01:01 < ckknight> probably
01:01 < ckknight> I dunno
01:02 < sinclair|net> harbhub: yeah, its a pain generating all those tokens
01:02 < ckknight> I would have either called it 'typescriptapi' or 'typescript-api'
01:02 < upshoot> harbhub, i got it working recently.
01:02 < sinclair|net> harbhub: whatever you do, don't use knox, use awssum
01:02 < ckknight> no dots in it
01:02 < harbhub> okay please help me fellas
01:02 < upshoot> sinclair|net, why?
01:02 < harbhub> so far i am making the StringToSign
01:02 < harbhub> that was easy
01:02 < harbhub> next, i have the secretID and the accessKey
01:02 < harbhub> cool, i have those
01:02 < sinclair|net> upshoot: knox is a hack, awssum is built properly 
01:03 < harbhub> i am using crypto-js for hmacsha1 has
01:03 < harbhub> hash*
01:03 < harbhub> then using a standard base64 encode of the string value of the hash
01:03 < sinclair|net> harbhub: https://npmjs.org/package/awssum-amazon-s3
01:03 < harbhub> i need your guys help with the hashing part...
01:04 < sinclair|net> harbhub: if you want some help using it, chilts doesn't have much in the way of docs, but you can use....https://github.com/sinclairzx81/calcium/blob/master/node_modules/calcium.storage/amazon/Storage.ts
01:05 < sinclair|net> harbhub: why are you writing amazon auth?
01:05 < harbhub> so that i can send requests to my s3 server lol
01:05 < sinclair|net> harbhub: just use awssum
01:05 < harbhub> does amazon auth already exist?
01:06 < sinclair|net> harbhub: both knox and awssum will auth for you
01:06 < sinclair|net> harbhub: and give you access to your buckets
01:06  * mscdex shakes a fist at github
01:06 < harbhub> what is .ts?
01:06 < sinclair|net> its typescript, basically javascript
01:06 < sinclair|net> harbhub: npm install awssum-amazon-s3
01:07 < sinclair|net> and use that ts link i sent you as an example on how to use it
01:08 < upshoot> harbhub, also, awssum-amazon-s3 has a folder full of examples.
01:08 < harbhub> but i'm so close to making auth myself lol
01:08 < sinclair|net> harbhub: well, then you have to parse all the xml requests
01:08 < ckknight> I thought we killed off XML
01:09 < harbhub> i don't need to parse anything lol
01:09 < sinclair|net> harbhub: a lot of work, besides, awssum has modules that handle a lot of amazon cloud services
01:09 < sinclair|net> harbhub: look at all these packages, its a gold mine https://npmjs.org/search?q=awssum
01:09 < sinclair|net> plus, the author is a fello new zealander
01:10 < harbhub> lol
01:10 < Zak> then I must NOT use it... being Australian
01:10 < sinclair|net> hes gone to work for mozilla
01:10  * Zak eyes NZ neighbours suspiciously
01:10 < Zak> just kidding
01:10 < harbhub> hey guys if i have a string:   hey\nhello
01:10 < harbhub> how do i alert(string)
01:10 < harbhub> such that it shows the actual \n
01:11 < sinclair|net> Zak: new priminister aye?
01:11 < harbhub> meaning i don't want it to perform a break, i want to see hey\nhello
01:11 < Zak> sinclair|net: it's musical chairs here at the moment
01:11 < Zak> tbh, I don't really think it matters who is in power. It just gives the media something to report on and the people to argument about
01:11 < upshoot> sinclair|net, escape(string) should do the trick.
01:12 < sinclair|net> upshoot: ?
01:12 < harbhub> think he meant me
01:12 < upshoot> oops.. right that was for harbhub.
01:12  * sinclair|net wonders what he can do to get his npm project noticed
01:12 < Zak> i don't think escape is right. It will show %0A instead of \n
01:12 < upshoot> someone else is workign on escape(snowden)
01:12 < Zak> also, I think escape is technically deprecated
01:13 < ningu> how's nodeconf going?
01:13 < harbhub> upshoot so what would be the utf8 encoding of:   hey\nworld
01:13 < upshoot> I assumed you just wanted to inspect the string.
01:13 < ssafejava> oh yeah it's nodeconf day isn't it
01:13 < ningu> harbhub: eh? you mean in hex or what?
01:14 < harbhub> ningu
01:14 < harbhub> i have some string
01:14 < harbhub> hey\nworld
01:14 < harbhub> the \n is relevant of course
01:14 < upshoot> harbhub, exacpe("Hey\nworld) #=> "Hey%0Aworld"
01:14 < harbhub> i want to hash that string
01:14 < upshoot> try it in the browser console, or node command line.
01:14 < harbhub> i tried
01:15 < harbhub> i need the utf8 encoding of the string
01:15 < harbhub> what does that mean lol?
01:15 < ningu> harbhub: what form do you want it in?
01:15 < harbhub> i know what utf8 is...
01:15 < harbhub> but i need the utf8 encoding of the string
01:15 < ssafejava> harbbub are you just saying, the hasher requires utf8?
01:15 < harbhub> yep
01:15 < harbhub> Signature = Base64( HMAC-SHA1( YourSecretAccessKeyID, UTF-8-Encoding-Of( StringToSign ) ) );
01:15 < harbhub> this
01:15 < upshoot> harbhub, or just replace all your "\" with "\\" which will escape the  escape..
01:15 < ningu> it's in utf-8 already if you are using JS
01:15 < harbhub> http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html#RESTAuthenticationRequestCanonicalization
01:15 < ckknight> new Buffer(string, "utf8")
01:15 < harbhub> from here
01:16 < harbhub> will try new buffer method
01:16 < ningu> no, definitely don't escape the escape
01:16 < ssafejava> is it failing with the string as-is?
01:16 < upshoot> so "Hello\\nWorld" will resolve to "Hello\nworld'
01:16 < Zak> upshoot: that wouldn't work because the \ is already escaping
01:16 < harbhub> i have no fucking idea what amazon wants
01:16 < harbhub> they just said the above^^
01:16 < ssafejava> just send the string. I don't think you have to futz with it
01:16 < harbhub> Signature = Base64( HMAC-SHA1( YourSecretAccessKeyID, UTF-8-Encoding-Of( StringToSign ) ) );
01:17 < Zak> yeah, i don't think its a problem
01:17 < harbhub> well
01:17 < harbhub> can someone help me encode this then lol
01:17 < Zak> utf-8 encoding should be the same for ASCII below/equal to 127
01:17 < harbhub> i have a base64 encoder
01:17 < harbhub> i have the cryptojs from googlecode
01:17 < harbhub> and used the hmacsha1
01:17 < ningu> harbhub: just make a crypto object with a SHA1 hash, then create a base64 encoding of it
01:17 < ningu> in JS your string will be in unicode already
01:17 < ssafejava> harbhub: http://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm
01:18 < ningu> yes, what ssafejava said
01:18 < harbhub> var hash = CryptoJS.HmacSHA1(AWSSecretAccessKey, escape(StringToSign)).toString();
01:18 < harbhub> this is what i am trying
01:18 < harbhub> whoops
01:18 < harbhub> without the escape lol
01:18 < harbhub> var hash = CryptoJS.HmacSHA1(AWSSecretAccessKey, StringToSign).toString();
01:18 < harbhub> this
01:18 < ningu> harbhub: ok and does that make it base64? that's what amazon wants.
01:19 < harbhub> after i make it base64.encode(hash)
01:19 < ningu> if toString() outputs in that format it should be fine
01:19 < ssafejava> you could also use crypto.createHash('sha1').update(AWSSecretAccessKey+StringToSign).digest('base64')
01:19 < upshoot> harbhub, will this library help? http://www.arbitrarytech.com/2013/03/nodejs-library-for-client-side-uploads.html
01:19 < harbhub> <script src="http://crypto-js.googlecode.com/svn/tags/3.1.2/build/rollups/hmac-sha1.js"></script>
01:19 < harbhub> that is the lib i am using
01:19 < ssafejava> harbhub: oh so this is client-side
01:19 < ssafejava> ?
01:20 < jesusabdullah> harbhub: .toString('base64')
01:20 < harbhub> yep client side
01:20 < harbhub> just pure js
01:20 < jesusabdullah> o.
01:20 < ningu> all of this depends on the methods defined by this library
01:20 < jesusabdullah> o.
01:21 < ningu> I don't know why he's asking us, it isn't really a node question
01:21 < ssafejava> oh. well that makes a difference, we figured this was node
01:21 < harbhub> well
01:21 < harbhub> okay it is node
01:21 < harbhub> but i was just making a javascript file
01:21 < ningu> node does not run in the browser
01:21 < harbhub> that was arbitrary for now
01:21 < ningu> harbhub: you aren't making any sense
01:21 < Zak> it sounds like harbhub's problem isn;'t related to whether its running SS or client-side
01:21 < harbhub> right
01:22 < ssafejava> you can't just create code, run it in a browser, then move it over to node. well.. not in that way anyway
01:22 < Zak> so let's not focus on whether its running in node or not
01:22 < ssafejava> Zak: sure, but it changes how, for instance, he creates the hash
01:22 < ssafejava> which is his entire question
01:22 < harbhub> why?
01:22 < ningu> exactly
01:22 < harbhub> i have a string
01:22 < durango> do domains take up a lot of resources?
01:22 < harbhub> utf8
01:22 < ssafejava> because you either use node-crypto
01:22 < ssafejava> or you use google's lib
01:22 < ningu> harbhub: because node.js has its own api for doing this
01:22 < harbhub> and i want to encode it was base64(hmacsha1(token, string)
01:22 < harbhub> ningu, how would you do it in node?
01:22 < ssafejava> durango: I use them, they're not terrible, but the api sucks. it's worth getting running but it's going to take some fiddling
01:22 < ningu> harbhub: several people above said how
01:22 < ssafejava> harbhub: see my message above. I gave you the code
01:22 < harbhub> okay
01:22 < astropirate> Hello friends
01:22 < harbhub> checking
01:23 < durango> ssafejava: i actually picked up on domains quite well and quickly O_o why does the api suck?
01:23 < ssafejava> durango: Oh it just has some gotchas is all. You need to read the source IMO to really understand what it does and how to use it properly
01:23 < ningu> well in Indonesian api means "fire", maybe it's too high temperature
01:23 < ssafejava> durango: for instance, I use it via middleware to catch errors on any http request and forward them up to the cluster master
01:23 < ssafejava> so that takes some fiddling
01:24 < ningu> on the plus side, fiddle music is cool
01:25 < harbhub> ssafejava, will your code make an hmac-sha1 hash?
01:26 < ssafejava> harbhub: just use createHmac then with sha1
01:27 < harbhub> guys, nodejs is too powerful....
01:27 < harbhub> :)
01:27  * astropirate smacks harbhub over the head
01:27 < astropirate> sshh don't tell people
01:27 < astropirate> they can't handle it
01:31 < upshoot> harbhub, try: crypto.createHmac('sha1', options.secret).update(new Buffer(options.message, 'utf-8')).digest('base64');
01:31 < harbhub> trying
01:31 < upshoot> with options.secret and options.message set.
01:32 < durango> ssafejava: yeah but i didnt need the source code to understand that u should be catching on the requests and not the entire app :P
01:32 < upshoot> harbhub, note that "crypto" is the node crypto library, so not going to work in the browser "out of the box"
01:32 < harbhub> that's fine
01:33 < harbhub> trying
01:33 < harbhub> hmm not working for me
01:34 < upshoot> put a gist somewhere with your code.
01:35 < Zak> did you guys hear?
01:35 < Zak> nodejs is joining the avengers
01:35 < upshoot> you mean the avengers theme song?
01:35 < Lorentz> not the justice league?
01:35 < Zak> no. I mean that they're actually making nodejs another hero in the avengers
01:35 < ssafejava> it's too powerful for the avengers
01:36 < ssafejava> and it doesn't cry enough
01:36 < Zak> actually, i think Lorentz is correct. nodejs is joining the justice league
01:36 < upshoot> With great power ...
01:37 < Zak> ... requires lots of CPUs
01:41 < harbhub> https://gist.github.com/harbhub/cc94e4bba4846f55cd06
01:41 < harbhub> there is the gist fellas
01:41 < astropirate> whos awesome?
01:41 < JNedved> so...any Node.js bods in Australia looking for a contract onsite in Sydney? http://www.seek.com.au/job/24738791 
01:41 < harbhub> upshoot^
01:49 < sstainsby> JNedved - that job looks great .. pity I'm ins Bris, oh, and run my own consultancy which has just become super-busy with the election coming up :-/
01:52 < upshoot> harbhub, I am looking through the docs here: http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html  to see if anything jumps out.
01:52 < harbhub> that is what i'm looking at, too
01:52 < harbhub> http://kitcarrau.tumblr.com/post/12841485836/amazon-s3-signed-urls-with-nodejs
01:52 < harbhub> i'm testing this guys solution
01:55 < harbhub> got it working!!!!!!!!!!!
01:55 < harbhub> damn it man i love nodejs, you all, and finally getting the solution
01:55 < upshoot> Looks very close to what you were doing.  Did you find your error?
01:55 < harbhub> nope
01:55 < harbhub> just tried it again in a blank file
01:56 < harbhub> and did it right apparently...
01:56 < harbhub> hate when i'm so close and it doesn't work lol
01:56 < upshoot> Nifty.  It allows you to share a file with a time limit .
01:56 < harbhub> s3 is pretty sweet it seems
01:56 < harbhub> be careful if you get the free tier because they will charge you if you go over your limits
01:56 < harbhub> with no warning  o.0
01:57 < ssafejava> sydney seems nice. too bad it's so far
01:57 < ssafejava> harbhub: yeah they will but s3 is cheap as hell. unless your service suddenly hits reddit
01:57 < ssafejava> I run hourly backups of my dev machine with Arq to S3 and it averages $2/mo
01:57 < harbhub> well ssafejava
01:57 < ChrisPartridge> s3 is great, apart from content-length being required 
01:57 < harbhub> lol content length in node is easy though
01:58 < harbhub> guys i love you all
01:58 < harbhub> remember that
01:58 < ChrisPartridge> harbhub: i'm more referring to the fact that I cant pipe through tar, gzip, gpg straight to s3
01:58 < ssafejava> yeah exactly
01:59 < ssafejava> now that I've spent a ton of time with streams (thanks substack & stream-adventure)... wishing for that feature
01:59 < ChrisPartridge> they have their MPU feature, which isn't too bad
01:59 < ChrisPartridge> but you still need to store >5mb chunks in memory
01:59 < astropirate> work son!
02:01 < harbhub> https://gist.github.com/harbhub/1d39db88921b6b5016f0
02:01 < harbhub> in case anyone wants the solution
02:19 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:27 < durango> Does anyone have a clue as to why https://gist.github.com/durango/c22693e5029e22815973 this keeps on happening?
02:33 < pink_> Hello
02:40 < Zak> durango: take it up with the owner of the rmdir package
02:40 < durango> Zak: this didnt happen before
02:40 < durango> and im pretty sure its my end but let me verify
02:40 < Zak> https://github.com/dreamerslab/node.rmdir/issues
02:41 < harbhub> has anyone been able to make the querystring requests for AWS S3 work?
02:41 < harbhub> i can generate a signature given the stringToSign, but now making the querystring request isn't working...
02:41 < harbhub> probably something trival
02:43 < ChrisPartridge> harbhub: getting a specific error?
02:43 < harbhub> access denied lol
02:43 < ChrisPartridge> harbhub: is it a new bucket? setup the proper acls?
02:44 < harbhub> what is acls?
02:44 < harbhub> i have my access key and secret key
02:45 < Zak> durango: my suggestion would be to blow away your node_modules directories (global too) and try again
02:45 < harbhub> GET\n\n\n1372386889\n/harbachi/test.html is my string
02:45 < durango> Zak: i think i figured it out
02:45 < Zak> also, if you're not already doing so... make sure you link to specific versions of dependencies
02:45 < durango> had nvm uninstalled but still sourced with it's npm
02:45 < ChrisPartridge> harbhub: access control.. can that key/secret read from the bucket?
02:45 < Zak> durango: sweet. awesome
02:46 < harbhub> chris, how can i test that?
02:46 < harbhub> i have the active key/secret
02:46 < ChrisPartridge> harbhub: perhaps write a test script with the knox lib? get one of the many "GUI" s3 browsers
02:46 < ChrisPartridge> plenty of options
02:47 < ChrisPartridge> however, i'm assuming you've uploaded files with that secret/key to the bucket? or did you do it through their web interface?
02:47 < harbhub> web interface
02:47 < harbhub> and just made permissions on the file
02:47 < harbhub> so that only i can access it
02:48 < ChrisPartridge> harbhub: perhaps try writing a simple script with knox, to get the file - see if that works, otherwise you are either signing the URL incorrectly, or don't have a readable ACL/policy for the bucket/file
03:00 < harbhub> chrispartidge... knox works lol
03:03 < vrlogrs> hey guys ..
03:04 < vrlogrs> could someone please direct me to an example with child_process.exec that cleanly exits the child?
03:04 < vrlogrs> im using it, and i think i have a memory leak because of it
03:04 < vrlogrs> maybe im not exiting properly or somethin
03:04 < jesusabdullah> cleanly exits the child?
03:04 < jesusabdullah> the child should exit on its own?
03:05 < vrlogrs> but, perhaps its not for me :S
03:05 < vrlogrs> im not sure
03:05 < jesusabdullah> child.on('exit', function (code) { console.log('this sumbitch exited with code ' + code); });
03:05 < jesusabdullah> and Elvis leaves the building
03:05 < vrlogrs> i have a memory leak, and ive pretty much narroed it down to it
03:05 < jesusabdullah> mailing list maybe
03:05 < Zak> when you say memory leak, how are you measuring this?
03:06 < jesusabdullah> be like, "guys memory leak near/around child proccor, here's code, am I crazy [y/N]"
03:06 < vrlogrs> the node process overtime is consuming more and more memory
03:06 < Zak> right
03:06 < vrlogrs> without the exec, there's no leak
03:06 < jesusabdullah> basically vrlogrs the more information you can share, the better
03:06 < vrlogrs> hmm
03:06 < jesusabdullah> vrlogrs: but yeah I'd mailing list that shit
03:06 < vrlogrs> i could share the code, but it might be a bit complicated ..
03:07 < jesusabdullah> vrlogrs: in that case, reproducing case
03:07 < jesusabdullah> vrlogrs: if you can repro then you're g2g
03:07 < jesusabdullah> vrlogrs: no internal code, etc.
03:07 < vrlogrs> let me try pastebinning it .. give me 1 min
03:07 < jesusabdullah> oh man I wish 211 came in 6 packs
03:07 < jesusabdullah> lol
03:07 < jesusabdullah> this shit is so gross
03:08 < Zak> vrlogrs: http://nodejs.org/api/child_process.html (read the last couple of paragraphs)
03:08 < ChrisPartridge> vrlogrs: what are you doing with the child process? whats it running?
03:08 < Zak> not sure if this is applicable to you
03:08 < vrlogrs> http://pastebin.com/qwxNZK9Z
03:08 < vrlogrs> im running a c program
03:08 < vrlogrs> with the exec
03:08 < vrlogrs> and it outputs some stuff
03:09 < monokrome> I'm trying to spy() on calling new on an object using SinonJS, but I am not sure if I am doing it right
03:09 < monokrome> Shouldn't I be able to just @spy(myLibrary, "ObjectName")
03:09 < monokrome> ?
03:09 < monokrome> this.spy(jQuery, "ajax")
03:09 < monokrome> for instance
03:09 < monokrome> (inside of a sinon.test)
03:10 < Zak> vrlogrs: http://comments.gmane.org/gmane.comp.lang.javascript.nodejs/39289
03:10 < Zak> might be relevant
03:12 < teadict> what's a spy in testing?
03:12 < neeky> anybody using: http://www.node-console.com/script/code
03:13 < teadict> sounds interesting
03:13 < prettyrobots> Hello.
03:13 < jorb> jesusabdullah: try it with OJ
03:13 < vrlogrs> i dont think it is Zak :S
03:13 < ChrisPartridge> harbhub: so it must be your signing?
03:13 < neeky> jesusabdullah, what is 211?  I saw you reference that last night too.
03:14 < jorb> steel reserve 
03:14 < jorb> quite disgusting
03:14 < ChrisPartridge> jesusabdullah: i saw an image yesterday, it made me think of you - i'll have to find it
03:14 < neeky> Oh god, that stuff is bad
03:14 < jesusabdullah> neeky: 40oz "high-grav" beer for like 4 bucks, even in Alaska
03:14 < jesusabdullah> 10 cents an ounce
03:15 < jesusabdullah> I dare you to beat that (in Alaska)
03:15 < jesusabdullah> in California I bet these things are $0.99 apiece
03:15 < neeky> i bought some to cook with and tried one.  it's the only beer ive ever pored down the drain
03:15 < jesusabdullah> but hey I have to be frugal
03:15 < ChrisPartridge> jesusabdullah: http://24.media.tumblr.com/tumblr_lvhzsa5jzp1qzexzto1_500.jpg
03:15 < jorb> for a 40z i think its pretty good
03:15 < vrlogrs> any ideas guys? :(
03:15 < jesusabdullah> also, drug testing (please don't make the obvious conclusion *fingers crossed*)
03:15 < neeky> weed is frugal - if you're not awaiting a piss test ;)
03:16 < jesusabdullah> ChrisPartridge: ahahaha
03:16 < jesusabdullah> yeah well
03:16 < jesusabdullah> walmawt is a megacorp
03:16 < Zak> http://www.urbandictionary.com/define.php?term=211&defid=1261834
03:16 < jesusabdullah> it would be unfair to not piss test their developers
03:16 < neeky> also, nobody tests for shrooms
03:16 < jesusabdullah> ChrisPartridge: you on twitter?
03:17 < jesusabdullah> I'll give you props
03:17 < ChrisPartridge> jesusabdullah: I am, I think, don't really do the whole social media thing ;p
03:17 < jesusabdullah> aha
03:17 < Zak> http://www.youtube.com/watch?v=DLTYwDTxxCw (relevant to drug testing)
03:17 < neeky> I worked for a large (10k employees) company that had 0 drug testing policy, becasue they would have 0 developers
03:17 < ningu> I only give props to theater actors
03:17 < jesusabdullah> neeky: lol inorite
03:17 < jesusabdullah> neeky: yet here we are
03:17 < jesusabdullah> neeky: also 211 is extremely cheap
03:17 < ChrisPartridge> ningu: haha
03:18 < jesusabdullah> ahahaha
03:18 < ChrisPartridge> whats with the name, 211?
03:18 < jesusabdullah> "they didn't bother testing the software developers *pffsht gtfo*"
03:18 < neeky> Steel Reserve
03:18 < jesusabdullah> ChrisPartridge: apparently it's a reference to FUCKIN' METAL
03:19 < neeky> http://www.thebeveragestore.com/media/catalog/product/cache/1/image/500x500/9df78eab33525d08d6e5fb8d27136e95/s/t/steel-reserve-can_1.jpg
03:19 < ChrisPartridge> ahhh
03:19 < Zak> that looks nasty
03:19 < neeky> It's Like Samuel Jackson Beer: "IT'LL GET YOU DRUNK!"
03:19 < jesusabdullah> that's cause it is
03:19 < ChrisPartridge> "The Steel Reserve logo is a stylized number 211, which aside from being an ancient symbol for steel, is also the penal code # for armed robbery. It’s likely that steel reserve has been the inspiration for many a convenience store jacking"
03:19 < jesusabdullah> liquored up
03:19 < ChrisPartridge> urban dictionary ftw
03:19 < Zak> neeky: reminds me of this in AU http://www.maxwellshouse.co.uk/unclejack/images/JD%20Coke%20Can%2010.jpg
03:20 < ningu> why is there no suburban dictionary>
03:20 < ningu> ?
03:20 < neeky> Ive had one of those - they sucked
03:21 < neeky> I've now been using nothing but Vim for 3 weeks - I think I'm converted.
03:22 < ningu> I'm too used to doing things like selecting text and changing indentation
03:22 < ningu> maybe should just use gvim
03:22 < ningu> also I like how textmate/sublime give you a view of a whole dir
03:22 < ningu> or search/replace for a whole dir
03:24 < harbhub> chrispartridge, you there?
03:24 < harbhub> it was my signing
03:24 < harbhub> i fixed it and it works now
03:24 < harbhub> but, i blame amazon
03:24 < harbhub> for their shitty docs
03:25 < neeky> ningu, :Sex - Split the window, and show and Explorer
03:25 < harbhub> for querystring you have to use /bucketname/path/to/whatever in calculating the signature
03:25 < harbhub> but them in the url for the actual querystring request you do not include the bucketname
03:25 < harbhub> it is...how you say... dumb lol
03:25 < neeky> or :Vex, vertical split the window, and show an explorer
03:25 < harbhub> anyways it works now chrispartridge
03:25 < ningu> ok
03:25 < ChrisPartridge> harbhub: excellent!
03:25 < harbhub> :)
03:26 < harbhub> if only amazon had less shitty docs lol
03:26 < harbhub> i'm not dumb, it is the docs!!!
03:26 < harbhub> but yes i'm happy  :)
03:26 < harbhub> thanks for pushing me through the painful process lol
03:26 < neeky> harbhub, I ranted on here a few nights ago about Amazon Elastic Beanstalk
03:26 < neeky> and the horrible docs
03:26 < harbhub> yeah fuck amazon
03:26 < neeky> and almost 0 support
03:26 < ningu> what exactly does it do anyway?
03:26 < Lorentz> what do you think it does?
03:26 < ningu> the name is not exactly helpful
03:26 < neeky> what, EB?
03:26 < Lorentz> because that's what amazon will tell you
03:27 < harbhub> lol lorentz
03:27 < harbhub> amazon has gone full-retard...
03:27 < harbhub> never go full retard heh
03:27 < neeky> The *concept* of elastic beanstalk is brilliant
03:27 < ningu> I thought it was just a deployment aid
03:27 < ningu> or something
03:27 < neeky> their execution of it BLOWS
03:27 < harbhub> what is the concept?
03:27 < ningu> but it seems to have a lot of parts
03:27 < harbhub> i will make it in nodejs
03:27 < harbhub> what is the concept
03:27 < harbhub> what is an elastic beanstalk
03:28 < neeky> well, here's the skinny on EB from a node.js POV:
03:28 < vrlogrs> ok, child is exiting properly :(
03:28 < vrlogrs> anyone have any ideas what else it could be then?
03:28 < metaljello> wait a second wat, they didn't bother testing the devs because they'd all fail or because they'd obviously all pass?
03:28 < neeky> EB is nothing more than EC2 VMs, but with an elastic load balancer in front, and Route 53 DNS tied to it
03:28 < metaljello> piss test^
03:28 < vrlogrs> http://pastebin.com/qwxNZK9Z
03:29 < harbhub> i.e. i don't need eb lol
03:29 < harbhub> i'll stick to my stack
03:29 < neeky> so, I'm here on my Dev box, and after testing, git commit/git push,
03:29 < harbhub> i will use s3 though  :)
03:29 < ChrisPartridge> harbhub: maybe you could submit a PR to knox, might be a handy feature
03:29 < harbhub> i wrote an issue on know
03:29 < harbhub> i can give them my code if they want
03:29 < harbhub> my code is... so simple and elegant
03:29 < harbhub> not sure they can handle it
03:29 < harbhub> heh jk
03:30 < ChrisPartridge> harbhub: perhaps gist the code and put it in the issue
03:30 < neeky> then I do a Git aws.push, and it builds a complete node environment. pulls my app, installs dependencies, sets up nginx, adds SSL, creates a load balancer, all in about 5 mins
03:30 < harbhub> well
03:30 < harbhub> knox is irrelevant
03:30 < harbhub> i would just make my own repo
03:30 < neeky> then, I can branch my code, do an "eb branch" and POOOF it builds another totaly separate environmrnt for the new branch
03:30 < mikolalysenko> man I love madison's community radio:  http://www.wortfm.org/
03:31 < harbhub> knox could then, if desired, pull my code and do with it what they please heh
03:31 < cdose1> has anyone here run a socket.io app through a unix socket and an nginx proxy?  my socket objects are missing the "handshake" key when done this way, but not when proxying to a port.
03:31 < neeky> ansd to set monitoring checks, where it auto scales when needed, and scales back when not
03:32 < neeky> the premise is GREAT, but if anything goes wrong, you are left with a black box and nobody to help you
03:32 < ningu> cdose1: what version of nginx?
03:32 < ningu> nginx 1.4 adds support for websocket proxying
03:32 < neeky> so, EB is cool, and cheap, but docs suck and support is non-existent
03:32 < cdose1> ningu: yeah, running 1.4.1 with the correct configuration.  like I said, works fine when running node on a port and parodying to it
03:33 < cdose1> just have a problem when running node on a unix socket and parodying to it
03:33 < ningu> oh, I see
03:33 < ningu> I've only ever run node on a port so I dunno
03:33 < cdose1> proxying*
03:33 < ningu> heh :)
03:34 < cdose1> yeah i don't understand why it would be different.  hmmmm
03:52 < hichaelmart> Hi all - question about streams - just to add to the many out there already... Is there any sanctioned mechanism for a readable stream to know to stop emitting data, based on whatever's consuming it?
03:53 < hichaelmart> So, a simple example - you have a readable stream coming from some source - and you pipe it to another stream that only wants to consume a certain amount, say 1kb - is there a way for the first stream to know to stop emitting?
03:54 < hichaelmart> From what I've seen from digging into the node.js source - streams such as in fs need to be instantiated with a start/end in the first place if you want this behaviour
03:55 < hichaelmart> Which makes it harder to compose them...
03:57 < hichaelmart> Another, more realistic example (and the one I want it for): you're writing a module to wrap an API - that API allows you to fetch data based on pages - you want to expose a readable stream interface, but you want to stop reading (ie, querying for more pages) when the consumer(s) has stopped consuming
04:00 < hichaelmart> It would be much more composable for the destination to signal to stop paging, rather than needing to know up front how many pages you want to fetch
04:01 < hichaelmart> eg, myDbStream.pipe(someFilterStream).pipe(someLimitStream)
04:01 < Zolmeister> how do you stop consuming?
04:02 < Technodrome> even microsoft supports node.js heavily 
04:03 < hichaelmart> I guess there's a few ways to signal that you've stopped consuming - and I'm not sure which would be best
04:03 < hichaelmart> one would be to remove the event listener altogether
04:03 < hichaelmart> the other would be to just end the write stream at the end of the pipe
04:03 < hichaelmart> it may be that catching EPIPE is the answer to this question
04:04 < Zolmeister> http://nodejs.org/api/stream.html#stream_event_unpipe
04:04 < hichaelmart> so that's emitted on the write stream
04:05 < Zolmeister> yes, and to stop consuming, you unpipe
04:05 < hichaelmart> you unpipe on the read stream though
04:05 < hichaelmart> ie, you call the `unpipe()` method on the read stream
04:05 < Zolmeister> yes
04:05 < hichaelmart> does that then make its way up the pipe to the source?
04:06 < Zolmeister> seems like thats what it says, I haven't tried it
04:07 < hichaelmart> any idea if that is done automatically when you just end the write stream?
04:07 < hichaelmart> ie, in my example before - if someLimitStream has consumed all it needs to and just ends
04:08 < Zolmeister> a consumer can't just 'end'
04:09 < Zolmeister> it can stop consuming for an infinite amount of time
04:09 < Zolmeister> not consume*
04:10 < hichaelmart> yep, gotcha - alrighty, I'll play around with unpipe - cheers!
04:12 < neeky> is there a built in node debug output function that looks at some process.env to know whether to output or not?
04:12 < neeky> like util.debug(string)?
04:13 < neeky> I'd like to pepper debug statements throughout my routes, and not have to clean them up for production
04:15 < zivester> anyone know of a module that can take an html file (with html + css) and output itself with ids/classes removed, with all CSS inlined (similar to what http://premailer.dialect.ca/ does)
04:20 < hichaelmart> Zolmeister: I'm not entirely sure how the limit stream is supposed to even know if it's attached to a pipe
04:21 < hichaelmart> Zolmeister: nor how it knows which readable to call unpipe on
04:30 < Technodrome> how to deal with static content i node.js?
04:36 < Havvy> Technodrome: Use the Express Static Middleware or if you are using nginx, use nginx's static directives.
04:36 < Technodrome> not static files
04:37 < Technodrome> just static body content
04:37 < Technodrome>  content pages
04:37 < neeky> Technodrome, do these files exist on disk ?
04:37 < Technodrome> its not files
04:37 < Technodrome> say for instance a hospital website 
04:37 < Technodrome> most of the content is static 
04:38 < neeky> well we're taling about templates then
04:38 < Technodrome> sure template content 
04:38 < neeky> so they *are* files on disk, but as templates
04:38 < neeky> ?
04:38 < neeky> Express has a view engine
04:39 < neeky> that allows you to apply layout templates with dynamic sontent
04:39 < neeky> IMO jade sucks ass, but it is wildly popular, so there's that, and my opinion doesnt carry too much weight
04:40 < Technodrome> yeah i got that
04:40 < Technodrome> i meant the routes part
04:40 < Technodrome> i got 50 or so url's i need to map 
04:40 < neeky> I find Handlebars, particularly the hogan variety to be just lovely
04:40 < neeky> oooh
04:40 < neeky> are the urls not dynamic?
04:41 < neeky> express has wildcard routing
04:41 < Technodrome> somehospital.com/patient-care
04:41 < neeky> right
04:41 < Technodrome> then /pregnancy 
04:41 < Technodrome> the urls won't change much, only new ones added
04:42 < neeky> and when someone requests /pregnancy, where do you find the static content for pregnancy?
04:42 < neeky> is that the question?
04:43 < neeky> so, if it were me, id have a route that's just a regex
04:44 < neeky> and with that regex, you go look for a matching .json or .jade file, and compile it with the layout template, and serve it up
04:44 < Technodrome> neeky: it would be on a template
04:44 < neeky> thats one way
04:44 < Technodrome> but i don't want to create 50 routes
04:45 < neeky> but the content files doesn't contain layout info does it?
04:45 < neeky> you dont have to
04:45 < neeky> use a reg-ex
04:46 < neeky> I suck at regex, but something like: app.get('/^(*)$', function (req, res) { res.render(regex match, template); }
04:47 < neeky> so any word they put in, you take the matched set which is everything from / to the end
04:47 < neeky> and look for that file, and apply the layout using express.render
04:48 < neeky> and choose one of a hundre view engines
04:48 < neeky> like hogan, handlebars, theres even a javascript template language jqs, jade, etc
04:49 < neeky> does that make any sense?
04:49 < neeky> you can even have a static file that conatins nothing but navigation items
04:49 < neeky> but you are now rapidly heading towards a CMS
04:50 < neeky> install express, then create a folder, cd to that folder, and simply type express
04:51 < neeky> it will walk you through building the exact app you just described, using the jade template language
04:51 < neeky> then come up with a nifty route scheme, and you got a stew going 
04:52 < neeky> you could drive an entire website from a singlr json file if you wanted
04:56 < ChrisPartridge> neeky: was that a sneaky AD reference? :p
04:56 < neeky> which one?
04:57 < ChrisPartridge> "got a stew going"
04:57 < neeky> :)
04:57 < neeky> Carl Weathers, mr frugal
04:57 < ChrisPartridge> http://cdn.uproxx.com/wp-content/uploads/2012/10/stew-going.jpg
04:57 < ChrisPartridge> haha
04:57 < pkbot> hi pkbot , if few people are active in chat we'll be doin giveaways every 30min+! Type "dice" to have a chance to win a prize. Type " !ss " to check on your SCOOBIE SNACKS
04:58 < pkbot> anyone available for 90 seconds of simple help?
04:58  * neeky is confused
05:00 < pkbot> neeky
05:00 < pkbot> its pretty embarassing though
05:00 < neeky> we've all been there
05:00 < pkbot> ive spent past 3 hours
05:00 < pkbot> trying to figure out why i cant get my .js running from my pc
05:00 < neeky> is your penis stuck in your zipper?
05:00 < pkbot> :[
05:01 < neeky> ok, can you hastebin some code to look at?
05:01 < pkbot> its extensive 
05:01 < pkbot> https://github.com/SupremoRTD/LoyaltyBot
05:01 < pkbot> simpler for you than for me
05:01 < neeky> how about just the errors
05:01 < pkbot> however only error i get is pretty noob
05:01 < pkbot> Windows Script Host
05:01 < pkbot> line 1 char 1 object expected
05:02 < pkbot> 800A138F
05:02 < pkbot> source: microsoft jscript runtime error ~_~
05:02 < ChrisPartridge> er, run it with node
05:02 < neeky> is this a node.js app?
05:02 < pkbot> i tried
05:02 < ChrisPartridge> not whatever MS is trying to run it with
05:03 < neeky> do you have node installed?
05:03 < pkbot> i tried putting it in a .html and just seeing if anything would run nothing on chrome firefox or iexplorer
05:03 < pkbot> yes
05:03 < neeky> ok, back up
05:03 < pkbot> tried to run thru command prompt and failed :[
05:03 < ChrisPartridge> what did you type in command prompt?
05:03 < neeky> node javascript is not browser javascript
05:03 < pkbot> neeky could you take a peek at any oif that stuff and see if its "browser javascript" or written with nodejavascript
05:04 < pkbot> it seems im missing ONE key step, all the code is there and will work but i cant figure out what im doing
05:04 < pkbot> wronmg that is*
05:04 < gkatsev> javascript is javascript. Regardless if it runs in node or a browser.
05:04 < ChrisPartridge> pkbot: it is a node module
05:04 < ChrisPartridge> what command are you typing in command prompt?
05:04 < neeky> so that code isn't yours, you are just trying to get ti tti run?
05:05 < neeky> gkatsev, var loyaltybot = require('./../lib/initialize.js');
05:05 < pkbot> isn't my code, but has been proven error free
05:05 < neeky> thats not going to get very far in a browser
05:05 < pkbot> i cant even tell you, ive tried so much in node command prompt and reg prompt
05:05 < gkatsev> neeky: it's still all javascript. Just different libs. Also, that "works" in the browser with the right lib.
05:05 < pkbot> spent too many hours trying too many things that im all worked up
05:05 < ningu> pkbot: if you can't tell us what the error is we really can't help you
05:06 < pkbot> i already did
05:06 < pkbot> :[
05:06 < ningu> oh, you did, sorry.
05:06 < neeky> right, but the point is this is node.js server code, and this guy wants to get it running
05:06 < ChrisPartridge> pkbot: what command are you running, in the command prompt...... 
05:06 < pkbot> reg prompt, node prompt
05:06 < pkbot> i tried just running from file path
05:06 < gkatsev> neeky: everything that node provides is basically an API.
05:06 < pkbot> i think i tried run or exec
05:06 < ningu> windows script host? that doesn't sound like a node error.
05:06 < pkbot> thats what happens when i double click it / try to run from cmd prompt
05:06 < neeky> pkbot, slow down man
05:06 < ChrisPartridge> it's not, it's windows trying to execute it..
05:06 < ningu> double click what?
05:07 < neeky> stop double clicking .js files
05:07 < ningu> pkbot: you need to cd into the directory it's in, whatever it is, and do node foo.js
05:07 < pkbot> :{
05:07 < pkbot> let me try again
05:07 < neeky> pkbot, do you know what a windows command prompt is?
05:07 < pkbot> sec
05:07 < neeky> you can't do this from windows exploerer very well, at least not yet
05:07 < pkbot> let me see how far i get
05:07 < pkbot> also
05:08 < pkbot> id like to thgank you guys for talking to me
05:08 < pkbot> im in a desperate state
05:08 < pkbot> you dont understand
05:08 < neeky> a loyaltybot chat bot doesnt sound liek the end of the world :)
05:08 < ningu> haha
05:08 < pkbot> in my scenario
05:08 < ChrisPartridge> especially for twitchtv
05:08 < pkbot> you dont want to know
05:08 < pkbot> someone tried to charge me 50$
05:09 < pkbot> to "run" one for me 
05:09 < neeky> BUT if you're doing tyhis for an elance customer and are way over your head, I expect a cut
05:09 < pkbot> and asked for the donation to buy a box
05:09 < pkbot> then i found out he was trying to sell me public work
05:09 < pkbot> coincidentally at the same time
05:09 < ningu> I can get a box from staples for less than $50
05:09 < pkbot> but i tried writing my own irc script similar to this and failed for 3 days
05:09 < neeky> ok, well lets get on with this
05:09 < neeky> do ytou have a command prompt open?
05:10 < pkbot> yes
05:10 < pkbot> node ran it
05:10 < pkbot> i dont understand
05:10 < Technodrome> neeky: the whole content thing has always been a soft point for the whole application logic routing 
05:10 < ningu> node runs a command prompt?
05:10 < pkbot> sec
05:10 < neeky> and what did it say?
05:10 < pkbot> should i do this in REGULAR cmd prompt
05:10 < pkbot> or node command prompt
05:10 < passcod> regular
05:10 < ningu> regular command prompt
05:10 < neeky> regular
05:10 < neeky> the node command prompt is for testing stuff
05:10 < ChrisPartridge> and type "cd C:\Path\to\files"
05:11 < ningu> pkbot: you can right click a directory in windows explorer and choose properties to find the path to it
05:11 < ningu> I just learned that today
05:11 < ningu> or rather, was reminded of it for this particular situation
05:11 < ningu> it's frustrating dealing with people who have files they don't know the path to :P
05:11 < neeky> ningu, theres areg hack to add a "command prompt here" shortcut to that menu too
05:12 < ningu> oh, cool
05:12 < neeky> ok pkbot, where you at?
05:12 < ningu> on OS X I just drag the folder to the terminal window to put in the path if I'm being lazy
05:13 < ningu> he's at the intersection of peb and cak
05:13 < ChrisPartridge> hah
05:13 < neeky> pkbot, I'm loking at this project on github
05:13 < ningu> I shouldn't be mean, sorry
05:13 < neeky> it's bizarre
05:13 < pkbot> :o
05:13 < neeky> the organization of the project is dumb
05:14 < pkbot> it works though man
05:14 < pkbot> and noone will do this for free
05:14 < neeky> who says I am going to do this for free?
05:15 < neeky> you're not a node develoer, you're a user trying to set up a chat bot
05:15 < neeky> to scam people
05:15 < neeky> i have moxed emotions about this
05:15 < neeky> mixed
05:15 < ningu> neeky: is that a hunch or do you have evidence he's out to scam peopl?
05:15 < ningu> not that I have any position myself just wondering
05:16 < ningu> I came in a bit late to this
05:16 < pkbot> lol..
05:16 < pkbot> im trying to set this up for my stream bud
05:16 < ChrisPartridge> neeky: I'm pretty sure he said someone else tried to charge him to set it up
05:16 < pkbot> no
05:16 < pkbot> someone tried to charge ME for this exact script
05:16 < neeky> right, becuase it
05:16 < pkbot> i thought i was paying for the guys work and time
05:16 < pkbot> and someone else who used this poitned me to it at same time
05:17 < neeky> is a very advanced script
05:17 < pkbot> im going to take a 5min break
05:17 < jyp> ㅋㅋㅋㅋㅋ
05:17 < neeky> you were paying him for the labor of installing and configuring it
05:17 < jyp> oops
05:17 < pkbot> cause ive been so fucking stressed -_-
05:17 < pkbot> no man
05:17 < pkbot> i was going to pay for someone running this on their pc
05:17 < neeky> but you are now here trying to get it for free
05:17 < pkbot> claiming they wrote it.
05:17 < pkbot> no neeky
05:17 < pkbot> the shit is already free
05:17 < pkbot> didnt you notice i linked you to a PUBLIC downloadable script?
05:17 < neeky> ok, well, there a re a TON of prerequisites on that github readme
05:18 < neeky> have you done all of them?
05:18 < pkbot> point one out
05:18 < pkbot> oh
05:18 < pkbot> ofc D:
05:18 < pkbot> problem was when i did node xxx.js the first time
05:18 < pkbot> it DID not run
05:18 < pkbot> and i completelygave up
05:18 < neeky> setup a database,or google spreadsheet, etc?
05:18 < pkbot> yup
05:18 < pkbot> now i just need to node the mysql server
05:18 < pkbot> hey man
05:18 < pkbot> i dont want to sound rude but
05:18 < pkbot> youve actually helped with a quite others in chat
05:18 < pkbot> butr i need 5-10min break
05:18 < ChrisPartridge> pkbot: try pressing enter less
05:19 < pkbot> ive spent hours googling youtubing and having headaches if i dont stop looking at screen/text im going to lose it
05:19 < pkbot> sorry chris, im frustrated brb
05:19 < pkbot> -_-
05:19 < neeky> gah
05:19 < neeky> ningu, have you see the github page he pointed to?
05:20 < neeky> I'm not claiming hes scamming, but the sole purpose of the script is to keep viewers on your page, which means $$ 
05:21 < ningu> neeky: how can an ircbot keep viewers on your page?
05:21 < neeky> it's a "loyalty bot"
05:21 < neeky> so it "gives stuff away" but you have to be on his page watching chat to "win"
05:21 < neeky> lots of air quotes on purpose
05:21 < ningu> heh, I see
05:21 < ningu> sorry, too tired to actually go through the github repo
05:22 < neeky> yeah, I'm going to bounce on this kid, I thought he was a dev needing help
05:22 < neeky> it feels too sketchy
05:23 < neeky> and it requires MySQL, and with his skill level, $50 is too cheap
05:23 < ningu> haha
05:24 < neeky> I made $900 a few days ago for 12 hours of work, I'll be danged if I holding this kids hand getting his twitchtv bot running
05:25 < pkbot> LOL
05:25 < pkbot> i come back to some guy who was helping me
05:25 < neeky> "<pkbot> now i just need to node the mysql server"
05:25 < pkbot> to get all big and fancy
05:25 < neeky> Wat?
05:26 < pkbot> [01:23] <neeky> I made $900 a few days ago for 12 hours of work, I'll be danged if I holding this kids hand getting his twitchtv bot running
05:26 < neeky> Sorry, another user may be willing to help, I gotta bounce out of here
05:27 < pkbot> yeah
05:27 < pkbot> take that fucking bullshit attitude out of here too
05:27 < pkbot> my twitchtv bot running helps dozens of people get better at a game
05:27 < ningu> pkbot: beggars can't be choosers
05:27 < pkbot> go make your 900$ 
05:27 < pkbot> u shouldnt be in a channel trying to help people
05:27 < neeky> What the fuck did you just fucking say about me, you little bitch? I’ll have you know I graduated top of my class in the Navy Seals, and I’ve been involved in numerous secret raids on Al-Quaeda, and I have over 300 confirmed kills.
05:27 < pkbot> then start acting like you sat on a dildo
05:27 < pkbot> fuck you faggot
05:28 < pkbot> youre attitude is of a prepubescent fagot
05:28 < pkbot> happy?
05:28 < neeky> I am trained in gorilla warfare and I’m the top sniper in the entire US armed forces. You are nothing to me but just another target. I will wipe you the fuck out with precision the likes of which has never been seen before on this Earth, mark my fucking words. 
05:28 < pkbot> sigh
05:28 < pkbot> kids scripts suck
05:28 < pkbot> get better ones
05:28 < neeky> You think you can get away with saying that shit to me over the Internet? Think again, fucker. As we speak I am contacting my secret network of spies across the USA and your IP is being traced right now so you better prepare for the storm, maggot.
05:28 < ningu> gorilla warfare sounds interesting
05:28 < neeky> The storm that wipes out the pathetic little thing you call your life. You’re fucking dead, kid. I can be anywhere, anytime, and I can kill you in over seven hundred ways, and that’s just with my bare hands. Not only am I extensively trained in unarmed combat, but I have access to the entire arsenal of the United States Marine Corps and I will use it to its full extent to wipe your miserable ass off the face of the continent, you l
05:28 < neeky> ittle shit.
05:28 < pkbot> i bet he was a level 100 ass pirate
05:28 < ChrisPartridge> wow, that escalated quickly
05:28 < neeky> If only you could have known what unholy retribution your little “clever” comment was about to bring down upon you, maybe you would have held your fucking tongue. But you couldn’t, you didn’t, and now you’re paying the price, you goddamn idiot. I will shit fury all over you and you will drown in it. You’re fucking dead, kiddo.
05:28 < pkbot> [01:23] <neeky> I made $900 a few days ago for 12 hours of work, I'll be danged if I holding this kids hand getting his twitchtv bot running
05:29 < neeky> :)
05:29 < neeky> later
05:29 < pkbot> so gay
05:29 < pkbot> fuck you neeky, youre a jerk
05:29 < neeky> hey man, we tried to help, and you kept spinning out of control
05:30 < pkbot> NO
05:30 < pkbot> i left to take a fucking break
05:30 < pkbot> and i come back to
05:30 < pkbot> [01:23] <neeky> I made $900 a few days ago for 12 hours of work, I'll be danged if I holding this kids hand getting his twitchtv bot running
05:30 < pkbot> you never should of offered to help
05:30 < ningu> jerk is just the third derivative of distance over time
05:30 < pkbot> if you are an asshole
05:30 < pkbot> [00:59] <neeky> sure, but do it in the main node.js channel, not via msg
05:30 < pkbot> [00:59] <neeky> so the community can benefit/help
05:30 < pkbot> thanks for the help neeky
05:30 < ChrisPartridge> http://i3.kym-cdn.com/photos/images/newsfeed/000/150/662/5954828047_af51d53522.jpg
05:31  * __sri is shocked node devs consider $75 per hour something to brag about
05:32 < pkbot> __SRI HAS just devalued neeky's life worth.
05:32 < ningu> __sri: wir treffen uns noch mal
05:32 < ningu> or however you say "we meet again" in a sinister way
05:33 < ningu> ChrisPartridge: I decided that a good parallel to the "now panic and freak out" one would be "now picnic and camp out"
05:33 < ChrisPartridge> haha
05:36 < neeky> __sri, heh, it was actually to stage a SAN, not even like real work :)
05:37 < neeky> I have 0 income at the moment, I'm bootstrapping a startup, so I get it where I can :)
05:39 < jesusabdullah> taterbase: I think I've met half of i.tv's team members by now XD
05:40 < taterbase> orly!?
05:41 < ningu> no, andly
05:45 < Technodrome> any way to get a stack trace of in this case a full node.js web request?
05:51 < MiracleBlue> Hey everyone :)
05:51 < jesusabdullah> peace
05:52 < ningu> Technodrome: console.trace()?
06:03 < Technodrome> ningu: for crud web development, its kinda being a headache for me 
06:12 < jesusabdullah> Dear friends: If you support this, retweeting might help. https://twitter.com/jesusabdullah/status/350496601275510785
06:15 < sds> 1+1
06:15 < sds> hllo
06:15 < sds> what can I do
06:15 < jesusabdullah> wrt what
06:15 < jesusabdullah> gotta write this abstract
06:15 < Guest98599> whois jesusabdullah
06:15 < Guest98599> how can I get the sourcecode?
06:19 < ningu> um, get what sourcecode?
06:22 < xuser> The source code of Jesus
06:23 < ningu> well that's easy
06:23 < ningu> https://github.com/deoxxa/jesus
06:24 < SomeoneWeird> lmao
06:25 < xuser> Jesus -  1:17 -!- gbit86_ [~gbit86@204.11.31.54] has joined #Node.js
06:25 < xuser> Jesus - Resurrect processes if they die.
06:25 < xuser> :)
06:27 < jesusabdullah> xuser: but you have to wait 3 days before the process comes back up
06:28 < ningu> we need a new savior with zero downtime restarts
06:28 < jesusabdullah> mmalecki implemented that shit ages ago brah
06:28 < jesusabdullah> cause he's cool like that
06:28 < ningu> forever? or something else?
06:28 < jesusabdullah> we were all like, "ugh someone needs to do this" and he was like, "I'm doing it regardless don't talk to me"
06:29 < jesusabdullah> ningu: no, on nodejitsu things used to go down between deploys
06:29 < ningu> ah ok
06:29 < jesusabdullah> ningu: but then he fixed it so that the old one only gets taken down after the new one is up and happy
06:30 < ningu> jesusabdullah: ah ok, but it isn't something you can use outside of nodejitsu?
06:31 < jesusabdullah> ningu: naw, that's all internal stuff specific to deploys
06:39 < emilsedgh_> hello guys. im trying to find out about a memory leak in my application, but i think its something in node itself. so im trying to find out about it. here is a piece of code i wrote to test it:
06:39 < emilsedgh_> http://paste.kde.org/784526
06:40 < emilsedgh_> after executing `ab -n 1000 -c 100 http://127.0.0.1:1337/`, node's memory usage grows to ~300M. however, memwatch'es heapdiff says: http://paste.kde.org/784532
06:41 < emilsedgh_> which is only showing ~2M growth.
06:45 < ChrisPartridge> emilsedgh_: what version of node
06:45 < emilsedgh_> ChrisPartridge: 0.10.11
06:46 < sCoRpi> emilsedgh_: i'm also doing something with audiostreams atm and i quickly tested what you said by just hitting ctrl+r a few times in the browser
06:46 < sCoRpi> memusage went up from 28mb at the beginning to 39mb
06:47 < sCoRpi> and it's not decreasing anymore
06:47 < emilsedgh_> yes, it definitely seems like a leak.
06:49 < emilsedgh_> now if i remove the .on('data') callback, it does not happen anymore.
06:50 < ChrisPartridge> emilsedgh_: perhaps an issue with read streams them
06:51 < emilsedgh_> maybe. if i add the on('data') or pipe it into res object, this happens.
06:51 < sCoRpi> emilsedgh_: i actually also have the problem in regard to a normal express app
06:51 < sCoRpi> which is doing nothing more than outputting an index.html
06:52 < emilsedgh_> sCoRpi: i have the problem in a complete application as well. i just wrote this test to make sure nothing extra is there.
06:53 < sCoRpi> audio(preload="auto", autobuffer, controls)
06:53 < sCoRpi>     source(src="stream/1234", type="audio/mpeg")
06:53 < sCoRpi> ups
06:53 < sCoRpi> sorry
06:54 < sCoRpi> express uses readstreams aswell, right?
06:54 < emilsedgh_> no idea :)
06:54 < emilsedgh_> i handle streaming in my express app manually, not using express
06:56 < xuser> is connect like the rack of the ruby world?
06:56 < sCoRpi> emilsedgh_: me too, just the index.html gets served via express
06:56 < sCoRpi> i was asking because it seems like it's happening there too
06:58 < sCoRpi> emilsedgh_: https://github.com/joyent/node/issues/5345
06:58 < sCoRpi> maybe this issue?
06:58 < emilsedgh_> seems relevant
06:58 < ningu> xuser: there is no rack, really
06:59 < ningu> apps are web servers using the core node http module
07:00 < sinclair|net> http://pastebin.com/P8iWPcCA <-- present for you
07:00 < JNedved> If anyone has just joined in from Australia and is after a Sydney based contract with Node please get in touch - jamie@it-matters.com.au - http://www.seek.com.au/job/24738791 - No telecommuting, onsite only  
07:00 < xuser> ningu: so connect is just fo creating middleware?
07:00 < ChrisPartridge> emilsedgh_: there's a few posts on google groups as well
07:00 < ChrisPartridge> emilsedgh_: tried 0.10.12 ?
07:00 < xuser> s/fo/for
07:00 < emilsedgh_> ChrisPartridge: on my servers i have that version as well and it seems to happen
07:01 < emilsedgh_> ChrisPartridge: would you mind giving me url to google groups posts?
07:01 < ChrisPartridge> https://groups.google.com/forum/#!topic/nodejs/uETidz1BUHk
07:04 < ningu> xuser: yes, connect just provides some convenience middleware type things
07:07 < ForbesLindesay> xuser: For me, the big thing connect does is (defacto) standardise the pattern of `function (request, response, next)` for middleware, and then provide a way of chaining such middleware together.
07:07 < ForbesLindesay> As a coincidence it also provides some examples of such middleware.
07:15 < sCoRpi> emilsedgh_: are you handling stream error correctly?
07:15 < sCoRpi> + closed connections
07:16 < emilsedgh_> sCoRpi: createReadStream by default has {autoclose:true} which means it will close fd automatically in case of errors.
07:17 < emilsedgh_> sCoRpi: but im interested to know how you handle closed connections on your app
07:18 < ChrisPartridge> emilsedgh_: looking at that ticket on GH, the node devs couldn't reproduce, but others seem to be able to
07:18 < sCoRpi> emilsedgh_: i was just checking the google groups and added handling of stream errors + abort of a request
07:18 < sCoRpi> but unfortunately it didn't have that much effect :/
07:18 < ChrisPartridge> emilsedgh_: how did you install node? source? ppa?
07:18 < emilsedgh_> ChrisPartridge: source.
07:18 < emilsedgh_> sCoRpi: give me the link to google groups thread please :)
07:18 < sCoRpi> emilsedgh_: memory usage still grew to 72mb while holding f5 down for like 2 mins
07:19 < sCoRpi> it's the online Chris posted
07:19 < ChrisPartridge> emilsedgh_: perhaps post the details requested in that ticket, and see what they say
07:19 < sCoRpi> https://groups.google.com/d/msg/nodejs/uETidz1BUHk/8FdWBxTlnnoJ
07:19 < sCoRpi> this one
07:20 < emilsedgh_> im providing the data devs requested (heapdumps and extenral memory)
07:21 < ChrisPartridge> emilsedgh_: just run it on ubuntu 12.04, same result as you
07:22 < emilsedgh_> at least it seems easily reproducable :p
07:23 < sCoRpi> oh for what it's worth: i'm running node on win7
07:26 < sCoRpi> emilsedgh_: will update node to see if it still happens with the latest build
07:35 < [AD]Turbo> hi there
07:37 < ssafejava> well herro
07:42 < sCoRpi>  emilsedgh_: same with 0.10.12
07:43 < emilsedgh_> sCoRpi: i added my findings to the issue. lets see if any of the developers is able to reproduce the issue.
07:44 < sCoRpi> ok cool
07:44 < sCoRpi> i also came across this
07:44 < sCoRpi> https://github.com/joyent/node/issues/4190
07:48 < ssafejava> hmm sCoRpi you got me to check on my own app's memory usage and I'm seeing some bad leaks too. working on it
07:50 < sCoRpi> :D
07:51 < thealphanerd> anyone here use a cdn to host content for staging / production?
07:51 < poorman> I do
07:51 < poorman> but it's only for the error pages content
07:52 < thealphanerd> lol
07:52 < sCoRpi> emilsedgh_: when running the app again and having it constantly check the heapusage i get this
07:52 < sCoRpi> { rss: 53153792, heapTotal: 29075456, heapUsed: 16934296 }
07:52 < sCoRpi> { rss: 42553344, heapTotal: 46884608, heapUsed: 9190816 }
07:52 < sCoRpi> at some point it just goes up and stays there
07:52 < thealphanerd> where do you host?
07:52 < poorman> rackspace
07:53 < rendar> what is rss ?
07:54 < emilsedgh_> sCoRpi: { rss: 103903232, heapTotal: 15539200, heapUsed: 2884776 } after 100 requests
07:54 < emilsedgh_> rendar: http://en.wikipedia.org/wiki/Resident_set_size
07:54 < thealphanerd> poorman: thanks
07:55 < thealphanerd> do you use grunt tasks at all for deployment?
07:55 < rendar> emilsedgh_: thanks
07:55 < poorman> me personally? no. my stuff isn't that complex
07:56 < thealphanerd> fair enough
07:57 < thealphanerd> i'm trying to help my team move the serving of the website out of rails
07:57 < thealphanerd> and serve a static site with all assets on cdn
08:00 < sCoRpi> emilsedgh_: i just ran the same code from the github issue i posted
08:01 < rendar> thealphanerd: why? is rails slow?
08:01 < sCoRpi> emilsedgh_: http://pastie.org/8090501
08:01 < thealphanerd> more just turning into a different project
08:01 < sCoRpi> notice that his heap is always the same?
08:01 < thealphanerd> most of the fancy front end stuff happens in angular
08:01 < thealphanerd> and rails is more of a service with an api
08:01 < thealphanerd> site can be served as a single static page
08:02 < thealphanerd> if properly configured
08:02 < emilsedgh_> sCoRpi: but rss is not :)
08:02 < thealphanerd> with angular calling to rails backend 
08:02 < foobar321> Hi. How to keep process running without setTimeout ? I don't have any servers listening
08:03 < sCoRpi> emilsedgh_: to quote isaacs: "The RSS doesn't come down for a while, because it doesn't have to. But you can see the heapTotal is constant, and the heapUsed certainly does drop."
08:03 < sCoRpi> but no, i cannot see that heapTotal is constant :/
08:05 < emilsedgh_> sCoRpi: well, my rss never comes down
08:07 < ssafejava> sCoRpi: how do you get the heap usage along with the rss?
08:09 < ForbesLindesay> foobar321: why do you want to keep the process running? What will it be doing?  In general, node keeps processes running if there's a possibility of something for them to do in the future.
08:09 < sCoRpi> ssafejava: console.log(process.memoryUsage());
08:10 < ssafejava> ah thanks
08:11 < sCoRpi> welcome :)
08:13 < emilsedgh_> sCoRpi: https://groups.google.com/forum/#!topic/nodejs/7EixhOfY2Ds
08:14 < ssafejava> yeah nvm. after looking at that... heapused always stabilizes. thanks 
08:21 < foobar321> ForbesLindesay: I want to keep process running because I'm waiting for response for UDP request
08:21 < foobar321> well not really UDP
08:22 < foobar321> it's kind like UDP
08:22 < ForbesLindesay> If you have a UDP socket open, waiting for the response, that should keep the process alive.
08:22 < foobar321> yes, but it's not UDP
08:23 < foobar321> I almost sure that I've seen sth like that in doc
08:23 < foobar321> to keep process alive but I cannot find it right now
08:27 < ForbesLindesay> How are you creating the socket?
08:28 < jesusabdullah> hax
08:29 < ForbesLindesay> foobar321: you're almost certainly thinking of unref / ref for timers http://nodejs.org/api/timers.html#timers_unref I'm pretty sure the same thing doesn't apply to anything else though
08:37 < nmccm> hi
08:38 < sCoRpi> emilsedgh_: http://michaelheap.com/debugging-nodejs-memory-leaks/ maybe also worth a shot?
09:02 < mac_nibblet> Heya peeps
09:02 < mac_nibblet> i asked last night but nbody had a clue, for some reason im not getting any errors while calling methods/properties that don't exist
09:02 < mac_nibblet> during development
09:03 < mac_nibblet> which is slow my progress a lot
09:03 < mac_nibblet> Does anyone know what could cause such a thing ?
09:03 < mac_nibblet> i have use strict in all my files to see if that would help
09:03 < ssafejava> mac_nibblet: Might be that errors are being swallowed by something, some encompassing try/catch
09:03 < mac_nibblet> but alas no luck so far
09:03 < ssafejava> Are you using express? what kind of app is it
09:03 < mac_nibblet> socket.io
09:03 < mac_nibblet> without express
09:04 < ssafejava> does the server crash? or is the error just completely swallowed
09:04 < ningu> yeah I think ssafejava is on the right track
09:05 < mac_nibblet> ssafejava: no it keeps on running
09:05 < ssafejava> check for any rogue process.on('uncaughtException') lines
09:05 < ningu> for example process.on('uncaughtException')? yep
09:07 < mac_nibblet> bunyan a depdency of restify has a call to that specific method
09:07 < mac_nibblet> but bunyan failed to install due to an odd version of python and it said it was an optional depency so im not getting that code to be executed :S
09:08 < mac_nibblet> And in any case it logs using console.log so i should see something in the terminal
09:08 < ssafejava> bunyan depends on python?
09:08 < mac_nibblet> no it had a depedency on another package
09:09 < mac_nibblet> oh it was actually dtrace that failed
09:09 < mac_nibblet>     
09:09 < mac_nibblet> http://ss.office.pmg.se/caps/027495.png
09:11 < mac_nibblet> changed python version to 2.7
09:11 < ssafejava> oh interesting.
09:12 < ssafejava> I would try throwing errors at particular points in your app
09:12 < ssafejava> see where they get through and where they don't
09:12 < ssafejava> just `throw new Error()`
09:12 < ningu> maybe there is a border collie catching all the errors before you can get to them
09:13 < mac_nibblet> i throw new Error in the connection event of a websocket
09:13 < mac_nibblet> i get [Error] in the terminal
09:13 < mac_nibblet> but it keeps running
09:14 < mac_nibblet> w8
09:14 < ningu> restify doesn't die on an error
09:14 < ningu> it just logs it
09:14 < mac_nibblet> Does Q defered handle erors ?
09:16 < mac_nibblet> if i wrap the code that does not work  in a try catch
09:16 < mac_nibblet> i get the error when calling a method that does not exist
09:17 < mac_nibblet> but that means that either Q, socket.io, restify is messing with my error handling
09:19 < mac_nibblet> Yeps
09:19 < mac_nibblet> it's Q
09:19 < Mitar> what to do if package depends on a another package which is not anymore on the npm?
09:19 < ssafejava> cry.
09:19 < Mitar> npm ERR! Error: version not found: 1.1.0-dev : esprima/1.1.0-dev
09:20 < mac_nibblet> ssafejava: http://ss.office.pmg.se/caps/8edc36.png
09:20 < ssafejava> Mitar: You can fork the package, update the dependency, and point your package.json to your fork
09:20 < Mitar> the problem is that the dependency is somewhere deep among other dependencies
09:20 < Mitar> i don't even know who depends on that
09:20 < Mitar> i just get an error
09:21 < Mitar> but it is strange because i was not getting this before - it seems like it was deleted from npm?
09:21 < ssafejava> yeah. you'll have to trace that down, fork that particular module, then you can npm install it in the root of your project
09:21 < mac_nibblet> ssafejava, ningu: What library do you guys use for promises/defereds ? im not a big fan of how Q handles errors
09:22 < ssafejava> mac_nibblet: I don't. And honestly, .fail() is decent. You can choose to throw it from there
09:23 < mac_nibblet> imho if no fail callback has been specified it should throw an error
09:23 < mac_nibblet> else bugs allore !
09:23 < Mitar> and the crazy thing is that the package is in my npm cache
09:23 < ssafejava> after all, you don't want to rely on process.on('uncaughtException') to be your global error handler. So just like how most node code checks `if(err)`, you have to do the same with promises
09:23 < Mitar> so there is no way to say to npm to use that and ignore that it does not exist on npm registry anymore
09:23 < ssafejava> yeah I agree... but think about it, you might purposely want to just swallow it
09:23 < ssafejava> there should be a big red warning though IMO
09:24 < mac_nibblet> ssafejava: yes true, but i don't want to have to add a .fail just because im developing and i might use something that does not exist
09:24 < mac_nibblet> and maybe it forgets to save or something
09:24 < mac_nibblet> and i have no idea about it because i didn't get an error
09:24 < mac_nibblet> And yes i should have tests for that but still....
09:25 < jesusabdullah> I only really use uncaughtException to pretty print thrown errors
09:25 < jesusabdullah> in cli apps
09:25 < ssafejava> yeah I agree it's annoying in dev. but it's best to build the habit of properly catching them
09:26 < jesusabdullah> For me, either I handle them for real, or I straight throw them
09:26 < ssafejava> Mitar: you might be able to fake it with `npm link`
09:26 < jesusabdullah> if it's throwing when I think it should keep going, I should make that behavior explicit
09:27 < jesusabdullah> Mitar: maybe file some issues with the related projects?
09:29 < Mitar> this is the pacakage file which is making problems: https://github.com/jshint/jshint/blob/42ace75af50335e83e7ea8ab5d50b470489051e0/package.json
09:29 < Mitar> esprima package
09:29 < MiracleBlue> Hey guys, anyone know of any node.js drawing libraries?  Specifically for drawing stuff on the server side.
09:30 < ssafejava> Mitar: oh, so the direct git link isn't working anymore?
09:30 < Mitar> it is strange
09:30 < Mitar> because when i install directly, it tries npm http 200 https://github.com/ariya/esprima/tarball/master
09:30 < Mitar> but then in logs for the main program it goes npm http GET https://registry.npmjs.org/esprima/1.1.0-dev
09:31 < ssafejava> so if you just npm install that right into your project folder, does the dependency still try to fetch it?
09:31 < ssafejava> it looks like jshint is not the one requesting 1.1.0-dev
09:32 < Mitar> the problem is that this is installing through meteorite … so it is whole magic happening in the background
09:32 < Mitar> but this started failing just now
09:33 < Mitar> like few hours ago everything was still ok
09:33 < Mitar> ok, removing all node_modules helped :-)
09:33 < Mitar> are reinstall from scratch
09:33 < Mitar> no idea why, sorry for the noise
09:37 < mac_nibblet> ssafejava: lol Q.fail does not give me the error either
09:37 < mac_nibblet> ReferenceError: identifer is not defined
09:37 < mac_nibblet> http://ss.office.pmg.se/caps/340c8c.png
09:37 < mac_nibblet> just testing :p
09:40 < dagerik> This makes my static css file not found; http://paste.ubuntu.com/5807277/  help
09:41 < dagerik> if i remove that routing the css file is served correctly!
09:41 < ssafejava> dagerik: After app.use(express.static), put another line `app.use(app.router)`
09:43 < dagerik> ssafejava: nope
09:43 < dagerik> didnt help
09:44 < ssafejava> hmm. something must have changed in express3? not sure. you can use app.error instead
09:45 < ssafejava> http://expressjs.com/guide.html#error-handling
09:45 < ssafejava> If no route is found, err.status should be 404
09:48 < dagerik> where do i look up the request object in HTTP. i need to see members
09:49 < ssafejava> http://nodejs.org/api/http.html#http_class_http_clientrequest
09:49 < ssafejava> another way to look at is to use node-inspector, add a `debugger;` statement and look at the object yourself
09:51 < dagerik> ssafejava: that page didnt list all the members of the request object
09:51 < ssafejava> that's teh documentation there is. the members of http.IncomingMessage apply to req as well
09:52 < ssafejava> additionally, if you're using express, there are these members: http://expressjs.com/api.html#req.params
09:57 < dagerik> how should i do html encoding so that i can show html code in browser?
10:04 < butters> hello people
10:13 < zaphod1984> does anyone know if there is a api for npm to query for downloads, stars and other statistics?
10:23 < butters> anyone help me with passing json from server to the client - attempting to use Knock out with express - i can render view with json accessible but if my understanding is correct the json object that is available is still server side
10:43 <@MI6> joyent/node: Ben Noordhuis v0.10 * 9290385 : doc: vm: update github issues link - http://git.io/ewGMaA
11:14 < dagerik> where in this tree structure should i put my utility function such as escapeHtml(string)? http://paste.ubuntu.com/5807463/
11:15 < dagerik> and where do i put my application code
11:16 < sCoRpi> dagerik: you could create a new helper-module
11:16 < sCoRpi> like the node util module
11:16 < sCoRpi> and put you custom helper stuff into that
11:16 < sCoRpi> then you can just put it into node_modules, just set it to private in package.json
11:17 < dagerik> but im collaborating with others
11:17 < dagerik> and node_modules is in .gitignore
11:21 < sCoRpi> dagerik: i just created a folder called "local_modules"
11:21 < sCoRpi> and put my stuff in there
11:21 < sCoRpi> not sure if that's a bad way to do it or not, but it works
11:47 < noducks> Easy Question:  Can Connect Cookies carry Number Datatypes or is everything usually casted to a String?
11:52 < Trangar> noducks, looks like they're being jsonified, so you can store any complex object in there
11:52 < noducks> Great. Thanks Trangar...
12:03 < sCoRpi> emilsedgh_: interestingly now node is always around 27 mb O_o no matter how often i refresh etc.
12:03 < doomhz> hey guys, we are giving away Bitcoins at JSLogger if someone is intersted in http://blog.jslogger.com/post/54091646403/win-bitcoins-with-jslogger
12:03 < emilsedgh_> sCoRpi: and what did you do?
12:04 < doomhz> not too much, just 1.75 for now
12:04 < sCoRpi> right now after every refresh i run the gc manually for testing
12:04 < sCoRpi> lets see what happens if i turn that off again
12:06 < sCoRpi> emilsedgh_: i just forcefully started the garbage collector after _every single_ request
12:06 < sCoRpi> everytime a streaming connection is closed, i run the gc
12:06 < sCoRpi> that's of course not good for performance
12:06 < emilsedgh_> i've tried that
12:06 < emilsedgh_> didnt help
12:06 < emilsedgh_> i do that in my gist
12:07 < sCoRpi> did you also start you app with --expose_gc ?
12:07 < sCoRpi> when i don't forcefully use the gc, node's memory goes up to about 100mb, fast
12:07 < sCoRpi> now it's at 64mb, while idle
12:07 < emilsedgh_> of course i did, otherwise gc will be undefined
12:07 < sCoRpi> but it doesn't go back down to 27mb
12:07 < mac_nibblet> sCoRpi: have a cron run every 1-2 minutes ?
12:08 < emilsedgh_> https://gist.github.com/emilsedgh/5883067
12:08 < emilsedgh_> sCoRpi: yes, running gc helps, but the bug wont go away
12:09 < sCoRpi> emilsedgh: well if gc takes care of it, is it really a bug?
12:09 < sCoRpi> since it's basically just stuff that's not needed anymore, but hasn't been cleaned up yet
12:10 < emilsedgh_> sCoRpi: there are two parts of memory that should be freed here. one of them is free'd by manual gc() calls,which means without gc() calls it will be free'd eventually
12:10 < emilsedgh_> however, some of it is never free'd, even with manual gc calls
12:10 < sCoRpi> mac_nibblet: yeah of course i could run a cron, but that doesn't seem really "nice" does it?
12:11 < emilsedgh_> cron? a setTimeout() wouldnt work?
12:11 < sCoRpi> oh
12:11 < sCoRpi> yeah that would work emilsedgh_
12:11 < mac_nibblet> sCoRpi: nopp :p
12:12 < sCoRpi> emilsedgh_: ok, i was only taking into account the memory that will eventually get freed
12:12 < emilsedgh_> yes, gc helps with that. which means automatic gc's will take care of them anyway
12:12 < sCoRpi> emilsedgh_: i don't have a problem in regard to memory that doesn't get freed at all, since running gc() manually actually takes are of it all and node returns to it's 22/23 mb base
12:13 < sCoRpi> so if you're doing audio streaming
12:13 < iksik_> hello guys... do You know perhaps some ready to use library which can help with data synchronization between server (mongodb/node) and client (localStorage or something)?
12:13 < emilsedgh_> sCoRpi: instead of trying with your browser, try with ab
12:13 < emilsedgh_> or some similliat tool on windows
12:13 < emilsedgh_> 1-2 requests dont mean much
12:13 < sCoRpi> and I'm doing audio streaming
12:13 < sCoRpi> and you have stuff that doesn't get cleaned up
12:13 < sCoRpi> even by manually calling gc()
12:13 < sCoRpi> and i don't have that
12:13 < sCoRpi> what's happening? ;)
12:13 < emilsedgh_> try 1000 requests and see if that happens
12:14 < sCoRpi> ok
12:14 < sCoRpi> evilsedgh_ what are you ab params?
12:15 < sCoRpi> emil of course
12:15 < sCoRpi> not evil :D
12:15 < emilsedgh_> oh
12:16 < emilsedgh_> sorry i was away for a sec
12:16 < sCoRpi> `ab -n 1000 -c 100 http://127.0.0.1:1337/
12:16 < sCoRpi> this right?
12:16 < emilsedgh_> try -n 10000 -c 500
12:16 < emilsedgh_> depends on your machine though
12:17 < sCoRpi> emilsedgh_: what's happening on your main route?
12:17 < sCoRpi> anything special?
12:17 < sCoRpi> i'll just loadtest a stream url now
12:17 < emilsedgh_> no
12:17 < emilsedgh_> nothing special
12:19 < emilsedgh_> here, node gets to 350M at peak. lets see what happens when all requests are done.
12:20 < sCoRpi> i started with -n 1000 -c 100
12:20 < sCoRpi> node sits at 142mb now
12:20 < sCoRpi> and it just sits there
12:20 < emilsedgh_> all requests have ended?
12:20 < sCoRpi> the gc didn't get called manually since i did that on a "close" event for the response
12:20 < sCoRpi> but that didn't occur
12:20 < sCoRpi> yeah
12:22 < sCoRpi> let me try with 10k and 500
12:22 < sCoRpi> with 10k and 500
12:22 < sCoRpi> it is at 364mb now
12:22 < sCoRpi> emilsedgh_: boom, it fell back to 62mb
12:23 < emilsedgh_> hm
12:23 < emilsedgh_> 10k and 500 finishes so fast for you!
12:23 < sCoRpi> emilsedgh_: just as the benchmark timeout was reached, node dropped instantly from 360 to 61
12:23 < sCoRpi> but still 61
12:23 < sCoRpi> not 23
12:24 < emilsedgh_> well
12:24 < emilsedgh_> for me it finished and node sits at 354
12:24 < emilsedgh_> i would be happy with 61 :D
12:24 < sCoRpi> emilsedgh_: maybe something is wrong , since ab tells me "timeout reached"
12:24 < emilsedgh_> mind passing me your code?
12:25 < sCoRpi> let me try to turn that timeout off
12:25 < sCoRpi> and then try again!
12:26 < mnngfltg> Node beginner here. I want to write a simple utility script, using node.js, that performs some DB maintenance (i.e. executes some SQL commands). I run this script from the command line; it's not supposed to open any sockets. However, the DB api (sqlite for instance) is async. How do I write such a command-line utility?
12:27 < emilsedgh_> sCoRpi: would you mind pasting your code?
12:28 < sCoRpi> emilsedgh_: let me first figure out the timeout thing, ab.exe on windows just times out after a certain amoutn of seconds :/
12:28 < sCoRpi> so i cannot fully complete it
12:28 < emilsedgh_> ah ok :)
12:28 < zomg> mnngfltg: not sure if I understand what the problem is
12:29 < sCoRpi> ok lets see if this works, set the timelimit to 500 seconds (hopefully)
12:29 < emilsedgh_> sCoRpi: -t timelimit
12:30 < sCoRpi> emilsedgh_: running this atm: ab -n 10000 -c 500 -t 500 http://127.0.0.1:3000/stream/id/51cc24ac4445b01016000710
12:30 < sCoRpi> node peaked at 360mb, fell back to 100, now is at 216mb
12:30 < sCoRpi> ok it's just sitting there now
12:30 < sCoRpi> it's in there, right?
12:30 < sCoRpi> after -c
12:30 < sCoRpi> i have -t
12:30 < emilsedgh_> yeah
12:30 < emilsedgh_> ok, so you have it too, it did not jump to 23 or 61, its at 216 :)
12:31 < emilsedgh_> for me stays ~310 with manual gc calls
12:32 < mnngfltg> zomg, in Python, I'd simply use something like http://pastebin.com/9RXG0L8b (pseudocode)
12:32 < sCoRpi> let me add a set interval
12:32 < sCoRpi> eery min, clean up
12:32 < zomg> mnngfltg: oh so the api being async is the problem?
12:32 < mnngfltg> zomg, yes
12:33 < zomg> Why?
12:33 < mnngfltg> zomg, in the node.js equivalent, do I use the event loop? how do I hook into it w/o using the networking.
12:33 < zomg> ah
12:33 < sCoRpi> emilsedgh_: 385mb, 320, now at 195
12:33 < zomg> mnngfltg: simply write a callback that has the code you want to run once it's complete :)
12:33 < sCoRpi> waiting for gc now
12:33 < emilsedgh_> sCoRpi: ok :)
12:34 < sCoRpi> emilsedgh_: after manual gc, forced with setInterval: node.exe 60mb
12:34 < sCoRpi> 2nd sweep: 56mb
12:34 < sCoRpi> and the rss is going down
12:35 < emilsedgh_> ah
12:35 < emilsedgh_> would you mind pasting your code?
12:35 < sCoRpi> so basicalyl that sounds fine
12:35 < emilsedgh_> yes
12:35 < sCoRpi> which part? :)
12:35 < mnngfltg> zomg, ok, I'll try w/o trying to understand it completely and see if I run into any problems
12:35 < emilsedgh_> sCoRpi: are you trying it in your application or its a test script?
12:36 < emilsedgh_> http://paste.kde.org/784766
12:36 < emilsedgh_> sCoRpi: or try running my code.
12:37 < sCoRpi> emilsedgh_: it's my app
12:37 < sCoRpi> ok sec
12:37 < zomg> mnngfltg: python has lambdas doesn't it? Just think of it like that. someAsyncfunction(stuff, function(result) { /* code you want executed once complete here */ })
12:37 < sCoRpi> i'll just change the filename ;)
12:37 < mnngfltg> zomg, I understand the concept of a callback, I'm just not sure when the event loop starts
12:38 < zomg> mnngfltg: I don't see how that is relevant
12:38 < zomg> mnngfltg: that stuff is handled in the background, the callback gets called once the DB function finishes doing whatever it was doing :)
12:39 < mnngfltg> zomg, alright, I'll give it a go
12:40 < mnngfltg> zomg, alright, I'll give it a go
12:40 < jasonkuhrt> does mocha have a way to specify how many assertions are expected in a test ALA NodeUnit?
12:40 < emilsedgh_> thanks sCoRpi.
12:43 < sCoRpi> emilsedgh_: man that takes time :P
12:43 < emilsedgh_> hehe yes.
12:43 < emilsedgh_> your code did much faster, right?
12:43 < emilsedgh_> why is that?
12:44 < sCoRpi> yeah
12:45 < sCoRpi> not sure, but i react to byte-rane requests
12:45 < sCoRpi> byte-range
12:45 < sCoRpi> and i only return the number of bytes requests
12:45 < emilsedgh_> i do that in my app, but not in the test code, ab is not sending byte range requests
12:45 < sCoRpi> but that shouldn't make a difference here i guess
12:45 < sCoRpi> *requested
12:46 < sCoRpi> ab just noted "completed 5000 requests"
12:46 < sCoRpi> actually when i test my app
12:46 < sCoRpi> ab always tells me that the timeout is reached
12:47 < sCoRpi> which basically means that some request couldn't be fulfilled becuae it waited longer than the specified timeout, right?
12:47 < sCoRpi> ok, 10k requests complete now
12:47 < sCoRpi> man when will it stop
12:49 < sCoRpi> emilsedgh_: still running, but node is around 100mb
12:50 < emilsedgh_> ah
12:50 < emilsedgh_> hm
12:50 < sCoRpi> emilsedgh_: ab finished, node dropped to 50mb
12:51 < emilsedgh_> ah
12:51 < emilsedgh_> so the code is fine
12:51 < emilsedgh_> something wrong with my node, what version you have?
12:51 < sCoRpi> it processsed 14935 requests in 500 seconds
12:52 < sCoRpi> 0.10.12
12:52 < dirty_d> hey, is anyone here working with oracle and node.js?
12:56 < emilsedgh_> thanks a lot sCoRpi.
12:56 < sCoRpi> you're welcome!
12:56 < mnngfltg> zomg, seems to work fine, thanks
13:02 < zomg> mnngfltg: cool 
13:07 < Kessler> can anyone take a look: http://imgur.com/ri0sTDx two nearly identical files node bin scripts (just console.log basically), one executes successfully while the other does not ?
13:08 < zomg> Kessler: probably caused by having windows newlines
13:08 < Kessler> zomg: vim :set list should have shown them no?
13:09 < zomg> Kessler: what do you get if you do :set fileformat for each of the files?
13:10 < zomg> I would imagine the one which doesn't work will say fileformat=windows
13:10 < Kessler> zomg: you're right dos2unix did the trick
13:11 < zomg> Kessler: yeah thought so :) JS code doesn't care which ones you use, but whatever parses the shebang in the start of the file on *nix probably does
13:16 < dagerik> im using express + stylus. how do i generate css files from my .styl fiiles
13:23 < pupperwares> Anyone with work on GitHub looking for 10-20 hours of remote work a week? It will be available into 2014, front and backend.
13:33 < kenperkins> a whole lot of ugh
14:10 < serapath> hi, i'm trying to build an authentification mechanism with express, passport, but i'm missing something
14:10 < serapath> i have put extensive logging into my code
14:10 < serapath> http://pastebin.com/0S1P7yCe
14:10 < serapath> maybe someone could read to my logging output and tell me what should i look for
14:10 < serapath> the problem is, i login through the login page, but when i get redirected to /home, it wont let me in and tells me 401
14:10 < serapath> what should i look for?
14:11 < serapath> i'm a bit lost
14:14 < peterlubiana> I'm reading O'reilleys 'Node - up and running' and its a bit unclear on the subject of where the EJS standard layout file should be placed. Any ideas? TY!
14:15 < jez0990> Hey everyone, this is a really quick question https://github.com/substack/testling/blob/master/bin/cmd.js#L94 <--- what is that regexp thing (given there's no "new RegExp()" I'm confused as to what it is)? If anyone can tell me what's referred to as I'm sure I can Google the rest :)
14:17 < swaj> is there a release.json or something on nodejs.org?  I'd like to set up a daily cron task that checks for new releases and builds RPM's for our work servers, and some sort of API to get the latest stable release would be awesome.
14:18 < merpnderp> Anyone using node.js for just small customer web pages that has just a little data entry and interaction?
14:22 < brimstone> jez0990: no idea, works in the repl though: >/^foo/.test("foobar")
14:22 < Beg> merpnderp-> I have my own blogg 
14:26 < merpnderp> Beg: I mean that's cool and fun as a dev, but what I'm really asking is node a responsible choice to build small time customer websites with? A blog would seem better served with WordPress, but I guess blacksmith would be great too. But for a simple website, it still seems like RoR or Wordpress would be better. I *really* would prefer to use node, but what about the dev who comes after me and has to update their site or add new features?
14:27 < tmslnz> merpnderp: Accidental customer lock-in.
14:28 < tmslnz> We start most jobs in Express
14:28 < merpnderp> tmslnz: hah. I'm probably going to talk them into node, as they really have no idea. Just looking for all the arguments for and against.
14:29 < tmslnz> Is the customer interested in the tech? In our case even if we did mention no-one would give a damn.
14:29 < merpnderp> they have no idea.
14:30 < merpnderp> And if I tried to explain their eyes would glaze over. 
14:30 < merpnderp> Just don't want to put them in a position that 5 years from now they can't find anyone who knows how to manage their site.
14:30 < tmslnz> The advantages are pretty huge in my view. Not just node, but any tech that allows you have full control of the stack. For one you have to put them on a good server, like Webfaction.com or similar, which means you get ssh/shell access, easier deployment, overall much more control over the whole process which should result in a happier customer
14:31 < tmslnz> we never really mention the tech to our customers unless they ask for it.
14:32 < tmslnz> But for web work it only happened once and they were asking for Drupal because the manager on the case had heard of it and wouldn;t accept anything else. We hired a contractor :)
14:32 < merpnderp> and I've never seen a customer happy with a default wordpress plugin. They always want it customized. And it's just easier to write your own module than to reverse engineer the plugin. Plus I know that the input is sanitized and crfs protected.
14:32 < merpnderp> tmslnz: hah, brilliant.
14:34 < tmslnz> I think you'd have the same problem if it were RoR or even if you used a rich PHP framework. Basically anything that's not plain HTML isn't guaranteed to be maintainable by the average web guy.
14:34 < mac_nibblet> Gah
14:34 < mac_nibblet> node is doing some funky shit that i cannot control
14:34 < mac_nibblet> o.0
14:35 < Beg> doubt it mac_nibblet :D
14:35 < Beg> show us
14:35 < mac_nibblet> socket.io connections are disapering from user objects
14:35 < tmslnz> merpnderp: We do try to structure things well though. Bth for ourselves and for future hands.
14:35 < mac_nibblet> and organisation get reassigned operators
14:36 < Scathenc^C> i must say, being able to step debug node in chrome is the shiz :)
14:36 < tmslnz> We were using Symphony CMS for data backend. The thing uses XSLT for view rendering. Man *that* is unmaintanable. There's like 1 dude only on SO who is able to answer Qs of moderate complexity on XSLT.
14:37 < merpnderp> tmslnz: I bet if I document the crap out of it, I can hand it off with a clear conscious. 
14:37 < jez0990> brimstone: AH, that really helps - it's like a function call written inside out (?) - thank you!!!
14:37 < brimstone> jez0990: > typeof /^foo/ => object
14:38 < brimstone> i guess there's inherit objects?
14:38 < tmslnz> merpnderp: make the templates easy to edit. That's all really. That's the thing more likely needing alterations down the line. If anyone needs to touch data structures or anything else server-side they will likely know what they are doing.
14:38 < brimstone> or, implicit objects?
14:39 < merpnderp> tmslnz: Which I guess also means I should use ejs instead of jade. 
14:39 < tmslnz> merpnderp: never touched ejs. We do Jade… or plain HTML. Will look into it.
14:40 < brimstone> does the nodejs binary have a way to display all attributes of an object like php's print_f() or perl's Data::Dumper?
14:41 < mmalecki> console.dir
14:41 < mmalecki> brimstone: ^
14:41 < brimstone> thanks mmalecki 
14:42 < tmslnz> brimstone: eyes module is also helpful in that it allows you to inspect deeper than console.dir()/log() would
14:42 < brimstone> thanks tmslnz 
14:44 < noocx> re
14:48 < merpnderp> hmm, what about a browserify module that let you describe build rules in a json file, then kept file timestamps in another json file, then ran a rebuild upon restart of the app when necessary? 
14:51 < brimstone> kinda sounds like you're rewriting make
14:58 < merpnderp> brimstone: it would probably just be easier to move my text files into multi-line js comments and then just require them so that watchify will do the updates.
15:11 < quizme> hi
15:12 < quizme> how can i insert a CONFIG data into a .coffee file ?
15:12 < quizme> i mena
15:12 < quizme> it's a client side javascript file
15:12 < quizme> but before i serve it, I want to read a config file on the server side, then insert it
15:20 < pupperwares> is anyone aware of a squid replacement in Node.js? I'm just worried about memory management
15:27 < jdelgado> How bad is it to use for...in?
15:30 < macbn> anybody is using socket io with node cluster?
16:09 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:18 < ibrahim_> I want to know, if I package my application with just 'node.exe' on windows, will that be enough to run it?
16:19 < ibrahim_> what does the installer (.msi) do differently? just add npm?
16:20 < macbn> is there anybody using socket.io with node cluster?
16:29 < mscdex> ibrahim_: the installer adds shortcuts, modifies the %PATH%, installs npm, etc. Having just the binary should be fine
16:33 < ibrahim_> mscdex: cool thanks for confirming that
16:47 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:51 < pspeter3> Are closures or function objects more memory efficient with V8
16:54 < foobar321> Hi. Why does net.socket is not kind of stream.readeable or stream.writable or even stream.duplex ?
16:58 < FunnyLookinHat> Hey how do you guys read in a config.json with require?  When I try to do var config = require('config'); it doesn't find the config.json in the same directory
16:58 < rossk> FunnyLookinHat: I think that'll look for config.js (or config/index.js)
16:58 < FunnyLookinHat> Oh I'd have to export it too...
16:59 < FunnyLookinHat> rossk, yeah - I wasn't googling correctly :D
16:59 < rossk> :D
16:59 < rossk> we put all our configs in /config, then /config/index.js has the logic to switch between configs based on NODE_ENV
17:00 < FunnyLookinHat> rossk, Ah that's a pretty smart idea 
17:00 < FunnyLookinHat> So you export a config from index.js ?
17:01 < rossk> yup
17:01 < tjholowaychuk> anyone know why res.destroy() mid-response would still emit "end"?
17:01 < tjholowaychuk> no "error" event or anything, seems wrong
17:02 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:02 < foobar321> Hi. Why does net.socket is not kind of stream.readeable or stream.writable or even stream.duplex ?
17:13 < serapath> hi
17:14 < serapath> could anyone suggest me a good tutorial on sessions and cookies and session stores? and what goes to the server and what goes to the client?
17:14 < trentm> Hi. Does anybody know if there is a way to 'npm install' for a package but NOT attempt to install the optionalDependencies ?
17:14 < nathan7> foobar321: ..it is?
17:15 < nathan7> foobar321: > require('net').Socket.prototype instanceof require('stream').Duplex
17:15 < nathan7> foobar321: true
17:15 < foobar321> nathan7: true. but there's a lack of readable event in doc :/
17:16 < foobar321> nathan7: this mislead me
17:16 < serapath> TooTallNate: hi, isaacbw told me to ask u about bcrypt and windows, because, no matter what i do, it wont compile. i've been throuh a lot
17:16 <@TooTallNate> serapath: well... what's the error you're seeing?
17:18 < serapath> openssl/rand.h no such file or directory
17:18 < calxyellow> serapath, Do you have the openssl lib installed?
17:18 < serapath> yes
17:21 < serapath> i have installed openssl and the header files are in C:\Program Files\GnuWin32\include\openssl
17:27 < serapath> any ideas?
17:33 < serapath> TooTallNate: i have installed openssl and the header files are in C:\Program Files\GnuWin32\include\openssl
17:33 <@TooTallNate> serapath: i don't think that's the correct place
17:34 <@TooTallNate> serapath: depending on if you have 64-bit or 32-bit nodejs, you'll need to install here: https://github.com/ncb000gt/node.bcrypt.js/blob/master/binding.gyp#L16-L20
17:34 < serapath> have 32bit
17:34 <@TooTallNate> ok so C:/OpenSSL-Win32
17:35 < serapath> so i copy the header files to that directory?
17:37 <@TooTallNate> no
17:38 <@TooTallNate> i believe you just need to install http://slproweb.com/download/Win32OpenSSL-1_0_1e.exe
17:39 < serapath> copied the header files to that directory, same error
17:39 <@TooTallNate> serapath: copying the header files isn't the correct way
17:39 < serapath> i'm not sure if i have already installed what u suggest, but i have installed http://www.openssl.org/related/binaries.html
17:40 <@TooTallNate> serapath: do you have  C:/OpenSSL-Win32 ?
17:40 <@TooTallNate> and  C:/OpenSSL-Win32/include with the header files?
17:40 <@TooTallNate> and  C:/OpenSSL-Win32/lib with the .dlls?
17:45 < mscdex> node needs to re-export OpenSSL functions on Windows!
17:45 < serapath> i try
17:45 <@TooTallNate> mscdex: so true :(
17:46 < mscdex> and my mac address PR needs to finally be accepted in libuv :p
17:46 < serapath> TooTallNate: at least that gave me new errors for the first time
17:47 < serapath> tells me something about syntax errors in ossl_typ.h line 176
17:49 < nzee> You can follow the NodeConf 2013 event here http://eventifier.co/event/NodeConf13
17:55 <@isaacs> hello from nodeconf!
17:55 < nathan7> isaacs: hello from far-from-nodeconf
17:55 < Draggor> Hello from wishes-he-were-at-nodeconf!
17:55 < nathan7> ^ that
17:55 < n3w> hi there, i am just starting with node, i am working on this http://buildnewgames.com/real-time-multiplayer/ tutorial, but as i figure out it is for older socket version,  and it was throw errors in console, i find way to get rid of that errors, but socket.io.js is still not loading in my client, can some1 look at this code ? http://pastebin.com/YKDCmvHL
17:57 < n3w> !help
17:59 < serapath> TooTallNate: any suggestions? i have installed openssl and not changed the source.
18:00 <@TooTallNate> serapath: not really no...
18:00 <@TooTallNate> sorry
18:00 < serapath> ok, np. thx
18:15 < oren> s5fs: hi!
18:19 < oren> s5fs: take a look at https://github.com/ansible/ansible/ for provisioning servers
18:19 < oren> s5fs: haven't use it but it look promising
19:03 < rhalff> hmz, *thinking with my peanut brain again*, isn't the whole callback/promises soup an indication the design of node is far from perfect and won't it result in something different replacing node because it will work in a more elegant way? Just like rails had design problems from the start.
19:03  * rhalff *hides*
19:03 < squeeks> no? callbacks and promises are just different ways of handling non-procedural execution of code.
19:04 < squeeks> callbacks are arguably just primitive types of monads anyhow.
19:16 < AAA_awright> rhalff: Yes.
19:17 < AAA_awright> I'm seeing an adapt-or-die situation, and presently, the project seems to be choosing the "die" route
19:18 < rhalff> AAA_awright,  reading about monads now... :-) I knew my knowledge is not big enough to discuss this, it just feels a bit weird.
19:21 < captain_morgan> Does anyone use DTrace on node program on OSX? I read there are some usage caveats (lack on ustack?), wondering if I can at least get a perty flame graph
19:22 < jaenie> I want to be able to have nodejs serve communication between two WebSocket clients. I can get client to talk to the server, no problem.  But how do I get one http server to know and access another?
19:23 < jaenie> by "http server" I mean the obj returned rom http.createServer()
19:39 < Jar9869458293812> i want include js script(js/script1.js) to my html file ... on runtime  the browser makes request to server (which returns 404)
19:43 < Jar9869458293812> How to import client-side javascript 
19:43 < Jar9869458293812> ???
19:43 < Jar9869458293812> to html
19:44 < Technodrome> why does the default express scaffold put the url and the controller function separate?
19:44 < tjholowaychuk> Technodrome just because people got confused about how to require() things in node
19:44 < tjholowaychuk> to separate them into other files
19:44 < gdbz> Jar9869458293812: if you get a 404, the file does not exist. 
19:44 < tjholowaychuk> but now people are confused about that
19:44 < tjholowaychuk> haha
19:44 < tjholowaychuk> can't win :p
19:45 < Technodrome> tjholowaychuk: hmmm, they should be together 
19:45 < tjholowaychuk> that's subjective
19:45 < Technodrome> the app.get isn't really a *route* and splitting up the function somewhere different which is required in some other way, etc is just confusing 
19:45 < tjholowaychuk> I find it really annoying to scan
19:45 < tjholowaychuk> if they're not just lists
19:45 < tjholowaychuk> but it could be either way
19:45 < Technodrome> just have files with grouped controllers  of similar functionality and require them in the app.'s 
19:46 < Jar9869458293812> gdbz It makes a server request obviously file wont be there ...
19:46 < tjholowaychuk> that's why I'm getting rid of express(1)
19:46 < tjholowaychuk> in 4.x
19:46 < Technodrome> which?
19:46 < Technodrome> 4.x?
19:46 < Technodrome> you maintain something?
19:46 < tjholowaychuk> getting rid of the executable
19:47 < tjholowaychuk> or making it as simple as it can be, removing all the flags etc
19:47 < Skullclown> Jar9869458293812: you don't understand your own question?
19:47 < Technodrome> you maintain it tjholowaychuk ? 
19:47 < tjholowaychuk> yeah
19:47 < Technodrome> i see 
19:47 < Technodrome> well have you saw the default scaffold of webmatrix node.js app ? 
19:47 < merpnderp> I like having all my url routing in a single place I can quickly see where everything is going.
19:47 < Jar9869458293812> Skullclown haha great
19:47 < Technodrome> i truly think they have the best practice of how to setup an application 
19:47 < tjholowaychuk> haven't seen it
19:47 < tjholowaychuk> but either way
19:48 < tjholowaychuk> it's completely subjective
19:48 < Technodrome> merpnderp: well , i definitely hear you, but a url mapping in the express sense is not a routes file , all theo there frameworks do not do that 
19:50 < Jar9869458293812> Skullclown The name fits you :D
19:50 < merpnderp> tjholowaychuk: bummer about express. I find it extremely useful for quickly creating all the boilerplate.
19:50 < Technodrome> merpnderp: naw breh 
19:50 < Technodrome> does the app.js file really scare you that much :) 
19:51 < tjholowaychuk> merpnderp: might just tone it down, once you add support for a few template engines etc then you don't really have a good reason not to add them all haha
19:51 < merpnderp> hah
19:51 < tjholowaychuk> and people get the wrong idea thinking that's the "best practice"
19:51 < merpnderp> Technodrome: hah no, it's just that all my app.js files look basically alike. It's nice to have all the common code created for me.
19:51 < Technodrome> having routes in the server start file is really just not a good idea , i don't think 
19:51 < jergason> why not?
19:52 < Technodrome> the complex part for most people in a app.'s file or similar , is the configure function 
19:52 < Technodrome> app.js*
19:52 < merpnderp> Technodrome: you could pass the app object as a delegate to some route setting object?
19:52 < jergason> i like the idea of having all the routes for a server in one place
19:52 < merpnderp> me too :)
19:52 < jergason> if you aren't doing standard JSON api things that can be inferred from some directory structure or something
19:52 < Technodrome> there are other web frameworks with that purpose built in 
19:53 < killuminati> they threaten to kill me and my family
19:53 < Technodrome> express is a sinatra clone, and the best practice for that, is to have them both next to one another 
19:53 < killuminati> so the little rat should just stay small and shut up about them
19:53 < killuminati> or else bad things will happen .. wohoooo cheers for the free world
19:54 < tjholowaychuk> who cares what sinatra does
19:54 < tjholowaychuk> do what you want
19:54 < Technodrome> if you want something that does something similar merpnderp  , tell tjholowaychuk to make a feature similar to pylons at one point, a command line function that spits out all the routes of an app. and where they are located 
19:54 < Technodrome> that way you get a list, without the separation 
19:55 < merpnderp> Technodrome: I was saying you could do that to make you happy. If my routes got too long to be in the app.js I would just break it up into RouteSetters and pass in the app object.
19:56 < Technodrome> having a clear view of all the routes in one place, is a usability feature, i don't think it should be a way to code it, again, its easy to parse all the routes in an app 
19:56 < merpnderp> You could make an init function in each controller which took the app object and set the routes it handled. 
19:56 < Technodrome> and give the exact location , and do all  kinds of cool stuff
19:57 < Technodrome> express -get-routes 
19:58 < Technodrome> i'm sorry it wasn't pylons that did that, it was turbogears
19:59 < merpnderp> I kind of like that. require('./controllers/authentication').init(app); then the authentication module would just require in all the middleware it needed.
20:00 < Kakera> interesting, I see that node.js removed OpenSSL at some point because it's not GPL-compatible. Why was it added back in?
20:00 < RLa> merpnderp, do you need init at all?
20:01 < RLa> i usually do require('./api/stuff')(app)
20:01 < merpnderp> RLa: that's nicer looking.
20:02 < merpnderp> but a non-js programmer is going to be confused.
20:02 < merpnderp> non-node I mean
20:03 < jergason> non-node programmers could be confused by lots of things if they are programming ndoe
20:03 < jergason> *node
20:04 < zeekay> why would that be confusing?
20:07 < merpnderp> It would like like a C# programmer seeing "using MyClass(constructor args);"
20:08 < jergason> that is just a weird thing to be worried about
20:08 < jergason> if you dont' know node, obviously some things will be confusing to you
20:09 < merpnderp> you're right. dumb thing to worry about. 
20:10 < Technodrome> javascript is much more difficult than c# 
20:10 < squeeks> uhhh wat
20:10 < zeekay> ...wat
20:10 < jergason> merpnderp: hey, you said dumb, not i :)
20:13 < Technodrome> i'm sorry you guys know its true :) 
20:13 < merpnderp> Technodrome: I have hard evidence this is true. One of the more complex three.js examples builds a it's 6-7 shaders using 3 different way to create js objects. Already a difficult bit of code further obfuscated by running the full gamut of JS object construction possibilities. 
20:14 < Technodrome> yes
20:14 < merpnderp> In C# they'd all look the same, be put together the same, and be much easier to read.
20:14 < Technodrome> js is a confused child 
20:14 < Technodrome> the creator wants to make it Lisp, well he half achieved his goal 
20:14 < merpnderp> But C# doesn't run on everyone's browser and have all the awesomeness of node.
20:14 < Technodrome> the government spent 100+ million dollars trying to get some super wiz kids from MIT to built their systems in Lisp, they didn't even accomplish half of the goal 
20:15 < Technodrome> build*
20:15 < Technodrome> when javascript gets of any length it automatically becomes obfuscated 
20:16 < merpnderp> only if you don't use a module system for your client code.
20:18 < Technodrome> requirejs is complex in itself 
20:18 < Technodrome> javascript was a serious mistake , i use it because we have to, but it was one serious mistake
20:18 < Technodrome> Brenden has apologized multiple times, but even now, he barely does anything
20:25 < merpnderp> Technodrome: then why do you use node if you don't like Javascript? 
20:25 < Technodrome> because its portable
20:25 < brimstone> so is C
20:26 < merpnderp> because npm/awesome/duck typed/fast dev/async/npm
20:29 < Technodrome> merpnderp: i'm not a hater, i'm not biased 
20:34 < benv> hey npm folks - is there any way to use 'npm link' to point to a git repository instead of a local filesystem path?
20:34 -!- mode/#Node.js [+o TooTallNate] by ChanServ
20:34 < benv> i have a custom fork of a npm lib that i want pointed to globally
20:37 < Technodrome> merpnderp: the sad thing is node is great, express is to, javascript is the weakest link 
20:38 < durango> Anyone here have reocmmendations for profiling node?
20:38 < durango> https://github.com/bnoordhuis/node-profiler <-- is this the standard?
20:43 <@konobi> depends what you're profiling
20:47 < AAA_awright> MiracleBlue: Were you the one wondering about rendering audio using Node.js?
20:48 < Guest65971> anyone now how the server can kill a socket with socket.io?
20:48 < squeeks> I prefer a kitchen knife, one of those solid chef's ones.
20:49 < Guest65971> when the client reloads they get another socket, so 2, 3, 4, etc
20:49 < squeeks> if that's a bit too messy for you, consider various toxic chemicals
20:49 < Guest65971> only way to kill them all is restart the server
20:55  * rhalff peanut-brain
20:56 < morayi> clear
20:56 < peanut-brain> Signals and Slots (qt) how does that compare to Promises and callbacks.
21:01 < hackygolucky> hey nodeconf summer campers: #nodeconf
21:01 < RLa> peanut-brain, maybe they compare better to eventemitter instead
21:05 < serapath> hi
21:07 < sdrulea> Hi all!
21:07 < sdrulea> What the best validator npm for a node REST service?
21:10 < ben_alman> package.json "install" script question: the npmjs.org docs say it's an antipattern but what if i had a node-dependent app that had a npm install followed by bower install? would it be weird to have the install script do bower install?
21:10 < peanut-brain> RLa, thanks, I briefly skim now, but it seems that they also do not need promises, or at least solve the same problem in a different way: http://qt-project.org/doc/qt-4.8/signalsandslots.html
21:11 < DarcyB> does anybody have any experience with flatiron's director  for serverside ?
21:11 < RLa> peanut-brain, meta-object compiler (the moc) handles them
21:12 < RLa> peanut-brain, and in qt5 you can use native c++ closures
21:13 < RLa> they also allow to connect signal to signal which comes handy in some cases
21:18 < RLa> peanut-brain, i think internally they are just function calls, unless it's between objects in separate threads, then some sort of queue is used
21:19 < SrPx> Hello. Does anyone know how to profile node.js on OSX? I've tried node-profile with no success.
21:29 < peanut-brain> RLa, I was just thinking about a visual way to design applications, I guess what I have in mind is something that is already there, yahoo pipes, to accomplish it I think the signal slot way comes close to make something like that possible. Would be great to design your server and client side application in a yahoo pipes way.
21:30 < RLa> hm, qt signals/slots are easy to use from qtdesigner, their visual gui editor
21:31 < RLa> you might want to check out event streams too
21:33 < serapath> hey, could anyone give me some help with passportjs?
21:35 < yofun> hello im trying to debug a script
21:35 < yofun> and i get
21:35 < yofun> root@frenzic:/home/jen/triplie-ng# node --debug /usr/local/bin/triplie debugger listening on port 5858 debugger listening on port 5858 Failed to open socket on port 5858, waiting 1000 ms before retrying 
21:36 < squeeks> root :{
21:36 < yofun> i tried as root and as a regular user
21:36 < yofun> both ways it didnt work
21:36 < squeeks> is the port already bound to something else?
21:36 < yofun> i checked and i dont see anything
21:39 < Technodrome> besides express, what is the most popular in the node world?
21:41 < merpnderp> Anyone having problems with joyent's 2 factor authentication not sending their phone the password?
21:44 < TechnoCat> merpnderp: i honestly have no clue, but i always have this problem with google voice and websites
21:44 < TechnoCat> Technodrome: most popular npm package?
21:44 < Technodrome> TechnoCat: other popular web frameworks 
21:45 < tjholowaychuk> Technodrome check out geddy
21:45 < Technodrome> teddy always seemed a bit hit or miss 
21:45 < Technodrome> geddy*
21:45 < tjholowaychuk> haha teddy
21:46 < Technodrome> looks like express is still the best honestly 
21:46 < tjholowaychuk> damn teddy is taken
21:46 < durango> What do you guys use to profile node?
21:46 < squeeks> not a lot since most profilers for node suck.
21:46 < TechnoCat> a quick finger and a stopwatch
21:46 < durango> Instruments > Time Profiler would be awesome if it can go through hidden folders :/
21:46 < durango> squeeks: oiy
21:48 < squeeks> because I'm a spoiled brat who gets use to use really useful profilers like dtrace, Devel::NYTProf and Jip for other languages and in node there's little like them - and dtrace with node is just too damn noisy to be useful.
21:49 < SrPx> oes anyone know how to profile node.js on OSX? I've tried node-profile with no success. 
21:49 < owen1> AT NODECONF!!!
21:49 < owen1> hacking on arduino
21:50 < jesusabdullah> hehe, bascule is at it again
21:50 < durango> SrPx: use instruments
21:50 < SrPx> Pardon?
21:50 < durango> as long as u dont use nvm u should be fine
21:50 < durango> SrPx: Applications > Xcode
21:50 < durango> then file .. somewhere in there find instruments :P
21:51 < durango> then click on time profiler then google "How to use time profiler" :p
21:51 < durango> bbl
21:51 < SrPx> durango: I'm not sure what you mean... will it show which functions are taking more time?
21:51 < durango> SrPx: itll show way more than that
21:51 < SrPx> durango: ... but function names and such? Wouldn't it have to understand what v8 is doing with js?
21:52 < durango> SrPx, all programs have a call tree and a heapstack
21:52 < durango> timer profiler looks into this
21:52 < durango> so ull see a lot of v8 internal calls, etc.
21:52 < jesusabdullah> interesting
21:52 < SrPx> durango: but how I'll be able to recognize my functions? Also, thanks
21:54 < squeeks> If you can't recognise your functions, please stop writing code whilst drunk
21:56 < jesusabdullah> squeeks: lol
21:56 < jesusabdullah> squeeks: in context it makes more sense methinks
21:58 < jesusabdullah> ahhhh
21:58 < jesusabdullah> st_luke: g'afternoon
21:58 < st_luke> its midnight 
21:58 < jesusabdullah> A great day to troll the trolls
21:59 < jesusabdullah> NO YOU'RE AT NODECONF OKAY
21:59 < jesusabdullah> lol
21:59 < jesusabdullah> Gotta find good ways to make @bascule lose his shit
21:59 < st_luke> I cant afford to gallivant across the seas on a whim, so no, I'm not at nodeconf
22:00 < mbalho> lame
22:00 < st_luke> I should probably get a job
22:00 < st_luke> then I can go to conferences 
22:00 < squeeks> then you won't have time to go to conferences.
22:01 < st_luke> you only work 20% of the time at real jobs so I'd have plenty of time
22:01 < jesusabdullah> mbalho: go write that nodecopter goog hangout interface already XD
22:02 < squeeks> you'll spend the other 80% hungover in meetings. you won't.
22:02 < AAA_awright> That really awkward moment when you use randomBytes().toString('base64') and it returns a string ending with ".php"
22:02 < sdwrage> hey all
22:02 < jesusabdullah> I feel so clever https://twitter.com/jesusabdullah/status/350735455857295361
22:02 < jesusabdullah> XD
22:02 < jesusabdullah> hello wrage-cage
22:03 < sdwrage> :P
22:03 < sdwrage> everyone doing good this Friday? :)
22:03 < jesusabdullah> relatively!
22:03 < jesusabdullah> Wanted to sleep in moar but, y'know
22:03 < sdwrage> bet you guys on the west coast can't wait to get out of work
22:03 < jesusabdullah> life doesn't stop for me to go to bed
22:03 < jesusabdullah> sdwrage: I'm funemployed
22:03 < jesusabdullah> and by "go to" I mean "get out of"
22:05 < jesusabdullah> hehehehe
22:05 < squeeks> jesusabdullah: http://i.imgur.com/o51ku8R.jpg etc.
22:05 < st_luke> oh what the fuck I thought this was in stack
22:06 < jesusabdullah> OKAY GUYS PSA JUST BECAUSE I'M TALKING IN THE CHANNEL DOES NOT MEAN IT IS STACKVM
22:06 < jesusabdullah> squeeks: http://www.fknsrs.biz/
22:06 < squeeks> tell deoxxa I said hi
22:07 < jesusabdullah> MAYBE I WILL
22:10 < jesusabdullah> nice, this guy linked me benchmarks that basically showed he was full of shit
22:10 < durango> SrPx: traces man :P it just knows! :o
22:11 < SrPx> durango: ?
22:16 < yofun> what does this mean
22:16 < yofun> http://screencloud.net/v/j6Gq
22:16 < yofun> how do i fix it?>
22:17 < squeeks> you don't. it's working. it just stopped for you so you can step through at your own pace.
22:17 < yofun> oh
22:17 < squeeks> you.. do know how interactive debuggers work, right?
22:17 < yofun> no...-_-
22:18 < squeeks> http://nodejs.org/api/debugger.html read.
22:18 < yofun> k
22:29 < mscdex> i hope someone will shout out "node.js rules!" to everyone at nodeconf for me
22:30 < Industrial> Any good recent nodejs talks?
22:30 < Industrial> im not sure where to go for talks
22:30 < mscdex> Industrial: irc log? :p
22:30 < Industrial> other then youtube which is richly sewed in results
22:30 < Industrial> skewed*
22:30 < Havvy> Industrial: http://infoq.com/
22:30 < mscdex> Industrial: vimeo probably has quite a few too
22:31 < Havvy> Which also has good talks in Java as well.
22:31 < Industrial> wow ty
22:31 < Havvy> (Good as is useful even if you don't use Java)
22:31 < Industrial> ye
22:32 < Havvy> I think there's also a talk that doesn't have *any* code called "From Crap to App"
22:32 < Havvy> Which is both hilarious and has a lot to teach.
22:32 < yofun> dang it -_-
22:32 < yofun> Connection closed with error false trying to reconnect...
22:33 < yofun> debugger didnt even tell me much
22:33 < Industrial> Havvy: k heh
22:33 < yofun> i thought it would tell me a little more
22:33 < Industrial> http://www.infoq.com/presentations/From-Crap-to-App
22:33 < Havvy> Industrial: If it's about a keyboard app, then yes.
22:33 < Havvy> Woah, yofun is here.
22:34 < yofun> oh uh
22:34  * yofun is busted
22:34 < Havvy> But I can't gzline you here...
22:34 < yofun> lol
22:34 < yofun> i know :P
22:34 < yofun> I dont see why im zlined there meh..
22:35 < yofun> i have the pastebin log of when kitsune zlined me (googles for it)
22:37 < Havvy> yofun: Yeah, well, this is offtopic.
22:37 < Havvy> Need help with Node?
22:42 < radu> I have an express app with socket io and I would like to be able to restart express without reconnecting the sockets
22:42 < radu> is that possible?
22:42 < radu> I m running forever 
22:42 < radu> no clusters 
22:43 < Havvy> radu: When Node dies, all the sockets get destroyed too.
22:50 < [Fudge]> How well does node handle a few hundred setTimeouts?
22:51 < [Fudge]> Or, is it recommended?
22:51 < mbalho> what are you trying to do
22:51 < [Fudge]> I'm going to be implementing a crawler type thing that connects to servers every set interval
22:51 < [Fudge]> It might end up growing to a few hundred
22:52 < [Fudge]> Just trying to figure out the best way of going about it
22:52 < mbalho> queue in https://github.com/caolan/async is a better approach
22:53 < [Fudge]> totally forgot about async.queue
22:55 < yofun> Im trying to deploy this bot called  "triplie" which is made in Node.JS and i figured i could debug it to dig deeper but all i got was
22:55 < yofun> Connection closed with error false trying to reconnect... 
22:56 < yofun> is there any way to dig father?
22:57 < yofun> Hmmmm? I guess not. -_-
22:59 < jdelgado> Anyone have an idea on how to include a global helper in Mocha? Trying to run Karma and wanted to include Chai on all specs
23:08 < wedgeV> hi i'm using node-mongodb-native and when i do a db.collection('users').findOne(function(err, res){});… when the connection to mongodb is down this function just hangs and never calls the callback. how do i get it to just report the error to the callback right away or after 1 second timeout?
23:16 < wedgeV> no one?
23:20 < tpayne> i have a url like http://example.com/?up=d how can I access up on the req obj?
23:20 < wedgeV> req.query.up
23:22 < jdelgado> wedgeV: Just encapsulate it in a timeout...
23:22 < tpayne> wedgeV: THANKS!
23:22 < wedgeV> jdelgado: never did that, how do you do that?
23:22 < wedgeV> tpayne: np
23:23 < jdelgado> wedgeV: Just do setTimeout for 5000, and if the result hasn't been posted, run the callback.
23:25 < wedgeV> jdelgado: doesn't that keep the find()…. running?
23:27 < jdelgado> wedgeV: Well if it is just sitting there like you say, then it must have missed the callback or it waiting for a reply - so it isn't doing any processing; if that is what you are asking.
23:33 < wedgeV> jdelgado: i guess i'm worried about piling connections to mongo and what happens when it comes back eventually
23:33 < jdelgado> wedgeV: I find it hard to believe that they don't have a timeout
23:34 < wedgeV> jdelgado: yea i guess they might have, but not sure how to verify
23:35 < jdelgado> wedgeV: Well, after looking at the mongodb documentation for a grand total of two seconds, I found the option of "timeout" when you pass find.
23:35 < wedgeV> yep
23:35 < jdelgado> https://github.com/mongodb/node-mongodb-native
23:35 < wedgeV> i found that too
23:35 < The_Fly> anyone know about handling Expect: 100-continue headers
23:35 < wedgeV> except it doens't really make it timeout
23:36 < wedgeV> i pass {timeout: true} as per the docs
23:36 < jdelgado> wedgeV: It probbably kills the function but misses the callback, as I said'
23:36 < The_Fly> im trying to reject an upload from the client if other params in the post are invalid
23:36 < The_Fly> before the entire request is sent
23:37 < wedgeV> jdelgado: so i'm surprised it doesn't call he callback like "callback('timedout', null)" or similar...
23:40 < The_Fly> oh wait i can get checkContinue event
23:41 < The_Fly> seems that express must already listen for this itself...
23:43 < The_Fly> tjholowaychuk: you are just the person im looking for
23:43 < The_Fly> checkContinue
23:43 < The_Fly> i would like to use to reject an upload early (if this is the correct use)
23:44 < The_Fly> as per https://gist.github.com/igorw/75aae212a11ab642f864
23:44 < The_Fly> i can see it works
23:45 < The_Fly> is there somewhere in express i can hook here (i saw your response saying var server = app.listen(....) server.on("checkContinue", ...))
23:45 < The_Fly> but it doesn't seem to work for me
23:46 < The_Fly> yes, it seems this is what i need
23:46 < The_Fly> prevent request body from being sent
23:48 < The_Fly> tj, did you catch those messages?
23:49 < The_Fly> https://github.com/senchalabs/connect/issues/737
23:49 < The_Fly> does not work for m
23:49 < The_Fly> *me
23:55 < The_Fly> scrap that, it does work
23:55 < The_Fly> now lets test against large upload
23:58 < The_Fly> now the issue is getting browsers to use Expect header
23:58 < The_Fly> does this happen only with a post?
23:59 < plops> Hi!!!
--- Log closed Sat Jun 29 00:00:39 2013
