--- Log opened Mon Jul 01 00:00:01 2013
00:00 < AAA_awright> Specifically 0.11.3, and many earlier versions, I can't get it to install node-waf, the /usr/includes headers, or any of the build tools
00:00 <@konobi> AAA_awright: depends on yer os?
00:00 < AAA_awright> One of the ones that uses /usr/includes :p
00:01 <@konobi> or distro, even
00:01 < AAA_awright> Git
00:01 < AAA_awright> I'm not using any distro here
00:02 < AAA_awright> Linux kernel, gnu utilities, etc
00:02 < AAA_awright> It shouldn't matter, what's the `make` option or `./compile` switch?
00:02 <@konobi> AAA_awright: mkay, what are you actually up to? embedding?
00:03 < AAA_awright> konobi: I'm trying to install the Node.js headers to /usr/includes so I can compile modules
00:03 < AAA_awright> That used to happen by default, now they're not installing
00:03 < AAA_awright> I have very old headers
00:03 <@konobi> oh... node-gyp should deal with that
00:04 < nathan7> node-waf was removed forever ago, AAA_awright 
00:04 < AAA_awright> Well good riddance I guess, but how do I build Node.js C modules?
00:04 < ChrisPartridge> node-gyp
00:05 < AAA_awright> >_<
00:05 <@konobi> yup... node-gyp is what npm uses
00:05 < AAA_awright> Ok, but how do I get that
00:05 < AAA_awright> make install doesn't install much
00:05 < ChrisPartridge> npm install -g node-gyp
00:05 < ChrisPartridge> afaik
00:05 < AAA_awright> npm shouldn't be necessary... It's part of Node.js
00:06 <@konobi> yup, that should work... i've been doing some manual compiles and testing for a module or two recently
00:06 < ChrisPartridge> if you're on windows, look at the node-gyp GH page for pre-req's also
00:07 < nathan7> AAA_awright: npm is part of node
00:07 < nathan7> AAA_awright: npm ships with node, npm ships with node-gyp
00:07 < AAA_awright> nathan7: Not really, Node.js also ships with v8
00:09 <@konobi> yes... so node-gyp uses the headers that have been shipped
00:28 < staticsteven> can anyone help me with adding google anaytics code with jade? I'm struggling to make it work
01:56 < ImBcmDth> sadly, this is quite possibly the most useful thing I have ever written - https://github.com/imbcmdth/transform-console
01:58 < mmalecki> ImBcmDth: make that a bit more generic and it'll be really useful
01:59 < ImBcmDth> mmalecki: what exactly do you mean by 'more generic'?
02:01 < prettyrobots> My most useful library to date: https://github.com/bigeasy/timezone
02:01 < Havvy> ImBcmDth: A way to pass in your own transformers.
02:02 < ImBcmDth> Havvy: ohh, you mean to format the output?
02:02 < Havvy> Yes.
02:03 < mmalecki> yeah, that
02:03 < mmalecki> prettyrobots: damn dude, that's actually really useful
02:04 < prettyrobots> mmalecki: Thanks.
02:07 < prettyrobots> mmalecki: I find it hard to promote my libraries, though.
02:10 < drudge> nice prettyrobots
02:10 < prettyrobots> Thank you.
02:10 < prettyrobots> http://bigeasy.github.io/timezone/
02:10 < prettyrobots> Updated the `synopsis.js` just now.
02:29 < bradleymeck> anyone know how to implement a serial pin on johnny five?
02:29 < Johnny-> ;o
02:32 < Sly> bradleymeck: have you worked with V8/Node?
02:32 < bradleymeck> Sly yep
02:33 < Sly> http://stackoverflow.com/questions/17394589/c-code-compiles-fine-with-normal-v8-engine-fails-to-build-with-v8-provided-by
02:33 < Sly> Any idea what's happening there?
02:34 < bradleymeck> Sly: could be a laundry list of problems related to arch mismatch, use gyp not G++ to build stuff
02:34 < Sly> 10-4
02:35 < Sly> I'll get that setup and see if it helps.
02:35 < Sly> Oh, that's right. Node stuff and gyp.
02:37 < AAA_awright> Sly: Funny I'm having the opposite problem, I can't get it to work with the system v8 that all my other programs use (Chromium, MongoDB)
02:48 < Sly> bradleymeck: 
02:48 < Sly> I love you
02:48 < Sly> Finally compiled without bitching about String::New
03:00 < ImBcmDth> Havvy: https://github.com/imbcmdth/transform-console better or worse?
03:01 < Havvy> I don't know which event emitter the events is for.
03:01 < Havvy> But the other parts are better.
03:02 < vrlogrs> hi guys
03:02 < vrlogrs> wondering what the best way is to direct node.js outputs to a log file, instead of the console
03:02 < Sly> "Error: Symbol addon_module not found."
03:02 < Sly> Tf?
03:04 < ImBcmDth> Havvy: I guess both event emitters. I never really thought about that much - i only ever cared to track the finish event in my app. it seems readable and writable only overlap at `close` and I am not sure how a transform handles that particular case
03:06 < mscdex> vrlogrs: use redirection in your shell? (e.g. `node foo.js > blargh.log`)
03:06 < vrlogrs> mscdex: problem is, im going to use nodemon
03:06 < vrlogrs> and i want to have a different log file everytime the app restarts
03:06 < vrlogrs> maybe 'date'.log
03:07 < vrlogrs> if you know what i mean :S
03:09 < mscdex> vrlogrs: i'm not familiar with nodemon. if it doesn't allow you to specify a log file, then maybe you should go with a different solution?
03:09 < vrlogrs> hmm
03:09 < vrlogrs> i dont think it does :S
03:10 < vrlogrs> even if it did .. i would need to change the name of the log file everytime ..
03:10 < vrlogrs> unless, it appends it 
03:15 < mscdex> vrlogrs: why can't you write to your own log file within your node process?
03:15 < vrlogrs> mscdex: yah, i guess i'll have to do that .. was wondering if there was a more easy way :)
03:16 < vrlogrs> uhm, best way to do so would just be to open a file for writing, right?
03:16 < vrlogrs> what if a server crashes, and the file isnt properly closed -- will there be issues?
03:16 < mscdex> vrlogrs: it can be really easy actually... set up the logging function early on whether you want to go to stdout or a file, then use that function everywhere
03:18 < mscdex> vrlogrs: well, i suppose you could write synchronously if you're that worried about it
03:18 < vrlogrs> do you mind giving me a snipped of code to setup the stdout -> file ?
03:18 < vrlogrs> snippet*
03:27 < mscdex> vrlogrs: something like this: https://gist.github.com/mscdex/f8cfba85335e4e787ab0
03:38 < vrlogrs> thanks mscdex -- ill try that
03:46 < ChrisPartridge> wdavidw from GH around?
04:15 < vrlogrs> ok, this might be a noob question, but is there a way to run nodemon in the background?
04:15 < vrlogrs> i have multiple scripts i want to monitor with nodemon
04:15 < vrlogrs> so, i need to put a nodemon on each of them, in the background
04:23 -!- mbalho changed the topic of #Node.js to: no'd.js - http://nodejs.org - http://logs.nodejs.org - http://stackoverflow.com/questions/tagged/node.js
04:34 < harbhub> http server:  how do i get the subdomain of an incoming request? is it in the request.headers.host?
04:36 < ChrisPartridge> the host should contain the sub domain
04:36 < harbhub> thanks chris
04:36 < harbhub> problem is i test locally
04:37 < harbhub> so i don't really get to see what comes in heh
04:37 < Aredridel> Time to alias locally so you can see it.
04:37 < harbhub> i wonder if http.request has a way for me to test it, but i'm not sure
04:37 < harbhub> how do i alias locally?
04:37 < harbhub> it is time i learn that skill  :)
04:37 < ChrisPartridge> yep, create an entry in your hosts file
04:37 < Aredridel> edit /etc/hosts
04:37 < ChrisPartridge> e.g. subdomain.localhost 127.0.0.1
04:37 < Aredridel> my.test.domain.com 127.0.0.1
04:37 < harbhub> i will need your assitance
04:37 < harbhub> i am trying now
04:38 < harbhub> i'm on a windows machine atm
04:38 < Aredridel> Ah, harder there.
04:38 < Aredridel> (though possible -- I think the file is c:\windows\system32\drivers\etc\hosts
04:38 < Aredridel> )
04:38 < harbhub> checking
04:38 < Aredridel> I don't use windows lately though, so don't quote me.
04:38 < Aredridel> It's been a LONG time since I've done that.
04:39 < ChrisPartridge> windows = C:\windows\system32\etc\drivers\hosts
04:39 < harbhub> found the file
04:39 < harbhub> you both are correct
04:39 < ChrisPartridge> drivers\etc\hosts 
04:39 < harbhub> great memory Aredridel
04:40 < harbhub> ::1             localhost  127.0.0.1       localhost
04:40 < harbhub> that is in there
04:40 < ChrisPartridge> just add
04:40 < harbhub> just add a new line after the 127.0.0.1       localhost?
04:40 < ChrisPartridge> 127.0.0.1 domain.you.want.localhost
04:41 < ChrisPartridge> should have examples in there :p
04:41 < harbhub> this is...epic  :)
04:42 < harbhub> should i make it 127.0.0.2?
04:42 < harbhub> or just the same for localhost?
04:42 < harbhub> i am a newb to this alias-ing
04:42 < harbhub> testing
04:43 < harbhub> working
04:43 < harbhub> thanks fellas
04:43 < harbhub> that was very easy with your expertise
04:43 < harbhub> :)
04:43 < harbhub> 127.0.0.1     www.localhost
04:43 < Aredridel> Woot. Very nice.
04:44 < harbhub> that is all i wanted   :)  it works and req.headers.host does in fact include the subdomain, meaning i can substr around it
04:44 < Aredridel> (you can use .2 under linux; I doubt it works under windows)
04:44 < harbhub> and handle mydomain.com the same as www.mydomain.com
04:44 < harbhub> i'll stick to the .1 for now, but i will try .2 to test it
04:45 < harbhub> .2 seems to work the same
04:45 < Aredridel> Nice. 
04:45 < Aredridel> I'll file that away under "Windows is the same crazy as linux"
04:45 < harbhub> heh
04:45 < harbhub> this is awesome
04:45 < harbhub> thanks aredridel and chrispartridge
04:45 < Aredridel> Sure thing.
04:45 < harbhub> ++ to both of you
04:45 < harbhub> aredridel, what do you do for a living?
04:46 < harbhub> programmer?
04:46 < Aredridel> Yep.
04:46 < harbhub> sweetness
04:46 < harbhub> what sort of work
04:46 < harbhub> i just got a full time job as a programmer
04:46 < Aredridel> Full stack of manhunt.net. (Gay ~dating site)
04:46 < harbhub> unfortunately, they use ancient tech...
04:46 < Aredridel> PHP, Javascript, C.
04:46 < harbhub> lol really?
04:46 < harbhub> you host a dating site heh
04:46 < Aredridel> Hehe. Yep.
04:46 < harbhub> are you considering removing php
04:46 < harbhub> and using nodejs + javascript?
04:47 < Aredridel> No, there's no urgent reason to do so.
04:47 < harbhub> as far as i know (could be wrong) there is nothing php can do that nodejs + javascript cannot do
04:47 < harbhub> okay
04:47 < Aredridel> But we are moving lots of the interesting code to node.js
04:47 < harbhub> sweet
04:47 < Aredridel> So APIs are partly node.js-based; we have a lot of worker processes that aren't PHP.
04:47 < Aredridel> We loosely bind them with gearman.
04:48 < harbhub> never heard of gearman
04:48 < Aredridel> Simple job queue. Came out of Danga/Livejournal like so much awesome stuff has.
04:48 < Aredridel> Like Memcache ;-)
04:48 < harbhub> heard of memcache from facebook
04:48 < harbhub> not sure what it does, though
04:49 < Aredridel> "Store this for me." "Get that value back"
04:49 < Aredridel> Not much more.
04:49 < harbhub> what's the point of a job queue?
04:49 < Aredridel> It's RAM on a network protocol.
04:49 < harbhub> does it just build an array or something?
04:49 < harbhub> push this task
04:49 < harbhub> pop when done
04:49 < harbhub> that sorta stuff?
04:49 < harbhub> hmm
04:49 < Lorentz> it's a giant networked on-RAM cache
04:49 < Aredridel> Well, it's a list internally, but that's not what's interesting. It routes jobs to a worker process -- in gearman's case, the first to accept the job.
04:50 < harbhub> lol sweet
04:50 < harbhub> do you pay your workers?  heh
04:50 < Aredridel> So we do things like 'resize image'.
04:50 < demands> (that way you don't need to do whatever the job is, during the request cycle)
04:50 < Aredridel> The PHP just calls "resize image x into all the standard sizes"; gearman makes sure that happens. PHP doesn't wait for it to finish.
04:50 < harbhub> you guys are too cool
04:51 < Aredridel> Gearman assumes that if something borks, it can just fire the job to another worker. If the worker explicitly fails the job, though, it'll stop trying.
04:51 < Aredridel> So if something crashes, things are robust, as long as you can stand occasionally repeating work if something screws up.
04:51 < harbhub> interesting
04:51 < harbhub> and when no worker is up to the task?
04:51 < Aredridel> Then it waits in the queue forever.
04:51 < harbhub> o.0
04:52 < harbhub> why not set a limit
04:52 < demands> @aredridel, where is the queue stored?
04:52 < Aredridel> (or until the gearman server restarts)
04:52 < harbhub> say... 10 workers
04:52 < Aredridel> It's in RAM.
04:52 < harbhub> so you hold it in ram for no reason? o.0
04:52 < Aredridel> harbhub: We do set a limit.
04:52 < harbhub> how come no abort queue?
04:52 < harbhub> oh cool
04:52 < harbhub> how many workers?
04:52 < Aredridel> No, not for no reason -- if something sent a job, it must have been on purpose!
04:52 < demands> so you lose all the jobs if the queueing process dies, ya?
04:52 < harbhub> aredridel, maybe store to disk the unfinished queued processes
04:52 < Aredridel> demands: yeah. It's got extensions for durable queues, but I'm of the opinion that that's the wrong layer.
04:52 < harbhub> that the workers couldn't handle
04:53 < harbhub> that way you can drop it from RAM after 10 workers fail the task
04:53 < Aredridel> Yeah, if we actually can't handle them, we fail them and they get logged to disk.
04:53 < harbhub> and see in a stored file what is too difficult for your workers lol
04:53 < Aredridel> But no, if ten fail it, we really do want to fix the problem and continue.
04:53 < harbhub> yep sweet
04:53 < Aredridel> Like "Please charge this customer's credit card" ... we do NOT want to drop that job.
04:53 < harbhub> that is how i'd do it, so i say you are doing a good job there
04:53 < demands> anyone know if something like this has been implemented on node? :P
04:53 < harbhub> well aredridel
04:53 < harbhub> you better not have shitty workers then lol
04:54 < harbhub> what payment gateway do you use?
04:54 < harbhub> *please not paypal*
04:54 < Aredridel> demands: Not as simple as gearman, but it's actually a really simple protocol. It'd be a relatively short work to port.
04:54 < demands> right on
04:54 < Aredridel> harbhub: many. All BigCorp type things.
04:54 < harbhub> what is BigCorp?
04:54 < Aredridel> Big faceless corporations that nobody really wants to do business with.
04:54 < Aredridel> WorldPay. GlobalCollect.
04:55 < harbhub> aredridel, where is the protocol, i might start making the queue system for the node community
04:55 < Aredridel> gearman.org
04:55 < harbhub> why do you use them if nobody wants to use them?
04:55 < Aredridel> The protocol is http://gearman.org/protocol
04:55 < harbhub> favorited that site
04:55 < Aredridel> Because they satisfy the stupidly enterprisey requirements our CFO laid out.
04:55 < harbhub> sweet!
04:55 < harbhub> favorited the protocol
04:56 < harbhub> explain please
04:56 < harbhub> i want to learn business if you don't mind
04:56 < harbhub> i know it isn't purely node related, but it is relevant in that we are both here heh
04:56 < Aredridel> Nobody likes any credit card processors but Stripe and Square anyway. But you have to do business with insane companies like that to process high-volume payments at bottom rates.
04:56 < harbhub> maybe a private chat?
04:56 < harbhub> hmm
04:56 < Aredridel> Eh, either way. I can't give much more detail -- this is treading into proprietary information.
04:56 < harbhub> okay
04:56 < Lorentz> too late
04:56 < harbhub> don't lose your job
04:57 < Aredridel> Basically, all payment processors suck. Except Stripe and Square.
04:57 < demands> braintree isn't horrible
04:57 < harbhub> well square is for the card swipe
04:57 < demands> but it's not exactly fun
04:57 < Aredridel> They do weird shit, they speak crazy XML protocols. Their documentation lies.
04:57 < harbhub> i heard good things about stripe though
04:57 < Aredridel> Yeah, Braintree is like almost-Stripe.
04:57 < Aredridel> Stripe just gets things RIGHT.
04:57 < harbhub> but you don't get to use stripe  :(
04:57 < Aredridel> Yeah, no. But whatever.
04:57 < Aredridel> Not my project at work.
04:58 < Aredridel> I get to play with maps.
04:58 < harbhub> what sort of maps?
04:58 < Aredridel> And search performance.
04:58 < harbhub> geo maps?
04:58 < Aredridel> We just did a new geospatial search.
04:58 < harbhub> what is that?
04:58 < harbhub> jeez, you guys are making me so smart
04:58 < Aredridel> Sort-by-distance, search from a point, rather than our old "show me every person in city X" type searches.
04:58 < Aredridel> Sorting by distance with large result sets is hard.
04:59 < harbhub> how is that hard....
04:59 < harbhub> you have lat long coords
04:59 < Aredridel> Yep.
04:59 < harbhub> so it is easy math
04:59 < Aredridel> But there's no way to index that.
04:59 < harbhub> yes there is
04:59 < harbhub> you save it to a file
04:59 < harbhub> then read the file
04:59 < Aredridel> A file for all 6 million users each?
04:59 < harbhub> yep
04:59 < Aredridel> That's a lot of files.
04:59 < harbhub> not sure how feasible that is
05:00 < Aredridel> There'd be 6 million rows in each file. Cross join!
05:00 < Aredridel> That's the google/big data approach, though.
05:00 < harbhub> sweet
05:00 < harbhub> they should hire me
05:00 < harbhub> i think of shit they already do  o.0
05:00 < Aredridel> Make files like that as a background job. Slow. Lots of data. Still possibly intractable with more millions of users.
05:00 < harbhub> with some help from you of course
05:01 < Aredridel> We did something else clever, since we only ever return about a hundred results on a page.
05:01 < harbhub> like match results for a partner?
05:01 < Aredridel> Nope. No pre-matching.
05:01 < Aredridel> It also is a pain since dense areas have very different index problems than sparse areas.
05:01 < harbhub> make a conditional check then
05:01 < Aredridel> Sparse areas, you just load everyone and sort. There aren't that many, so you can do operations over the whole list.
05:01 < harbhub> if (very dense) handle
05:02 < harbhub> else not very dense handle
05:02 < Aredridel> Dense, though, you'd end up sorting 200,000 or more people for every request. Unmanageably slow.
05:02 < harbhub> so what do you do?
05:02 < harbhub> take a random 100?
05:02 < harbhub> and sort that?
05:02 < harbhub> if so, not very clever heh
05:02 < dylenbrivera> Anyone one willing to give a short private tutorial on node.js and websockets? 
05:02 < dylenbrivera> Anyone willing*
05:02 < harbhub> i want that tutorial, too
05:02 < Aredridel> We made a pixel map of the earth. Draw circles on it in pixels. Retrieve only people in those cells.
05:03 < harbhub> so you make a circle
05:03 < Aredridel> Yep.
05:03 < harbhub> and only get what touches it
05:03 < Aredridel> Yep.
05:03 < harbhub> the perimeter?
05:03 < harbhub> okay
05:03 < demands> that's awesome
05:03 < harbhub> do you change the radius at all?
05:03 < harbhub> it is sweet to be honest
05:03 < demands> but terribly confusing when one of those circles happens to be over a pole
05:03 < Aredridel> Not really. You just do modulo math.
05:04 < Aredridel> And not interesting anyway, since there's ~no people at the poles.
05:04 < Aredridel> ;-)
05:04 < demands> this is a good point
05:04 < demands> unless your radius is sufficiently large ;)
05:05 < Aredridel> Anyway. That's my own algorithm. Mix 1960s graphics rendering algorithms with morton trees or combined lat/lon indexes.
05:05 < Aredridel> And then implement the whole thing in SQL ;-)
05:05 < harbhub> okay you are smart
05:05 < harbhub> what is a morton tree
05:06 < Aredridel> Time to hit Wikipedia. It'll bend your brain, though it's amazingly simple.
05:06 < Aredridel> Interleave the bits of two (numeric) indexes, so you can query on an approximation of both at once.
05:06 < harbhub> don't see a wiki for morton tree
05:07 < Aredridel> Morton curve.
05:07 < harbhub> z order curve?
05:07 < Aredridel> That's the one.
05:07 < Aredridel> Actually using one as an index makes a quadtree, or morton tree index.
05:08 < harbhub> i will read about it later
05:08 < harbhub> my brain is too tired to learn that atm
05:08 < Aredridel> Hehe, yeah. It took me a few days to really wrap my head around it.
05:10 < bulkan> I'm just a bit confused with https://github.com/ammmir/node-oauth2-provider
05:11 < bulkan> running the simple_express3.js example, I want to be able to do the client_auth
05:11 < bulkan> not sure how though
05:12 < harbhub> http://gearman.org/protocol should be easy to replicate with nodejs
05:12 < harbhub> especially with child_process
05:13 < harbhub> and webworkers might be somehow useful for it
05:41 < Aredridel> harbhub: no child process: the workers connect to the server.
05:44 < harbhub> aredridel, what do you mean?
05:44 < harbhub> clientside web workers?
05:54 < jesusabdullah> ljharb: Does twitter hire node people?
05:55 < jesusabdullah> ljharb: I'm in AK right now, I just wanna apply for a "good fit" job
05:55 < jesusabdullah> ljharb: alternately: I have an email from >1yr ago from a twitter recruiter. Good idea to follow up? XD
05:56 < jesusabdullah> ljharb: oh, possibility I'll be in SF in a few weeks, will ping you if that coalesces
06:07 < xadillax> does anyone use webstorm?
06:09 < xadillax> anyone here online and alive?
06:12 < xadillax> @who
06:22 < xadillax> anyone here?
06:22 < rom1504> no
06:22 < Trangar> Not me
06:40  * zenetik sleeping
06:55 < sinclair|net> can anyone see this ? http://ultra.azurewebsites.net/
06:55 < harbhub> i see it
06:55 < harbhub> sinclair
06:55 < DORNER> eh
06:55 < sinclair|net> sweet
06:56 < harbhub> how'd you make that animation?
06:56 < harbhub> webgl canvas?
06:56 < sinclair|net> webgl
06:56 < harbhub> yeah but
06:56 < harbhub> did you code that yourself?
06:56 < harbhub> or is that some library?
06:56 < Trangar> That performs really well actually
06:56 < sinclair|net> i used threejs
06:57 < Trangar> My work pc is usually really bad with 3D but this one runs smooth
06:57 < harbhub> okay
06:57 < harbhub> was it easy to use?
06:57 < harbhub> it works on my shitty old comp
06:57 < harbhub> which says a lot lol
06:57 < sinclair|net> but the cube geometry, the animation and all that i did myself
06:57 < harbhub> <-- going to sinclair when i need to make anything 3d
06:57 < harbhub> :)
06:58 < sinclair|net> harbhub: all the code for it si here https://github.com/sinclairzx81/sinclair.demo.0
06:58 < sinclair|net> harbhub: specifically this https://github.com/sinclairzx81/sinclair.demo.0/blob/master/src/cubes/MultiCube.ts
06:58 < harbhub> no, it is here:  https://github.com/harbhub/sinclair.demo.0
06:58 < harbhub> :)
06:59 < harbhub> forked
06:59 < Trangar> Haha
07:00 < harbhub> sweet it is like a tutorial for canvas 3d
07:00 < harbhub> o.0
07:00 < JNedved>  Any Node.js developers looking for a Sydney, Australia based contract for 6-12 months please get in touch - http://www.seek.com.au/job/24738791 - jamie@it-matters.com.au - no telecommuting I'm afraid
07:00 < Trangar> I'm from europe, do I qualify?
07:00 < harbhub> you keep asking heh
07:01 < harbhub> i'm from florida
07:01 < harbhub> no telecommuting
07:01 < Trangar> It's ok, I can work from my house, don't need to commute
07:01 < sinclair|net> JNedved: still look huh
07:01 < sinclair|net> *looking
07:01 < harbhub> i think he wants someone to move to australia (or be from there and physically appear on the job site)
07:02 < harbhub> i just took a full time job starting august 5th
07:02 < Trangar> Pffh, that's so 2012
07:02 < Trangar> Physically going to work? As a programming? Pfffffh
07:02 < Trangar> He says sitting on his work PC
07:02 < JNedved> Yes we have one more interview slot to fill. Would be nice if we could find someone
07:02 < harbhub> too bad jnedved hasn't stated that he would pay flight, room & board, and the salary range of the job, or else i'd have shown interest in moving for the duration of the contract
07:03 < JNedved> Visa?
07:03 < Trangar> No thank you, I just ate
07:03 < harbhub> just took a job i'm afriad
07:03 < harbhub> afraid*
07:03 < Trangar> It's ok harbhub, don't need to be afraid
07:04 < harbhub> full time working on a web service that will be taking on a new market
07:04 < xadillax> -. - emm... i wanna a telecommuting job
07:04 < Trangar> Isn't everyone? :P
07:04 < harbhub> it is a figure of speech my aussey friend  :)
07:04 < xadillax> it's more fit me
07:05 < harbhub> would be awesome to visit australia
07:05 < xadillax> any telecommuting job here :p
07:05 < harbhub> my old summer camp used to be counseled mostly by australians
07:06 < harbhub> great people from my experience
07:06 < harbhub> vegemite! heh
07:06 < harbhub> okay i'm tired
07:06 < harbhub> it is 3AM
07:06 < harbhub> night all
07:06 < xadillax> g'night
07:06 < harbhub> you are... the best community in the world!
07:06 < harbhub> :)
07:06 < Trangar> I visited america before and I loved it, would love to go to australia at one point too
07:06  * xadillax 
07:07 < ChrisPartridge> australia is pretty awesome
07:07 < xadillax> and more place wanna go?
07:07 < xadillax> *places
07:07 < Trangar> Does space count?
07:07 < xadillax> space?
07:08 < Trangar> The void around this small little rock we're on
07:08 < xadillax> great dream
07:08 < Trangar> It's not a dream if I actually manage to do it
07:08 < xadillax> aha?
07:08 < xadillax> why?
07:08 < Trangar> Because then it's reality :D
07:09 < xadillax> okay i see
07:09 < xadillax> and fight for it
07:10 < ChrisPartridge> Trangar: http://mars-one.com/en/faq-en/21-faq-selection/251-do-i-qualify-to-apply :p
07:11 < Trangar> Not going to mars
07:11 < Trangar> Just want to go to the ISS or something
07:12 < xadillax> why not wormhole?
07:12 < xadillax> maybe you can meet ET :P
07:13 < ChrisPartridge> xadillax: when wormholes stop being hypothetical... maybe 
07:14 < Trangar> Haha
07:14 < leichtgewicht> Hello guys. I am trying to evaluate node for a company project and comparing prices. I assume people here have experience running node for business? Any suggestions?
07:14 < leichtgewicht> Cheap & reliable.
07:14 < Trangar> I usually just run it locally, no costs at all and as reliable as you make it yourself
07:14 < xadillax> you can explore it and stop its hypothesis
07:15 < carmbrecht> ^
07:15 < xadillax> i used to use node.js for a json backend server
07:15 < leichtgewicht> Trangar: running locally is not an option.
07:16 < Trangar> It's always an option, you just don't want to have the responsibility :P
07:16 < Trangar> I like https://c9.io/ a lot though, you might want to look into that
07:16 < leichtgewicht> Well: its not an option in terms of policy.
07:16 < Trangar> It's also a development environment
07:16 < xadillax> but that framework is toooooo bad and i'm planning to reconstruction that framework
07:18 < sinclair|net> JNedved: how can you still be looking for nodejs developers?
07:18 < ChrisPartridge> leichtgewicht: are you referring to hosting costs? or? developers, r&d, etc?
07:18 < leichtgewicht> hosting costs.
07:18 < ChrisPartridge> leichtgewicht: ah, depends if you want paas or an iaas I guess
07:18 < carmbrecht> leichtgewicht: what ChrisPartridge: said
07:19 < insel> is there a node-module that allows to fill a form, send it and save cookies .. or to use perl mechanize cookies?
07:19 < xadillax> you can host it by yourself ^_^
07:20 < leichtgewicht> ChrisPartridge/Carmbrecht: i should have mentioned that :) I prefer a well working paas but I am not aware there is a reliable one available.
07:20 < leichtgewicht> (i just assumed iaas)
07:20 < ChrisPartridge> leichtgewicht: nodejitsu?
07:20 < carmbrecht> leichtgewicht: nodejitsu is a great place to start if you're evaluating it, great support when you need to know something fast
07:20 < shapeshed> @insel phantomjs can do that. capserjs provide an interface for phantomjs
07:21 < ChrisPartridge> insel: check out node-chimera
07:21 < Trangar> xadillax, that's what I said, but you have to love company "policies" :P 
07:21 < xadillax> pm2?
07:21 < insel> ty @booth
07:21 < JNedved> most haven't had commercial exp delivering large and complex solutions. They've only been using it with personal projects. the other thing is location. 
07:21 < shapeshed> @insel is this for testing or harvesting cookies?
07:21 < ChrisPartridge> leichtgewicht: tbh, i would be going with nodejitsu if i wanted paas, or joyent for iaas ... atleast you will be on smartos, with dtrace support (afaik)
07:21 < carmbrecht> ^
07:21 < insel> testing... i need only to login once and then grab my sites 
07:21 < xadillax> policies?
07:21 < xadillax> what policies?
07:22 < Trangar> It's an excuse that big companies use to not use the most logical solution to problems
07:23 < leichtgewicht> ChrisPartridge: Nodejitsu feels right but no datacenter in japan (bad luck for me...)
07:23 < xadillax> in fact, our node proj is running on our own server
07:23 < ChrisPartridge> leichtgewicht: yup, i'm hoping for joyent to come to AU at some point - at the time being, i'm just running some smartos boxes
07:23 < xadillax> or you can buy a vps?
07:24 < sinclair|net> JNedved: then perhaps you should be looking for someone with large commercial experience in other frameworks with a willingness to learn nodejs
07:24 < leichtgewicht> xadillax: company policies.
07:24 < sinclair|net> no one in their right mind should be developing large applications in nodejs
07:25  * MitchW_ tends to find web devs have a different concept of large/complex than other dev fields
07:25 < Trangar> Programming is never complex :P
07:25 < xadillax> @leichtgewicht, for example?
07:25 < sinclair|net> JNedved: in fact, the reason you are looking for a nodejs developer to build large web applications in nodejs says a lot about the company, and not good things either
07:26 < leichtgewicht> xadillax: My company says: do not run servers yourself.
07:26 < leichtgewicht> Use paas if possible.
07:26 < JNedved> Life would be easy if that was the case but the cleint see's no point in doing this. they want someone that knows what they are doing and that can hit the ground running. Doesn't seem to be that many people in Australia who are available at the moment
07:26 < xadillax> @leichtgewicht, okay i see, that does no matter. you just need to develop and not host it
07:27 < ChrisPartridge> JNedved: assume you're on seek  etc?
07:27 < ChrisPartridge> leichtgewicht: are there many iaas providers in japan?
07:27 < JNedved> yes on seek. Seems very new commercially over here. not many people have used it 
07:28 < sinclair|net> JNedved: its been in NZ for years
07:28 < Trangar> JNedved, why don't you learn it yourself? :D It's not that hard
07:28 < Trangar> I can teach you
07:28 < JNedved> yeah i'm thinking about that. 
07:28 < leichtgewicht> ChrisPartridge: AWS is and other locals
07:28 < JNedved> NZ leading the way as usual 
07:29 < xadillax> @JNedved, just learn it. its easy
07:29 < Trangar> And fun
07:29 < xadillax> right~
07:29 < ChrisPartridge> leichtgewicht: yeah, we just got AWS as well, not really keen on their $/performance though - great for s3 though
07:29 < sinclair|net> JNedved: you will quickly learn that nodejs isn't the shiny new technology its made out to be, it still has a lot of problems
07:29 < leichtgewicht> ChrisPartridge: S3 & Cloudfront are very cheap for their convenience.
07:29 < xadillax> you can make your own server progress
07:30 < sinclair|net> JNedved: whoever is calling the shots over there, needs to evaluate the difference between good and bad technology decisions 
07:30 < leichtgewicht> I am wondering how many requests I would be able to tingle out of a micro instance ... 
07:31 < JNedved> if we can't get anyone soon I
07:31 < JNedved> I'd say they'll have to do that 
07:32 < JNedved> thanks for your thoughts on the subject mate 
07:32 < leichtgewicht> ChrisPartridge: We use a GAE a lot for python stuff ...
07:32 < xadillax> maybe you can try BAE
07:36 < [AD]Turbo> hi there
07:36 < b|lotus> [AD]Turbo: good morning
07:36 < leichtgewicht> Heroku builds on AWS ... (gotta think)
07:36 < xadillax> g'afternoon
07:39 < ChrisPartridge> leichtgewicht: micro instances aren't too bad for the price, you can get a bit of work out of them, especially if you get them at spot prices
07:40 < leichtgewicht> ChrisPartridge: Any experience in request/second?
07:40 < ChrisPartridge> i don't have any hard numbers, no
07:40 < leichtgewicht> (or request/minute)
07:42 < ChrisPartridge> leichtgewicht: heh, spot prices for micro in japan is almost 50% more than AU.. and I thought we were hard done by heh
07:42 < leichtgewicht> that would have been interesting to know.
07:42 < leichtgewicht> ChrisPartridge: Japan is expensive ... usually.
07:49 < Trangar> Gotta love websites that go like "We need your permission to set cookies" and if I check my cookie list I already have 9 cookies :D
07:50 < b|lotus> Trangar: +1
08:01 < stagas> in jade, I need to change a body class of the layout from within the view that extends it, variables don't seem to pass, any ideas?
08:01 < Havvy> stagas: Make it a block.
08:01 < Havvy> No wait, that won't work. :/
08:08 < MitchW_> nqstat
08:09 < MitchW_> not again :( irc needs delete. sorry guys
08:09 < sinclair|net> Havvy: how goes the TS?
08:09 < Havvy> sinclair|net: I haven't written any. :/
08:15 < Havvy> TBH, I've found publishing smaller modules and then putting them together to build the framework worked better at managing complexity.
08:16 < Havvy> Not to mention ensure that I'm not actually complecting things together by accident.
08:18 < sinclair|net> Havvy: publishing smaller modules?
08:18 < sinclair|net> Havvy: and glueing them together with require?
08:18 < Havvy> sinclair|net: Yeah.
08:18 < sinclair|net> Havvy: i fundamentally disagree with that
08:19 < jesusabdullah> why?
08:19 < Havvy> Well, the two core modules I've published are completely reusable outside the framework.
08:19 < jesusabdullah> I'm of the belief that you can have a framework which ties together multiple modules
08:19 < sinclair|net> Havvy: yes, thats fine, no one is saying that
08:20 < jesusabdullah> such that you can use the whole thing in concert, or use components separately
08:20 < sinclair|net> Havvy: code should be reusable, but the relying nodejs to stitch everything up leads to weird confusion fragmentation of code
08:20 < Havvy> The one module that can't really be used without the framework is a replacement for a core subsystem with added features that you might not want.
08:21 < sinclair|net> Havvy: what is better, and this is just my opinion is to let a compiler or build process, package up all dependent code and require() that.
08:22 < sinclair|net> Havvy: so, you could have a 30,000 line JS file, that is fine, so long as all those 30,000 lines of JS were contextually related somehow.
08:22 < jesusabdullah> ugh
08:22 < jesusabdullah> *shudder*
08:22 < sinclair|net> jesusabdullah: your "source" is not 30,000 lines long, the output from a build is
08:22 < rendar> sinclair|net: can't you split those 30k lines in multiple .js files?
08:23 < sinclair|net> rendar: read above
08:23 < Havvy> And then when something breaks?
08:23 < sinclair|net> Havvy: change source and rebuild ?
08:24 < Havvy> Also, build system = `npm install`
08:24 < sinclair|net> Havvy: that isnt a build system, that is a dependency puller
08:25 < sinclair|net> Havvy: im not suggesting that all your code goes into one giant source file, i am suggesting that contextually relevant bits code get compiled as a single unit
08:25 < sinclair|net> Havvy: for example, you might build your ORM / Data Access as a single file...
08:25 < sinclair|net> var orm = require('orm')
08:25 < sinclair|net> or, you might compile a facebook client as a single file...
08:26 < sinclair|net> so, you still use require to being items into scope
08:26 < sinclair|net> *bring
08:26 < sinclair|net> but you don't have a require() mish mash where its hard to differentiate the boundaries of a given context
08:27 < sinclair|net> its just good practice is all
08:27 < Havvy> I don't have any recursive requiring.
08:28 < Havvy> The boundaries of any context are clear.
08:29 < sinclair|net> Havvy: excessive use of require to being in fragmented small bits of code also has another downside
08:29 < sinclair|net> *bring
08:29 < Havvy> I'm actually not using less require() statements than I was previously.
08:29 < Trangar> I'd rather have 1 file of 30.000 lines send to the client than 30 files of 1000 lines
08:30 < Trangar> It's being cached anyway
08:30 < sinclair|net> Havvy: some of the work i have been doing with TS is dependency graphs inferred by the project, not manually inferred by package.json
08:31 < sinclair|net> Havvy: in all, these concepts are more closely related to how one might envision a .net assembly, rather than the approach taken by most node developers
08:32 < Havvy> Trangar: It's not a web framework. It only stays on the machine running it.
08:32 < sinclair|net> Trangar: in a client space, i can't comment so much, but AMD makes sense 
08:33 < sinclair|net> Trangar: a lot of people worry about having a client download bits of code that never get called in the browser
08:33 < Trangar> It really doesn't matter any more these days :P
08:33 < Havvy> I also generally go with 100 to 400 lines of code per file.
08:33 < sinclair|net> Trangar: actually, it does
08:34 < Havvy> Because of mobile clients, it matters.
08:34 < sinclair|net> Havvy: LOC is a pretty crap metric 
08:34 < Havvy> Because of satelite internet clients, it matters.
08:34 < Havvy> sinclair|net: Still a metric.
08:34 < Trangar> Sending lower resolution images to mobile clients would make more difference
08:35 < Trangar> I never have my phone wait for javascript to be loaded, it's almost always images
08:35 < Havvy> sinclair|net: I don't aim for a specific line count.
08:35 < sinclair|net> Havvy: personally, its not something i worry about at all
08:36 < sinclair|net> Havvy: the way i see it, classes are good, classes that are contextually related to other classes get packaged into a assembly (1 node_module) and get required
08:37 < sinclair|net> namespacing....also good
08:38 < sinclair|net> Havvy: at least, with this approach, i found it the most practical way to develop on nodejs
08:40 < Havvy> sinclair|net: https://github.com/Havvy/tennu-modules/blob/master/index.js  One module; one script; a little over 100 loc; does one thing and does it well.
08:41 < ChrisPartridge> Havvy: nice clean code, me likely
08:41 < sinclair|net> Havvy: https://github.com/sinclairzx81/typescript.project
08:42 < sinclair|net> Havvy: i use this to build larger projects
08:43 < Havvy> You're not releasing typescript only modules into NPM, are you?
08:44 < sinclair|net> Havvy: of course not
08:44 < sinclair|net> Havvy: i hate it when people release coffeescript projects on npm
08:46 < sinclair|net> Havvy: anyway, that typescript.project thing isn't finished, but is nice, as in the context of nodejs, when i build a module, and other modules depend on that module, the build will order the build, and copy dependent declarations into their respective modules
08:46 < Havvy> If you need everything in typescript, I guess that's good.
08:47 < sinclair|net> Havvy: the output is javascript
08:47 < sinclair|net> Havvy: its all about tooling
08:47 < Havvy> Yes, I know it is.
08:48 < Havvy> And as far as tools go, I thought I could use TypeScript to solve a complexity problem, but I found that by using my current tools more intelligently, I can remove that issue.
08:48 < sinclair|net> i just dont understand why people are so happy just to code directly in JS, when all these amazing tools, languages etc exist to make the experience way less painful.
08:48 < sinclair|net> Havvy: what complexity ?
08:49 < Havvy> I wasn't paying close attention to all the hidden ways I was complecting things together.
08:49 < sinclair|net> Havvy: hidden ways?
08:50 < Skullclown> typescript or just JS are both decent, they're just a habit.
08:50 < Havvy> I change something in one module, and another module just throws errors.
08:50 < Havvy> Even though they should be unrelated.
08:50 < sinclair|net> Havvy: well, TS would catch that at compile time
08:50 < Havvy> Yes. That's why I thought about TS.
08:51 < Havvy> But then I moved modules out of the main package where these issues were happening most often.
08:51 < Havvy> And this caused me to have to clean up certain things.
08:52 < xadillax> in fact
08:52 < xadillax> i still can't understand typescript
08:52 < xadillax> what's that
08:52 < Havvy> Including removing a feature I added just prior, since it would complect things together.
08:52 < Havvy> I know where I need to readd the feature though.
08:53 < Havvy> TypeScript wouldn't have complained about the complecting that happened at that spot.
08:54 < Skullclown> xadillax: typescript is just a different kind of language, it compiles to plain javascript
08:55 < Havvy> Typescript is the 'typed/racket' of Javascript.
08:55 < Skullclown> I don't know about TS though, I like JS
08:56 < Havvy> Except that because JavaScript doesn't have a rich macro system, TypeScript is compiled instead of macro-expanded.
08:56 < Havvy> And sinclair|net is jumping on this compilation stage to add other benefits.
08:57 < sinclair|net> Havvy: its so much more
08:59 < Skullclown> I love the type annotations o.o
08:59 < gym> hello
08:59 < frag> hi everyone .  i got a question regarding the net.socket in node. I would like to know if there is a way to manipulate the tcp socket buffer size
09:03 < RazorRamon> Hello Guys!
09:04 < RalieghFhang> Hello there. I'm just going to start out by saying I'm new at this, and know I'm the worst kind of person. However for now I need to piece together my needs ASAP. Could anyone perhaps help me with this script?
09:04 < RalieghFhang> http://pastebin.com/r5rkp4LC
09:04 < RalieghFhang> And hello there. ^^
09:05 < Trangar> RalieghFhang, type "console.log(data, typeof(data));"  before the line where it crashes
09:06 < Trangar> I think data is a buffer, not a string, and thus it doesn't have the function "replace"
09:06 < RalieghFhang> Yeah, it's an object.
09:06 < Skullclown> RalieghFhang: maybe you meant data.toString().replace() ?
09:07  * RalieghFhang snaps, "Bet that's it."
09:09 < Trangar> I think if you provide an encoding, you don't have to do tostring. e.g. fs.readFile(file, {encoding: "UTF-8"}, function(err, data) { });
09:09 < Trangar> But I'm not sure about that
09:10 < RalieghFhang> Bah, now it's tosing something else. I apologize, let me Paste it.
09:10 < RalieghFhang> http://pastebin.com/k4M1EG1Y
09:11 < Trangar> "path must be a string"
09:11 < Trangar> It's now a number, line 3: "var path = Math.floor(Math.random()*101);"
09:12 < RalieghFhang> But I'm not even using that variable.
09:12 < roadt> hi, is any node httpclient library with javascript (i mean it can execute the <script> tag in responding html..)
09:12 < Skullclown> RalieghFhang: pathModule._makeLong(path)
09:13 < Trangar> Oh wait, it's on line 13, "  fs.writeFile(data, result, 'utf8', function (err) {
09:13 < Trangar>      if (err) return console.log(err);
09:13 < Trangar>   });" data is that object, not a string :)
09:13 < RalieghFhang> Yeah, how do I get it as a string? Simply I just want to replace a string in this script haha.
09:13 < Trangar> data.toString() ?
09:13 < RalieghFhang> But it seems I can't do that. It can output it as a string to my console but not replace?
09:13 < roadt> it hardly is founded in other language,  ruby, python..  many httpclient but not javascript support.  wonder if node community will easily have proper one.
09:14 < RalieghFhang> Oh, line 13! I was assuming it was the same error as before.
09:14 < RalieghFhang> That's what I get for not reading.
09:14 < Trangar> RalieghFhang, you're trying to write to a file located at the value of data, try fs.writeFile('/home/shoutcast/mkdir.sh', result, function(err){ });
09:14 < Skullclown> same type of error, different location >.>
09:15 < RalieghFhang> No errors this time, however it didn't actually replace the string.
09:16 < Trangar> It probably only replaced the first occurance of the string, try ".replace(/data/g, 'NEWDIR=YES');" instead 
09:17 < RalieghFhang> Actually, shouldn't it be ".replace('NEWDIR="TEST"' instead of data? Since data would be the whole file?
09:18 < RalieghFhang> I just tried it that way with no change, but before I try your idea (which there's only one instance of this string anyways) I want to make sure I have that right.
09:18 < RalieghFhang> Also, wanted to say thanks. You're pretty chill and helpful about this. Quite rare when looking for help in languages.
09:18 < Trangar> I find most people in here are pretty helpful if you're not a dick yourself :P
09:19 < RalieghFhang> Haha, indeed.
09:19 < Trangar> That and I'm procrastinating from my job
09:19 < Trangar> Sssh don't tell my boss
09:19 < RalieghFhang> Anyways should I keep that as data/g or 'NEWDIR="Test"'/g
09:19 < RalieghFhang> Your secret is safe with me. ;)
09:20 < RalieghFhang> var result = data.toString().replace('NEWDIR="TEST"', 'NEWDIR="YES"');
09:20 < RalieghFhang> That's what I've changed it to since it seems to make the most sense with no change. The string doesn't get changed.
09:21 < Trangar> What do you have now?
09:22 < RalieghFhang> http://pastebin.com/wX4VjVkY
09:22 < RalieghFhang> As you can see when I ran it three times there are no errors, yet the variable in my bash file remains unchanged.
09:23 < Trangar> fs.writeFile('/home/shoutcast/mkdir.sh', result, {encoding: 'utf8'}, function (err) {
09:23 < Trangar> 3rd param should be an object
09:24 < RalieghFhang> Where it's set to utf8?
09:24 < Trangar> line 10, replace that to "console.log(data.toString());", removing the utf8
09:24 < Trangar> And see what that brings
09:25 < Trangar> And else try writing it to a second file and see what that does, e.g. '/home/shoutcast/mkdir.temp.sh'
09:26 < RalieghFhang> http://pastebin.com/8gMCKd3v
09:26 < RalieghFhang> Same output as before. No errors, no change.
09:26 < Trangar> Oh I see it
09:26 < Trangar> In your mkdir.sh it's 'NEWDIR="Test"', not 'NEWDIR="TEST"' :)
09:26 < Trangar> Replace is case-sensitive
09:27 < RalieghFhang> OH...
09:27 < RalieghFhang> Well now I feel like a total dolt.
09:27 < Trangar> Haha
09:28 < sinclair|net> https://s3-ap-southeast-2.amazonaws.com/sinclair-media/music/sinclair_is_not_a_hipster.mp3
09:28 < sinclair|net> cuz im not a hipster
09:28 < sinclair|net> totally not
09:28 < Trangar> Hey sinclair|net
09:28 < RalieghFhang> That solved it Trangar. Now, is there any way to have it update first BEFORE executing it?
09:28 < Trangar> Have you, y'know
09:28 < RalieghFhang> As it is now it executes before updating it.
09:28 < Trangar> considered wearing hipster glasses
09:29 < sinclair|net> Trangar: big ones you mean?
09:29 < Trangar> Yes!
09:29 < Skullclown> sinclair|net: is there any other kind?
09:29 < sinclair|net> Trangar: wore some when i did this one https://s3-ap-southeast-2.amazonaws.com/sinclair-media/music/sinclair_blues_stuff.mp3
09:29 < Trangar> RalieghFhang, that's because nodejs is event-driven, try putting 'exec("bash /home/shoutcast/mkdir.sh", puts);' in the callback function of your fs.writeFile
09:30 < sinclair|net> Trangar: and this one https://s3-ap-southeast-2.amazonaws.com/sinclair-media/music/sinclair_plays_the_blues.mp3
09:31 < RalieghFhang> One last question trangar, what's the proper syntax for placing my variable in the replacement string?
09:31 < RalieghFhang> 'NEWDIR="path"'   ?
09:31 < Trangar> 'NEWDIR="' + path + '"'
09:32 < Trangar> sinclair|net, your blues and not_a_hipster song sound really similar, might just be my uneducated ears though :P
09:32 < sinclair|net> was drunk at the time
09:33 < dagerik> How do I add client side js to my project? Do I just place a .js file in public/program.js and just edit it there? How do I add jquery? 
09:33 < Trangar> dagerik, which library are you using?
09:33 < maloik_> I'm running Hubot and I'm just wondering if there is some kind of order to all the plugins (and specifically the regexp's they match against). For instance if I have a plugin that matches /(foo).*/ and one /(foo)(bar).*/ will it automatically select the best one if both match? or will it run both, or... ?
09:35 < sinclair|net> Trangar: here is some dramatic stuff http://s3-ap-southeast-2.amazonaws.com/sinclair-media/music/sinclair_shreds.mp3
09:37  * Trangar rocks out
09:37 < sinclair|net> i have a rule not to write anything longer than a minute, rather, i write small songs and require() them with links
09:44 < guycode> date
09:44 < dagerik> Trangar: we are using express + jade + stylus
09:45 < dagerik> i dont know how to incorporate clientside js stuff
09:45 < Trangar> dagerik, then yes, anything you place in public/ will be send to the client as /
09:45 < dagerik> maybe it should also be autogenerated like an asset?
09:45 < Trangar> so if you place jquery.js in public it'll be under /jquery.js
09:45 < dagerik> okay i see
09:45 < dagerik> so i just wget(1) the latest jquery and put it in public?
09:45 < Trangar> Yep
09:46 < Trangar> I'd put it in a subfolder called "scripts" or something, but that's up to you
09:47 < xadillax> hi everybody
09:48 < xadillax> it's time to go off work
09:48 < xadillax> bye~ヽ(≧Д≦)ノ
09:48 < Trangar> No it's not
09:48 < xadillax> for me, that's it
09:48 < Trangar> I still have 5 hours to go :(
09:48 < xadillax> 13 min left
09:49 < ckknight> sinclair|net: the guitar part seems good, but the drums seem to get occasionally off-beat
09:49 < sinclair|net> ckknight: that was intentional
09:49 < sinclair|net> ckknight: its a sound track for http://ultra.azurewebsites.net/
09:54 < RalieghFhang> Trangar: Care to assist me again? I'm trying to write this variable that I get down to a new file so I can read said variable and append what needs to be replaced. However, no matter where I put the extra fs.writeFile I get an Unexpected Identifier error.
09:54 < Trangar> ... What?
09:54 < RalieghFhang> Yeah.
09:54 < RalieghFhang> Hold on, lol.
09:55 < sinclair|net> ckknight: you do graphics right?
09:56 < ckknight> not really. My brain doesn't comprehend visuals that well, so it's especially hard for me to create them except in a deliberate step-by-step process. I kind of suspect it's part of why I'm so good at comprehending abstract systems.
09:57 < RalieghFhang> Trangar: http://pastebin.com/76ZBkJ1V   The two errors I get depending on placement of addition.
09:58 < Trangar> Did you try path.toString()?
09:59 < Trangar> Oh wait this is a syntax error, two seconds
09:59 < Trangar> add a ); after the } of the last fs.writeFile
09:59 < RalieghFhang> Yeah. It's these brackets and the lack of indentation Notepad++ provides. I swear I need a better editor.
09:59 < Trangar> I use notepad++ and I don't have any issues with it :P
09:59 < RalieghFhang> It already has that Tranger
09:59 < RalieghFhang> if (err) return console.log(err);
09:59 < RalieghFhang>   );
09:59 < RalieghFhang>   });
10:00 < Trangar> Remove that second ); 
10:00 < Trangar> fs.writeFile('/home/shoutcast/lastdir', path, function (err) {	if (err) return console.log(err); } );
10:00 < Trangar> Should be it
10:00 < RalieghFhang> Youre notepad++ auto-indents for you?
10:00 < RalieghFhang> Your *
10:00 < RalieghFhang> Man it's early.
10:01 < Trangar> No, I do it myself, it's something you get used to after a little while
10:01 < Trangar> There's probably plugins for that though
10:01 < RalieghFhang> Ah, suppose so.
10:01 < RalieghFhang> Did what you said, same thing. Lemme Pastebin it now.
10:01 < RalieghFhang> http://pastebin.com/0iNWuaK0
10:02 < RalieghFhang> Those people at PB must hate me.
10:02 < Trangar> add another );
10:02 < Trangar> At the end
10:02 < Trangar> And at line 18 add a ); too
10:02 < RalieghFhang> Ah beautiful.
10:04 < RalieghFhang> You're seriously a lifesaver, I do appreciate it. What will I do when you're gone?
10:04 < RalieghFhang> Haha.
10:04 < RalieghFhang> You should procrastinate more often.
10:04 < Trangar> Haha
10:04 < Trangar> I have to go pretty soon though, need to get lunch for the rest of the week
10:04 < Trangar> And I'm not procrastinating any more, found a nice solution for our caching issue
10:11 < Trangar> So that's my cue! I'll be back in an hour or so
10:48 < RalieghFhang> Quiet. o.o
10:54 < serapath> hi, maybe i'm missing something. this works http://pastebin.com/KB5HuFcq
10:55 < serapath> and i believe i have the exakt same structure, but using a nodejs module
10:55 < serapath> when i call y.f2() from the other file which requires(), it doesnt work
10:56 < serapath> says: object has no method f2()
11:03 < ssafejava> serapath: just a guess, since theres's not much info here: you might not be doing `var foo = require('moduleExporter')(); foo.f2();`
11:04 <@MI6> joyent/node: mscdex master * 9699f3f : zlib: allow changing of level and strategy (+4 more commits) - http://git.io/6nWJQw
11:07 < serapath> i'm still debugging and hope to find out what the problem is
11:09 <@MI6> joyent/node: Brian White master * 9b09c9e : zlib: allow changing of level and strategy (+4 more commits) - http://git.io/3fJYuQ
11:18 < milani> how to unwatch a file after calling fs.watch() ?
11:18 < milani> I'm watching log files that rotate
11:18 < milani> so I need to watch the new file when ever the log is rotated.
11:21 < serapath> ha
11:21 < serapath> think i found out
11:22 < serapath> i detach the method
11:22 < serapath> how do i make sure that its actually called in its context? think it was something with 'bind'
11:22 < serapath> or apply/call?
11:25 < serapath> http://pastebin.com/v1G6pf4A
11:25 < serapath> how do i fix this?
11:28 < Trangar> serapth it works for me, except that 'this' is not set to the object
11:29 < RalieghFhang> Welcome back TRangar!
11:29 < Trangar> Hey RalieghFhang 
11:29 < RalieghFhang> Anyways, for anyone, why won't this line work? 
11:29 < RalieghFhang> fs.readFile('/home/shoutcast/' + path + '', function (err, config){
11:29 < RalieghFhang> Setting that variable path does a multitude of things
11:30 < RalieghFhang> shoutcast/"' + path + '"'   <--- That tries to enter the quotation marks into the path
11:30 < RalieghFhang> shoutcast/' + path + ''    <----- That tries to enter that character I can't seem to remember its name to into the path
11:31 < RalieghFhang> shoutcast/' + path + '  <---- That one doesn't close the full path and gives me an illegal error.
11:31 < RalieghFhang> Any words of wisdom?
11:34 < RalieghFhang> Trangar highlight because you've helped me before, haha.
11:44 < RalieghFhang> Would very much enjoy assistance with this. 
11:44 < RalieghFhang> http://pastebin.com/7gD21Z4c
11:51 < zaleb>  fs.readFile('/home/shoutcast/' + path, function (err, config){  ???
11:51 < locy> best way to check if a file  or js object is anscii or binary? 
11:52 < RalieghFhang> zaleb: [Error: ENOENT, open '/home/shoutcast/53'] errno: 34, code: 'ENOENT', path: '/home/shoutcast/53' }
11:52 < RalieghFhang> See how it's adding that extra '
11:52 < RalieghFhang> fs.readFile('/home/shoutcast/' + path, function
11:52 < RalieghFhang> Got that doing what you said. It seems no combination will allow me to add this variable.
11:54 < RalieghFhang> Or maybe not, since it's listing that path as    '/home...../54'
11:54 < RalieghFhang> But this confuses me. The only reason that would be is it can't find the directory, but I have this script run after it creates the new directory.
11:54 < RalieghFhang> http://pastebin.com/4m5PLvVU
11:54 < RalieghFhang> Right?
11:59 < zaleb> you write
11:59 < zaleb> '/home/shoutcast/lastdir', path
11:59 < zaleb> but you read '/home/shoutcast/' + path
12:01 < RalieghFhang> Yes. It's a completely different function and path is defined at the very start of the script.
12:03 < RalieghFhang> All the code before it works beautifully. I'm trying to have this function find the new created directory.
12:09 < RalieghFhang> Needing a serious hand on this.
12:22 < Kakera> is there some hack to add a repo without a package.json as a dependency?
12:22 < Kakera> I don't want to use a git submodule because it points to a specific commit
12:36 < joaojeronimo> as of right now, is there any http client abstraction (like request and superagent) that works on the browser after browserify ?
12:36 < joaojeronimo> request used to work but then it stopped because of hawk, and mime..
12:38 < RalieghFhang> Maybe someone's in here now that may be able to assist with this. http://pastebin.com/hpTFNnVR
12:39 < RalieghFhang> If I remove that fs.readFule line directly after exec("bash...) everything works pristine. However with that, even in it's own callback, it's trying to read that file first. Never actually executes my mkdir.sh script.
12:44 < RalieghFhang> So many people for such a dead chat.
13:01 < serapath> This snippet: http://pastebin.com/aCWvawt1 prints 'w00t!!!' but if lines marked as (1.) and (2.) are commented out, will say "Object has no method 'f1' "
13:02 < serapath> if i dont module.exports in that way, i would have to explicitly bind all my exported method calls
13:11 < leichtgewicht> wew, Amazon elastic beanstalk only supports up to node.js 0.8.21
13:14 < wyled> @leichtgewicht, not true. You can make your own default instances
13:15 < wyled> that is just the base system, you can create whatever you want and upload it
13:15 < leichtgewicht> wyled: hmm... is there an AMI for that?
13:16 < leichtgewicht> wyled: and: is it a good idea?
13:16 < leichtgewicht> :D
13:16 < wyled> sure why not
13:16 < wyled> you just upgrade it and then save it
13:16 < locy> whats the best nodejs module to parse atom, rss and rdf feeds ?
13:16 < wyled> easy to do
13:17 < leichtgewicht> formatting a hard disc is also easy to do.
13:17 < leichtgewicht> just not necessarily a good idea :)
13:18 < jdelgado> morning
13:18 < wyled> download latest node and install, then re-package if you want to upgrade
13:19 < qrada> yo
13:19 < ree> hi, anyone knows a _working_ example of image resize, from buffer to buffer (!) with any lib available? I'll be damned, I tried everything I could imagine with both imagemagick and graphicsmagic, no success
13:19 < spresser> ree: what are you trying to do?
13:20 < leichtgewicht> wyled: that is why i was wondering if there is a public AMI of someone who didn't make a mistake while doing it :D
13:20 < wyled> i don't think AEB uses AMIs
13:20 < leichtgewicht> http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.managing.ec2.html#using-features.managing.ec2.customami
13:21 < wyled> ah
13:21 < wyled> i was reading this: http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/GettingStarted.Walkthrough.html#iam
13:21 < wyled> I prefer my own instances over beanstalk though
13:22 < leichtgewicht> i am not that experienced in server setups to can claim that.
13:23 < leichtgewicht> also it set's up a nginx on config in front of the node server for comfort ^_^
13:24 < leichtgewicht> .oO(i can imagine this to be only reasonable for gzip though)
13:25 < wyled> yea i have an AMI with all that already
13:25 < wyled> Nginx, Node + mongo stack
13:25 < wyled> Also Nginx, ruby + mongo
13:26 < leichtgewicht> Planned to use more of the AWS stack.
13:27 < leichtgewicht> like SimpleDB and DynamoDb instead of Mongo/Mysql
13:28 < serapath> is it a good idea to create modules like that?
13:28 < serapath> http://www.node-console.com/script/special-module-pattern
13:28 < serapath> so "methods" do not become "detached" by default
13:29 < leichtgewicht> wlyed: anyway thanks ... I wish I was more experienced in that area.
13:29 < leichtgewicht> wyled: then I would not be pondering about this that much now.
13:30 < serapath> normally, thus without using an IIFE in the module, it would not execute, but instead say something like: "Object has no method f1"
13:30 < wyled> sure leichtgewicht, let me know if you have any other questions about it
13:31 < RalieghFhang> Hello. I'm using fs.ReadFile to read a file that has "Namex" with x being a variable of a number.
13:32 < RalieghFhang> I'm wishing to pull only the number from this file into a variable. How would I go about doing this?
13:34 < RalieghFhang> Anyone? x.x
13:35 < serapath> i'm not so sure, but first read the file, then apply a regex to those "Namex" things?
13:37 < serapath> regex would be something like /Name([0-9]+)/ or so?    google for javascript regex and the methods .match or .search
13:38 < RalieghFhang> Something like var num=new RegExp(file([0-500=))
13:39 < jas-> or /0\-500/.test(var)
13:41 < wyled> var numbers = fileContentString.match(/^Name\:(.)*$/g);
13:41 < wyled> var numbers = fileContentString.match(/^Name(.)*$/g);
13:42 < wyled> var numbers = fileContentString.match(/^Name(.*)$/g); //whoops :p
13:42 < wyled> that will give you an array of numbers
13:45 < RalieghFhang> http://pastebin.com/uqArmrqQ
13:45 < RalieghFhang> That's what I got trying that wyled
13:46 < locy> whats the best way to modify a jquery ajax request to use socketio if available to send data, so theres the standard option or socetio if available ?
13:47 < wyled> RalieghFhang, are you trying to read a file or a directory full of files?
13:47 < wyled> what is /home/shoutcast/lastdir?
13:48 < wyled> you turn it into a string here: GLOBAL.olddir = olddata.toString() but then you aren't using that variable on the next line...
13:48 < newbie|9> Is there a way to use mongoose.find() without providing a callback, but getting a synchronous return?   
13:50 < RalieghFhang> This script is all-encompassing. If you look I used olddir later on (result = data.toString().replace). Once I get this variable mess settled in setting up GLOBAL.path the script will run my mkdir script with said variables, copy files, and update the latest variable number used to increase it by one.
13:51 < RalieghFhang> I.E. I run it once, NAME0 gets made. I run it twice, NAME1 gets made, ad infinitum
13:51 < prettyrobots> 	 Who's using Harmony? Should I start new projects in ES6?
13:51 < wyled> Ok, I'm saying you're not using the right variable.
13:51 < RalieghFhang> How so?
13:51 < wyled> GLOBAL.num = GLOBAL.olddir.match(/^Name(.*)$/g);
13:52 < wyled> GLOBAL.olddir = olddata.toString() <-- this does not change olddata to a string
13:52 < prettyrobots> Where do I find out what Harmony supports?
13:52 < RalieghFhang> Ahhh, was unaware of that. Well is there a way to make this work then?
13:52 < zaleb> You're trying to match on the Buffer, instead of a String
13:53 < wyled> I just gave you the answer, RalieghFhang
13:53 < wyled> GLOBAL.num = GLOBAL.olddir.match(/^Name(.*)$/g);
13:53 < ree> hi, anyone knows a _working_ example of image resize, from buffer to buffer (!) with any lib available? I'll be damned, I tried everything I could imagine with both imagemagick and graphicsmagic, no success
13:53 < RalieghFhang> Ahh, I was confused for a moment there, but looking at it it makes sense.
13:54 < wyled> ree, try papercut, npm install papercut
13:54 < ree> wyled, thanks a lot for the hint!!
13:55 < wyled> i have some sample code if you would like it too
13:55 < RalieghFhang> wyled: I just updated that and I get no errors, however the mkdir.sh directory variable refuses to change. It's sticking at Name0
13:55 < ree> wyled, url? yes thanks, I'd check it
13:56 < RalieghFhang> Kind of like GLOBAL.number = num ++ isn't working at all.
14:00 < wyled> @ree, here you go: http://pastebin.com/WScpr3zt
14:01 < ree> thanks wyled. I must say the thing that pisses me off most, is that when I get an error, I cannot figure out what happens... a working code will make a good starting point.
14:03 < wyled> RalieghFhang, the problem with your code is that you're reading the file again, and overwriting your changes before writing the file again. I suggest you reorganize your code within functions so you can call the write when necessary
14:03 < wyled> you're also reading 2 different files: '/home/shoutcast/mkdir.sh' and '/home/shoutcast/lastdir', but you never save '/home/shoutcast/lastdir'
14:09 < RalieghFhang> It's taken me nearly 6 hours to piece this together. Adding functions always breaks it for me, something with the brackets even if I close it properly. And I do write lastdir
14:09 < RalieghFhang> At the end, fs.writeFile('/home/shoutcast/lastdir', path...
14:27 < RalieghFhang> wyled: That script you gave me (/^name... grabs null every time.
14:27 < wyled> yep, you're probably not reading a file correctly to a string
14:28 < wyled> i'm guessing the file you are reading isn't a file, but a symlink to a directory
14:28 < RalieghFhang> No, it's a file.
14:28 < wyled> ok
14:28 < RalieghFhang> A bash script file.
14:28 < RalieghFhang> 4 lines.
14:28 < wyled> what are the contents?
14:28 < RalieghFhang> http://pastebin.com/vqgY72L3
14:30 < wyled> ok, i don't see Name(#) anywhere in there
14:30 < wyled> so your regex will return null
14:30 < wyled> looks like your command should be like: GLOBAL.num = GLOBAL.olddir.match(/^NEWDIR=\"(.*)\"$/g);
14:31 < wyled> assuming you want to get that number
14:31 < RalieghFhang> Sorry, that was a bad copy
14:31 < RalieghFhang> From an older file. NEWDIR="Name0" is what it really is.
14:31 < wyled> ok same, thing then just adjust the regex
14:31 < RalieghFhang> That's what my command is. It's the one you gave me earlier.
14:31 < RalieghFhang> Oh nevermind.
14:32 < wyled> i just changed it to reflect the contents of that file
14:32 < RalieghFhang> I see my mistake. I never appened Name to the text.
14:32  * RalieghFhang facepalms
14:32 < RalieghFhang> It's the easy things sometimes.
14:32 < wyled> sure is :)
14:33 < RalieghFhang> And wyled, I've got one last favor to ask of you. Once I get this working how should I go about cleaning it up? Also I want to create fresh .js modules to kind of keep track of things, but I'm not sure if I'm beyond that point or not.
14:33 < wyled> send me your final code that works, and i'll give you some pointers
14:33 < RalieghFhang> You're a life-saver.
14:34 < RalieghFhang> Hmm, I'm still getting null.
14:34 < RalieghFhang> That's odd, by all accounts it SHOULD work.
14:35 < wyled> send me the full code
14:35 < wyled> i'll edit it
14:35 < RalieghFhang> Bah, can't post to Pastebin anymore.
14:36 < RalieghFhang> http://hastebin.com/nejeqisode.js
14:36 < RalieghFhang> Here's my original, basic code that was working excellently earlier before I muffed things up. 
14:36 < RalieghFhang> http://pastebin.com/2ZXczy5v
14:37 < patate_> Hi
14:37 < RalieghFhang> Was mainly for testing.
14:37 < zbzzn_> Anyone knows if there is an ssh node module?
14:38 < jas-> zbzzn_: npm search ssh
14:38 < zbzzn_> I did that :) I was hoping someone knows a module where ssh is a hidden feature
14:38 < zbzzn_> or some workaround
14:39 < jas-> zbzzn_: What are you looking to accomplish?
14:39 < jas-> zbzzn_: Rootkits aside?
14:39 < jong> I am new to node/npm and am having trouble installing a package using the @x.y.z syntax. The package.json specifies something like 0.3.x, but the project's main line has moved on to 0.4.x. Here's is a concise paste of the problem: http://pastebin.com/raw.php?i=LvD0jLy9
14:40 < zbzzn_> I want like a wrapper for the OS ssh command
14:40 < jas-> zbzzn_: Are you wanting SSH connections from a web browser interface?
14:40 < patate_> I'm using nodejitsu to stage an app I'm building. I just discovered hooks which are pretty wicked but now I gotta know how to handle js/css minification. Is there any convenient way of minifying css/fs files on deploy? Thanks
14:40 < patate_> First * hi!
14:40 < jong> Before I try to install the package using a specific git commit url, I'm trying to discern if I'm doing something incorrectly or if there's just friction due to the package version being revved.
14:41 < zbzzn_> no, from node
14:41 < zbzzn_> currently using https://npmjs.org/package/shync
14:41 < zbzzn_> but this calls the OS in a different process
14:42 < zbzzn_> I wonder if there is a JS library that does the same
14:42 < jas-> zbzzn_: Server to server ssh connection? Explain
14:42 < zbzzn_> my server creates a cloud machine
14:43 < zbzzn_> then it needs to ssh to it and run a script
14:43 < kurkale6ka> Hi, on a centos5 box we have nodejs 0.9.11 installed manually (not yum or rpm) and it is not under /opt/node. Basically I wana uninstall it and use an earlier version
14:43 < zbzzn_> but since it is on the cloud I need to provide a key
14:43 < jas-> zbzzn_: Are you trying to build a web interface for server management?
14:44 < zbzzn_> no
14:44 < zbzzn_> I am trying to instanciate a machine on the cloud and run a script on it through ssh
14:44 < jas-> zbzzn_: The client can't provide the key?
14:44 < zbzzn_> what client?
14:45 < zbzzn_> The node script is the client
14:45 < jas-> zbzzn_: You just said you are currently using shync to manage multiple servers
14:45 < jas-> zbzzn_: Windows or linux? Why not just using a shell script?
14:45 < zbzzn_> linux
14:45 < zbzzn_> yes, thats what I am doing now
14:46 < zbzzn_> I thought that some lib can do it directly in node
14:46 < jas-> zbzzn_: Your shell script can call ssh as well as scp... https://gist.github.com/jas-/5858980
14:47 < zbzzn_> I am trying to remove all the shell scripts
14:47 < zbzzn_> thats the idea of using an ssh module
14:47 < jas-> zbzzn_: Why? Mixed env?
14:47 < zbzzn_> no, I just want all the code to be in JS
14:47 < jas-> zbzzn_: Have you read the docs? http://nodejs.org/api/crypto.html#crypto_crypto_createcredentials_details
14:47 < zbzzn_> for maintainability
14:49 < zbzzn_> I take it that you don't know which module is best as an ssh wrapper in node
14:49 < jas-> zbzzn_: scratch that, not what you want
14:49 < niggler> anyone have a complete utf-8 table?
14:49 < jas-> zbzzn_: There isn't a node module that imitates or ties into the ssh protocol... you could write one using node-gyp
14:50 < zbzzn_> ok, that answers my question. Are you sure?
14:50 < jas-> zbzzn_: Wait... google says there is https://github.com/Ralt/node-ssh
14:50 < jas-> zbzzn_: Why don't you search for things yourself out of curiosity?
14:51 < zbzzn_> I did, thats how I came up with shync
14:51 < jas-> zbzzn_: And https://github.com/mscdex/ssh2
14:51 < zbzzn_> I thouhgt I might missed something
14:52 < jas-> zbzzn_: Try other search engines if your not satisfied with your initial results
14:52 < zbzzn_> The problem is that you can never know if the module you get actually does what it claims it does 
14:53 < zbzzn_> anyway...
14:53 < niggler> zbzzn_ jas- what you need to do
14:53 < niggler> is try the module
14:53 < niggler> and report your experiences
14:53 < niggler> either a blog post or a rant here
14:53 < jas-> niggler: Thanks! couldn't have put it better myself
14:53 < zbzzn_> hehe, well Shync works perfectly ;)
14:53 < zbzzn_> as a wrapper for OS ssh
14:56 < sadasant> Good day, great people
14:56 < sadasant> I have a single question.. about express
14:56 < niggler> is there a way to invoke node in a way akin to perl's -lane or awk?
14:57 < sadasant> I have a local server which is saving session changes, and I have a remote server which is not saving session changes, both are calling req.session.save() after the changes and there's no error received in the callback
14:57 < niggler> i know node -pe gets somewhere, but it would be nice to have a mode that reads line by line, splits fields, and exposes $1,$2,...
14:58 < sadasant> Both have exactly the same code, sessions are stored in a local redis database
15:00 < spion> when spawning processes with child_process.spawn, how and when can I check if the process was spawned successfully?
15:03 < spion> in other words, when is the error event emitted when a child_process.spawn fails? In the next tick? After some arbitrary time?
15:09 < neeky> HTTP protocol:  If the first communication a clinet sends a server is an HTTP POST, the server (node + connect/express with cookies) creates a session, but does not send the session ID a a cookie to the client - is this a bug, or per http protocols?
15:31 < neeky> is it possible to use secure cookies if the connection between node and the proxy that is providing SSL is only HTTP?
15:32 < neeky> IAW: node.js <-HTTP-> PROXY <-HTTPS-> CLIENT
15:36 < kurkale6ka> Is there an epel nodejs rpm? Supposedly there should be and I installed dl.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm but yum install nodejs fails
15:38 < wankdanker> Does anyone know if v8::String::Write(uint16_t *buffer, ...) writes a UCS-2 encoded string? Or if not, what the encoding is?
15:39 < apipkin> I have a benchmark.js script that i'm running via command line. I am wanting to create a UI for it in node.js, but I'm a little lost on the aspect of running a command line script and returning the output to back to the UI. Anyone have any thoughts or links on how to do this step?
15:43 < wraithgar> Where is the UI apipkin?
15:44 < apipkin> wraithgar: it will be running locally. the commandline takes a lot of options and I think it would be ideal to have a UI for it. then ideally, be able to do something with the data returned such as chart it or put it in a table for comparison
15:49 < neeky> answer: you have to set: proxy_set_header        X-Forwarded-Proto $scheme;
15:50 < neeky> in nginx for connect to properly use secure cookies
15:51 -!- mode/#Node.js [+o TooTallNate] by ChanServ
15:58 < The_Fly> what is the status on https://github.com/joyent/node/issues/5108 ?
15:59 < The_Fly> I'm on 0.10.12
15:59 < The_Fly> still have to just downgrade?
16:05 < FunnyLookinHat> Anyone have a good example of using a Singleton to load a bunch of models with Sequeliez ?
16:05 < FunnyLookinHat> * Sequeliez
16:05 < FunnyLookinHat> ...
16:05 < FunnyLookinHat> Sequelize
16:13 < neeky> FYI: https://gist.github.com/nikmartin/5902176
16:14 < jdelgado> People still use sessions?
16:14 < jdelgado> :P
16:14 < neeky> sessions are REST-ful 
16:15 < neeky> if that's what you are implying ;)
16:15 < foobar321> what is the policy of reporting potential security issues ?
16:15 < jdelgado> No, but I think a majority have switch over to OAuth
16:16 <@mbalho> foobar321: http://nodesecurity.io/
16:18 < jdelgado> Hypothetical: Single string non-cluster node process does child_spawn on a multi-string node instance, would that work? Or does the parent have to be multi-string too?
16:34 < pala2> which server-side frameworks you use for middleware when using angular.js on client?
16:39 < aj_> question about file permissions if anyone has a minute
16:40 < Havvy> It's better to ask the full question.
16:40 < aj_> I have an express app, with app.configure having the static files go to /public
16:41 < aj_> css file loads just fine from css/style.css, but fonts return 404
16:41 < prettyrobots> ?
16:41 < prettyrobots> Easy way to convert the context of a Buffer to a hex string?
16:42 < prettyrobots> toString('hex') doesn't seem to work.
16:42 < prettyrobots> Nor does toString(16)
16:45 < prettyrobots> Ignore me.
16:46 < prettyrobots> I was manipulating an array, not a buffer.
16:46 < prettyrobots> I'm a big dummy.
16:47 < czzarr> hi, I have a question about Streams2 in objectMode: when I take substack's code from https://github.com/substack/stream-handbook#creating-a-readable-stream to create a Readable Stream and try to use it to create an objectMode Readable Stream by pushing { key: String.fromCharcodeAt(c++) } instead of just String.fromCharcodeAt(c++), in stdout I only get { key: a } and then it stops instead of getting the whole alphabet. Why is that?
16:48 < czzarr> I pipe it through a Transform stream before piping to process.stdout by the way
16:51 < czzarr> created a gist: https://gist.github.com/czzarr/5902531
16:52 < tellnes> czzarr: you need to call the done function in _transform()
16:54 < czzarr> @tellnes, thanks that worked!
16:55 < tellnes> czzarr: also, you should not touch internal variables
16:55 < tellnes> stream._writableState
16:56 < Kakera> why do I get a "not a package" error when I clone using an "http://.." link, but not when using a "git://..." link?
16:56 < Kakera> (in both cases it fails because it's not an npm module)
16:57 < czzarr> tellnes: is there another way I can have a transform stream that's writable in objectMode: true and readable in objectMode: false ?
17:00 < mscdex> Kakera: what does the http:// link look like? does it point to a tarball?
17:01 < Kakera> mscdex: https://github.com/SteamRE/SteamKit.git
17:01 < mscdex> Kakera: it has to be a tarball url if you're using http(s)://
17:01 < mscdex> Kakera: e.g. https://github.com/SteamRE/SteamKit/tarball/master
17:02 < Kakera> mscdex: so it assumes it has downloaded a tarball?
17:02 < mscdex> Kakera: npm downloads the tarball at that url and looks inside for package.json
17:03 < Kakera> mscdex: what happens when the url is not a tarball?
17:03 < mscdex> Kakera: you probably get the error you mentioned earlier :-)
17:03 < tellnes> czzarr: hmm. I do not know. It should have been documented.
17:04 < tellnes> czzarr: try searching the mailing list and/or the issue tracker
17:10 < Kakera> "not a package" is a weird wording then
17:10 < Shayanjm> Hey, I'm trying to create a simple medium.com watcher so I can automatically update my page with my latest posts. Is there a preferred Node scraper package that people use? Or better to bake my own?
17:10 < mscdex> well, it's true what it says, what it got from the web server was not a package
17:10 < Shayanjm> (given the fact that medium doesn't have an API yet)
17:11 < mscdex> whether that was a tarball with no package.json, or some html, or a picture of richard simmons, it doesn't really matter since npm can't do anything with it anyway
17:12 < Kakera> but it doesn't print out that error when it's a git repo without package.json
17:12 < Kakera> as in, the url starts with git
17:12 < mscdex> i dunno about that, i've never used git urls
17:15 < durango> Shayanjm: dont make ur own there are plnty
17:16 < durango> i forget th ename.. but search for nodejs beautifulsoup
17:16 < durango> u should find a few
17:16 < Shayanjm> yeah that's what I figured
17:19 < Shayanjm> https://github.com/harryf/node-soupselect -- This looks good. Thanks @durango
17:19 < durango> yup
17:20 < durango> Anyone know of a good module that "refreshes" my express app upon changes?
17:20 < Shayanjm> supervisor?
17:20 < Shayanjm> https://github.com/isaacs/node-supervisor
17:21 < durango> thought there might be something better thanks :)
17:23 < fiws> forever?
17:23 < czzarr> supervisor works pretty well, i'm not sure what more you'd want
17:26 < Shayanjm> If you want something a bit more robust
17:26 < Shayanjm> You could hack together something with Grunt + Supervisor + LiveReload
17:26 < Shayanjm> but for the most part, supervisor works pretty well in my experience
17:29 < rtgibbons> Shayanjm, durango: we've started using grunt-nodemon for that (along with grunt-concurrent to start grunt-watch)
17:31 < Shayanjm> Good call rtgibbons, I didn't even know about grunt-nodemon. Will look into it. We've just been hacking together some grunt tasks manually, which work fine for us... but for larger environments it might be better to keep things standard.
17:31 < durango> rtgibbons: interesting
17:33 < hackygolucky> jden: forgot to mention #pdxnode 
17:33 < hackygolucky> if you ever wanna lurk :D
17:48 <@MI6> joyent/node: Brian White v0.10 * dc3c2d1 : zlib: level can be negative (+1 more commits) - http://git.io/qzwOVg
17:54 < sinclair|net> hey all
17:54 < zlatko> hey 
17:54 < sinclair|net> is it possible to have multiple handlers on a http server object
17:54 < sinclair|net> ?
17:54 < zlatko> what do you mean multiple handlers?
17:54 < sinclair|net> welll
17:55 < Havvy> Is the HTTP Server object an event emitter?
17:55 < sinclair|net> var server = http.createServer(handler); <-- i want to have multiple handlers
17:55 < sinclair|net> Havvy: no idea, is it?
17:55 < Havvy> (I've not used the http.Server object.
17:55 < _6a68> http://nodejs.org/api/http.html#http_class_http_server
17:55 < Havvy> sinclair|net: Also, can't you just put a proxy that takes multiple handlers there?
17:55 < _6a68> "Class: http.Server This is an http://nodejs.org/api/events.html#events_class_events_eventemitter with the following events:"
17:56 < sinclair|net> Havvy: not really
17:56 < sinclair|net> Havvy: assume an existing application that is already handling its own requests, i want to extend that
17:56 < _6a68> API docs are very documentary
17:56 < zlatko> why not?
17:56 < zlatko> ah
17:57 < zlatko> but still, I think you could?
17:57 < sinclair|net> notes, it was just a quick question is all
17:57  * sinclair|net doesn't need to be spoon feed information
17:57 < zlatko> I think it would be possible :)
17:57 < sinclair|net> a simple yes or no would suffice
17:57 < sinclair|net> zlatko: all g mate
17:57 < zlatko> well i don't know the answer but you have intrigued me :)
17:57 < threecreepio> well when you pass in a listener to the http server, all it really does is add it as an event listener to 'request'.. so you can just do that with your other handlers.
17:58 < zlatko> threecrepio so what would happen if you add multiple var srv1 = http.createServer(listener1); srv2 = ... listener2 ?
17:58 < durango> Has anyone in here figured out how to install npm locally without having to completely copy the npm registry / install couchdb / etc.?
17:59 < sinclair|net> by the way, who here writes restful services with nodejs?
17:59 < threecreepio> sinclair|net - http://hastebin.com/genuyomiwa.js
18:00 < sinclair|net> threecreepio: nice one, thanks
18:00 < zlatko> i did some
18:01 < threecreepio> no problem
18:01 < zlatko> yeah cool :)
18:07 < mntl> hello
18:08 < mntl> i've just posted question to stackoverflow. could someone help me?
18:08 < mntl> http://stackoverflow.com/questions/17410773/c-template-class-binding-to-nodejs
18:25 < Shayanjm> Okay so say I want to scrape my medium.com profile for new posts that I might create, so that I can automatically populate them onto my own site
18:26 < Shayanjm> Given the fact that they don't have an API and I don't want to have to spam them with a bunch of requests from my own box... what's the most elegant way of doing this?
18:44 < AWinterman> Shayanjm: you're stuck looking for html attrs
18:44 < AWinterman> unfortunately
18:44 < Shayanjm> I'm more looking for direction on the process I think
18:44 < AWinterman> you'll have to update your script any time they change id
18:44 < Shayanjm> i.e: Polling? How often?
18:44 < AWinterman> i mean the html
18:44 < AWinterman> up to you
18:45 < AWinterman> how often do you post on there?
18:45 < AWinterman> how up to date does your site need to be
18:45 < Shayanjm> Honestly, not very often. Ideally i'd like to make it a bit of a "realtime" thing though. Just for coolness factor I guess
18:45 < Shayanjm> but if there isn't an elegant solution for that
18:45 < Shayanjm> I think I could live for simple sporadic polling
18:45 < Shayanjm> live with***
18:47 < AWinterman> yeah, I mean you can't really do anything better
18:48 < AWinterman> alternatiuvely, does medium.com have a setting to notify you when a user posts?
18:53 < Shayanjm> I don't think it does
18:53 < Shayanjm> You'd have to subscribe, and even then I think its a mess of JSON in the back
18:53 < adek> I wish to implement worker. I have some data that will be provided on process creation and then I want to interact with this object via sending it messages and making it do work and then sending response. Is it possible to put some data in process and then make it waiting for messages sent by send function?
18:54 < kenperkins> I'm wiped
18:55 < Shayanjm> adek: you could do a worker.on('message', blah)
18:55 < adek> Shayanjm: so process exists until I say it to terminate?
18:56 < Shayanjm> Is this in the context of clustering, adek?
18:56 < Shayanjm> How are you spawning your workers to begin with?
18:57 < adek> Shayanjm: Now I am collecting information about how to do it. I want to load untrusted code - initiation process and then use provided function - this is where I need separate process to be able to control execution time.
18:57 < Shayanjm> ahhh, that's a bit complex
18:57 < Shayanjm> if your'e loading untrusted code, that's always a bit dicey
18:57 < Shayanjm> well, here's the really simple basis: http://stackoverflow.com/questions/8534462/nodejscluster-how-to-send-data-from-master-to-to-all-or-single-child-workers
18:58 < adek> I realise. But I think that vm module with careful choose of initial environment will make sure that user cannot access external environment, only execution time remains.
18:59 < Shayanjm> What's the production element of this? How fast/slow do you need it to execute?
18:59 < Shayanjm> There are millions of ways you can do this, but the more secure you want to be the longer it's going to take to fully execute
18:59 < adek> Performance is not critical.
19:00 < adek> If it would be 10 times slower I wouldn't mind. What matters is how easy it is to do and what level of security can be achieved.
19:00 < adek> 100*
19:00 < Shayanjm> If performance was absolutely no issue
19:01 < Shayanjm> and (potentially) money
19:01 < Shayanjm> this is a total stab in the dark, but the way I would do it is spawn a micro AWS instance with preloaded environment
19:01 < Shayanjm> execute it there
19:01 < Shayanjm> and return
19:01 < Shayanjm> it'll be completely encapsulated, and you can just port the result into the view
19:02 < Shayanjm> granted, that might take a little while. Not sure how fast aws can provision micro instances
19:02 < boutell> hi. Anybody know their crypto? I'm wondering what crypto.createHmac actually does with the "key" argument. The password-hash module passes the salt as 'key', and the result is not the same as prepending the salt to the password before hashing it. 
19:02 < boutell> it's no big deal, I can implement a backwards compatibility thing for my old passwords that are salted in the other way, but I'm curious what is actually going on in createHmac.
19:03 < jdelgado> Anyone have an idea on how to grab a stack without triggering a error in express>?
19:03 < boutell> jdelgado: console.trace()
19:03 < adek> Shayanjm: I would prefer to do it on single machine. I know that highest security level I can achieve by doing everything on new VM, but I would prefer to do it without.
19:03 < boutell> nothing to do with express though
19:04 < Shayanjm> adek: then much of your time will have to spent building sanitization filters. Your code will have to be very intelligent
19:04 < Shayanjm> have to be spent***
19:04 < jdelgado> boutell: That triggers an error
19:05 < adek> Shayanjm: I just don't want to allow user access filesystem and limit execution time, which I think shouldn't be that difficult
19:06 < rohanrhu> hi
19:07 < rohanrhu> is there recommended editor or ide for node development on windows 7?
19:07 < boutell> jdelgado: can you be more specific? console.trace does not cause any errors for me.
19:10 < Stumbler> Do you guys know of a software could help me 'map' source code to a more visual flow-charty like document?  I inherited a monster of an application that was poorly coded and documented that I need to port.
19:10 < Shayanjm> rohanrhu: whatever you're comfortable with. Sublime is nice on Windows.
19:12 < RLa> Stumbler, sure that won't end up like that: http://img.thedailywtf.com/images/201101/DependencyGraph.png ?
19:12 < rohanrhu> Shayanjm: im using netbeans but it does not support node autocomplete
19:12 < Stumbler> lol.. I'm sure it will, but I could use just a little more than variable names right now RLa XD
19:24 < sinclair|net> hey all
19:24 < sinclair|net> if i have multiple http handlers, then the multiple handlers get invoked on a http request
19:25 < sinclair|net> what is the correct way to prevent additional handlers being fired?
19:31 < sinclair|net> anyone?
19:32 < jdelgado> sinclair|net: define http handlers
19:32 < sinclair|net> var server = http.createServer(handler); <-- handler
19:32 < jdelgado> On one port, or multiple?
19:32 < sinclair|net> server.on('request', handler) <-- another handler
19:33 < sinclair|net> jdelgado: so, i have two handlers handling http requests
19:33 < jdelgado> ah
19:33 < sinclair|net> basically, if one handler "handles the request" it needs to prevent the second handler from firing
19:34 < sinclair|net> not sure on how to do that
19:34 < jdelgado> Can you put one inside the other? I'm thinking pragmatically it would be hard to sync the two
19:34 < sinclair|net> jdelgado: that may work
19:34 < jdelgado> :)
19:40 < rohanrhu> C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\M ... npm says build error while buildin node-gyp
19:40 < rohanrhu> how can i solve this?
19:58 < jasonkuhrt> would it be accepted to add a project logging utility to the GLOBAL object, or would respectable nodists puke?
19:59 < jasonkuhrt> for instance an instance of a winston logger
19:59 < jasonkuhrt> that you want to use throughout your project instead of stock console.log
19:59 < jasonkuhrt> and you don't want to have crazy lookup paths or even have to require it in *every* file
20:00 < Draggor> what's wrong with requiring it?
20:01 < jasonkuhrt> Draggor: I just moved my logger to a util folder
20:01 < jasonkuhrt> now I have to find-replace the require statement in many places
20:01 < jasonkuhrt> on top of it the lookup path in some cases is ../../../util/logger
20:01 < jasonkuhrt> this pain is 100% unhelpful as far as I can tell
20:01 < jasonkuhrt> in a test suite
20:02 < jasonkuhrt> I could just set logger to a noop
20:02 < jasonkuhrt> dono
20:02 < jasonkuhrt> just seems a little too insane to go with the grain here
20:02 < jasonkuhrt> another case is using lodash
20:02 < jasonkuhrt> but at least its a node_modules file
20:02 < jasonkuhrt> so the lookup path doesn't change
20:12 < Trudko> what are alternatives to node inspector I am annoyed by econnrefused issue
20:36 < raduu> hi, I m experiencing a strange behavior with express js/socket io and redis sessions. The redis server is getting hammered (CPU usage goes to 90% and doesn t respond, express logs don t scream anything)
20:36 < raduu> only solution is restarting express server, which sets everything back to normal
20:37 < raduu> this happens only in production (once every 3-4 days)
20:38 < raduu> https://gist.github.com/samsonradu/997f5c475d01b3eee3e6 here s my npm list if it helps
20:38 < spatafore> hi
20:38 < bogus__> hello everyone, i'm a node newbie and i'm trying to understand how to upload a file with express framework
20:39 < spatafore> how works that thing, nobody talks :( zzzzzzzzzzzzzzzzz
20:39 < bogus__> i have added the bodyParser() middleware
20:39 < bogus__> and now in my form i added an input with file type
20:40 < bogus__> after submission i have that file in the the req.files.myinputname
20:40 < bogus__> all good, but what i get an empty file when no file are selected?
20:41 < bogus__> s/what/why
20:41 < bogus__> is this intended?
20:42 < tuhoojabotti> ttyl. im gonna have sex.
20:42 < tuhoojabotti> :D
20:43 <@mbalho> tuhoojabotti: please keep that sort of thing to yourself
20:43 < tuhoojabotti> You can thank my gf for that. 
20:43 < tuhoojabotti> Im sorry. 
20:43 < bogus__> i can thank your gf too
20:43 < bogus__> jk
20:43 < bogus__> :)
20:44 <@mbalho> goddamned brogrammers
20:45 < bogus__> anyway back in topic, if this is the common behaviour how can check if a file has been submitted or not?
20:45 < bogus__> looking if req.files.myinputname.name === ''?
20:48 < bogus__> hmm i'll give a shot in #express
20:48 < klaemo> good god, objective-c is such an awkward language when you're used to js! :-/
20:49 < Stumbler> yes, yes it is XO
20:49 < klaemo> haha okay so I'm not the only one :D
20:50 < Stumbler> Nope.  If you dive in and focus on it for a week it starts making more sense, then you'll start to think JS is awkward lol
20:50 < Stumbler> but I think that's the nature of the game
20:51 < Stumbler> I actually kinda like the bracket object syntax.  It's clumsy at first.
20:52 < klaemo> yes exactly, seems so much work to just append a string 
20:52 < raduu> anyone in the socket.io area??
21:04 < Trudko> Guys I have simple form for registration using backbone js http://jsbin.com/aneyim/1/edit for whatever reason request get stuck in pending state for a while and then I get empty response  therefore I get error in backbone
21:10 < klaemo> Trudko: does the request hit the correct route on the server?
21:10 < Trudko> klaemo: yes I debugged it, not sure if I wrote reponse correctly
21:11 < klaemo> Trudko: you need to call res.end()
21:12 < zackiv31> anyone seen this error with nodemon? [nodemon] exception in nodemon killing node, Error: watch ENOSPC
21:14 < klaemo> Trudko: also, it looks like you're using express, so you wouldn't necessarily have to do all that. You could just use res.send() http://expressjs.com/api.html#res.send
21:14 < klaemo> but it's good that you're trying to use the more low level apis :)
21:17 < sorensen> so sads, nodeconf all over now
21:17 < niekniek> hello javascript guru's! i have something simple i cannot solve... i want to send the value 13 when enter is pressed in my input field... currently i have onkeypress="sendMessage(this.value,this. <-- what to put here??
21:18 < niekniek> ofcourse i can do a handler and blabla, but something simple like that could be done right??
21:20 < threecreepio> well it'd probably be.. sendMessage(this.value, event.which) .. not sure about cross-browser. might be a question better suited for ##javascript
21:22 < Chiffon35> hi all
21:42 < Kakera> so I'm looking at npm's cache.js and it doesn't make sense to me
21:43 < Kakera> when you install from a git url, it clones the repo, then fetches it, then gets the latest commit, then packs it into tmp.tgz, then immediately extracts it?
21:43 < Trudko> klaemo: thanks :)
21:43 < Trudko> klaemo:  yeah problem was with the way I returned response first with the end and then i didnt realized i need to return json to backbone
21:44 < klaemo> Trudko: yep, with express it's probably res.json({beep: boop}) you're looking for
21:46 < Kakera> var archive = [ "fetch", "-a", "origin" ]
21:46 < TonkaTruck> What's the preferred way to develop your own npm package?  Do you have it in a folder under a host project to mess around with it?  I had the github repo url in my host project's package.json but this requires me to make a push and npm update.  Is a git submodule the best way?
21:46 < Kakera> makes total sense
21:47 < klaemo> TonkaTruck: check out "npm link"
21:47 < Kakera> but then again, it says "needs to be rewritten" at the top
21:48 < TonkaTruck> klaemo: thanks!
21:52 <@MI6> joyent/libuv: bnoordhuis created branch autotools - http://git.io/dF2v8A
21:56 < FunnyLookinHat> Strange - with Sequelize I'm getting this error when trying to do source: Sequelize.TEXT: "ReferenceError: TEXT is not defined"
21:56 < adek> Is there a way to pass timer object to other process? When I try to send it I get circular json error...
21:57 < FunnyLookinHat> ugh typo.
21:57 < FunnyLookinHat> I try to not bring those to IRC... ;-)
21:58 < bnoordhuis> adek: you can't
21:59 < fauntle> simple licensing question: Can I use MIT license on my module if the dependencies have different licenses?
21:59 < Kakera> fauntle: any license you want
22:00 < fauntle> Kakera: I'm assuming that since none of the modules are actually included in my codebase, it doesn't matter, right?
22:00 < neeky_> TonkaTruck, this post will save you lots of tears: http://justjs.com/posts/npm-link-developing-your-own-npm-modules-without-tears
22:00 < Kakera> fauntle: unless one of the dependencies is GPL, then your license must be GPL-compatible (if FSF's opinion matters to you)
22:01 < TonkaTruck> neeky_: Thank you this is precisely what I was looking for.
22:03 < jdelgado> Any major differences between express's sendfile and download methods?
22:03 < tjholowaychuk> jdelgado same thing, .download() just makes it an "attachment"
22:04 < jdelgado> tjholowaychuk: Ah, thank you sir.
22:04 < tjholowaychuk> jdelgado https://github.com/visionmedia/express/blob/master/lib/response.js#L367
22:04 < raduu> I m experiencing a strange behavior with express js/socket io and redis sessions. The redis server is getting hammered (CPU usage goes to 90% and doesn t respond, express logs don t scream anything) . Restarting the express server puts everything back to normal. (this happens very rare)
22:11 <@MI6> joyent/node: Timothy J Fontaine master * 6f8ddf3 : test: fix tls-hello-parser-failure on smartos - http://git.io/NBY6_w
22:12 < fauntle> raduu: sounds about right
22:13 < raduu> sorry?
22:13 < fauntle> raduu: I remember seeing some issues about using redisStore with socket.io
22:13 < fauntle> raduu: let me see if I can find them
22:13 < raduu> I ll be back to MemoryStore in a second.. I m not clustering anyway
22:13 < raduu> :) ok, I d appreciate it
22:13 < fauntle> raduu: is this what you're referring to? https://github.com/LearnBoost/socket.io/issues/862
22:15 < raduu> nice.. exactly that is
22:16 < fauntle> raduu: I had this problem earlier. Fortunately I was able to use Faye instead
22:16 < raduu> what is that?
22:16 < fauntle> raduu: http://faye.jcoglan.com/
22:16 < fauntle> raduu: might not work for your case, though
22:17 < raduu> obviously
22:18 < raduu> this is strange..
22:18 < raduu> I actually am using MemoryStore for sessions
22:18 < raduu> but still using redis pub/sub in other circumstances
22:18 < Kakera> and why does it use gz to compress an archive which it's going to extract immediately and then throw out
22:18 < Kakera> maybe I'm misunderstanding something
22:21 < raduu> I m just using redisStore for session handling in express
22:24 < Kakera> I really hope it's rewritten as soon as possible
22:25 < Kakera> by someone who understands it
22:34 < niekniek> going nuts here.... why can't i access a mongoose return object with object.socketid when this is in there when i console.log the whole object!!
22:37 < Samuel450451> How to include .js file in my html ?
22:37 < neeky_> Wat
22:37 < Havvy> Samuel450451: <script src="path/to/file.js"></script>
22:38 < Samuel450451> Havvy But it makes http request to get the file ... It's not like other language 
22:39 < Havvy> Yeah, the script has to be downloaded before it can be ran.
22:39 < neeky_> Samuel450451, html is a client side protocol, the client has to request the file via http
22:42 <@isaacbw> http is just a file transfer protocol, really
22:42 <@isaacbw> with a misleading name
22:43 < shlevy> Hi. I don't understand the meaning of the 'encoding' parameter to Transform._transform. The docs says it's only passed if the chunk is a string, but aren't strings always utf8?
22:43 < shlevy> It seems like it would make more sense to pass the encoding parameter if the chunkis a buffer
22:44 < tfoureur> Hi guys, I'm kind of new to nodejs, and I'm building a small application. I have an architectural question. It's a card game, people connect through web sockets, and one game has 4 players. Should I spawn a process for each game? Or should I just keep all the game classes in an array and send the events to them?
22:44 < tfoureur> I don't know what the best architecture is
22:45 < shlevy> Generally you don't need to spawn processes to scale well with node
22:45 < esya> Hmm
22:45 < esya> So an array would be fine?
22:45 < esya> Like.. One with all open connections, and one with all current games?
22:45 < shlevy> esya: Well, depends on what you mean. You don't need to poll for events for each open game, in general
22:46 < shlevy> You'd only need an array of games if for example some global event might occur
22:46 < shlevy> But if games are all self-contained, then you don't need to say manually poll each open socket for data
22:46 < esya> Hmm.. Then do I pass the socket to the game class when I create it ?
22:47 < esya> (I'm using socket.io by the way)
22:47 < esya> It's my first node app so I would like to avoid big architectural mistakes :)
22:48 < shlevy> When a new game is created, you create all the sockets you need and wire them up appropriately. So you set up event listeners for the different things that might happen to the socket, and how those events should affect the other sockets for that game
22:48 < shlevy> Then you're done. You don't need to keep track of those sockets any more. As long as you take care of all events that might happen, the lifecycle is already managed for you
22:48 < esya> I see
22:49 < shlevy> If new players can join a game after it's started, then yes you'll probably need to maintain a per-game list of sockets to do it right
22:49 < esya> shlevy: Thanks for the infos then :)
22:50 < esya> shlevy: Oh right, they will be able to do so. I'll keep an array then
22:51 < esya> I hope you'll find the solution to your string problem, wish I could help
22:53 < Havvy> Woah, I caused a segmentation fault with Node.
22:53 < shlevy> Nice
22:53 < Havvy> And it's repeatble.
22:53 < Havvy> repeatable
22:55 < gkatsev> isn't require supposed to be able to read JSON files? I'm doing require('./foo.json') but node is wanting for more input in the repl.
22:57 < gkatsev> oh, looks like my json was malformed.
23:04 <@MI6> joyent/node: Peter Rust v0.10 * 16b59cb : http: use an unref'd timer to fix delay in exit - http://git.io/zdPqJg
23:07 < bradleymeck> anyone know how to mix arduino embedded c and johnny 5?
23:23 <@MI6> joyent/libuv: Ben Noordhuis autotools * ddd7e04 : build: switch to autotools - http://git.io/h6UmYg
--- Log closed Tue Jul 02 00:00:07 2013
