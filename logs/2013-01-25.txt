--- Log opened Fri Jan 25 00:00:22 2013
00:00 < azylman> I think request supports it too
00:00 < azylman> That might be easyer
00:00 < azylman> https://github.com/mikeal/request
00:00 < azylman> They have an example that uses streams:
00:00 < azylman> fs.createReadStream('file.json').pipe(request.put('http://mysite.com/obj.json'))
00:04 < chovy> CoverSlide: how would i take this file that gets sent via form and save it to disk?
00:04 < Hotroot> So you can do module.exports = function; to expose it, but how would I do that for multiple functions?
00:04 < azylman> You can export an object instead
00:04 < chovy> Hotroot: in a route?
00:05 < azylman> module.exports = {funtion1: some_function, function2: some_function}
00:05 < CoverSlide> with bodyParser, the file gets saved to a tmp directory
00:05 < azylman> Then when you require it it'll be like "my_module.function1"
00:05 < chovy> CoverSlide: yeah. i saw that
00:05 < styol> SomeoneWeird: I did it! Only accepts one argument at the moment, but, holy moly
00:05 < Hotroot> No, I want them exposed directly
00:05 < azylman> I'm not sure what you mean
00:05 < CoverSlide> not a big fan of that
00:06 < Hotroot> It isn't a module, it's just misc functions I don't want taking up room
00:06 < CoverSlide> but you could stream it over to another location
00:06 <@Nexxy> you should try to only export one function if at all possible
00:06 < chovy> Hotroot: i usually do var up = modules.export = {}; up.get = function() { }; ./routes/upload.js
00:06 < isaacbw> Nexxy, what
00:06 <@Nexxy> isaacbw, you should try to only export one function if at all possible
00:06 < chovy> then i have up.post, etc
00:07 < chovy> up.delete
00:07 < Hotroot> I don't want it like that
00:07 < Hotroot> I want it to just parse the JS like in the browser
00:07 < Havvy> Hotroot: I've found no other way to do that.
00:07 < azylman> Nexxy, what about for things like a helpers/utils file that has 10-15 two or three line functions? Do you think that each of those should be a separate file?
00:07 < Hotroot> As I said, it isn't a module, I'm just lumping these pure functions together in a separate file
00:08 < isaacbw> Nexxy, I don't mean repeat it
00:08 < Havvy> Maybe something like this:  var fns = require('fns');  for (fn in fns) { globals[fn] = fns[fn]; }
00:08 < isaacbw> I mean why are you saying that
00:08 <@Nexxy> because it's true :)
00:08 < isaacbw> oy
00:08 < azylman> You shouldn't mess with globals
00:08 < isaacbw> nevermind
00:08 <@Nexxy> also true
00:09 < marshall> hey node
00:09 < Havvy> azylman: globals is local to your module.
00:09 < Havvy> No?
00:09 < chovy> CoverSlide: so should i just copy the file from /tmp into ./public/uploads/ ?
00:09 < marshall> anybody seen tjholowaychuck?
00:09 < Hotroot> I would assume not, it's called "global"
00:09 < chovy> or is there another way
00:09 < azylman> Yeah, it's definitely not local to your module
00:10 < CoverSlide> fs.createReadStream(filename).pipe(fs.createWriteStream(dest_filename))
00:10 < Hotroot> Okay, back to the main file then I guess =/
00:10 < isaacbw> let's just say that what Nexxy is saying isn't absolute
00:10 < isaacbw> I disagree
00:10 < isaacbw> so do whatever you want
00:10 <@Nexxy> definitely do whatever you feel is best
00:10 <@Nexxy> I'm simply stating the generally accepted best-practice
00:10 < Hotroot> I'll just leave them for now
00:10 <@Nexxy> within node
00:10 < isaacbw> without explaining why you believe it?
00:11 < Havvy> Then what is the module global called?
00:11 <@Nexxy> I don't really have time right now :P
00:11 <@Nexxy> I ws just trying to offer a suggestion
00:11 <@Nexxy> take it or leave it, totally up to you
00:11 < azylman> Nexxy: I'm seriously curious, do you think then that something like underscore is a module that institutes bad practices?
00:11 < azylman> For having underscore.map, underscore.filter, etc.
00:12 <@Nexxy> underscore isn't a node module
00:12 < CoverSlide> isn't _ a function itself?
00:12 < chovy> CoverSlide: thanks.
00:12 < CoverSlide> i may be wrong
00:12 < CoverSlide> i thought _(x) does something
00:12 < azylman> It's a node package - are you differentiating between a package and a module?
00:12 < azylman> A package is just a third party module, no?
00:12 < Havvy> CoverSlide: Only if you import Underscore.js to _ or are in the REPL and the last expression you typed in was a function.
00:12 <@Nexxy> no, I'm saying that it's generally for use in client-side 
00:13 < Havvy> And Underscore is a JS library. It has both Node and Web bindings.
00:13 <@Nexxy> so of course it makes senes in the client-side
00:13 <@Nexxy> it abstracts all the browser BS
00:13 <@Nexxy> and provides a consistent aPI
00:13 < Havvy> Nexxy: No. That's jQuery.
00:13 <@Nexxy> node already has that w/o a monolithic module
00:13 < CoverSlide> Havvy: I'm saying the return value of require('underscore')
00:13 <@Nexxy> Havvy, lol
00:13 <@Nexxy> aaanyway
00:13 < Havvy> Which Node also has a wrapper for.
00:13 <@Nexxy> better argue about it!
00:14 < azylman> CoverSlide it does do something, you're correct. There's two ways to use underscore
00:14 < Havvy> Underscore.js is actually one of the top 10 used modules used by NRC modules.
00:14 < CoverSlide> so in other words, the underscore module returns a file
00:14 < CoverSlide> s/file/function
00:14 < azylman> _(array).map(function(element) {do_something}) and _.map(array, function(element) {do_something})
00:15 < azylman> It returns a function that has function properties :)
00:15 < grownseed> good day everybody
00:15 < azylman> if you do _ = require('underscore') you can use it both of the ways I listed above
00:15 < azylman> Depending on whatever your personal style preference uis
00:15 < CoverSlide> here is how I usually code my modules: module.exports = SomeFunctionName  at the top. I might attach some factory methods to that function, but usually that's all, and that seems a common pattern
00:16 < grownseed> has anybody worked with google's openid auth using the passport-google strategy?
00:17 < Havvy> Oh, right... 'module' is the module global.
00:17 < Havvy> So in the snippet I wrote earlier, s/globals/module
00:18 < grownseed> i've got the auth and auth callback working fine, however i'm trying to get the sso check working, and for reasons i can't understand, none of the parameters passed to the sso call match the identifier provided during openid auth...
00:33 < Astraea> Before I start rolling my own, is there a standard node module for secure logins / sessions / cookies?
00:33 < azylman> There's a standard express session module
00:33 < Havvy> And a cookie middleware too.
00:33 < Astraea> I'm looking at the documentation for that now.
00:33 < grownseed> Astraea: you could try Express with Passport
00:33 < richweskus> Im on the internet
00:33 < Havvy> richweskus: No duh?
00:34 < Astraea> Thanks for the heads up, grownseed. I'll check that out if I can't figure out how I'm supposed to use connect.basicAuth
00:34 < azylman> Basically, express has built in support for sessions
00:34 < azylman> You probably want to look at connect-redis
00:35 < azylman> Astraea: https://github.com/visionmedia/connect-redis
00:35 < Astraea> Thanks.
00:35 < azylman> So basically what you'll do is in your app.configure block you'll put
00:35 < azylman> app.use(express.session({store: new RedisStore}))
00:36 < azylman> And then you can get and set things on the session from any middleware or anything with req.session
00:36 < azylman> e.g. req.session.user = <your user object>
00:37 < azylman> There's other options you can add for express.session as well, as necessary and as the mood suits
00:37 < azylman> As well as options for RedisStore
00:38 < Astraea> So then req.session.user will be the same object as another req.session.user from a different http request from the same client later? (if that makes sense)
00:38 < azylman> Yep
00:38 < azylman> As long as the user doesn't change, any request he makes will have req.session.user the same
00:38 < Astraea> That's rather simple.
00:38 < azylman> Er, as long as the client doesn't change
00:38 < azylman> Whatever, you know what i mea
00:38 < azylman> mean
00:38 < azylman> Yeah, it is simple
00:39 < Astraea> I think so. As long as the browser doesn't close or clear cookies or go into private browsing, etc.
00:39 < azylman> Yeah
00:40 < azylman> You'll probably want to use RedisStore, but I think there's other kinds of stores as well
00:40 < Astraea> So I'd handle the initial sign-in however I want, set a value on the session object (like the user_id from the database), and then just check for this value in future requests? Do you know what kind of security it provides?
00:40 < azylman> Like the default is MemoryStore which just stores it in memory
00:40 < azylman> for that application
00:40 < azylman> So if the application restarts it goes away
00:41 < azylman> RedisStore persists all session data in redis, obvs
00:41 < azylman> Security is totally dependent on what options you add to express.session
00:41 < Astraea> I hadn't considered that. I do reboot my app frequently.
00:41 < Astraea> So my implementation would have been a Memory store by default.
00:42 < azylman> Yeah, you probably want to use redis instead of the default, which is what that connect-redis is that I linked you to
00:42 < Astraea> Yeah, reading it now.
00:42 < azylman> But obvs if you use that you need a redis server
00:43 < azylman> You can run one of those locally, though, and then if you're hosting on something like heroku there are options for redis servers as well
00:43 < Astraea> I'm hosting from an amazon server that I have root shell access to.
00:44 < azylman> Okay
00:44 < azylman> Yeah, you can run redis there
00:44 < Hotroot> Just spent like 30 min unfucking my code =/
00:44 < azylman> There's your problem right there, you wrote fucked code in the first place ;)
00:44 < Hotroot> Moral of the story, push to git after everything
00:52 < MI6> joyent/node: Andy Burke master * 595b597 : Add bytesWritten to tls.CryptoStream  This adds a proxy for bytesWritten  - http://git.io/Xwg9BQ
01:11 < andrepadez_> Hi, can someone help me with a mongoose/mongodb problem that's driving me mad? here's the code: https://gist.github.com/4630603  , what happens is i insert the first location, no problem; when i try to insert the second, i get the error on top of the gist. thanks
01:12 < azylman> What does your schema look like for location
01:12 < andrepadez_> azylman: it's  all in the gist
01:13 < azylman> Ah, I see, didn't realize that thing at the bottom was the schema
01:13 < andrepadez_> azylman: ok, no worries. i can't seem to understand what happens
01:14 < azylman> What is the "..." in the location schema
01:14 < azylman> Is there stuff missing?
01:14 < shanse> does the req.body contain an _id?
01:14 < andrepadez_> the first time i insert it, everything goes nice. the locationd is pushed  to owners.location
01:14 < andrepadez_> yes it does
01:14 < azylman> Is the ID the same every time?
01:15 < andrepadez_> and i've checked it against the only location in the db and they don't match
01:15 < andrepadez_> so there shouldn't be a problem
01:15 < shanse> you're creating a new location and then try to save it with the data that comes from req.body
01:15 < shanse> which containts an _id
01:15 < shanse> right?
01:16 < andrepadez_> i have a function   mapRequestBody tht is run after new Location()
01:16 < andrepadez_> but iy doesn't mess with the _id
01:16 < shanse> does the first request include the _id as well?
01:16 < andrepadez_> it does include a _id but it isn't used
01:16 < andrepadez_> because i invoque new Location()
01:17 < azylman> What does mapRequestBody do?
01:17 < azylman> Exactly?
01:17 < andrepadez_> I'll put it in the gist
01:18 < andrepadez_> https://gist.github.com/4630603 updated
01:18 < andrepadez_> it only maps the request body to the new location object
01:19 < azylman> So you have location set to have a unique constraint, right?
01:19 < azylman> Or wrong?
01:19 < azylman> The Location schema, that is
01:19 < andrepadez_> not quite
01:19 < azylman> Did you at one point in the past?
01:19 < andrepadez_> i use the _id for that
01:19 < andrepadez_> no
01:19 < MI6> joyent/node: Sugendran Ganess master * 83154aa : doc: Connecting debugger to existing node process - http://git.io/lQ3bVA
01:23 < azylman> Go the the mongo console and type db.locations.getIndexes()
01:23 < azylman> While you're using the right collection, that is
01:23 < MI6> joyent/node: isaacs created branch streams1 - http://git.io/QMTBsw
01:24 < andrepadez_> ok, just a sec
01:24 < azylman> So mongoose doesn't delete indexes
01:24 < azylman> So if you had an index as part of your schema and then got rid of it, it's still there
01:25 < azylman> Seems like a bug in mongoose to me but they insist it's a feature
01:25 < CoverSlide> it's super webscalez that's why
01:25 < azylman> lol
01:25 < andrepadez_> azylman: https://gist.github.com/4630603 updated
01:26 < chovy> mongodb is web scale
01:26 < azylman> That's your problem
01:26 < andrepadez_> h, maybe i did, maybe i didn't
01:26 < azylman> You have a unique index in a field called "id"
01:26 < azylman> And there is no field called id
01:26 < andrepadez_> oh, ok
01:26 < azylman> You need to delete that index
01:26 < andrepadez_> i will remove it and it will work, i'll check with you in a minute :)
01:26 < azylman> So your error is saying that the field "id" has a duplicate value of "null"
01:26 < azylman> Which makes perfect sense
01:27 < azylman> Because you have a unique index on id and you never set id
01:27 < andrepadez_> what about the other one "name", i should remove it to?
01:28 < azylman> Do you have a name field that you want to be unique?
01:28 < azylman> If not, delete it
01:28 < MI6> joyent/node: isaacs v0.8 * 72dd3b4 : benchmark: Port http.sh from master - http://git.io/fpYUiw
01:29 < azylman> And not that unique implies "required"
01:29 < andrepadez_> ok
01:29 < azylman> Because if it doesn't exist that's non-unique: you have multiple docs with a value of "null"
01:29 < andrepadez_> db.locations.getIndexes({key['id']: 1}) Fri Jan 25 01:26:09 SyntaxError: missing : after property id (shell):1
01:29 < andrepadez_> i'm still pretty new at this
01:29 < azylman> Look up the syntax for dropIndex
01:29 < andrepadez_> how do i delete those two documents?
01:29 < azylman> I THINK you give it the index name
01:29 < azylman> So you'd do
01:29 < andrepadez_> ok
01:29 < azylman> db.locations.dropIndex("id_1")
01:29 < azylman> And
01:30 < azylman> db.locations.dropIndex("name_1")
01:31 < andrepadez_> perfect!!!
01:32 < andrepadez_> thanks, i was really going bonkers
01:32 < azylman> np, it's kind of tricky
01:32 < azylman> CLEARLY a bug in mongoose, despite their protestations
01:32 < andrepadez_> live and learn :)
01:32 < azylman> The biggest thing is just reading that error message
01:32 < azylman> Since that should give you a pretty good clue what's going on
01:40 < James123_> is node.js faster than go?
01:40 < James123_> is go faster than node.js?
01:41 < Bergle_1> yes
01:41 < lohkey> does it matter?
01:42 < James123_> yes to which one bergle_1?
01:43 < CoverSlide> it depends on the code
01:43 < CoverSlide> go will probably be faster
02:18 < redshadowhero> Are there any key:value caching modules for node? I guess I could make one for myself, but if I'm reinvinting the wheel, someone's probably already done it better.
02:19 < txdv> like redis?
02:19 < redshadowhero> Sort of, but not persistant.
02:19 < azylman_> Google 'node cache'
02:19 < redshadowhero> I want to make a cache that expires after a while.
02:19 < azylman_> First result is a project called 'node-cache' that looks like what you're looking for
02:19 < azylman_> IN memory cache, can also set ttl
02:20 < redshadowhero> azylman_: I did, but I didn't find anything that really appealed to me, so I thought I'd ask for opinions and such to give me more things to research.
02:20 < redshadowhero> I'll give that node-cache a second look, then.
02:25 < SomeoneWeird> use redis and just set expire values
02:25 < redshadowhero> yeah, but that requires some extra setup I just feel is overkill for something like this.
02:45 < TechnoCat> anyone here use testacular? i feel like an idiot trying to set it up
02:55 < TechnoCat> nevermind, figured it uot
03:06 < cainus> just set up npm replication.  whoever chose couch for npm was a stonecold badass.
03:11 < styol> SomeoneWeird: any interest in checking out the implementation or not so much?
03:28 < alexxx> hey
03:28 < alexxx> anyone out there?
03:29 < tjfontaine> nope
03:33 <@TooTallNate> http://www.youtube.com/watch?v=aHN6AViJAvI
03:35 < tjfontaine> TooTallNate: that's what I was humming to myself
03:35 <@TooTallNate> good man
03:40 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
04:12 < samholmes> Anyone know about how to make an app send/receive text messages?
04:12 < L10n> im sure there are modules for SMS
04:16 < styol> samholmes: one way that is pretty crappy, but free/cheap is via email as a lot of carriers have number@carrier.net type end points. The down side of that approach is there are probably a lot of carriers that do not, and you would need to know the carrier of each end-user. Otherwise, there are some services such as tropo, twilio, and otherwise that offer cheapish universal solutions that appear to also have node modules
04:17 < samholmes> styol: How does twitter do it?
04:17 < styol> samholmes: no idea, but probably using their own implementation of.. a voip linux distribution i can't remember the name of at the moment
04:18 < samholmes> Is text messages just voip?
04:18 <@konobi> twilio?
04:18 < styol> i don't believe so. i think it requires actual phone lines but I'm not entirely sure.. doing your own implementation is quite the endeavor from what little i know about it
04:19 <@konobi> samholmes: twilio is probably up your street
04:19 < styol> samholmes: asterisk is what i was thinking regarding the linux distro
04:19 <@konobi> met a couple of the guys from there at nodedublin, good bunch
04:20 <@konobi> samholmes: iirc, that's what joyent uses for their signup confirmation process
04:21 < Leo__> Hey guys, could anyone help me with a totally off-topic question? Does anyone know how can i setup a proxy server? I mean not http proxy but tcp proxy. Any free software that does that on linux? Im looking foward on using aws/ec2 as a "ddos protection".
04:22 < samholmes> twilio is for text messages?
04:22 <@konobi> samholmes: and voice
04:22 <@konobi> Leo__: haproxy
04:22 < samholmes> twilio is a service I have to pay for every text message?
04:23 < samholmes> Is asterisk software that would allow me to make text messages for free
04:23 < samholmes> ?
04:23 <@konobi> no
04:23 <@konobi> there is no "free" way
04:23 < Leo__> konobi: Thanks for the help...
04:24 < samholmes> How does the whole SMS/MMS protocol work?
04:24 <@konobi> samholmes: GSM
04:24 <@konobi> samholmes: just use a service =0)
04:25 <@konobi> trust me... it's a lot easier
04:25 < mscdex> OMGSM!
04:25 < samholmes> konobi: Would the service give me my own text message number; like twitter's 40404?
04:25 < phonebook_> friends, in net.socket.ondata() - how do you turn that Buffer object into a string or javascript object?
04:25 < styol> I agree with konobi. You'll be done in an hour versus a year ;)
04:25 < SomeoneWeird> phonebook_, buffer.toString
04:26 < azylman> samholmes: I think Google Voice has an pi you can use? That's free
04:26 < azylman> api^
04:26 < phonebook_> it comes out as a gigantic string but all i sent was "hello world". http://pastebin.com/5C0fMQVw
04:26 < phonebook_> ...when i use .toString()
04:26 < azylman> Probably not as nice as twilio, but possibly cheaper
04:27 < styol> samholmes: yes twilio supports short codes but they are pretty pricey -- http://www.twilio.com/sms/pricing
04:27 <@konobi> samholmes: short numbers cost extra, but it's possible
04:27 < phonebook_> but then if i set the encoding to utf8 it comes out as an arcane string
04:28 <@konobi> azylman: they also block you pretty quickly
04:29 < azylman> Ah, didn't know that
04:31 <@konobi> yeah, it's not meant for volume usage
04:32 < phonebook_> like i tried consulting the documentation. so i am using net.socket. in the docs, as far as i can tell it is only listed as http://nodejs.org/api/net.html#net_event_data with nothing to describe what the arguments are
04:34 < SomeoneWeird> phonebook_, seriously though, why are you sending HTML and headers by hand?
04:34 < phonebook_> for easy demo
04:34 < SomeoneWeird> "easy"
04:34 < phonebook_> all in one file if someone wants to run it
04:35  * phonebook_ hint
04:35 < SomeoneWeird> anyway, whats being echo'd when you console.log(buffer.toString());
04:36 < phonebook_> several hundred empty lines
04:36 < SomeoneWeird> wat
04:36 < phonebook_> but..
04:38 < phonebook_> if i explicitly encode it does this http://troll.ws/image/f953e025
04:38 < phonebook_> i cant even find the docs for socket.ondata
04:39 < SomeoneWeird> ?
04:39 < phonebook_> i mean just cause i dont know the language well enough yet. im sure tis there
04:39 < SomeoneWeird> http://nodejs.org/docs/latest/api/net.html#net_event_data
04:40 < phonebook_> yeah but there is no list of arguments. 
04:40 < SomeoneWeird> " The argument data will be a Buffer or String. "
04:40 < phonebook_> fair enough
04:41 < phonebook_> okay, ill save the result to a file and see what that looks like
04:41 < owen1> any forums built with node? i found this one - https://github.com/cnodejs/nodeclub (http://club.cnodejs.net/) just curious about alternatives.
04:49 < styol> In general, is it a bad idea to instantiate a method as part of module.exports? IE: module.exports = new Foo();
04:56 < TehShrike> styol: if your module maintains any state at all, you probably want to export the constructor itself
04:57 < TehShrike> styol: so that different modules in the same app can use your module
05:01 < phonebook_> lol okay. a little while later and i managed to save to a file. here it is - ���'���ŀ�F���T׌�B���H���O���K͈�S�
05:01 < SomeoneWeird> u broke it
05:01 < styol> TehShrike: I think I understand what you're saying, but just to be clear, what do you mean by maintains any state? Perhaps the specific example would be best?
05:01 < phonebook_> idk
05:02 < phonebook_> basically i dont know if thats like just data coming in before the stream has ended. and if it has ended is it a string or a blah blah. ill mess with it again tommorow
05:02 < TehShrike> styol: if that object you're constructing ever has its properties change because of outside interaction, or if it changes any other variables inside the scope of your module, that would be state that you would probably want to be specific to each other module that would be using yours
05:04 < styol> TehShrike: aha, yes that is definitely the case. Thank you very much for the explanation and feedback. I can see clearly now the rain has gone.
05:04 < TehShrike> Sweet :-)
05:06 < styol> TehShrike: if a module is extending the prototype of another object, it probably doesn't need to export anything, correct?
05:07 < styol> EventEmitters in particular
05:07 < TehShrike> styol: yeah, if another module is exporting a constructor, you can add to its prototype and every other require() call will get the same constructor that you were changing
05:07 < TehShrike> I don't imagine that would be different for core modules, but can't say for sure
05:08 < styol> awesomesalsa
05:23 < rcombs> does require()'s caching actually return a reference to the same object every time, even across different modules in a single script, or does it return a clone of the object generated by the first require()?
05:23 < rcombs> the latter feels saner
05:26 < cloudbender> var person = {Name: "Joe", city: "Tulsa" } ....... what would this object see as it's prototype ?
05:26 < rcombs> cloudbender: the standard prototype for an Object?
05:27 < cloudbender> ok, so, the two properties, would they then be added to that prototype ?
05:27 < rcombs> no
05:28 < rcombs> and isn't this one for ##javascript?
05:28 < Jakey> node.js sucks
05:28 < Jakey> oh wait
05:29 < Jakey> i mo sorry
05:30 < rcombs> anyone know about my require() question?
05:30 < styol> rcombs: I think, but am not sure, that it is the former. Already reviewed http://nodejs.org/api/modules.html#modules_caching yeah?
05:30 < rcombs> styol: yeah
05:30 < rcombs> styol: it just seems weird
05:35 < rcombs> styol: take a look at https://github.com/gcanivet/node-insteon
05:35 < rcombs> styol: a bunch of files all require("./config.js");, which exports a bunch of stuff
05:35 < rcombs> styol: two files set config.PLM_ACK, and they all seem to expect that change to be reflected in their config objects
05:35 < rcombs> which made me WTF _SO HARD_
05:36 < styol> rcombs: haha yeah, understandable.. it is one way to share state i suppose. I mean, on the other side of the coin, if your application required say the until module 10 times, it might be bad for memory or something else i don't understand
05:36 < styol> *util
05:37 < rcombs> also, one file requires the main module, and calls insteon.connect() to try to reconnect if there's a timeout
05:37 < phun-ky> tbh, node lack a "box" between globals and export variables to share data, instead of including with require('module')(data, to, be, passed). 
05:38 < SomeoneWeird> philips_, ?
05:38 < SomeoneWeird> er, phun-ky 
05:38 < phun-ky> yesh?
05:38 < phun-ky> (sean connery dialect ftw)
05:38 < SomeoneWeird> lol
05:39 < SomeoneWeird> dw
05:39 < phun-ky> to early still, its 06:36 here,only one at work
05:41 < phun-ky> just waiting for the final go on a release now, been working a couple of months on this project. excited as hell
05:42 < styol> phun-ky: in early or there late?
05:42 < phun-ky> open source is the shit if you ask me. I really can't wrap my head around big wigs that embrace closed source, drm, license-hell, profit-milking and so forth
05:42 < phun-ky> styol: in early
05:43 < phun-ky> brb, needs mah coffee!
05:43 < styol> holy moly… 21:40 here still at work, they will never catch me in at 06:40 though haha. Primarily because i'd probably still have to stay this late
05:46 < neekfenwick_> hey chaps.. hope this is a relevant node question.. first time nodejs scripter here, having trouble grokking an i18n file from a dojo project, could someone advise on whether what i'm doing seems sane?
05:46 < phun-ky> hehe
05:46 < neekfenwick_>  The i18n bundles look like e.g. "define({ root: { "stuff": "things" } })" .. hwo would you read this into a nodejs script for processing?
05:46 < neekfenwick_>  readFileSync can get it as a string, but it's not JSON so JSON.parse won't work.  require("./the/path/to/nls/strings.js") fails with "define is not defined"
05:46 < phun-ky> styol: i usually work to 16:00, then work some more at home when the kid has gone to bed
05:46 < neekfenwick_> i thought require() ought to work, but why is defined not defined? I thought it was a standard RequireJS thing and would be available in a nodejs script context?
05:47 < mscdex> konobi: WIP: https://github.com/mscdex/node-pcre
05:47 < styol> phun-ky: oh man, not too shabby. We're doing mandatory 10 hour days (not including lunch) and it rocks
05:48 < phun-ky> mandatory 10 hours day? for how long?
05:48 < styol> I hope forever haha
05:48 < styol> been 3 or 4 months now, can't recall
05:48 < phun-ky> that's practically illegal here in norway
05:49 < styol> i think it is here too, but you're doing basically that too no? especially while working at home on top of it
05:51 < phun-ky> styol: well, when it's open source and I'd like me to be the lead developer after it releases (i'm a consultant staying in different places year around) i put in a little extra effort. but 10 hours is still rare here for me
05:51 < azylman> For three months straight I was doing 15 hours/day, 7 days/wk :p
05:52 < phun-ky> azylman: i hope you got a bonus, or at least overtime :P
05:52 < styol> phun-ky: thats cool, as long as you be happy ;)
05:52 < azylman> No, but everyone was working that much. Startup company and all that
05:52 < styol> azylman: yeah that is nuts, maintained sanity somehow? i dunno, i like sleep and stuff haha
05:52 < azylman> I slept
05:52 < azylman> Just didn't do anything else
05:52 < azylman> 8 hours of sleep, 15 hours of work
05:52 < azylman> Haha
05:53 < styol> thats like enough time to get home and sleep only indeed… dayum
05:53 < azylman> We were all living and working out of a house
05:53 < azylman> So it made it easier
05:53 < azylman> My morning commute was walking downstairs
05:54 <@konobi> mscdex: nice!
05:55 < styol> azylman: oh man. brutality.
05:55 < azylman> It was actually a lot of fun
05:56 < mscdex> konobi: no JIT support yet and not fully tested just yet, but yeah :-)
06:00 < phun-ky> hm
06:01 < phun-ky> did I just disconnect?
06:01 < azylman> There's a phun-ky1
06:01 < azylman> But I still see you
06:01 < phun-ky1> ah *doh*, wrong window
06:01 < phun-ky1> <- ubuntu laptop
06:01 < azylman> lulz
06:02 < phun_ky> to be more confusing
06:02 < matmuchrapna> hey guys, can you help me with node-express?
06:03 < styol> So, yesterday I raised a relatively interesting question / design pattern related to EventEmitters and the ability to essentially pass an argument/object/etc around to event listeners, allowing each to modify the argument before returning it to the emitter itself. There is probably a great reason why this doesn't already exist and why the idea / implementation is terrible, but I'd love some feedback if anyone has any: 
06:03 < styol> https://gist.github.com/4631979
06:04 < azylman> It seems to me that it's going to suddenly become very, very hard to reason about your program
06:05 < azylman> Unless you have all your listeners declared in one file, how do you know what order stuff happens in? Or even what listeners are registered?
06:06 < styol> azylman: well, the order in which listeners are assigned depends on when they are declared and in what order that code is executed, i suppose, but that is a great point indeed. Some sort of weight thing may be necessary. The latter part there is emitter.listeners(event) but that is not a great answer
06:08 < styol> it is perhaps not a one size fits all implementation, but, for something like user registration and a user object where you're knowingly adding specific keys or something to the object, it could potentially be beneficial (or at least that was the original idea behind it, kind of)
06:08 < azylman> How would you use it for user registration?
06:08 < azylman> I guess my main thing is I can't think of any use case where something else that's more popular isn't going to be better suited and/or clearer
06:09 < azylman> It'd definitely interestint, though
06:09 < azylman> And by more popular I mean something like Streams that are built in to node, or using something like async to process stuff in a specific order
06:09 < styol> azylman: i wasn't really able to find anything similar that creates a hook/alter/pass around kind of scenario
06:09 < styol> async is actually being used, waterfall in particular
06:09 < azylman> I mean more where that kind of scenario is what you want
06:10 < styol> user registers, default object is passed around, keys are modified/added/removed, kind of up for grabs
06:10 < styol> it is a concept i've generally adopted from drupal actually
06:10 < styol> though it does have some organization to the chaos with weight and/or the name of modules by default with the weight of 0
06:10 < azylman> Where would you be registering these listeners? Seems like that's all stuff you'd want to handle in one place
06:10 < styol> its kind of apples and oranges
06:11 < azylman> Either in some sort of pre-save handler in your db or in the endpoint that creates users
06:12 < styol> yeah this is kind of where it stemmed from, the method that creates users has evolved into like 10 steps.. got the christmas tree going on for sure
06:12 < azylman> And is there a reason having all the logic in an async waterfall wouldn't work?
06:12 < styol> 5 nosql document creations, various responses, yada yada as the requirements have evolved.. a simpler control flow paradigm is probably best though, you are right
06:13 < fg3> is sudo required to use nom commands?
06:13 < fg3> err npm 
06:13 < azylman> So we have some pretty complex stuff like that in some places of our codebase and we use async auto to great effect
06:14 < azylman> Also during user signup, coincidentally enough
06:15 < styol> azylman: there are definitely a lot of reasons why this approach doesn't make sense, one simple one being that node.js isn't php ;)
06:15 < azylman> I haven't used php in years
06:16 < mscdex> lucky you
06:16 < azylman> Haha
06:16 < azylman> I do consider myself very lucky for it
06:17 < azylman> Up until about 8 months ago I used a lot of Java
06:17 < azylman> Ever since then been pure coffeescript
06:17 < styol> azylman: i guess the best way to describe the reasoning would be to describe the source.. in drupal there are any number of modules that can "hook" into various tasks, much like emitters, the main difference being that they can make modifications and do xyz in various scenarios. It provides a very ambiguous, yet relatively structured way, to make alterations without hacking core or other contributed modules
06:17 < azylman> So that sounds a lot like the pre-save, post-save, etc. hooks that mongoose has
06:18 < azylman> And that makes a lot of sense for third-party libraries
06:18 < styol> for users and nodes there are specifically presave, update, load, and stuff like that indeed
06:18 < azylman> They want to provide flexibility/configurability and stuff
06:18 < azylman> But I feel like those patterns work great for third-party modules only because you can't edit them yourself
06:19 < styol> yeah indeed, and i can't really think of any time where i've been like "gee, i wish i could modify this node module" not to say that no one else never has or that there aren't any other concepts where that may be applicable
06:27 < styol> possibly worth making an actual module out of this concept or should i keep my bad idea machine on localhost? haha
06:27 < azylman> I mean, I wouldn't use it
06:27 < azylman> Someone might
06:28 < azylman> Actually, now that I think about
06:28 < azylman> It might already exist
06:28 < azylman> https://github.com/bnoguchi/hooks-js
06:30 < azylman> That's what mongoose uses
06:30 < styol> azylman: awesome! so this does kind of exist already
06:31 < azylman> I knew reading mongoose's source code would come in handy some day
06:31 < azylman> lol
06:31 < styol> I've not used mongoose before but yeah that definitely did haha
06:31 < azylman> They didn't roll their own, they used this
06:32 < Jakey> okay
06:32 < Jakey> node.js sucks now
06:32 < styol> at minimum i learned a couple new things and even read some node source code haha
06:32 < styol> Jakey: just to let you know, there are ways to ask for help without first offending those that might want to help you ;)
06:32 < Jakey> theres a new tool in town thats better than node.js
06:33 < Jakey> i think it will tear node.js apart
06:33 <@mbalho> Jakey: we know about windows 8 already
06:33 < Jakey> don't believe me?
06:33 < Jakey> lol mbalho 
06:33 < azylman> lol
06:33 < Jakey> yo bro vertx.io
06:34 <@mbalho> Jakey: dont bro me if you dont know me please
06:34 < Jakey> http://vertx.io
06:34 < Jakey> mbalho: k
06:34 <@mbalho> Jakey: thanks
06:34 <@mbalho> Jakey: also that is old and busted
06:34 < Jakey> orly
06:34 <@mbalho> Jakey: ya you gotta get with the times
06:34 < Jakey> how?
06:34 <@mbalho> Jakey: that came out over 6 months ago, in node.js years that is like 8 years
06:35 < Jakey> hmm so where has node.js move to multi core stuff?
06:35 < azylman> Damn, node JS years are even faster than dog years
06:35 < azylman> Does that mean it'll be dead in 7 years?
06:35 <@mbalho> hah
06:36 < Jakey> node.js is single threaded
06:36 < Jakey> and its still is...
06:36 < styol> Jakey: core cluster module utilizes multiple cores iirc
06:37 <@konobi> baudehlo: you might find the pcre binding useful
06:37 < styol> azylman: thank you very much for your help and feedback.. it is much appreciated
06:38 < azylman> np
06:43 < Jakey> https://github.com/adamjodlowski/nodejs-vs-vertx
06:45 < nanashiRei> When i intercept process.on('exit', ...); is there a way to make it wait for, lets say, async.series before exiting?
06:46 < SomeoneWeird> don't think so
06:46 < nanashiRei> I kinda need a queue to drain before it may exit
06:47 < nanashiRei> And how about SIGINT? 
06:47 < SomeoneWeird> although
06:47 < nanashiRei> taht's crtl + c, right?
06:48 < SomeoneWeird> are you executing process.exit yourself?
06:48 < nanashiRei> no
06:48 < SomeoneWeird> window close ?
06:48 < SomeoneWeird> or ^C?
06:48 < nanashiRei> I'm listening for external or internal exit invocation
06:48 < nanashiRei> yes such as ^C
06:48 < nanashiRei> or ^D
06:49 < SomeoneWeird> http://stackoverflow.com/a/9299388/1982847
06:49 < mscdex> nanashiRei: maybe you can overwrite process.exit or something at the beginning of your script?
06:49 < chovy>  /win 12
06:50 < mscdex> heh
06:50 < SomeoneWeird> mscdex, i thought about that too, but I don't think it'd work
06:50 < nanashiRei> No that's absolutly no option, if that is invoked, it has a reason and must work
06:50 < nanashiRei> my goal isn't trying to trap the process from exiting all together, just when certain events happen
06:50 < nanashiRei> like SIGUSR2 often is used to reload the config
06:51 < SomeoneWeird> mhm
06:51 < nanashiRei> Basically i want ^C (SIGINT) to gracefuly stop the server instead of just killing it off
06:51 < SomeoneWeird> did you look at the link i posted ?
06:51 < nanashiRei> sec
06:52 < nanashiRei> So. that actuall is supposed to work...?
06:52 < nanashiRei> =y
06:52 < nanashiRei> hm
06:53 < SomeoneWeird> yes?
06:53 < SomeoneWeird> why wouldn't it
06:53 < nanashiRei> i'll gist some code, which produces a rather ... weird problem. hold on :)
06:53 < nanashiRei> is coffeescript fine
06:54 < nanashiRei> ?
06:54 < nanashiRei> i'll convert it otherwise
06:55 < andrew12> process.on('SIGINT', function () { ... });
06:55 < andrew12> http://nodejs.org/api/process.html#process_signal_events
06:56 < andrew12> also i find that sighup is often used to reload the config
06:57 < andrew12> mostly with ircds t hough
06:57 < andrew12> nanashiRei: ^
06:58 < andrew12> probably should read http://nodejs.org/api/process.html#process_event_exit too
06:58 < nanashiRei> please hold on i'm writing up a gist.
06:58 < nanashiRei> it's not as easy as that ^^
07:06 < nanashiRei> here we go
07:06 < nanashiRei> https://gist.github.com/ff51ca57d55b9f226d8c
07:07 < nanashiRei> It's stripped down to the important parts
07:07 < nanashiRei> What happens is really weird.
07:07 < nanashiRei> First of all it exits (kinda) at the end of the 'SIG..." listener
07:08 < nanashiRei> So that i'm back to console and i can issue new commands from shell
07:08 < nanashiRei> But, the node process is still running. And after ~ 5 or so minute i get a new console.log message printed and then it actually does exit
07:09 < nanashiRei> https://npmjs.org/package/async
07:10 < nanashiRei> Now to read that links of yours, andrew12
07:11 <@konobi> mmm... coffeescript... outta luck
07:11 < nanashiRei> sec i will compile it :)
07:12 < nanashiRei> http://coffeescript.org/#try:%23%23%23%0A%20%20npms%20used%3A%20async%2C%20events%2C%20fs%2C%20os%2C%20util%20%26%20others%20which%20don't%20apply%20here...%0A%23%23%23%0Aclass%20Something%20extends%20events.EventEmitter%0A%20%20constructor%3A%20-%3E%0A%20%20%20%20%23imagine%20a%20lot%20of%20code%20here%0A%20%20%0A%20%20services%3A%20(callback)%20-%3E%0A%20%20%20%20%23%20connects%20or%20gets%20all
07:12 < nanashiRei> eh... sec
07:13 < SomeoneWeird> wat
07:14 < nanashiRei> it's to long i'm converting, one minute please :(
07:16 <@mbalho> cool site
07:19 < nanashiRei> https://gist.github.com/28706d9f31cb32fbe950
07:19 < nanashiRei> there we go >_< sorry took kinda long
07:20 < nanashiRei> dear lord.. it stripped the comments -_-
07:33 < nanashiRei> so it's updates
07:33 < nanashiRei> if anyone is still awake :x
08:01 < MiracleBlue> Hey guys :D
08:08 < jawsome> Good morning
08:08 < MiracleBlue> Sup jawsome?
08:08 < Jakey> hello
08:09 < jawsome> Just got home from work, time to nerd out or pass out, unsure which I will partake in. And yourself?
08:09 < MiracleBlue> Just got home as well
08:09 < MiracleBlue> I'm nerding out.
08:09 < jawsome> ;)
08:09 < _ior> you lucky bastards. i just got to work :(
08:09 < MiracleBlue> About to attempt my first node project.
08:09 < GreenDog> you casually use irc at work, you lucky bastard.
08:09 < MiracleBlue> Ouch dude :(
08:10 < _ior> hahah well
08:10 < _ior> i trained my bosses early to think that white text on black background means "i'm coding"
08:10 < MiracleBlue> Hahahaha
08:10 < _ior> black on white means "i'm doing some excel nonsense for you"
08:10 < jawsome> _ior: :( I have to proxy my irc through an irc bot -> xmpp conference room while I'm at work. 
08:10 < jawsome> Lol
08:10 < _ior> haha yeesh that's a hassle
08:10 < MiracleBlue> My workplace is awesome
08:11 < MiracleBlue> Really relaxed.
08:11 < jawsome> Written in node atleast :P
08:11 < _ior> surely you could just ssh somewhere instead?
08:11 < nanashiRei> i'm at work too... at home... my boss doesn't care the least bit where i code so long as i meet the deadlines :P
08:11 < MiracleBlue> ^
08:11 < MiracleBlue> Best way to be.
08:11 < _ior> yar
08:12 < MiracleBlue> I'm noobing out on this node stuff
08:12 < MiracleBlue> Har har
08:12 < _ior> except the bit where they can then force you to work from home to meet the deadliens that require 100 housr per week for a month
08:12 < jawsome> _ior: I could, but, we use openfire for intra-work communication. So, irssi in a terminal still sticks out like a sore thumb. So, I have my own openfire server at home with a node app running on it that connects to my irc rooms and aggregates the messages into an xmpp conference room
08:12 < _ior> hahahaha
08:12 < MiracleBlue> What do you guys do, if you don't mind me asking?
08:12 < _ior> talk about overengineering XD
08:12 < MiracleBlue> xD
08:13 < jawsome> Lol
08:13 < _ior> once upon a time, when sgi was still a thing, i had access to a server room that was ... a full 64-box network of ORIGIN2000 servers, each with 64 processors
08:13 < _ior> ... i used it to irc
08:13 < _ior> that was pretty awesome
08:13 < MiracleBlue> Jesus
08:13 < jawsome> O_O
08:13 < _ior> talk about misuse of resources :)
08:13 < jawsome> I work for a Shared Web Hosting Corporation as a sys admin.
08:13 < jawsome> Oh yes
08:13 < MiracleBlue> I'd turn that into a render farm
08:13 < MiracleBlue> Ooooh
08:13 < MiracleBlue> Nice.
08:13 < _ior> i think that's what it was sup[posed to be
08:14 < _ior> and i'm an analyst at a game publishing company
08:14 < MiracleBlue> I'm a front end developer for an e-learning software company.
08:14 < MiracleBlue> Although my job kinda entails lots of things, I'm mainly the javascript expert, but I'm also the only guy that knows about the course format we use etc.
08:15 < MiracleBlue> Right now I'm looking at building a neat little automated tool in Node, dealing with zipping and unzipping files
08:15 < _ior> you'll have fun
08:15 < MiracleBlue> To convert packages from one learning format to another
08:15 < _ior> i'm midway through my first node project, and i'm having a blast
08:15 < MiracleBlue> :D
08:15 < jawsome> MiracleBlue: In one of my current side projects, I decided to venture into Backbone.js. x_x I feel less human more every day.
08:15 < MiracleBlue> That's awesome.
08:16 < MiracleBlue> jawsome: Hahaha
08:16 < MiracleBlue> I adore backbone
08:16 < MiracleBlue> But god, it can get complex.
08:16 < MiracleBlue> My perpetual forever project is a digital audio workstation entirely in native js
08:16 < MiracleBlue> It's built in backbone and require and all these cool things
08:16 < MiracleBlue> It's eating my soul
08:17 < jawsome> MiracleBlue: I'm addicted to I guess what you'd call 'multi-dimensional' json objects. I've found out that backbone doesn't love those... at all. So, my largest nodejs project so far is beautiful, with no clientside until I become bionic and place my head into nested collections or something.
08:18 < MiracleBlue> Also, quick really noobish question that the docs didn't really help me to answer, I know I can run a javascript file as the main node application, but how would I serve up just static html files and stuff like that?  I guess I should ask what I need to read in order to get started using it as a standard web server.
08:18 <@Nexxy> MiracleBlue, what are you using for DSP?
08:18 < MiracleBlue> jawsome: Oh man, same here.  I love that stuff.
08:18 < MiracleBlue> Nexxy: Web Audio API
08:18 <@Nexxy> sweet
08:19 < MiracleBlue> Using the Audiolet and Sink.js libraries, as well as a bunch of stuff I built myself
08:19 <@Nexxy> MiracleBlue, you should look into express
08:19 < MiracleBlue> Has super accurate scheduling
08:19 < MiracleBlue> I built a plugin architecture for synth plugins as well, and effects routing, the lot :)
08:19 <@Nexxy> that's good to know
08:19 < MiracleBlue> Nexxy: Alright cool, I'll  check that out good sir :)
08:19 <@Nexxy> I need to learn more about DSP & web audio api between now and march!
08:20 < MiracleBlue> Yeah dude!
08:20 <@Nexxy> MiracleBlue, not a sir
08:20 <@Nexxy> but you're quite welcome
08:20 < MiracleBlue> Oh
08:20 < MiracleBlue> Pardon me.
08:20 < jawsome> MiracleBlue: I recommend express if you absolutely have to use node for static files. I prefer to configure an nginx reverse proxy that serves static files directly (what nginx does best) and proxies normal requests to the express server.
08:20 < MiracleBlue> Nexxy: if you ever have questions about web audio api, feel free to ask me :)
08:20 <@Nexxy> I might! 
08:20 <@Nexxy> I'm hoping to integrate it into a demo
08:20 < MiracleBlue> I've had my head full of web audio api for over a year building my project.
08:21 < MiracleBlue> jawsome: Well.. hmm
08:21 < MiracleBlue> I'd like to do the nginx route
08:21 < GreenDog> i've noticed i can't dynamically pump an audio tag in to the dom
08:21 < MiracleBlue> But I'd have no idea how to start
08:21 < GreenDog> and that makes me sad
08:21 < MiracleBlue> Err, where to start
08:21 < MiracleBlue> GreenDog: pump?  Inject?
08:22 < MiracleBlue> And that's weird, it should be perfectly reasonable to do that :)
08:22 < gmg85> hi...was wondering if there exist tools to monitor nodejs servers...
08:22 < SomeoneWeird> forever, monit
08:22 < GreenDog> yes, like $("#blah").append("<audio ..... ");
08:22 < MiracleBlue> GreenDog: Interesting.
08:22 < MiracleBlue> I'm not sure why that wouldn't work, actually.
08:22 < GreenDog> the browser never lloads the audio file
08:22 < MiracleBlue> Ah, right.
08:22 < GreenDog> at least not firefox
08:22 < MiracleBlue> That's probably a browser bug.  Have you tried others?
08:22 < SomeoneWeird> they probably don't eval it after its loaded
08:23 < MiracleBlue> ^
08:23 < MiracleBlue> Although it's not like it's a dynamic script tag, shouldn't need evaling, but yeah, sounds like it's just not registering the need for loading audio
08:23 < MiracleBlue> Nexxy: What kind of demo?
08:23 < gmg85> SomeoneWeird, cool..let me look into them
08:24 <@Nexxy> MiracleBlue, http://www.scandevconf.se/2013/conference/speakers/emily-rose/
08:24 <@Nexxy> node & hardware
08:24 < MiracleBlue> Ooooooh!!
08:24 <@Nexxy> I'm working toward a node/arduino-powered DMX controller
08:24 <@Nexxy> and other DSP fun
08:25 < MiracleBlue> Holy crap!  I've also been thinking about mixing node and midi hardware
08:25 < MiracleBlue> To hook midi gear directly into javascript
08:25 <@Nexxy> ya
08:25 < MiracleBlue> o.o can we be friends
08:25 <@Nexxy> isn't midi just text?
08:25 <@Nexxy> MiracleBlue, lol of course
08:25 < SomeoneWeird> lol
08:25 <@Nexxy> we're all friends here
08:25 < SomeoneWeird> \o/
08:25 < MiracleBlue> Well, I mean at a basic level yeah it can be represented as just strings
08:26 < _ior> oooo someone should recode max/msp in node
08:26 <@Nexxy> ya
08:26 < MiracleBlue> But I'm talking about actually being able to read from the midi devices
08:26 <@Nexxy> yeah
08:26 <@Nexxy> node-serialport ?
08:27 <@Nexxy> https://github.com/justinlatimer/node-midi
08:27 < MiracleBlue> Nexxy: Maybe :) remember I'm still brand new to node, as in, just started looking into making my first node project this arvo.
08:27 < MiracleBlue> Ooooooh
08:27 < MiracleBlue> That sounds promising
08:27 <@Nexxy> it hasn't been updated in a while, but
08:27 <@Nexxy> it might have some good places to start
08:27 < MiracleBlue> :D
08:28 < mboro> is the npm registry down? npm install hangs on my end
08:28 < MiracleBlue> I also wanna look at using unusual devices as midi inputs
08:28 < yawnt> Nexxy: thank you sir
08:28 <@Nexxy> but yes, node-serialport is great if you're into getting JS to talk to various hardware
08:28 < MiracleBlue> Nexxy: thank you kindly
08:28 <@Nexxy> yawnt, you're welcome sis
08:28 < yawnt> :trololol:
08:28 < SomeoneWeird> working for me, mboro 
08:28 <@Nexxy> :P
08:29 < mboro> SomeoneWeird: alright, thx. weird
08:29 < MiracleBlue> Btw, if you guys are at all into electronic music, I've been producing/composing for 13 years and post a lot of stuff for free :) if you wanna check it out.
08:29 <@Nexxy> MiracleBlue, sure!
08:29 < yawnt> MiracleBlue: link?
08:29 < MiracleBlue> :D
08:29 < MiracleBlue> http://www.soundcloud.com/miracleblue
08:29 < jawsome> MiracleBlue: Install nginx -- Here's an example configuration file: https://gist.github.com/4632758 Sorry for the delay, had to dig one up :P
08:30 <@Nexxy> I am almost always in the presence of some sort of elecronica
08:30 < MiracleBlue> I produce trance, pay, ambient, new age, orchestral
08:30 <@Nexxy> psy*?
08:30 < MiracleBlue> jawsome: thank you kindly!  :D
08:30 < MiracleBlue> Oh yeah
08:30 < MiracleBlue> Colloquy has autocorrect for some reason
08:30 < MiracleBlue> Psy*
08:30 < MiracleBlue> Also do vocal trance
08:30 < ttols> can anyone use multipart.parser() ??
08:31 < ttols> I received the message "no method"
08:31 < SomeoneWeird> i love trance but i don't like a lot of other electronic stuff
08:31 < ttols> https://github.com/isaacs/multipart-js/issues/7       <=========== not yet
08:32 < MiracleBlue> SomeoneWeird: Ah cool :)
08:32 < MiracleBlue> I mostly do trance
08:32 < SomeoneWeird> cool
08:32 < MiracleBlue> I'm really picky with my trance, too.
08:32 < SomeoneWeird> will take a look in a bit
08:32 < MiracleBlue> Cool, hope you enjoy :D
08:32 <@Nexxy> picky trance
08:32 < MiracleBlue> Indeed
08:33 <@Nexxy> I'm a fan of non-vocal progressive trance
08:33 <@Nexxy> with a sprinkling of hardstyle here and there
08:33 < MiracleBlue> Ooooh
08:33 < MiracleBlue> That's quite an interesting taste.  Two opposite sides of the spectrum almost.
08:33 < MiracleBlue> I love euphoric, uplifting, high energy trance
08:33 < MiracleBlue> In minor key, no major key
08:33 <@Nexxy> with lots of ecstacy?
08:33 <@Nexxy> emphasis on the e
08:34 < MiracleBlue> Hahaha
08:34 < MiracleBlue> Well, super euphoric trance does do that
08:34 < MiracleBlue> But I don't need to take anything for that :)
08:35 <@Nexxy> but it helps
08:35 <@Nexxy> ... a lot
08:35 < MiracleBlue> xD to each their own I guess.
08:36 <@Nexxy> lol
08:36 <@Nexxy> MiracleBlue, are you the same MiracleBlue that's on spotify?
08:36 < MiracleBlue> Nexxy: Yes :)
08:36 <@Nexxy> very cool
08:36 < MiracleBlue> And on beatport, and trackitdown, and iTunes, etc etc :D
08:36 <@Nexxy> I'm listening to your top hits (according to spotify)
08:36 < Crystal> good see this..
08:37 < MiracleBlue> Nexxy: How many of my tracks are up there?
08:37 < MiracleBlue> I haven't checked in a while
08:37 <@Nexxy> MiracleBlue, let's make sure that there is some Node.js produced trance in the near future
08:37 < MiracleBlue> Yes ma'am :D
08:37 < MiracleBlue> I'm working on it!
08:37 < MiracleBlue> I'd like to explore implementing nodes into my DAW project in some way.
08:38 <@Nexxy> it looks like only 5 + several remixes of "Chance"
08:38 < MiracleBlue> Ahh, yeah, chance.  My one and only progressive house release.
08:38 <@Nexxy> MiracleBlue, you should see the stuff substack made
08:38 <@Nexxy> he wrote baudio
08:38 < MiracleBlue> :O
08:38 < ttols> what is lastest vertion of multipart?? i got 0.1.5 
08:38 <@Nexxy> https://github.com/substack/baudio
08:38 <@Nexxy> generate audio streams with functions!
08:39 < MiracleBlue> Holy crap
08:39 < MiracleBlue> That's awesome
08:39 <@Nexxy> ttps://soundcloud.com/substack
08:39 <@Nexxy> err
08:39 <@Nexxy> https://soundcloud.com/substack
08:39 <@Nexxy> afaik those are recordings of the functions
08:39 <@Nexxy> I really liked methodical
08:39 < MiracleBlue> We can also do this in web audio api :D but recording is a whole other story
08:40 < MiracleBlue> This is really cool
08:40 <@Nexxy> I concur
08:41 < MiracleBlue> Alright, guess I'm gonna have to really get into nodejs now
08:41 < AAA_awright> MiracleBlue: Seriously? I'd love me some 238
08:41 < _ior> woh, neat: https://psal.cs.drexel.edu/index.php/JStylo-Anonymouth
08:41 <@Nexxy> resistance is futile
08:41 < MiracleBlue> AAA_awright: 238?
08:41 < AAA_awright> Who's afraid of 238?
08:41 < MiracleBlue> bpm?
08:41 < AAA_awright> *138
08:42 < SomeoneWeird> yeah _ior 
08:42 < MiracleBlue> Ooooh hahahaha
08:42 < SomeoneWeird> thats good
08:42 < AAA_awright> Wow I messed that up
08:42 < MiracleBlue> Yeh I do a lot of 138
08:42 < MiracleBlue> :D
08:42 <@Nexxy> 142 is where it's at
08:42 < MiracleBlue> It's my sweet spot.
08:42 < [AD]Turbo> hi there
08:42 < _ior> someoneweird i appreciate that they bothered to make not just the identifier, but also the anonymiser :)
08:42 <@Nexxy> MiracleBlue, thealphanerd is also doing stuff that may interest you
08:43 < SomeoneWeird> yeah
08:43 < MiracleBlue> Nexxy: Cool :D I've gotta meet all these people
08:43 < MiracleBlue> I unfortunately don't know very many audio developers.
08:44 < SomeoneWeird> oh, MiracleBlue 
08:44 < SomeoneWeird> you're in melb
08:44 < MiracleBlue> Let alone ones that do audio stuff in JS.
08:44 < MiracleBlue> Yep
08:44 <@Nexxy> I don't either, really
08:44 < SomeoneWeird> where bouts?
08:44 < MiracleBlue> Fairfield :D
08:44 <@Nexxy> "how would you rate the quality of this field?"
08:44 < MiracleBlue> Fair.
08:44 < MiracleBlue> Quite fair.
08:44 <@Nexxy> good enough!
08:45 < SomeoneWeird> ah yeah
08:45 < SomeoneWeird> theres quite a few of us in melb
08:45 < MiracleBlue> Oh yeah?
08:45 < SomeoneWeird> im near dandenong
08:45 < MiracleBlue> Do you ever go to MelbJS?
08:45 < SomeoneWeird>  /j #polyhack
08:45 < SomeoneWeird> nah I don't, pretty sure the others do
08:45 < MiracleBlue> Ah ok
08:45 < MiracleBlue> Cause I gave a talk in december there
08:45 <@Nexxy> I'm on Sydney time for what it's worth
08:46 < MiracleBlue> On web audio API
08:46 < SomeoneWeird> join #polyhack
08:46 <@Nexxy> what is this polyhack
08:46 < SomeoneWeird> lol Nexxy 
08:46 < MiracleBlue> Nexxy: Canberra?  xD
08:46 <@Nexxy> I live in Portland, OR
08:46 < SomeoneWeird> just a group of us from aus
08:46 <@Nexxy> but I work with Ninja Blocks
08:46 <@Nexxy> which is almost entirely based in Sydney
08:46 < MiracleBlue> Ninja blocks!
08:46 < _ior> for anything geekery, the group of aussies that do it are ALWAYS from melb
08:46 <@Nexxy> Ninja Blocks!
08:47 <@Nexxy> apparently we're on Uncrate.com
08:47 < SomeoneWeird> _ior, lol
08:47 <@Nexxy> w/e that is
08:47 < MiracleBlue> Nexxy: What work do you do?
08:47 < AAA_awright> I love melodic uplifting stuff, lots of warm synths, fantastic extended breakdowns, and pianos that think they're singing. My favorite example I'd say is Lemon & Einar K - Felicity.
08:47 < AAA_awright> And I've been looking into generating audio streams for Icecast with Node.js... Haven't gotten very far though.
08:47 < AAA_awright> Currently I run Liquidsoap which is only alright
08:47 < MiracleBlue> AAA_awright: :D cool
08:47 <@Nexxy> MiracleBlue, right now I'm designing the new client architecture
08:47 < MiracleBlue> I also love really uplifting melodic stuff
08:47 <@Nexxy> I just finished a wifi management tool
08:48 < MiracleBlue> Nexxy: Oh wow, sounds like fun
08:48 <@Nexxy> it is!
08:48 < SomeoneWeird> nice
08:48 < SomeoneWeird> wish i had enough money for a ninjablock lol
08:48 < MiracleBlue> I just joined an eLearning company
08:48 < MiracleBlue> As their front end engineer :D
08:48 <@Nexxy> SomeoneWeird, you can build one out of a raspberry pi
08:48 < SomeoneWeird> i don't have one of them either
08:49 < SomeoneWeird> very sadly
08:49 <@Nexxy> they're <$50
08:49 <@Nexxy> from amazon
08:49 < MiracleBlue> I want one
08:49 < SomeoneWeird> i still don't have that :P
08:49 <@Nexxy> I just finally got one
08:49 < MiracleBlue> I also desperately wanna learn how to build my own midi control boards
08:49 <@Nexxy> I have many many beagleboards though
08:49 < MiracleBlue> Cause I wanna make just one big board of knobs and faders
08:49 < SomeoneWeird> haha
08:50 < AAA_awright> Just use one of those fancy digital mixers
08:50 < AAA_awright> Turn on "Vegas mode"
08:50 < MiracleBlue> AAA_awright: But… midi :(
08:50 < MiracleBlue> Also I've seen the vegas mode haha
08:50 < MiracleBlue> That was crazy cool
08:54 < _ior> oh dear god how could it be so very very wrong http://www.youtube.com/watch?v=qkM6RJf15cg
08:54 < _ior> i did not meet you in the 90s. NTSC Mosaic, thankyouverymuch. :)
08:57 < AAA_awright> _ior: Why did I just watch that
08:58 < _ior> it's horrible, isn't it
08:58 <@Nexxy> wtf
08:58 <@Nexxy> so much nostalgia
08:59 <@Nexxy> I had, like... all of that stuff
08:59 < _ior> even the ie?
08:59 <@Nexxy> yes
08:59 < inolen> their other ad with the angry internet guy raging was hilarious
08:59 <@Nexxy> the ie on the @home broadband
09:00 <@Nexxy> on an acer desktop that cost $3000
09:00 <@Nexxy> and had a terribad custom desktop app
09:00 < inolen> http://www.youtube.com/watch?v=lD9FAOPBiDk
09:00 < MiracleBlue> Okay, time for me to stop being distracted :P and look into express.
09:00 < inolen> you have to make it through to the end or it's just kind of frustrating :P
09:01 <@Nexxy> inolen, that video just reminded me to turn my lava lamp on
09:01 < inolen> i was never a fortunate enough kid to get one of those
09:01 <@Nexxy> me neither
09:01 <@Nexxy> my wife bought me one for christmas
09:03 <@Nexxy> I love the fact that IE has a reasonable message with that video
09:03 <@Nexxy> "it doesn't suck as much anymore!"
09:03 < MiracleBlue> Holy crap I love WebStorm
09:03 < inolen> yah, as much as I dislike IE that was hilarious 
09:03 < MiracleBlue> Nexxy: Hahaha yeah
09:03 < MiracleBlue> That was a bold move
09:03 < _ior> yeah hah
09:03 < inolen> i want to kick it on a near daily basis
09:03 < MiracleBlue> But really well done.
09:04 < inolen> now if only everyone could make peace on webgl
09:04 < MiracleBlue> ^
09:04 < MiracleBlue> And CSS3 support
09:04 < _ior> my bosses are convinced webgl is doa because of unity
09:04 < inolen> :-/
09:05 < inolen> isn't unity a plugin?
09:05 < inolen> it's in-browser stuff
09:05 < inolen> *its
09:05 <@Nexxy> what does ubuntu's crappy new DM have to do with it?
09:05 < MiracleBlue> I think they mean unity 3d
09:05 < inolen> ^^
09:05 < _ior> yes
09:05 < _ior> sorry
09:06 <@Nexxy> lol :P
09:06 <@Nexxy> yeah, "asset store"
09:06 < MiracleBlue> waaaaargh
09:06 <@Nexxy> the clipart of our generation
09:06 < MiracleBlue> I've got a cat trying to eat my fingers as I type
09:06 <@Nexxy> maybe if you washed your hands moar often
09:06 < MiracleBlue> >.<
09:07 <@Nexxy> #themoreyouknow
09:07 < MiracleBlue> That makes it worse cause after a shower, he loves to come and lick my feet.  He's really weird like that.
09:07 < inolen> does anyone in here happen to be a quake fan and want to play some quake3 running in webgl?
09:07 < MiracleBlue> ^
09:07 < MiracleBlue> I've seen a demo of that
09:07 < inolen> ?
09:07 <@Nexxy> only if it's a railgun only arena
09:07 < inolen> oh, Brandon's demo
09:08 < MiracleBlue> Probably
09:08 < MiracleBlue> Argh, getting sidetracked again
09:08 < inolen> Nexxy: I started with RA3 gameplay for this demo
09:08  * MiracleBlue must focus on express
09:08 <@Nexxy> what's a RA3?
09:08 < MiracleBlue> Red Alert?
09:08 < inolen> http://www.quakejs.com/img/media/004.jpg
09:08 < inolen> rocket arena 3
09:08 < MiracleBlue> Oooh
09:09 < inolen> i'm procrastinating fixing bugs by trying to get people to play
09:09 <@Nexxy> neat!
09:09 < MiracleBlue> I'm actually considering just putting the coding on hold and doing some music instead.  Hmm.
09:16 < inolen> substack: did you get the browser cache disabling sorted? :P
09:17 < _ior> hahahaha
09:17 < _ior> https://github.com/joho/7XX-rfc
09:17 < _ior> i resent 702, though
09:21 <@Nexxy> lol
09:21  * Nexxy is so 762 right now
09:21 < yawnt> IM A TEAPOT
09:21 < MiracleBlue> I like turtles.
09:22 <@Nexxy> okay, MiracleBlue ... you're a great zombie.
09:22 < MiracleBlue> :D
09:22 < _ior> 418 really is the best http status code, you're right
09:22 < MiracleBlue> Btw, my DAW project is up on my github
09:22 < MiracleBlue> http://github.com/miracleblue
09:23 <@Nexxy> JSaw?
09:23 < MiracleBlue> There's a working demo of the old version too, if you wanna check it
09:23 < MiracleBlue> Yes ma'am
09:23 <@Nexxy> cool, followed + starred
09:23 < MiracleBlue> JSaw - JavaScript Audio Workstation
09:23 <@Nexxy> am I the only one who has a github contributions calendar that won't update?
09:23 <@Nexxy> for like 5 days now
09:24 < MiracleBlue> Contributions calendar?
09:24 <@Nexxy> yeah the little graph at the bottom of your profile
09:24 < MiracleBlue> Oooh right
09:24 <@Nexxy> it's new, but it seems broken
09:24 < MiracleBlue> Heh, I never really pay attention to that unfortunately.
09:25 < inolen> maybe that's just a remark towards your "contributions" 
09:25 <@Nexxy> no.
09:25 < MiracleBlue> Aw snap
09:25 <@Nexxy> https://github.com/ninjablocks/client/commits/release-two
09:26 < inolen> (i was just kidding)
09:26 <@Nexxy> OH NO YOU DIDN'T
09:27 < MiracleBlue> I just discovered my IDE of choice has in built node stuff
09:27 < MiracleBlue> This is super awesome
09:27 <@Nexxy> which?
09:27 < MiracleBlue> WebStorm
09:28 <@Nexxy> ya
09:28 < MiracleBlue> It is win <3
09:28 <@Nexxy> I'm happy with sublime text
09:28 < trodrigues> oh really? what do they use it for?
09:28 <@Nexxy> and lots of terminals
09:28 <@Nexxy> and divvy
09:28 < MiracleBlue> .-.
09:28 < ExxKA> Nexxy, +1
09:28 < MiracleBlue> I really don't like working in the command line.
09:28 < MiracleBlue> I'm weird like that.
09:28 <@Nexxy> get. out.
09:28 < MiracleBlue> :(
09:29 <@Nexxy> i keed
09:29  * MiracleBlue cowers
09:29 < MiracleBlue> I mean, I'm perfectly capable of command lining till the cows come home
09:29 < MiracleBlue> I just reeeeally don't like it hah
09:29 <@Nexxy> maybe you just need a better color scheme
09:30 < MiracleBlue> Yes
09:30 < MiracleBlue> I definitely could use a better colour scheme
09:30 < trodrigues> I wish you could write sublime text plugins with JS :(
09:30 <@Nexxy> you can't?
09:30 < MiracleBlue> There was a guy that gave a talk about doing it with some crazy python wrapping
09:30 < ExxKA> trodrigues, what language do you have to use?
09:30 < trodrigues> Nexxy: I think it's python only
09:30 <@Nexxy> MiracleBlue, or this: https://itunes.apple.com/us/app/cathode/id499233976?mt=12
09:30 < trodrigues> if you can use other languages I haven't figured out how
09:31 < _ior> i wish sublimetext was open source
09:31 < MiracleBlue> Nexxy: Ooooh sweet
09:31 < MiracleBlue> I might have to grab that.
09:31 <@Nexxy> haha
09:31 < ExxKA> _ior, if it was it wouldn't have been the same product.
09:31 < MiracleBlue> Though I don't really use sublime text either, I prefer having solid project management stuff that comes with a good IDE
09:31 < trodrigues> by the way, Nexxy, if you like divvy have a look at this: http://thume.ca/howto/2012/11/19/using-slate/
09:31 < _ior> you're probably right
09:31 < trodrigues> I haven't tried it properly yet, but it looks great
09:31 < ExxKA> it would have been more of a mix n match of plugins
09:32 < trodrigues> I use SizeUp myself
09:32 < trodrigues> but I miss my days of xmonad
09:32 < AAA_awright> MiracleBlue: If you're around tomorrow, I want to talk audio
09:32 < MiracleBlue> AAA_awright: You betchya :)
09:32 <@Nexxy> trodrigues, is it like xmonad?
09:32 < MiracleBlue> I'm not always on IRC but I can PM you some other contact info
09:32 < trodrigues> Nexxy: well no, but it seems to get you funcionality closer to it
09:32 < trodrigues> but agian, I haven't tried it properly
09:32 < trodrigues> brb
09:33 <@Nexxy> ya I do miss being able to resize my tile regions
09:33 <@Nexxy> and have all of the windows redraw
09:36 < MiracleBlue> Nexxy: Thanks for the twitter follow :) I don't post much on twitter though unfortunately.
09:37 < MiracleBlue> I mainly post all my cool stuff on Facebook.
09:37 <@Nexxy> you should syndicate it through twitter
09:37 < inolen> you use Facebook for programmer-ey stuff?
09:38 < MiracleBlue> Haha, then I would be spamming my twitter with just overly long posts
09:38 < MiracleBlue> Yep :P
09:38  * inolen feels ashamed of his facebook friend list
09:38 < MiracleBlue> I'll be your friend!  :D
09:38 <@Nexxy> d'aww
09:40 < MiracleBlue> I kinda prefer Facebook over twitter just because of the flexibility of post types
09:40 < inolen> Haha, no, it's just I don't think a single one of them knows what a programmer is :E
09:40 < MiracleBlue> Aw :(
09:40 < inolen> I feel I can target things better with Twitter.
09:41 < inolen> (not that I post much regardless)
09:41 <@Nexxy> like other people!
09:41 < MiracleBlue> I guess I'm just the odd one out :(
09:41 <@Nexxy> with derisive language!
09:41 < inolen> ^^ yes, people, those things
09:41 <@Nexxy> and then apologize about it later on your blog
09:42 < inolen> hmph, I don't do much of that
09:42 <@Nexxy> oh, good!
09:43 < MiracleBlue> I think I'd post more on twitter if more people would join in and converse with me about the things I post
09:44 <@Nexxy> MiracleBlue, it takes a bit of cultivation
09:44 <@Nexxy> tweet some tracks tho and I will retweet
09:44 <@Nexxy> like gravity
09:44 <@Nexxy> do that one!
09:45 < MiracleBlue> :D danke!
09:45 < MiracleBlue> Ooh, you liked gravity?
09:45 < MiracleBlue> That was from my very first ever EP
09:45 <@Nexxy> yes, and look again
09:45 < MiracleBlue> Look Again is the latest one, I released it for free :) really glad you liked them.
09:46 <@Nexxy> sweet!
09:47 <@Nexxy> I was your 4th scrobble for gravity on last.fm
09:47 <@Nexxy> now I can be all like
09:47 <@Nexxy> "I was into MiracleBlue *before* it was cool"
09:47 < yawnt> i can't play the songs
09:47 < yawnt> ;_;
09:48 < MiracleBlue> Hmm, actually, I've just finished a brand new track (just the mix down, not yet mastered), would you mind taking a listen?  So I can get feedback on it and make adjustments before finalising it :D
09:48 < yawnt> apparently soundcloud doens't like my flash plugin
09:48 < yawnt> gotta fix this shit
09:48 < MiracleBlue> Aw yawnt :(
09:48 <@Nexxy> yawnt, I don't really like your flash plugin either
09:48 <@Nexxy> I wasn't going to say anything, but...
09:48 <@Nexxy> since you mentioned it
09:48 <@Nexxy> MiracleBlue, yes
09:48 < yawnt> Nexxy: IT'S BECAUSE HE'S PROPRIETARY ISN'T IT?
09:48 < yawnt> you racist
09:49 < MiracleBlue> Proprietist!
09:49 < yawnt> you and that open source shit
09:49 < yawnt> :(
09:49 <@Nexxy> sharing is caring
09:49 < yawnt> i don't agree
09:49 < yawnt> that's why i love github and use it everyday
09:49 < yawnt> TO PROVE THAT OPEN SOURCE IS WRON
09:49 < yawnt> :|
09:49 < MiracleBlue> Nexxy: I'll have to pm you the link if that's ok cause it's a private sound cloud track atm
09:50 <@Nexxy> sure!
09:50 < foobar321> All right. I want to create dynamic-page (zip archive) on the fly from node.js AND want user be able to resume transfer in case of error. Is it possible to pass res object between different requests ?
09:50 < yawnt> oh
09:50 < MiracleBlue> It's semi-progressive trance, combined with high energy and euphoria :D
09:50 < yawnt> it was adblock
09:50 < yawnt> :D
09:50 <@Nexxy> I like all of those things
09:51 < MiracleBlue> yawnt: Ahh adblock :P
09:51 <@Nexxy> yawnt, you're killing the interwebs
09:51 < MiracleBlue> Nooo!  They killed the interwebs!
09:51 < yawnt> Nexxy: call me Dr.Evil
09:52 <@Nexxy> think of the CPI
09:53 <@Nexxy> content publishers have to make their money somehow!
09:53 < MiracleBlue> And all the web developers!
09:53 < MiracleBlue> We'd be out of work :(
09:53 <@Nexxy> blocking ads is just like stealing!
09:53 <@Nexxy> like... 2 pennies
09:53 < MiracleBlue> Hahah
09:54 < MiracleBlue> Generally if I really like and use a site, I'll donate or subscribe
09:54 < MiracleBlue> Like reddit
09:54 <@Nexxy> what's that?
09:54 < yawnt> "you would never steal a car"
09:54 <@Nexxy> some sort of internet message board?
09:54 < yawnt> "you would never steal 2 pennies"
09:54 < yawnt> "blocking ads is like stealing"
09:55 <@Nexxy> can you make that into a haiku?
09:55 < SomeoneWeird> <yawnt> "you would never steal a car" < lold
09:56 < yawnt> give me a ninjablock2haiku app and i promise you, i will conquer the world
09:56 < SomeoneWeird> kkk
09:56 <@Nexxy> you can write your own haiku ninja block module!
09:57 < substack> Nexxy: I got my ninja block!
09:57 < substack> had some issues activating it though
09:57 <@Nexxy> thatguydan just wrote one for the Philips hue lightbulb
09:57 <@Nexxy> substack, sweet!
09:57 < MiracleBlue> hahaha
09:57 <@Nexxy> yeah it has happened a couple times
09:57 <@Nexxy> substack, I can help if it's still happening
09:57 < MiracleBlue> Hey substack 
09:57 < substack> could be I didn't copy the serial properly or something
09:58 <@Nexxy> you can just do like
09:58 <@Nexxy> screen /dev/tty.usb*B 115200
09:58 <@Nexxy> or w/e device it comes up as 
09:58 < substack> kind of odd to need to open the enclosure to get the serial :Z
09:58 <@Nexxy> if you have it plugged into the host USB port
09:58 < substack> I just plugged it into my wifi router
09:58 < substack> and tried the online thing
09:59 <@Nexxy> substack, did it work?
10:00 < substack> nope
10:00 <@Nexxy> are you able to get into your dashboard?
10:00 < substack> haven't tried the usb thing yet though
10:00 <@Nexxy> if you plug it in directly
10:00 <@Nexxy> you get a console on it
10:00 <@Nexxy> and can just do stuff the lazy way :D
10:01 <@Nexxy> it will still need to have ethernet
10:07 < MiracleBlue> Derp
10:07 < jasom> I'm using node.js 0.8.18 and it appears that --max-stack-size has no effect.  The call depth at which I exhaust the stack is identical no matter what I set it to, even when I set it to something silly like 128
10:09 < samholmes> Is there a EJS module that works for browserify?
10:10 <@konobi> jasom: call depth may not map up to call depth
10:10 <@konobi> um... stack size even
10:11 < jasom> konobi: well how does it even function with a stack-size of 128 bytes?
10:11 <@konobi> jasom: XY
10:13 <@konobi> jasom: http://bit.ly/olPTFK
10:16 < jasom> konobi: okay, I'm porting an application to javascript with emscripten.  I got a call stack exception, which was not surprising since the original C program will only run if you bump up the C stack with ulimit -s.  I tried changing --max-stack-size to all sorts of values and it still always dies in the same placee
10:16 < samholmes> How do I work with browserify and a template language?
10:16 < samholmes> I want to be able to require a library on the front end
10:17 < samholmes> like EJS or jade and then use the same template files that I use on the server-side, only on the client-side
10:24 < mscdex> anyone know how to safely convert a v8 handle to a void pointer and back again? :S
10:24 <@konobi> jasom: you're recursing too deeply then
10:25 < jasom> konobi: how do I get node to let me recurse more deeply?
10:26 <@konobi> jasom: you need to look at how to let v8 do it
10:28 <@konobi> --stack_size ?
10:28 <@konobi> may also depend wether it's a 32 bit vs 64 bit binary
10:29 < substack> samholmes: you can browserify some template libs
10:29 < jasom> konobi: --stack_size did it, thanks
10:29 < substack> mostly I don't even use template libs anymore
10:30 < samholmes> substack: But the only thing is how do I access non-public ejs files from the browserified libs?
10:30 < samholmes> substack: Do you know how I could do it with EJS?
10:34 < samholmes> substack: I'm guessing https://github.com/substack/node-jadeify#readme is no longer supported?
10:35 < substack> I don't use jade so yes
10:36 < SomeoneWeird> lol
10:36 < substack> samholmes: here's what I've been doing lately https://github.com/substack/browserify-website/blob/master/browser/article.js#L22
10:37 < samholmes> substack: what's hyperglue?
10:39 < rounce^work> samholmes
10:39 < samholmes> substack: I can browserify the EJS module, but then I'll have to somehow expose all of the /views/ files publicly so I can XHR them in.
10:39 < samholmes> rounce^work
10:39 < rounce^work> browserijade is what you're after
10:40 < samholmes> rounce^work: preferrable a browseriejs, but yea
10:40 < rounce^work> 0.5.x is working with browserify@1.17.x
10:40 < rounce^work> why doe people use ejs?
10:41 < rounce^work> I don't get it
10:41 < samholmes> rounce^work: closer to HTML, idk
10:42 < rounce^work> but on the flipside templates are messy as fuck
10:42 < samholmes> EJS isn't too messy
10:42 < rounce^work> u srs brah?
10:43 < samholmes> idk
10:43 < SomeoneWeird> ejs is awesome
10:43 < samholmes> I just made a rule that the open and closing doesn't require indent and I'm gud
10:43 < rounce^work> SomeoneWeird: elaborate
10:43 < samholmes> only html elements and JS blocks require indent
10:43 < SomeoneWeird> js in templates
10:44 < SomeoneWeird> enough said
10:44 < samholmes> ^
10:44 < samholmes> Jade is cool, but I just get a bad feeling that I'll need raw HTML at some point
10:44 < rounce^work> which is just as easy, if not easier in jade
10:45 < rounce^work> and is a fuckton more readable
10:45 < rounce^work> and lighter to deliver to the client
10:45 < SomeoneWeird> ejs is the javascript eqiv to PHP
10:46 < rounce^work> yeah
10:46 < SomeoneWeird> as in, inbedded language tags
10:46 <@Nexxy> ejs is like erb
10:46 < samholmes> rounce^work: how do you do raw HTML in Jade?
10:46 < rounce^work> SomeoneWeird: ...and it is fucking awful way of doing things in PHP and is the same anywhere else
10:46 < SomeoneWeird> er, embedded*
10:46  * SomeoneWeird tired
10:46 < samholmes> SomeoneWeird: ERB? Epic Rap Battles?
10:47 < SomeoneWeird> erb is some ruby thing
10:47 < SomeoneWeird> idno
10:47 < samholmes> epicrapbattlesofhistory
10:47  * samholmes is tiredd
10:48 < rounce^work> samholmes: https://github.com/visionmedia/jade#a6-10
10:53 < samholmes> how do I convert an existing EJS fiel into jade?
10:53 < rounce^work> http://lmgtfy.com/?q=html+to+jade
10:53 < rounce^work> :)
10:54 < samholmes> http://lmgtfy.com/?q=ejs+to+jade
10:55 < rounce^work> seeing as EJS is pretty much HTML, it'll most likely be easier to convert them all to jade then fix the dynamic bits
10:56 < asturel> hey, is there a var with jade to put every 2. item in the array into new div?
10:57 < asturel> so like.. -var x = 0 each val in arr -x+=1 -if (x % 2)... div()
10:57  * samholmes needs to sleep
10:57 < samholmes> night
11:15 < MI6> joyent/node: Trevor Norris master * cbe3941 : buffer: error and misc cleanup  Changed types of errors thrown to be more (+2 more commits) - http://git.io/0-Cn3w
11:23 < zomg> Any recommended tools for CSS concatenation/minification using node?
11:23 < zomg> Primarily for a jake task to build a library thingy
11:23 < SomeoneWeird> uglifyjs
11:23 < SomeoneWeird> pretty sure that does css
11:23 < zomg> Oh it does? Let's see
11:23 < SomeoneWeird> actually i dont think it does
11:23 < SomeoneWeird> try yuicompressor
11:23 < SomeoneWeird> thats what i use for production
11:23 < zomg> Yeah that's what I thought, just checked both 1 and 2 and neither had any mention :)
11:24 < zomg> Okay, will check that, thanks
11:24 < SomeoneWeird> sorry, tired :)
11:40 < graeme_f> can scripts that are embedded in the node executable (by listing them in node.gyp) require stuff from an external node_modules in the normal way?
11:48 < Dorward> I'm trying to write my first package.json. When I run "npm test" on my dev machine everything works fine. When I run it on a build server it fails because a dependancy is missing (it is listed under dependencies). Should npm test install the deps automatically?
11:49 < SomeoneWeird> npm install
11:49 < SomeoneWeird> then npm test
11:49 < Dorward> SomeoneWeird: Ah, thanks
12:38 < WotWhere> need help configuring node.. want to install express globally then link to it..  did install it with -g  but.. nogo.. did cd to express dir then npm link gives error 10 
12:57 < kschzt> sup. looks like refactoring lockfile.js so that only lock holders can unlock them has fixed the npm race condition.. still wip 
13:51 < exit2> wuddup
14:01 < Iszak> So I'm using socket.io which is integrated into express.js. I want to introduce clustering and start up separate processes for express.js and socket.io, anyone got an example of this?
14:03 < tonka> Iszak: perhaps you may want to look into node-http-proxy
14:05 < Iszak> why, what does it do?
14:05 < Iszak> I don't think I need that, I want to expose all socket.io and express servers, no need to proxy to them.
14:08 < tonka> i was assuming you were looking for a way to load balance your express.js / socket.io processes
14:08 < Iszak> well at the moment I just start one process, but the file is too big and unwieldy so I want to separate it into their own process and have 1 process which dispatches it.
14:10 < SomeoneWeird> move the routes into their own files
14:10 < Iszak> they are.
14:13 < medice> erm.. file being big is not a reason to separate to differnet processes
14:13 < medice> but to more files
14:13 < Iszak> easier to manage, performance
14:13 < Iszak> and sure it is
14:14 < SomeoneWeird> you're asking the wrong questions, then
14:14 < Iszak> what question should I be asking?
14:15 < Iszak> No one seems to be able to answer my question.
14:29 < fg3> short script needs review please: http://goo.gl/zPpci
14:41 < exit2> ok, app ideas go
14:44 < SomeoneWeird> skynet
14:44 < brettlangdon> exit2, an app that creates app ideas
14:44 < exit2> haha
14:44 < Iszak> brettlangdon++
14:45 < exit2> I often considering making a SO or reddit type application that was for app ideas
14:45 < SomeoneWeird> make a forum
14:45 < exit2> *considered
14:45 < SomeoneWeird> in node
14:46 < brettlangdon> funny you mention it, I am currently working on a web app where people post ideas for projects/modules they want and people can comment on them or claim them
14:46 < exit2> brettlangdon: would be kind of neat if non-developers could submit ideas
14:47 < exit2> and if someone claims it
14:47 < exit2> then they can follow up when it's done
14:47 < brettlangdon> more or less the idea
14:47 < brettlangdon> or if there is a module idea I have that I don't have that time to do
14:48 < exit2> when people talk about using HTML5 and Node.js for iPhone apps, are they referring to using PhoneGap?
14:48 < zomg> oh I have lots of ideas
14:48 < zomg> but none of them are the kind that would make any money
14:48 < zomg> =)
14:49 < brettlangdon> zomg, this is more of an open source project idea thing, or at least that is what I am aiming for
14:49 < zomg> ya
14:49 < exit2> yeah, I'm not really looking to make any money just more or less grind on something for the knowledge benefits
14:49 < solidoodlesuppor> Morning
14:50 < exit2> yello
14:50 < zomg> exit2: make a SaaS which lets you track a user on a website exactly like they see it
14:50 < zomg> you'd need to record the dom changing when they interact and things like that
14:50 < zomg> I think it would be quite challenging, but doable
14:51 < zomg> and that's like one of the few ideas I have that could make some money
14:51 < richweskus> zomg
14:51 < zomg> just remember me when you get it working and get megabux from google acquiring you to augment their analytics platform
14:51 < richweskus> make porn
14:52 < exit2> zomg: not sure if I follow the part of 'track a user on a website exactly like they see it'
14:53 < SomeoneWeird> theres stuff that does that already
14:53 < zomg> exit2: well if you have an ajax application or such, it may be a bit hard to determine usage patterns and such because tracking tools like google analytics don't really work with those
14:53 < zomg> so what would need to be done is to actually track the actual events the user is causing on the page and how this affects the DOM and so on, and tracking all that
14:53 < zomg> so it can then be replayed
14:55 < zomg> Here's another: you could glean a lot of information by doing analysis on tweets.. for example, you could follow users based on geographic locations and analyze stuff like what's currently popular (eg. users talk about it a lot) or even things like emotions attached to companies (for marketing or other analysis)
14:57 < exit2> zomg: interesting idea, I think that foursquare does a sort that sort of social research to determine where people may be going after they have checked-in to a certain location
14:57 < zomg> Yeah
14:57 < SomeoneWeird> lol you guys have no idea :)
14:57 < exit2> yeah :P
14:57 < zomg> Third idea: Make a game for iOS that isn't casual. I haven't been able to find a single game for iOS that would be able to keep me entertained past the initial "oh that's neat" factor
14:57 < zomg> =)
14:58 < exit2> yeah good luck with that one :P
14:58 < SomeoneWeird> ie. port WoW to iOS
14:58 < zomg> hehe
14:58 < SomeoneWeird> and then never touch a computer again because wow sucks
14:58 < zomg> If they were to port Advance Wars to iOS
14:58 < zomg> I'd play that
14:58 < zomg> It'd be great
14:59 < brettlangdon> zomg, the analysis of tweets and stuff, I actually used to work for a company that did analytics of social media platforms for organizations
14:59 < zomg> yeah I've seen a couple of companies out there doing something like that
14:59 < MiracleBlue> SomeoneWeird: Why are you still awake?  :P
15:00 < zomg> brettlangdon: what sort of stuff did you do? Some sort of crazy algorithms? :)
15:00 < SomeoneWeird> MiracleBlue, why are you still awake?
15:00 < MiracleBlue> I asked you first!
15:00 < SomeoneWeird> touche
15:00 < brettlangdon> ha… no, not really, the thing was just getting the data and trying to basically categories it
15:00 < MiracleBlue> :D
15:00 < SomeoneWeird> because I'm working
15:00 < SomeoneWeird> lol
15:00 < MiracleBlue> Ooooh, cool
15:00 < brettlangdon> the main thing we did was analyze text for tone, like happy, sad, morbid, etc
15:01 < zomg> ah sounds similar to what I thought
15:01 < zomg> it would be interesting to see if you could find things like events or such, for example say there's a car crash
15:01 < zomg> could you analyze a tweet stream from an area to detect that?
15:01 < SomeoneWeird> my mate has a setup that categorizes by geo location, tracks natural disasters as they happen by analyzing tweets for keywords and parsing them, and a whole lot of other crazy shit
15:01 < SomeoneWeird> its amazing
15:02 < exit2> analyze people's videos on Vine
15:02 < exit2> for tone
15:02 < MiracleBlue> SomeoneWeird: duuuude
15:02 < MiracleBlue> That sounds epic
15:02 < SomeoneWeird> oh it is
15:02 < exit2> how would I port an HTML5 and Node.js app to a native iphone app?
15:02 < MiracleBlue> I was actually thinking of building a fire tracker map that combines the data from all the fire services in the country
15:02 < SomeoneWeird> oh it does that too
15:02 < SomeoneWeird> :P
15:02 < MiracleBlue> Demo?
15:03 < SomeoneWeird> not running atm
15:03 < MiracleBlue> :( wat
15:03 < SomeoneWeird> its very resource intensive
15:03 < MiracleBlue> Code?
15:03 < brettlangdon> I am waiting for this to go into beta: http://www.urthecast.com/
15:03 < SomeoneWeird> not public
15:03 < SomeoneWeird> soz
15:03 < MiracleBlue> :(
15:03 < MiracleBlue> you can't just get my hopes up like that and then shut me down!
15:03 < exit2> that looks awesome, brettlangdon
15:04 < SomeoneWeird> we had it running when japan had its last massive earthquakes and we timed it, it detected the earthquake like 1.5 minutes after happened and it took the news almost 45
15:04 < SomeoneWeird> MiracleBlue, next time its up ill show ya
15:05 < brettlangdon> SomeoneWeird, thats awesome
15:06 < SomeoneWeird> mainly because people tweet "WTF EARTHQUAKE"
15:06 < SomeoneWeird> etc.
15:06 < SomeoneWeird> lol
15:06 < brettlangdon> does it work for celebrity news too? can we know what lindsey lohan's next biggest mistake is before the news channels?
15:07 < SomeoneWeird> haha no not yet
15:07 < SomeoneWeird> it's gunna turn into skynet if we keep coding it
15:07 < brettlangdon> …. keep going
15:07 < SomeoneWeird> we plan to
15:07 < SomeoneWeird> :P
15:07 < brettlangdon> just make sure you code it to ignore me
15:08 < SomeoneWeird> so we have that one, which does analysis of social media
15:08 < SomeoneWeird> another one which is basically "put in somebodies username and get home address" by doing data mining
15:08 < SomeoneWeird> and then another one which does automated security analysis
15:08 < SomeoneWeird> = skynet
15:09 < brettlangdon> that is awesome
15:09 < brettlangdon> the company I worked for, that is where they were headed too
15:10 < SomeoneWeird> yeah
15:10 < SomeoneWeird> we're only doing this for hobbies atm
15:10 < SomeoneWeird> im planning on launching a startup for it though very soon
15:10 < brettlangdon> what is it written in?
15:10 < SomeoneWeird> 100% node
15:10 < brettlangdon> nice
15:10 < boya> Do ya'll prefer to use MongoDB drivers or Mongoose?
15:10 < brettlangdon> boya, native mongo driver, IMHO
15:11 < boya> Yeah that's what I was leaning toward also thanks
15:11 < exit2> is phonegap the only option for writing a node.js app for iOS?
15:11 < SomeoneWeird> phonegap supports node?
15:11 < SomeoneWeird> 0.o
15:11 < brettlangdon> np, I do know that A LOT of people use mongoose because it is more feature rich and you can define your schemas ahead of time and etc
15:11 < Kakera> I once had to get a phonegap app working on WP7
15:12 < Kakera> it was hell
15:12 < exit2> SomeoneWeird: I think maxodgen used node for Gather
15:12 < exit2> with phonegap
15:12 < exit2> I guess I just need to learn ObjC :(
15:12 < Kakera> WP7 doesn't even support console.log out of the box
15:12 < brettlangdon> I've done jQuery mobile on phone gap which makes calls to a node api server
15:12 < Kakera> the script crashed if you tried to use it before waiting for the phonegap lib to load
15:13 < SomeoneWeird> lols
15:13 < exit2> brettlangdon: I made a web-based application using socket.io and it's slow in the browser on the phone and super clunky
15:13 < brettlangdon> exit2, slow how?
15:14 < exit2> brettlangdon: http://niix.howl.jit.su/
15:14 < exit2> it takes forever to connect
15:14 < exit2> works fine on the computer
15:14 < exit2> keep in mind we can't talk to each other unless we are atleast a mile from each other :)
15:14 < exit2> and it crashed lol
15:15 < brettlangdon> cool idea
15:15 < exit2> thanks
15:15 < exit2> I'd like to take it over to native iphone
15:15 < exit2> before I start adding new features
15:17 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:18 < context> thats a really cool idea
15:18 < fg3> I'm looking for an example of an express app that secures some routes with TLS/SSL 
15:18 < exit2> context: thanks
15:21 < brettlangdon> fg3: http://silas.sewell.org/blog/2010/06/03/node-js-https-ssl-server-example/
15:21 < fg3> brettlangdon: thanks
15:21 < brettlangdon> it is not express, but if you can attach an express app to an https server
15:32 < kschzt> isaacs, fixed by refactoring lockfile so that it returns a LockObject in lock(), which has to be used to unlock() the lock. plus checks whether or not we actually got a lock. so something was unlocking paths that it never got locks for, under heavy activity
15:41 < kschzt> isaacs, https://github.com/rocketpack/lockfile/pull/1 and https://github.com/rocketpack/npm/pull/1 currently under peer review here..
15:44 < zot> what's up weekend lovers!
15:45 < zot> i just noticed that node doesn't honor the promise to fill Buffer._charsWritten if the string written == ''.  i haven't found anything in the issues on github, so thought i'd check here before filing.
15:45 < C0deMaver1ck> finally friday!
15:45 < zot> damn straight
15:46 < C0deMaver1ck> and somebody brought oreo cake balls to the office
15:46 < C0deMaver1ck> today is a good day my friend
15:47 < C0deMaver1ck> and I have no clue on the Buffer._charsWritten issue
15:47 < zot> hrm.  actually looking at latest C source, it looks like it does update.  perhaps i'm not running head like i thougth :/
15:47 < C0deMaver1ck> what are you using to install node?
15:47 < C0deMaver1ck> assuming your on OS X since you're using Adium
15:48 < zot> i was previously using source, but forgot that i just ran a company packaging script which may have overridden my local setup
15:48 < zot> although that change is fairly old.
15:49 < zot> whoah.  yeah.  that script downgraded me to v0.8.8 :)
15:52 < thomasreggi> Looking to purchase an advanced javascript book, any recommendations? Secrets of the JavaScript Ninja? 
15:53 < zot> hrmf.  the v0.8.8 source has the same line to set it, and yet it is definitely coming out as NaN.
15:53 < C0deMaver1ck> NaN NaN NaN Batman!
15:54 < SomeoneWeird> hahahahahahaha i LOVE that talk C0deMaver1ck 
15:54 < zot> plus we run on v0.8.8, so i kinda need to make it work.  easy to check for NaN, but this feels strange.
15:54 < jtomasrl> whats the best way to monitor a db for changes using socket.io by insertions trought another app?
15:54 < C0deMaver1ck> thomasreggi: the only book on JS I ever bought was JavaScript the definitive guide, by David Flanagan
15:55 < C0deMaver1ck> it's pretty good, not too advanced
15:55 < C0deMaver1ck> SomeoneWeird: best dev talk I've ever seen
15:55 < C0deMaver1ck> jtomasrl: you could Redis' pub sub model
15:55 < foobar321> What is the best module to handle zip archives with stream2 API ?
15:56 < foobar321> C0deMaver1ck: what talk?
15:56 < jcrugzz> jtomasrl: if you are using couchdb theres a changes feed you can listen on and emit a socket event when there is a change
15:56 < jtomasrl> C0deMaver1ck: im using mongodb
15:58 < C0deMaver1ck> foobar321: https://www.destroyallsoftware.com/talks/wat
15:59 < zot> hurray for unit testing.  but this is definitely weird.
15:59 < foobar321> C0deMaver1ck: oh. seen this looong ago
15:59 < brettlangdon> thomasreggi: http://o2js.com/interview-questions/
15:59 < brettlangdon> book isn't finished yet, but it great so far
15:59 < zot> https://github.com/joyent/node/blob/v0.8.8/src/node_buffer.cc#L472
15:59 < brettlangdon> you can pre-order for like $10
15:59 < zot> this is indeed the line that should be setting 0 for an empty string, utf8 encoded.  yes?
16:01 < C0deMaver1ck> looks like it to me
16:01 < zot> i must be doing something stupid.
16:01 < C0deMaver1ck> pastebin what's returning a NaN?
16:01 < zot> yeah, that was my next step
16:02 < C0deMaver1ck> well actually, bbl. Got a meeting to go to
16:02 < nanashiRei> Anybody experienced with "Sequelize"
16:03 < nanashiRei> I need some javascript binding madness help
16:03 < zot> found it.  indeed sth stupid.
16:03 < nanashiRei> \o/
16:03 < SomeoneWeird> <C0deMaver1ck> foobar321: https://www.destroyallsoftware.com/talks/wat < best talk evarrrr
16:03 < foobar321> Yeah I saw it twice
16:03 < zot> it's definitely beer thirty.  too much code staring today.
16:04 < foobar321> It's completly unuseufl piece of information. How often you add Object to array?
16:08 < thl0> @substack having problems with browserify (require.define 'path') is not the first one in the bundle at times
16:08 < thl0> then it errors out since require.modules.path is not defined
16:09 <@isaacs> kschzt: i notice that you closed the https://github.com/rocketpack/lockfile/pull/1
16:12 < kschzt> isaacs, yeah i just made one for lockfile, about to make one for npm
16:12 < kschzt> https://github.com/isaacs/lockfile/pull/1 and https://github.com/isaacs/npm/pull/3094
16:12 <@isaacs> oic, you sent the pull req to rocketpack, not to me
16:13 <@isaacs> kschzt: hm.  i'm not sure about this LockObject thing
16:13 < kschzt> just done by friday eod :)
16:13 <@isaacs> kschzt: sure, sure.
16:13 < kschzt> isaacs, the problem was that previously anyone could remove the lock file by calling unlock(), regardless of whether they actually were in posession of it
16:14 < geNAZt> yeah i got muxdemux to send files over a muxed stream 
16:14 < geNAZt> *dance*
16:14 <@isaacs> kschzt: so, iiuc, the issue is that you have a bunch of people waiting on a particular lock
16:14 <@isaacs> kschzt: and then there's a race to see who gets it first?
16:15 < kschzt> yeah, then someone goes and removes the lock from pack() while unpack() is waiting for it
16:15 < kschzt> with these changes that problem is now gone and it's stably installing in a loop~
16:15 < kschzt> -~
16:16 < kschzt> i was seeing lots of corrupted (size: 10) tarballs being given to unpack(), because pack() wasn't done - or - pack() had started again on an existing tarball and overwrote it while/just before it was being read
16:16 <@isaacs> kschzt: i'm gonna start with the test here.  one second.  i think there might be a simpler solution.
16:16 < kschzt> k
16:17 <@isaacs> kschzt: i think i'm starting to see the problem, though.
16:17 < kschzt> oh also i added a lock() on the tarball in unpack() which wasn't there
16:18 < kschzt> now it's just the very rare EMFILE that might break the installation ;)
16:18 < kschzt> (yeah it's still there)
16:21 < kschzt> gotta go home now (6.18pm), ttyl, have a nice weekend everyone :) 
16:26 <@isaacs> ircretary: tell kschzt Thanks.  I'll dig into this some more.
16:26 < ircretary> isaacs: I'll be sure to tell kschzt
16:36 < holzp>  node got some praise in the stack overflow user survey: http://blog.stackoverflow.com/2013/01/2012-stack-overflow-user-survey-results/
16:36 <@isaacs> holzp: i saw!
16:37 < holzp> Don't understand why javascript and jquery are different things in the "programming languages"
16:38 < geNAZt> thats because jquery has an other api
16:38 < geNAZt> and its own behavior
16:40 < holzp> seems like a stretch
16:43 < khushildep> Hi chaps
16:43 < exit2> yello!
16:44 < khushildep> Is there anywhere I can download old solaris versions of the binaries? The latests stable as interfaces which my install doesn't have.
16:44  * holzp wonders how kushildep knew he was wearing chaps
16:44 < exit2> Can someone see why I might be getting this error? http://hastebin.com/wasibeluje.pl
16:44 < khushildep> thanks for the image holzp
16:45 < exit2> it's only occasional and I think it's when the client hasn't submitted to the server side the clientid
16:45 < holzp> for all you know I am a sexy model lady tangentally interested in Node
16:45 < SomeoneWeird> because that socket doesnt exist
16:45  * holzp strokes his neckbeard
16:45 < exit2> SomeoneWeird: only seems to happen if I quickly connect to the chat and then submit a message
16:45 < exit2> as if it doesn't have enough time
16:46 < exit2> maybe I'll do a check to see if it exists first
16:46 < protestContest> hey does anyone have any experience with Mocha?
16:47 < brettlangdon> protestContest, what is your question?
16:47 < brycebaril> exit2 what's the syntax for setting up the socket, is there a callback you should be doing this emit in that guarantees io.sockets.sockets[clientid] will be set up?
16:47 < protestContest> I just wanted to get some opinions on Mocha.  Does anyone have any other recommendations?
16:47 < exit2> brycebaril: yeah I'm sure there is an err callback I could setup
16:48 < brettlangdon> protestContest, I've really only ever used mocha, I like it
16:48 < jcrugzz> protestContest: I use https://github.com/dscape/specify personally. Not a big fan of the big testing frameworks
16:49 < protestContest> brettlangdon: which style do you use?  I'm not used to any in particular, is either more intuitive?
16:49 < brettlangdon> TDD
16:49 < rideh> hmm, running forever start proccess isnt leaving me with a service listed in forever list. i saw when using it in code I need to start the listener but saw no such direction for cli method
16:51 < brettlangdon> rideh, have you checked any of the forever logs?
16:51 < brettlangdon> most likely in ~/.forever
16:52 < foobar321> Does the tar in npm/node_modules handle streams2 ? Is there any lib that does ?
16:54 < exit2> any advice on a better way to write this to check if socket exists? https://gist.github.com/4635978
16:59 < rideh> brettlangdon: well i can find the running process and i can visit site but doesnt show up in list
16:59 < rideh> brettlangdon: although i just tried to set an environmental variable to denote which config to use and now the server isn't starting on boot. 
17:00 < brettlangdon> hmm, not sure
17:25 < ohboy> anybody using AngularJS?
17:25 < ohboy> (with Node)
17:34 < topaxi> t
17:38 < superjoe> ohboy, angularjs has absolutely nothing to do with node
17:38 < julian_duque> ohboy: i'm using it with an express.js project
17:39 < ohboy> julian_duque : hat's your experience?
17:39 < ohboy> like it?
17:39 < ohboy> how do you decouple angular so it would work well with Express?
17:40 < ohboy> saving and loading info
17:41 < julian_duque> ohboy: I expose REST API methods and call it from the angular js controllers, all the client side code is managed by angular. I render the view from express with a jade template and then with angular manage all the client stuff
17:52 < holzp> can anyone define "expando" without looking it up?
17:57 < exit2> holzp: spanglish for expand
17:58 < holzp> yeah im reading something which uses the term like its a common programming term
17:58 < azylman> I'd never heard it until I cheated and looked it up
17:58 < holzp> which I believe stands for "expand object" or "expended object"
17:58 < azylman> The definition I found was "A property added to an object at run-time."
17:59 < holzp> thats the context here
17:59 < holzp> but i have never heard it
18:04 < segomos> holzp: some context might help
18:05 < holzp> in the jresig book
18:06 < holzp> hes showind adding a element data element and uses the property name expando
18:06 < holzp> "expando—The property name that we’ll tack onto each element to store its
18:06 < holzp> GUID. We form this name using the current timestamp to help prevent any
18:06 < holzp> potential collisions with user-defined expandos."
18:06 < holzp> woreded like exando is a standard term
18:09 < mscdex> isaacs: easy on the npm package publishing ;-)
18:10 < mscdex> holzp: i always thought an expando was a component that could be expanded
18:11 < mscdex> s/component/ui component/
18:11 < holzp> it is what it is, I just did not think it was a common enough term to go without definition
18:11  * holzp is nitpickey
18:11 < mscdex> true
18:15 <@isaacs> mscdex: i'm pushing an update to the db design doc now to exclude all my npm-test-* packages from all the views
18:15 <@isaacs> mscdex: once the cache expires, things will go back to normal
18:15 < cloudbender> good morning
18:15 < mscdex> :-)
18:16 <@isaacs> mscdex: tracking down a bug regarding lock file contention, needed 50 things that all depend on express.
18:17 < exit2> any advice on a better way to write this to check if socket exists? https://gist.github.com/4635978
18:19 < brettlangdon> exit2, you are keeping a running list of connected users?
18:19 < segomos> exit2: what is in clientid ?
18:19 < exit2> brettlangdon: yes
18:20 < brettlangdon> are you removing that user "on('disconnect')"?
18:20 < exit2> brettlangdon: yes
18:20 < exit2> brettlangdon: the issue is when they connect too quickly and send to chat
18:20 < brettlangdon> but your still getting from time to time when the connection is not alive?
18:20 < exit2> there is some sort of delay
18:20 < exit2> from client to server
18:20 < brettlangdon> ah
18:20 < exit2> and it kicks back an error
18:21 < exit2> so I guess I need to check if clientid exists
18:21 < exit2> segomos: clientid is part of the socket.io api
18:21 < brettlangdon> is that the error?
18:21 < brettlangdon> that clientId does not exists in io.sockets?
18:21 < exit2> yep
18:22 < brettlangdon> yeah… probably just need to do like `if(socket.id != clientid && io.sockets.socket[clientid] && haversine...0`
18:23 < brettlangdon> exit2… or, you could just use FuckItJS: https://github.com/mattdiamond/fuckitjs
18:23 < brettlangdon> that'll "fix" the problem
18:24 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:27 < exit2> brettlangdon: haha
18:27 < exit2> I've never seen this before
18:27 < brettlangdon> has to be one of the best js projects I've come across
18:27 < brettlangdon> the license is the best though
18:29 < exit2> haha yeah 
18:31 < samholmes> How do I use a local as a class for an element in jade?
18:31 < samholmes> Or how do I check a condition to determine a class?
18:31 < exit2> brettlangdon: that first suggession seems to be working, thanks
18:31 < exit2> *suggestion
18:32 < brettlangdon> exit2, np
18:32 < exit2> now it's just super ugly :P
18:32 < brettlangdon> exit2… it is javascript
18:33 < exit2> brettlangdon: I actually like how JS looks o_0
18:33 < brettlangdon> so do I
18:34 < exit2> I guess I could do it like this https://gist.github.com/4635978
18:34 < brettlangdon> samholmes, you want to take a variable from javascript and use it as the class name for an element in jade?
18:34 < brettlangdon> exit2, why not iterate over the client id's in io.sockets.socket?
18:35 < samholmes> brettlangdon: That, and I sometimes would like to be able to determine a class name using the ternary operator and a variable.
18:35 < exit2> brettlangdon: actually just realized it's not working, it doesn't seem to be passing the new '&& io.sockets.socket[clientid] &&'
18:35 < samholmes> brettlangdon: I'm use to EJS and I could just embed a tad of logic in my templates for this sort of thing.
18:35 < brettlangdon> s/socket/sockets
18:35 < exit2> brettlangdon: instead of in clientInfo
18:36 < brettlangdon> exit2, sure, just a random thought
18:36 < brettlangdon> but, you have a spelling mistake in the script, which is why it is failing
18:36 < brettlangdon> samholmes, are you using express?
18:36 < DarkLinkXXXX> Okay. I'm having a OOP issue. I'm trying to have optional paramaters under @ops, but it's not working. The livescript looks like this. http://pastebin.com/gwsCyqWu The javascript looks like this. http://pastebin.com/e4tut6Yb Any pointers?
18:37 < DarkLinkXXXX> It's failing because null doesn't get overwritten, btw.
18:37 < samholmes> brettlangdon: Yes. But right now I'm using jade with browserify for the clientside
18:37 < brettlangdon> ok, in express, when you call res.render, the second parameter can be an object of key/value pairs to pass into jade
18:38 < brettlangdon> so like: res.render('my_view', { classname: js_var_for_class })
18:38 < brettlangdon> then in jade you can do "p(class=classname)"
18:38 < exit2> brettlangdon: oh duh
18:38 < exit2> hah
18:39 < brettlangdon> I've never tried ternary, but you might be able to do "p(class=(classname)? classname : 'something else')"
18:39 < exit2> I like ternary
18:40 < brettlangdon> samholmes, either that or you can define variables inside of a jade template as well and if statements and etc
18:40 < styol> another option for some things is var foo = bar || 'something else';
18:40 < samholmes> brettlangdon: I thought it was p(class='#{classname}')?
18:40 < samholmes> - the ?
18:40 < brettlangdon> samholmes, no, not needed, afaik, I was doing it about 20 minutes ago
18:40 < brettlangdon> :)
18:40 < segomos> it is, or it's p(class!=classname)
18:41 < samholmes> Oh so that's only need if you're going to mix text with variables
18:41 < segomos> depending on your jade version
18:41 < exit2> how do I update the version of a module a publish?  The github version is current, while the npm is behind one
18:41 < samholmes> What if you do p.someclass(class=classname) will it have both someclass and classname variable as a class?
18:41 < brettlangdon> samholmes, well you can always do "p(class="something-" + classname)"
18:41 < samholmes> Oh so that's full on javascript there?
18:42 < brettlangdon> exit2, you did npm publish with the latests version in package.json?
18:42 < brettlangdon> samholmes, yeah
18:42 < exit2> brettlangdon: haven't tried anything yet, if I adjust the package.json with the new version will it update?
18:42 < brettlangdon> you can drop into javascript with a dash, so like: "-var classname = "something-' + classname" then use that variable inside the template
18:42 < samholmes> brettlangdon: Is the #{} part, javascript?
18:43 < brettlangdon> no
18:43 < brettlangdon> unless someone is not telling me something
18:43 < brettlangdon> exit2, yeah, update package.json with latest version number and do npm publish and it will upload it
18:43 < exit2> word
18:44 < samholmes> Jade is actually pretty cool
18:44 < samholmes> Although I'd like it explained that everything between () is like javascript
18:44 < mscdex> wow.... how do people manage to publish their private keys in github repos?
18:44 < mscdex> and other sensitive information
18:44 < samholmes> it's almost as if you take the () and put it in  var declaration.
18:45 < samholmes> input(type=type, value=value) ... var type=locals.type, value=locals.value;
18:45 < brettlangdon> samholmes, here is one of the templates I have been working on today, not the best as I am also just really getting into jade, but, might help
18:45 < brettlangdon> https://gist.github.com/293517ed9c68f922a690
18:46 < azylman> samholmes: that's not what it's doing. The stuff in there is adding attributes to the html element, it's not declaring variables
18:46 < samholmes> github needs syntax highlighting for jade
18:46 < MI6> joyent/node: Trevor Norris v0.8 * 65249cc : buffer: slow buffer copy compatibility fix  Fix issue where SlowBuffers c - http://git.io/KHLc7g
18:46 < azylman> input(type=type, value=value) means "create an input element with type equal to the type variable and value equal to the value variable"
18:46 < samholmes> azylman: I know, but I'm just saying it's almost like it is.
18:47 < brettlangdon> samholmes, the better way to look at it, is anything after an equal sign is evaluated as javascript
18:47 < azylman> Yeah
18:47 < brettlangdon> you can do input(type="submit")
18:51 < owen1> is there a way to create a glabal object in node? i have a configuration object that i currently pass to my app.init() and to any function that needs it.
18:51 < DarkLinkXXXX> What's wrong here? This is an early OOP attempt. http://pastebin.com/C9mCD3NZ
18:52 < nlf> owen1: if you can store your config object as json, you can just require it from your other modules
18:52 < nlf> it depends on what's in it, really
18:53 < owen1> nlf: config = {
18:53 < owen1>   environment: 'development',
18:53 < owen1>   webSitePort: 3000,
18:53 < owen1>   mongoHost: 'mongodb://localhost/push',
18:53 < owen1>   db: require('../db.js'),
18:53 < owen1>   push: require('../push.js')
18:53 < DarkLinkXXXX> When I try creating a new bot object, I get TypeError: Cannot call method 'match' of undefined
18:53 < owen1> }
18:53 < nlf> the requires are a problem
18:54 < owen1> nlf: why? i have conig/development.js and config/test.js
18:54 < owen1> and in the test i require my mock objects
18:54 < nlf> i mean for storing it as json
18:54 < nlf> can't have code in json
18:54 < owen1> right
18:54 < isaacbw> are there any serious functional considerations between dedicated servers and VPSs, or is it usually a question of hardware options and price?
18:54 < CoverSlide> hardware and price
18:55 < nlf> isaacbw: also you're sharing physical hardware with other people
18:55 < isaacbw> so maybe consistency
18:55 < nlf> depending on the type of vps you can't use different kernels also, if that matters to you
18:55 < isaacbw> ah okay
18:55 < isaacbw> thanks
18:55 < nlf> use a reputable hosting company and the sharing isn't typically a problem
18:55 < nlf> some of the cheaper places oversell their hardware and end up being really slow
18:57 < samholmes> How do I do plain ol js in my jade template?
18:57 < isaacbw> there's a band in the apt next to me, and every time I decide to listen to music on my stereo they decide to start practicing
18:57 < isaacbw> lol
18:57 < boya> Is it good practice to use layouts with jade or are most people not using them?
18:57 < samholmes> I need to be able to declare an array then loop through some locals then append array and shit
18:58 < samholmes> boya seems fine
18:58 < boya> Using layouts just for headers and footers?
18:58 < isaacbw> what doy ou mean by layouts
18:58 < isaacbw> is that a jade thing?
18:58 < boya> in your views
18:58 < azylman> boya: I don't think you can use layouts in express3 and should use blocks instead
18:58 < boya> yeah
18:58 < samholmes> azylman: blocks?
18:59 < boya> yeah I read up on blocks
18:59 < boya> still gives you a layout.jade to start with though
18:59 < rump> ejs includes ftw
18:59 < boya> Which you have to extend
18:59 < azylman> Ah, yeah, I guess I misunderstood
18:59 < boya> Yeah struggling between sticking with jade or going with ejs
18:59 < azylman> samholmes: https://github.com/visionmedia/jade#a12
19:00 < azylman> samholmes: also you can prefix anything with a dash and it's evaluated as raw js
19:00 < azylman> I've never used ejs but I've used jade extensively and really like it
19:00 < brettlangdon> same as azylman 
19:00 < boya> azylman: are extending any of your views?
19:00 < boya> like layout.jade 
19:01 < brettlangdon> boya, I use a layout for mine
19:01 < azylman> Yeah, so we have a base layout.jade that has all the <html>, header, footer, menu etc.
19:01 < azylman> And has like a "block content" inside the middle
19:01 < boya> ok
19:01 < azylman> And then all of our page-level views extend that
19:01 < boya> then extend layout.jade and use block content in your other files?
19:01 < azylman> Yep
19:01 < boya> Ahh understood
19:01 < boya> I'll give that a go thanks
19:01 < azylman> Also, we usually have the title, script, and css tags as blocks as well
19:02 < azylman> So a typical page view will have a block for title and content
19:02 < azylman> And then if it needs any custom css or js it will do a "block append" to those blocks
19:02 < boya> ahh right
19:02 < boya> that makes sense thanks
19:02 < azylman> np
19:10 < samholmes> azylman: So if I prefix a line with - it'll be interpreted as JS just like <% is in EJS?
19:10 < jtomasrl> how should i start a websocket (socket.io) in order to use it in different files
19:10 < samholmes> What if you're JS is multiple lines?
19:13 < samholmes> Did you know you could use an array for class attributes!
19:14 < samholmes> a(class=[foo, 'bar', baz.azz]) -> <a class='foo-value bar baz-azz-value'>...
19:14 < samholmes> !
19:14 < samholmes> That's cool
19:14 < samholmes> Even better, full on javascript in der
19:15 < samholmes> you could do a(class=[foo ? bar : baz, 'rest of classes'])
19:15 < samholmes> That's so awesome!
19:15 < samholmes> Too bad the tmLanguage file for sublime-text doesn't syntax highlight this too well
19:16 < brettlangdon> samholmes, if you want multiple lines, I think you can just prefix each line with a dash
19:16 < samholmes> brettlangdon: Ah
19:18 < Stephen> Monkey down
19:20 < isaacbw> if you decide you want to explore another type of page rendering, AngularJS will change your life
19:20 < samholmes> How do do escaping vs non escaping in attributes?
19:20 < isaacbw> http://angularjs.org/
19:20 < samholmes> attribute="#{escaped-or-not}"
19:20 < therealkoopa> If I want to grab screenshots of webpages using node, do I need to use phantomjs, or are is there another way?
19:21 < brettlangdon> samholmes, what do you mean?
19:21 < rump> therealkoopa: phantomjs is best bet
19:22 < rump> unless you wanna run vms with a gui on it
19:22 < brettlangdon> rump… idk, we had nothing but problems with phantomjs
19:22 < rump> brettlangdon: whats the alternative?
19:22 < therealkoopa> brettlangdon: What do you use?
19:22 < brettlangdon> selenium
19:22 < jtomasrl> i need an server that perform db inserts (for mobile client), an admin panel (web browser) in another app and i want to add a websocket that push data from the server to the admin panel, is it a good way of doing it?
19:22 < ricardobeat> therealkoopa: phantomjs doesn't use node. but yes, go ahead and use it. 
19:22 < brettlangdon> or there is… I think zombie
19:22 < rump> its either that or run a windows/xwin box
19:22 < brettlangdon> http://zombie.labnotes.org/
19:22 < rump> zombie is headless and wont give you the gui
19:22 < brettlangdon> phantomjs is headless too
19:22 < rump> but its great for functional testing
19:22 < samholmes> brettlangdon: I can do class=name and name will be HTML escaped. I can do class!=name and it wont. But how do I escape #{} syntax?
19:23 < rump> brettlangdon: you forgot the no gui part
19:23 < brettlangdon> oh
19:23 < brettlangdon> …. yeah
19:23 < therealkoopa> I just need to load a page, grab a div, and turn it into an image.
19:23 < rump> phantom
19:23 < azylman> samholmes: I belive then you need to use the javascript escape function or something, but not entirely sure
19:23 < therealkoopa> I know phantom works for this. I'm not sure the best way to hit it from within node. I see the latest 1.8 release has a webdriver server.
19:23 < rump> well, hm, grabbing a div might be harder
19:24 < isaacbw> turn a div into an image?
19:24 < rump> you'll have to get its coords and then process the screenshot
19:24 < azylman> If you want to escape code in string interpolation
19:24 < samholmes> azylman: Testing it out on http://naltatis.github.com/jade-syntax-docs/
19:24 < therealkoopa> Does it make sense to have the phantom server (process?) running all the time and just node invokes it? Rather than spawning a phantom process for each image creation?
19:24 < isaacbw> can you do that with html5?
19:24 < samholmes> azylman: I see that the escape function is used for me.
19:24 < rump> isaacs: phantomjs can screenshot the session
19:25 < samholmes> azylman: How do I _not_ escape though. And isn't escape for URLs?
19:25 < exit2> what are those 'connecting..' gifs called?
19:25 < isaacbw> rump, wrong isaac
19:25 < isaacbw> I was about to link to phantomjs actually
19:25 < therealkoopa> I just grab the div and get its getBoundingClientRect
19:25 < rump> whoops, dang you autocomplete :)
19:25 < isaacbw> I think mozilla has something similar
19:25 < isaacbw> oh, not anymore
19:25 < isaacbw> man, mozilla needs to stop canceling cool shit
19:25 < rump> isaacs: sorry, please ignore last ping, wrong tab
19:26 <@isaacs> rump: np
19:27 < azylman> samholmes: Not sure how you would unescape it... I've never had to do that.
19:27 < azylman> My guess is string interpolation forces escaping
19:27 < samholmes> azylman: Yeah, then again, I could always use JS instead of the #{} syntax
19:27 < azylman> So just don't use string interpolation if you don't want it escaped
19:28 < ricardobeat> isaacbw: you mean https://github.com/laurentj/slimerjs ?
19:29 < isaacbw> ricardobeat, no, I was looking at https://mozillalabs.com/en-US/chromeless/
19:29 < ricardobeat> therealkoopa: found it https://github.com/deanmao/node-chimera
19:30 < rump> jade has a way to avoid the escaping
19:30 < rump> like with ejs its <%-   (the -)
19:30 < rump> but i forget with jade
19:30 < ricardobeat> therealkoopa: it's just like phantomjs but runs inside the node process
19:30 < therealkoopa> ricardobeat: Oh nice
19:31 < isaacbw> someone should make a better browser render tester
19:31 < samholmes> is != faster than in Jade?
19:32 < isaacbw> actually, it would be so cool if someone wrote a testacular host that ran the tests in many different browsers
19:32 < isaacbw> shit that's a good idea
19:32 < severla> what's the recommended setup for running an express app in production?
19:32 < rump> like browersify?
19:32 < rump> wait, thats not the project
19:33 < therealkoopa> testling
19:33 < rump> https://browserling.com i meant
19:33 < rump> yeah or testling
19:33 < isaacbw> oh, yea
19:33 < isaacbw> that looks like it might be what I was thinking
19:33 < isaacbw> does it let you emulate text entry and clicking things?
19:34 < rump> fully interactive iirc
19:34 < isaacbw> cool
19:34 < isaacbw> is it open source?
19:34 < rump> yeah its node
19:34 < rump> these guys are studs in the community
19:34 < isaacbw> I can't find the testling source
19:34 < rump> http://www.catonmat.net
19:34 < rump> http://substack.net
19:35 < rump> contributed like a hundred node modules or something
19:35 < rump> well,
19:35 < rump> i doubt they give the full stack in a tidy package
19:35 < rump> you can use theirs or assemble
19:35 < rump> but you'd need to setup vms n stuff
19:35 < samholmes> testicular?
19:37 < isaacbw> ah, shitty internet
19:38 < isaacbw> I sometimes get 15Mbps and sometimes 500kbps
19:39 < severla> is it common practice to have nginx in front of a node webapp? which alternatives exist?
19:39 < jtomasrl> how could i start a socket.io on a separate module (i need the server object)
19:40 < tpayne> Hello. I'm trying to access this.req.form and for whatever reason it's not available after posting to a route and trying to access it. Where do I begin to debug?
19:40 < txdv> Yeah, nginx is the like the default reverse proxy
19:40 < tpayne> severla: i know my company is using nginx
19:40 < tpayne> in front of node
19:40 < isaacbw> does nginx let socket.io through yet?
19:40 < rump> haproxy is cool too
19:41 < jcrugzz> isaacbw: what service do you use?
19:41 < rump> a single cored haproxy somehow out performs my multi core nginx
19:41 < txdv> isaacbw: as a third party module for nginx
19:41 < isaacbw> ah, okay
19:41 < azylman> tpayne: req and res are usually arguments to your route action, and not properties on the context?
19:41 < isaacbw> I'm not using nginx myself
19:41 < samholmes> Jade doesn't have partials?
19:41 < isaacbw> sure it does
19:42 < tpayne> azylman: Not following. I see this.req.body, but not this.req.form
19:42 < azylman> Are you using the bodyParser middleware?
19:42 < severla> samholmes: use include
19:42 < tpayne> azylman: yep
19:42 < jcrugzz> isaacbw: meant internet service, going to need to upgrade this place when I land a job
19:43 < gluxon> Does 5 days until 0.10 milestone mean 0.10 will be released in 5 days? :D
19:43 < azylman> How are you posting to that endpoint? Are you sure that it's got the correct headers so express knows it's a form?
19:43 < nlf> afaik forms will be parsed in to req.body in express if you're using the bodyparser middleware
19:43 < azylman> It needs to have content-type correctly set
19:44 < azylman> bodyParser uses the content-type of the request to know how to parse it
19:45 < tpayne> azylman: <form id="pushForm" class="form-horizontal" action="<%= View.Utilities.urlToHttps('/push') %>" method="POST" novalidate="novalidate" enctype="multipart/form-data">
19:45 < isaacbw> jcrugzz, oh sorry
19:45 < isaacbw> Time Warner
19:45 < tpayne> and this is how i'm posting
19:46 < isaacbw> it's provided by the building and it's mostly really great, but sometimes just completely craps out on me
19:46 < isaacbw> I don't think you get much choice in the city though
19:46 < tpayne> azylman pushForm.submit(); in javascript
19:47 < isaacbw> woah, IMAP supports shared mailboxes
19:48 < isaacbw> does anyone actually implement that?
19:49 < jcrugzz> isaacbw: Yea we currently have some 4G internet service, I'll have to see what the options are for the building
19:49 < isaacbw> jcrugzz, 4G? anything's got to be better than that
19:50 < janmower_> isaacbw: i think cyrus-imap has good support for shared mailboxes
19:50 < isaacbw> it seems like something gmail would be all over
19:51 < jcrugzz> isaacbw: yea haha, it streams netflix at least
19:52 < isaacbw> it's possible that timewarner is throttling me as punishment for torrenting
19:52 < isaacbw> but I don't torrent all the time, so I don't know
19:52 < isaacbw> and I don't seed very much (sorry)
19:53 < isaacbw> when I do seed, it's through a VPN
19:53 < azylman> tpayne: enctype changes the content-type on the request so it's not encoded as application/blahblahblah-form
19:53 < isaacbw> I could never figure out how to get my vpn set up on my arch laptop though
19:53 < azylman> If you're sending it as multipart/form-data I believe you need a different middleware other than bodyParser, but I'm not sure what it is
19:53 < isaacbw> hopefully WICD will support easy VPN configuration soon
19:53 < tpayne> hmm, ok let me check
19:53 < tpayne> thanks
19:53 < samholmes> There has got to be a better way to do js in jade other than appending a - at the beginning of the line.
19:54 < azylman> connect-form possibly?
19:54 < isaacbw> samholmes, I think there's a script tag or something
19:54 < azylman> tpart: Oh, acutally, I think I'm wrong
19:54 < azylman> er, tpayne
19:54 < samholmes> isaacbw: Not client-side js
19:55 < azylman> It looks like bodyParser does do multipart/form-data but it puts it in req.files
19:55 < isaacbw> oh
19:55 < isaacbw> samholmes, you shouldn't be writing a lot of js in templates anyway with server-side rendering
19:55 < samholmes> Like in EJS there's <% js.script %>
19:55 < samholmes> But in Jade there's - js.script
19:55 < samholmes> and if you want multiple lines
19:55 < isaacbw> you want js to be in your route scripts and then just pass properties to the template
19:55 < samholmes> -
19:56 < isaacbw> js should be minimal, mostly for conditionals and loops
19:56 < samholmes> isaacbw: That's true I guess.
19:56 < isaacbw> but I don't use jade, so I won't be much help
19:56 < samholmes> EJS temps you into using a lot of logic
19:56 < samholmes> I'm converting a EJS template here
19:56 < azylman> As isaac said, you don't want that much logic in your templates.
19:58 < isaacbw> but I'm going to be an angularjs evangelisthttp://angularjs.org/
19:58 < isaacbw> http://angularjs.org/
19:58 < isaacbw> my lord and savior angular
19:58 < isaacbw> client-side rendering
19:58 < isaacbw> nirvana
19:58 < isaacbw> you will never think of templates the same
19:58 < isaacbw> once you see the light
19:58 < azylman> I would say than angular is for a different thing than Jade
19:58 < azylman> Some things are more appropriate to render server-side
19:59 < samholmes> ≠ should be an equivalent to != in Jade
19:59 < isaacbw> absolutely
19:59 < azylman> You COULD render everything server side, but you shouldn't
19:59 < azylman> And you COULD render everything client side, but you shouldn't
19:59 < isaacbw> it depends on what your app looks like
19:59 < isaacbw> and behaves
19:59 < CoverSlide> rendering everything client-side isn't bad
19:59 < CoverSlide> I do it all the time
19:59 < isaacbw> I would stay away from mixing server-side and client-side rendering
20:00 < isaacbw> at least if you're using angular
20:00 < CoverSlide> I say stay away from rendering server-side via AJAX
20:00 < isaacbw> what, like pulling in prerendered chunks?
20:00 < CoverSlide> AJAX is most useful as a transport for data, not markup
20:01 < isaacbw> I don't know if I should be tipping this cleaning lady
20:01 < isaacbw> the building pays for her
20:01 < isaacbw> I'm poor and don't carry cash though
20:01 < CoverSlide> I hear cow tipping is bad for the cow
20:01 < isaacbw> hmm, maybe you're right
20:02 < isaacbw> am I the uncool tenant for not tipping her, or would I be the cool tenant if I did tip her?
20:02 < CoverSlide> I am usually a jerk and don't care what other people think, makes life simple
20:03 < CoverSlide> and saves money too
20:03 < isaacbw> I went to a fancy salon and found out you have to tip someone to shampoo you
20:03 < isaacbw> I can shampoo myself thank you
20:03 < samholmes> What do _you people_ think of this suggestion https://github.com/visionmedia/jade/issues/881 ?
20:04 < CoverSlide> what do you mean "you people", are you a racist?
20:04 < isaacbw> I don't get the appeal of jade, honestly
20:04 < isaacbw> I find it easier to visually parse html than indent-dependent shit
20:04 < C0deMaver1ck> I think it's a bit presumptuous to think everyone is on a mac
20:04 < CoverSlide> it's for people who like python and finding writing closing tags too verbose and redundant
20:04 < isaacbw> I've also never really fallen in love with python, so I guess that makes sense
20:05 < CoverSlide> I personally like HAML or Jade better than hand-writing HTML
20:05 < CoverSlide> and I find it easier to visualize that way
20:05 < isaacbw> to each their own I suppose
20:05 < CoverSlide> just like how YAML is easier to visualize data than XML
20:05 < iwalkbarefoot> i'm not sure I really see the appeal of using ≠ over !=
20:05 < isaacbw> how do you even type that
20:06 < iwalkbarefoot> != is pretty uniform across languages
20:06 < isaacbw> do you have a magic keyboard
20:06 < CoverSlide> I think that stuff gets parsed as HTML
20:06 < CoverSlide> I mean JavaScript
20:06 < iwalkbarefoot> isaacbw: it's really easy on a mac, not sure about other oses
20:06 < CoverSlide> oh wait the !=, nvm
20:06 < isaacbw> do mac keyboards have a key for that?
20:06 < iwalkbarefoot> option + =
20:07 < isaacbw> steve jobs you crazy
20:07 < CoverSlide> "On a Mac, you can type this character very easily by holding down option when typing =."
20:07 < isaacbw> oh, I guess you can type in unicode characters with alt or something
20:07 < isaacbw> depending on the editor
20:07 < iwalkbarefoot> yeah, you just have to remember the code
20:07 < isaacbw> oh I see
20:07 < isaacbw> that would just make things terribly confusing, tbh
20:08 < isaacbw> and also limit what you can edit, i.e. remotely
20:08 < iwalkbarefoot> yeah, that's my belief too
20:08 < isaacbw> e.g.
20:08 < isaacbw> you might be stuck with a very primitive text editor and not even be able to see the source
20:09 < iwalkbarefoot> not sure if samholmes is still around or not, he opened the issue and posed the question above
20:09 < isaacbw> I don't read things
20:09 < samholmes> iwalkbarefoot: I am
20:09 < samholmes> CoverSlide: I felt like underscoring "you people" to get the racial stir going, it's funny how that works.
20:10 < samholmes> C0deMaver1ck: It wouldn't be for everyone. There would still be != for non mac users
20:11 < samholmes> iwalkbarefoot: != is uniform and will still be used, but having the ≠ option would be nice too
20:11 < C0deMaver1ck> what about code consistency within a team with different types of computers
20:11 < iwalkbarefoot> samholmes: do you know of any other languages that support ≠ ?
20:11 < CoverSlide> or any unicode operators by default?
20:11 < samholmes> C0deMaver1ck: Then code consistently, but if you have a team of mac users, then code consistently. XD
20:11 < isaacbw> you could patch jade really easily to do the conversion
20:12 < C0deMaver1ck> I just don't see that catching on
20:12 < C0deMaver1ck> not the coding consistently, the ≠ thing
20:12 < samholmes> iwalkbarefoot: Just because no other languages support it doesn't mean a new language couldn't.
20:12 < C0deMaver1ck> even though I am on a mac
20:12 < iwalkbarefoot> samholmes: I wasn't implying that, I was asking
20:12 < samholmes> Even if you coded with ≠ you could easily do a find replace on it
20:12 < brettlangdon> how do you type that on mac?
20:12 < C0deMaver1ck> option =
20:12 < samholmes> iwalkbarefoot: I don't know of any
20:12 < CoverSlide> unfortunately, that doesn't work in a terminal
20:13 < samholmes> Option Shift K
20:13 < brettlangdon> 
20:13 < samholmes> 
20:13 < samholmes> haha
20:13 < C0deMaver1ck> 
20:13 < samholmes>  FTW
20:13 < exit2> 
20:13 < brettlangdon> find out who is on a mac real quick
20:13 < samholmes> Option key is kinda nice
20:13 < qXs-web> lol
20:13 < samholmes> lol
20:13 < isaacbw> bastards
20:13 < samholmes> If you ask what OS you're on
20:13 < samholmes> 
20:13 < tpayne> azylman: http://stackoverflow.com/questions/5149545/uploading-images-using-nodejs-express-and-mongo check this out
20:14 < exit2> how do I pass a variable from my app.js to index.js
20:14 < CoverSlide> so you HAVE to be working on a mac to use that, and not using vim or emacs which lots of people use even if on a mac
20:14 < tpayne> i think what i'm missing is explained here. It says its using middlewear but it doesn't look like middle wear to me
20:14 < qXs-web> and iOS doesn't do it :(
20:14 < CoverSlide> and if you're working on a team, then you'll see a mix of = and ≠ in the same source. I'ma say -1 to this
20:15 < iwalkbarefoot> samholmes: yeah I think you'll probably have a hard time garnering support this one.  you could patch it in yourself though
20:16 < brettlangdon> exit2, what do you mean?
20:16 < jhsto> he probably means passing variables as they do in express
20:16 < CoverSlide> tpayne: in the express.createServer( ...  form({ keepExtensions: true }) is the middleware
20:16 < exit2> brettlangdon: well I have my array of users in app.js and I have a route in index.js, so in the res.render I want to be able to be like clientInfo: clientInfo
20:17 < exit2> so I can display it in a view
20:17 < tpayne> CoverSlide: I already have a createServer in my app.js
20:17 < tpayne> there isn't two, right?
20:17 < CoverSlide> tpayne: right
20:17 < tpayne> the way i do middle wear in my code is app.us(...);
20:17 < tpayne> app.use*
20:17 < CoverSlide> yes
20:17 < context> middleware dear god please learn how to spell
20:17 < CoverSlide> so if you want to follow that example
20:17 < tpayne> lmao
20:18 < brettlangdon> exit2, what I would do, is move your storage of users to a script that both use
20:18 < CoverSlide> and you have the connect-form module
20:18 < isaacbw> have you guys worked with IMAP much? Is it worth optimizing to OPEN a new mailbox as rarely as possible, or is it a pretty fast operation?
20:18 < jhsto> exit2, you define it inside of curly brackets after the renderation, as following: res.render('index', { clientInfo: clientInfo });
20:18 < CoverSlide> see where he has form = require('connect-form'), form becomes a middleware function
20:18 < exit2> jhsto: in that case I get a reference error
20:18 < context> tpayne: your insistence on spelling wrong and wasting keystrokes would be reason enough to ignore you. stop abusing your keyboard before i call the authorities
20:19 < tpayne> hmm
20:19 < herzi> is there some documentation about the usage of the new "status" argument of a uv_after_work_cb()?
20:19 < jhsto> exit2, you surely should not. Make a gist?
20:19 < context> your keyboard never did anything to hurt you
20:19 < jhsto> or what does the error say
20:19 < tpayne> CoverSlide: ok so what about form({keepExtension: true})
20:20 < exit2> jhsto: https://gist.github.com/4637473 short for brevity
20:20 < CoverSlide> tpayne: form() << is how you instantiate the middleware
20:20 < exit2> and of course I'm including routes = require('./routes')
20:20 < CoverSlide> as for what goes in it, you'd have to read the docs on connect-form
20:20 < CoverSlide> which I don't use so that's as far as I'm going to help you
20:20 < context> exit2: i see no routes.js
20:21 < C0deMaver1ck> samholmes: I would suggest forking it, and then send a pull request to see if it gets accepted
20:21 < jhsto> exit2, and are you defining the views folder in app.configure?
20:22 < brettlangdon> exit2, added my response in the gist
20:23 < exit2> jhsto, context: the routes work I just removed a lot of the code, probably shouldn't have
20:23 < exit2> brettlangdon: ok I think this'll work
20:23 < exit2> thanks
20:23 < brettlangdon> np
20:24 < context> exit2: index.js cant just magically see clientInfo it has to handed to it some how
20:24 < brettlangdon> context, that is what his question is
20:24 < exit2> brettlangdon: that works thanks
20:24 < exit2> context: yes I realize that, thank you
20:25 < boya> how do I do this in jade?
20:25 < boya> <div class="navbar navbar-inverse navbar-fixed-top">
20:26 < ramsey> Is this an appropriate place for asking NPM questions, or is there a separate channel for that?
20:26 < isaacbw> it's a find eplace ramsey 
20:26 < isaacbw> *fine place
20:26 < isaacbw> typing is hard
20:26 < ramsey> :-)
20:26 < brettlangdon> boya div(class=['navbar', 'navbar-inverse', …])
20:27 < boya> thanks brettlangdon 
20:27 < brettlangdon> or just div(class="navbar mavbar-inverse…")
20:27 < brettlangdon> s/mavbar/navbar
20:27 < isaacbw> can't you just do .navbar.navbar-inverse.navbar-fixed-top
20:27 < isaacbw> because div is the default element
20:27 < isaacbw> man, I don't want to know things about jade
20:27 < brettlangdon> probably
20:28 < ramsey> I'm curious about how NPM deals with "global" packages. I've installed a package globally (with -g), but node can't find that when I require it in a script. However, if I install it without -g and it goes into the local "node_modules/" directory, then node can require it just fine. What am I doing wrong?
20:28  * qXs-web is putting this Node IRC client through it's paces
20:28 < boya> heh thanks
20:28 < context> ramsey: global packages are mostly only for packages that install commands
20:28 < ramsey> context: ah... so, libraries can't be global?
20:28 < context> or using with 'npm link'
20:28 < isaacbw> but the answer is in the module section of the docs somewhere
20:29 < context> ramsey: no.
20:29 < isaacbw> they can
20:29 < isaacbw> it just requires more  configuration
20:29 < isaacbw> and is messy
20:29 < isaacbw> http://nodejs.org/api/modules.html#modules_loading_from_the_global_folders
20:30 < isaacbw> you *can*, just don't do it
20:30 < ramsey> cool. thanks
20:30 < isaacbw> but don't do it
20:31 < ramsey> got it
20:31 < isaacbw> DON'T DO IT
20:31 < ramsey> OKAY. I WON'T DO IT. :-D
20:32  * brettlangdon starts installing everything with -g
20:33 < isaacbw> you bastard
20:33 < brettlangdon> 
20:33 < isaacbw> aaahghfghhghghg
20:33 < chovy> heh
20:33 < qXs-web> 
20:33  * C0deMaver1ck changes npm install to auto install everything globally
20:33 < C0deMaver1ck> 
20:34 < chovy> ♥ 
20:34 < C0deMaver1ck> :Ô
20:34 < chovy> big heart, little apple.
20:34 < brettlangdon> ¿
20:34 < holzp> whan you'all use jquery do you use "$" as a prefix or suffix to any variables that have a jquery reference in them? as in var elem$ = $('#someID') 
20:34 < brettlangdon> holzp no
20:34 < chovy> i use $foo = $('.foo');
20:34 < C0deMaver1ck> it's y'all
20:35 < qXs-web> ¿Te encantas ?
20:35 < isaacbw> what do you guys think about designing an API to be restful instead of having a single entry point and defining everything in JSON
20:35 < CoverSlide> When I did use jQuery, I would prefix jQuery objects with $
20:35 < CoverSlide> isaacbw: make it as restful as possible
20:35 < isaacbw> sure, but why
20:35 < holzp> hm, wierd never see it done before y'all :)
20:36 < CoverSlide> less kludgy, you can point to a single url, fire GET and retrieve what you need
20:36 < CoverSlide> are you planning on using PUT or POST for everything and defining your queries through JSON?
20:36 < isaacbw> I suppose. But just putting everything in a JSON document describing what I want is appealing
20:36 < C0deMaver1ck> holzp: sorry, but I live in NOLA. Drives me nuts to see you all :p
20:37 < isaacbw> CoverSlide, I've been designing everything to be RESTful until now, but I want someone to convince me not to have all queries in JSON
20:37 < ricardobeat> holzp: plain old hungarian notation. str_foo, int_foo, $foo :)
20:37 < ricardobeat> holzp: avoid it.
20:37 < CoverSlide> that's terrible. I think what you're describing is like SOAP but with JSON, and noone ever liked SOAP, it just was there
20:37 < isaacbw> juts POST everything to api.myapp.com/
20:37 < brettlangdon> ricardobeat hungarian notation +1
20:37 < CoverSlide> also, it'll be a bitch to test and debug.
20:38 < isaacbw> I suppose
20:38 < ricardobeat> isaacbw: a POST-only api? hmm
20:38 < chovy> that sounds like a nightmare
20:38 < ricardobeat> isaacbw: NOPE
20:38 < isaacbw> I'm not suggesting it, I just want someone to give me a good argument for why not
20:38 < CoverSlide> honestly, if you want JSON, you can put in in a querystring, although that's kludgy too
20:38 < chovy> read about restful apis
20:38 < shihan> whats the api for?
20:39 < isaacbw> you're not getting me
20:39 < ricardobeat> CoverSlide: qs.stringify(json), what's wrong with it?
20:39 < isaacbw> my APIs are all RESTful
20:39 < brettlangdon> isaacbw just do it
20:39 < CoverSlide> hey you can do it, if that's what you want to do, i mean that's how SOAP worked for years, and people are still running SOAP
20:39 < shihan> personally, i like soap ;)
20:39 < isaacbw> man, you turds
20:39 < ricardobeat> makes you clean
20:39 < shihan> well, i did like soap
20:39 < chovy> heh
20:39 < chovy> i like xml
20:39 < shihan> back in its day
20:40 < iwalkbarefoot> soap is great for auto-discovery
20:40 < context> isaacbw++
20:40 < chovy> especially when used as an absgtraction layer for xhtml
20:40 < ricardobeat> iwalkbarefoot: in the shower? 
20:40 < CoverSlide> you can write a RESTful endpoint for auto-discovery
20:40 < brettlangdon> isaacbw, I like the idea of posting json queries
20:40 < isaacbw> I've got restful routes and I use json to give details
20:40 < CoverSlide> SOAP simply has it as a standard, but it doesn't prevent someone from using it with REST
20:40 < brettlangdon> yeah, thats what I like doing
20:41 < germaine> hi, i have a list of links generated using a team's key as the id so i can update team info, anyone know how you would use the links to put the data into a set of textboxes for updating?
20:41 < styol> substack: is there a way to use fleet with a private github repo?
20:41 < CoverSlide> you could do something like /query?json={"name":"blah"}
20:41 < tpayne> CoverSlide: so it would be app.use(form({ keepExtensions: true }));
20:41 < shihan> restful soap would be an oxymoron
20:41 < tpayne> in my case
20:41 < CoverSlide> tpayne: yes
20:41 < brettlangdon> CoverSlide, the main issue is there is a length limit for urls
20:41 < tpayne> great thanks!
20:42 < CoverSlide> except SOAP isn't RESTful
20:42 < CoverSlide> SOAP is HTTP
20:42 < isaacbw> I like to prevent GET from affecting server state and require all state-changing functions be through POST
20:42 < CoverSlide> and HTTP is not exactly the same as REST
20:42 < CoverSlide> REST is HTTP done right
20:42 < ricardobeat> isaacbw: you can't have REST without HTTP verbs. If you're defining API paths/methods in the json, that's rpc (or jsoap)
20:43 < LouisT> Good day, gentlemen.
20:43 < iwalkbarefoot> CoverSlide: yeah but having it as the standard has benefits.   We mostly write rest services, but i've never seen rest with auto-discovery.  Do you have a link or something?
20:43 < CoverSlide> jsoap? is that a thing?
20:43 < CoverSlide> haha
20:43 < brettlangdon> ha
20:43 < isaacbw> ricardobeat, I was hoping someone would be able to give me a good argument in favor of REST over JSON queries
20:43 < ricardobeat> CoverSlide: I just invented it
20:43 < CoverSlide> google tells me it's "Juvenile Sex Offender Assessment Protocol"
20:43 < germaine> Hm, I'm lost with that I think, I can't think of a simpler way to do what I want, I have a list at the moment just showing all the teams in the database, but I want to click on one team and edit the name of the team
20:44 < germaine> Confusing :p
20:44 < shihan> CoverSlide, i think your making a few mistakes there, soap != http (infact its protocol agnostic by design)...
20:44 < germaine> Anyone think of a better way?
20:44 < germaine> Im learning nodejs ^^
20:44 < isaacbw> I make heavy use of POST/DELETE/GET to define different functions in my APIs
20:44 < isaacbw> not so much PUT
20:44 < CoverSlide> fine, SOAP isn't HTTP, I meant is is built on top of HTTP
20:44 < shihan> CoverSlide, no, its not :)
20:44 < isaacbw> I like polymorphism in APIs
20:44 < ricardobeat> isaacbw: how do you use GET and post a json payload at the same time?
20:45 < isaacbw> ricardobeat, I don't
20:45 < CoverSlide> ricardobeat: you can't
20:45 < isaacbw> though I don't think it's explicitly not allowed in HTTP
20:45 < CoverSlide> it's not
20:45 < isaacbw> browser support might be limited
20:45 < ricardobeat> CoverSlide: that's why I'm asking
20:45 < CoverSlide> he would have to use another verb like POST or PUT
20:46 < ricardobeat> isaacbw: I'm trying to understand how you "make heavy use of POST/DELETE/GET" under this json scheme
20:46 < isaacbw> but since I only use GET for retrieving information and not effecting state changes, I dont usually need a payload
20:46 < isaacbw> so /resource/213 would return a JSON document describing the resource with the id 312
20:46 < isaacbw> (213
20:46 < isaacbw> *213
20:46 < ricardobeat> isaacbw: that's REST. 
20:47 < isaacbw> I know :(
20:47 < isaacbw> I said I design my APIs to be restful
20:47 < tylersmith> that alone is not rest.  that is part of rest
20:47 < CoverSlide> REST is kind of bullshit anyway
20:47 < isaacbw> you guys
20:47 < isaacbw> you guys
20:47 < ricardobeat> isaacbw: but you said "having a single entry point and defining everything in JSON - post to api.xxx.com"
20:47 < yept> lol
20:47 < CoverSlide> for example, having a GET /user/random
20:47 < CoverSlide> would technicall not be RESTful
20:47 < tpayne> installed a module, node can't find it. Great
20:48 < dreamdust> tpayne: Did you install locally or globally
20:48 < tpayne> i just did sudo npm install connect-form
20:48 < tpayne> in the same dir as my app.js
20:48 < isaacbw> ricardobeat, and then I said that I wanted someone to give me a good argument about why REST is a better option than that
20:48 < dreamdust> use the -g flag to install globally, otherwise your install is relative to where you are.
20:48 < dreamdust> IIRC
20:48 < CoverSlide>  tpayne , don't use sudo npm install
20:49 < isaacbw> you have to if you want to install command line modules
20:49 < isaacbw> globally
20:49 < isaacbw> oh, yea, don't do it if you're installing local modules
20:49 < CoverSlide> isaacbw: no you don't
20:49 < shihan> CoverSlide, the whole point of soap was actually to define your own verbs and was designed to operate over anything... alot of web services use soap rpc over http, but it works the same over any protocol (even raw ip if you wish)
20:49 < isaacbw> you might depending on your install
20:49 < CoverSlide> npm config set prefix $HOME
20:49 < ricardobeat> isaacbw: we did, it's simpler, more scalable, easier to use, test, debug, usually more scure
20:49 < tpayne> what's the proper way?
20:49 < CoverSlide> ^ this is what should be default
20:50 < isaacbw> tpayne, either a package.json or just do npm install with no sudo
20:50 < isaacbw> package.json is cleaner
20:50 < tpayne> let me try package.json
20:50 < CoverSlide> well it'd take more steps and typing
20:51 < CoverSlide> just do npm install
20:51 < brettlangdon> I fell in love with "npm install --save"
20:51 < isaacbw> I always make a package.json
20:51 < CoverSlide> yeah that too
20:51 < isaacbw> it's just a matter of preference
20:51 < tpayne> still can't find it
20:51 < isaacbw> what
20:51 < CoverSlide> tpayne: do "npm init"
20:51 < tpayne> i see it in my node_modules folders
20:51 < CoverSlide> it'll generate your package.json
20:52 < CoverSlide> it shouldn't be there
20:52 < CoverSlide> it should be in the root of your project
20:52 < brettlangdon> I think npm installs in ~/node_modules if there is not package.json present, correct?
20:52 < medice> doesn't it install there regardless
20:53 < brettlangdon> no
20:53 < brettlangdon> if your in a project dir and do npm install it puts it in the node_modules folder for that project
20:53 < isaacbw> npm help install
20:53 < CoverSlide> brettlangdon: no, it uses the npm root, which is set when you install node
20:53 < brettlangdon> CoverSlide.. hmm, thanks
20:54 < tpayne> all of my other modules are in node_modules
20:54 < CoverSlide> if you have a ~/node_modules folder, then it will assume that is your project root if you are anywhere in a child of $HOME
20:55 < CoverSlide> well that is if you didn't make a node_modules folder yourself
20:55 < isaacbw> the benefit of a package.json file is that if you share your project, anyone can get all the required modules with a simple 'npm install'
20:55 < CoverSlide> yes
20:55 < isaacbw> and you don't have to worry about what CoverSlide described
20:59 < tpayne> CoverSlide: i figured it out
20:59 < tpayne> it was missing a symlink
21:05 < isaacbw> node-imap: "Also, do not call this on the currently open mailbox."
21:05 < isaacbw> *not
21:05 < isaacbw> &
21:05 < isaacbw> *(
21:05 < isaacbw> not*
21:05 < isaacbw> *not*
21:06 < tpayne> anyone here successfully done file uploading with connect-form?
21:07 < superjoe> tpayne, nope. everyone here who tried to do it failed. 
21:07 < superjoe> just kidding. what's your question?
21:08 < tpayne> lol
21:08 < tpayne> I'm following these instructions: http://stackoverflow.com/questions/5149545/uploading-images-using-nodejs-express-and-mongo
21:09 < tpayne> but my req.form is always undefined
21:09 < superjoe> tpayne, if you're looking for a dead simple easy way to accept file uploads, you should use express.bodyParser
21:10 < superjoe> then the uploaded files will be req.files
21:10 < superjoe> which will be temp files
21:10 < superjoe> tpayne, the 2nd answer explains this.
21:10 < tpayne> hmm i have express bodyParser
21:10 < tpayne> ok, i guess i don't need all the fancy shit
21:11 < superjoe> that's the slogan for node.js :)
21:11 < superjoe> Node.js - "i guess i don't need all the fancy shit"
21:11 < superjoe> can we get that in the /topic ?
21:12 < isaacbw> the topic is a cat video
21:12 < superjoe> I noticed
21:13 < LouisT> Can never have too many cat videos, I guess...
21:15 < LouisT> hm.. is this as stupid as it looks?
21:15 < LouisT>                   var seed = Math.floor((Math.random()*0x75bcd15)+(Math.random()*0x75bcd15));
21:15 < LouisT>                   return parseInt(((new Date()).getTime()+seed),36).toString(16);
21:16 < superjoe> LouisT, I think it depends on the context
21:17 < LouisT> superjoe: Just needs to be a random ID. The seed was added when I realized I call the function around 50 times in a row and the ID returned was the same.. Right now it generates different ones, but I'm not sure how likely it'll overlap.
21:18 < brettlangdon> LouisT: https://github.com/broofa/node-uuid/
21:18 < azylman> Is there a reason you also couldn't just use Math.random() for the ids?
21:18 < azylman> Instead of time?
21:19 < LouisT> brettlangdon: I have another function that generates a UUIDv4 with much smaller code already.
21:19 < holzp> There's A Module For That™
21:19 <@konobi> random may not be random enough due to seeding
21:19 < brettlangdon> LouisT, is uuid4 not random enough for an id for you?
21:20 < LouisT> azylman: Yes, I want the IDs to be similar. So if they get generated within the same period of time, they look the same.
21:20 < LouisT> Such as: 47812dc020447c00, 47812b9b44ca2c00, 47812945257e4800, 47812dc1b0ecc800
21:20 < holzp> why not just prefix them with something
21:20 < holzp> similarthing-randomthing
21:20 < brettlangdon> LouisT, take a look at the code for mongodb's ObjectID, they work kinda like that
21:21 < azylman> "#{Date.now()}#{Math.random()*100}"
21:21 < LouisT> holzp: Because I want it to be random, but similar.. if that makes sense.
21:21 < holzp> that seems false
21:21 < holzp> like logic false
21:21 < holzp> if the latter part is random then its random
21:22 < holzp> who cares about the prefix
21:22 < LouisT> I care about it, obviously
21:22 < superjoe> yeah, why would you want it to be similar? what value does that give you?
21:22 < brettlangdon> LouisT: https://github.com/mongodb/js-bson/blob/master/lib/bson/objectid.js
21:22 < holzp> generally, trying to serve two masters with one thing is a path to madness
21:22 < shihan> you could always use two hmac algorithms, time based one for the first part, event based for the second part
21:23 < brettlangdon> iirc with bson object id's you can even sort them and they will be in order of time of creation
21:23 < LouisT> I want them to be similar so I can look them up later in a DB of sorts.
21:23 < shihan> that should in theory, never overlap but produce similarity in the prefix based on a time model
21:25 < superjoe> LouisT, instead of trying to hijack the unique ids for that, add an indexed property
21:25 < holzp> im crazy to think you should just store a timestamp with whatever
21:25 < holzp> and then do it by index range
21:25 < holzp> that seems so....normal
21:25 < superjoe> exactly, what holzp is suggesting
21:26 < holzp> is this a redis thing? you can do this in redis
21:26 < LouisT> The IDs wont only be used in the DB, they'll be used elsewhere, that's why I'm trying to combine the two.
21:27 < superjoe> trying to cram more information into your ids is a recipe for disaster
21:27 < superjoe> the other system needs to either accept more data, or be able to talk to your system
21:27 < holzp> now I don't really know what you are trying to do, but my God it sounds like you are asking fortrouble
21:27 < brettlangdon> LouisT: https://gist.github.com/2c425e6029c743e930eb
21:27 < LouisT> holzp: It wouldn't be fun if I wasn't.. heh
21:28 < holzp> i think we only say this because we all made this type of mistake in the past
21:28 < holzp> but it will  be a learning experience 
21:29 < superjoe> holzp, in LouisT's defense, sometimes I think that all my good practices make coding too... *easy*
21:29 < LouisT> I'm not sure it's really a mistake, it'll just make things more challenging...
21:29 < superjoe> holzp, and... *maintainable*
21:30 < superjoe> and it's not like there are more interesting problems to solve than cramming 2 different kinds of data into 1 field
21:30 < LouisT> I'm doing this for fun, So it's not really important that it's the BEST method, just a method that takes time to mess with.
21:30 < superjoe> LouisT, that's all well and good, but if you come to IRC asking for help we're only going to tell you about the best method.
21:31 < holzp> Im sure I did this myelf once, tried to multiplex a field, don't even remember what I only remember now never to do it :)
21:31 < brettlangdon> superjoe, the best method from our point of view
21:31 < LouisT> superjoe: Yes, I assumed you would and now I know my method is the challenging method I hoped it would be.
21:31 < holzp> and  im sure someone told me not to
21:32 < holzp> but hey, mistakes at the best way to learn, sometimes the walk does us good
21:32 < isaacbw> does restify execute middleware in order of definition like express does?
21:32 < brettlangdon> isaacbw, I think so
21:32 < isaacbw> so if I have routes before a use(), those routes will be evaluated first
21:32 < isaacbw> which is important
21:33 < superjoe> LouisT, you're evil
21:33 < brettlangdon> dont know, I know with express you set when the routes run with app.use(app.router) to control when they all run
21:33 < superjoe> haha
21:37 < isaacbw> or does restify let you set a prefix for use()
21:37 < MI6> joyent/node: Ben Noordhuis master * 00b4b7b : buffer: remove minor Buffer::Copy deoptimizations  * Omit ToObject() call - http://git.io/qRSOXg
21:38 < isaacbw> or provide an all() method
21:40 < brettlangdon> isaacbw, it looks like it will run through the chain of middleware (app.use) before it attempts to run the routes (app.get/post/put/etc)
21:41 < isaacbw> basically I have a set of routes that should all fail if the server isn't in a certain state, and I want middleware that will check that state first so I don't have to duplicate the test in each route
21:41 < isaacbw> so I want something like, "if the route begins with a certain set of parameters, do this check before moving down the chain"
21:42 < isaacbw> oh, server.param() might be what I want
21:43 < tpayne> I'm uploading a .csv file filled with text and when i read it with fs, it and console.log its data, it's printed like<Buffer 48 65 6c 6c.. .. 0a> .. how can i get it as text?
21:49 < tpayne> nm, toString() !
21:53 < mscdex> isaacbw: from my experience (at least with gmail) SELECT generally is a slow operation like the RFC notes
21:55 < mscdex> isaacbw: OPEN should be fine, but I generally wouldn't continuously call it on the same mailbox you're already in within the same connection.... there's no need for that
21:55 < isaacbw> ah, thanks
21:57 < exit2> anyone here using nodejitsu to host an app?
21:58 < isaacbw> has anyone written something like express-namespace for restify?
21:58 < isaacbw> or is there an easy way to emulate it?
21:59 < Draggor> Anybody here use jugglingdb?  I'd like to know how to update an existing instance.
22:09 < geNAZt> i have a question about fs.WriteStream. why does the behavior of the stream differ from the behavior of writeFile ?
22:09 < geNAZt> https://gist.github.com/4638349
22:09 < geNAZt> where stream is a fs.createReadStream(file, {encoding: "binary"});
22:10 < geNAZt> the files in test are okay, the files in test1 are borken
22:10 < timeturner> http://i.imgur.com/Lmzix.gif
22:11 < isaacbw> weird, why would a use() only be firing the first time it gets hit, and then never again
22:12 < isaacbw> until the server is restarted
22:14 < isaacbw> nevermind, I was using server._path instead of .url which was causing problems
22:15 < isaacbw> I ended up using a use() and a regular expression to do what I was describing earlier
22:16 < isaacbw> I suspect there's a better way to do it using the router, but I don't know
22:24 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:25 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:28 <@Nexxy> \o/
22:29 < azylman> \/o\
22:29 < azylman> I have no idea what that was
22:29 <@Nexxy> protecting yourself from a flying stick?
22:29 < azylman> Sure
22:29 < azylman> Haha
22:29 < chovy> anyone building SPAs in here?
22:29 <@Nexxy> lol
22:30 < tylersmith> if spa == single page application I'd imagine it's at least >25%
22:30 <@Nexxy> SPA?
22:30 <@Nexxy> oh
22:31 < othiym23> you know, heated rocks on the back, massages, essential oil therapy
22:31 < tylersmith> mmmm sauna.js
22:31 < MI6> joyent/node: isaacs master * bdc7251 : doc: fix line wrapping in addons.markdown (+2 more commits) - http://git.io/OZqMXA
22:39 < geNAZt> hi i have a problem with piping files trough a tcp server: https://gist.github.com/4638555
22:40 < geNAZt> the input file is an 8MB png image, the file test1.png which should be the same is 13MB sized
22:42 <@konobi> geNAZt: why .on('data' ? you can just con.pipe(stream)
22:42 < geNAZt> fileWriteStream.write(data.toString(), "binary"); gets the destination file the correct size but it is correupt and cant be displayed
22:43 < geNAZt> @konobi: cause it has the same effect
22:43 <@konobi> geNAZt: have you tried it?
22:43 < geNAZt> yes
22:43 < chovy> 25
22:43 < chovy> %
22:43 < chovy> ok
22:44 <@konobi> geNAZt: write(data) ?
22:46 < geNAZt> thats the cases i run and the results of it
22:46 < geNAZt> https://gist.github.com/4638591
22:48 < geNAZt> am i wrong or should i open a issue for this ?
22:48 <@konobi> geNAZt: you want to con.end() on the end of the filestream, no?
22:49 < geNAZt> yes
22:49 < geNAZt> thats how the pipe should do it for the reading file
22:50 <@konobi> so what you have is the inverse of what you want
22:51 < geNAZt> fileReadStream.pipe(socket); => socket.pipe(fileReadStream); ?
22:51 <@konobi> con.on('end' ----> filestream.on('end', function() { con.end() })
22:52 < newz2013> :bn
22:52 < geNAZt> i only want to make sure that all data of the writestream buffers are written
22:52 < geNAZt> before the connection closes
22:53 < Sly> stream.on('drain', function() { /* close it */ })
22:53 < geNAZt> if i end the writeStream by con.on('end' => it should write all buffered data to disk
22:53 < Sly> Unless it changed with streams2
22:54 < geNAZt> Sly: that would be wrong, if the buffer gets empty and the client has more data to send the file is closed
22:54 < geNAZt> and you cant write into it
22:57 < geNAZt> no ideas about that ? should i open a issue for this ?
22:57 <@konobi> no, i think this is a code issue
22:58 <@konobi> otherwise nothing would work
22:59 < ricardobeat> geNAZt: have you tried ws = fs.createWriteStream("test3.png", { encoding: 'binary' }), con.pipe(ws) ?
22:59 < geNAZt> yes it fails
23:00 < kschzt> sup. what are people using for playing audio files? marak's play? https://github.com/Marak/play.js
23:00 < kschzt> it's kinda old, slightly broken
23:01 < geNAZt> but how should this be a code issue ?
23:01 < geNAZt> i dont get it
23:04 < robertj> what's the best way to represent a remoted object reference in JSON? ['one',4,'dog',7,{_isARemoteObjRef:"<uid>"}]?
23:04 <@konobi> geNAZt: encoding on teh writestream?
23:05 < geNAZt> according to the api for Streams it only cares about encoding if i give a string into it
23:05 <@konobi> (as part of createWriteStream)
23:05 < geNAZt> that makes no difference
23:07 <@konobi> geNAZt: instead of using node to stream the file to the server, have you tried piping the file via netcat?
23:07 < ricardobeat> I think you can't just pipe a buffer over the socket and expect express to work
23:07 < Stephen> _isARemoteObjRef.. that's not a node property, is it?
23:08 < FunnyLookinHat> Quick! what's the fastest/easiest way to store a really simple data object in between launches of my app?  It's an array of about 100 objects.
23:08 < tylersmith> redis probably
23:08 < Stephen> FunnyLookinHat: Redis
23:08 <@konobi> json file
23:08 < geNAZt> the current tests: https://gist.github.com/4638736
23:08 < FunnyLookinHat> Stephen, Ah - hoping to avoid another daemon
23:08 < FunnyLookinHat> konobi, yeah that was my thought.
23:08 < Stephen> json file then
23:08 < FunnyLookinHat> kk thx
23:08 <@konobi> levelup is another option
23:09 < tylersmith> have your app rewrite itself everytime
23:09 < ricardobeat> FunnylookingHat: the easiest? fs.writeFile('data.json', JSON.stringify(data))
23:09 < Stephen> If you don't need it to be persistent across reboots, maybe an environment variable
23:09 <@konobi> geNAZt: try netcat as your client
23:10 < geNAZt> but why should i use netcat if node has a tcp lib ? oO
23:10 < Stephen> overhead
23:11 < Stephen> Actually, that's a bunch of bulll
23:11 < Stephen> Why are you suggesting netcat?
23:11 <@konobi> geNAZt: to test if the issue is definitely on the server side as posed to the client
23:11 < geNAZt> if i dont use the binary encoding it works fine
23:11 < Stephen> Good point
23:12 < geNAZt> the only thing it bugs about is the binary encoding
23:12 < Stephen> What is the error?
23:13 < geNAZt> var fileReadStream = fs.createReadStream("test.png", {encoding: "binary"});
23:13 < geNAZt> var fileWriteStream = fs.createWriteStream("test6.png", {encoding: "binary"});
23:13 < geNAZt> fileReadStream.pipe(fileWriteStream);
23:13 < geNAZt> even without tcp
23:14 < geNAZt> https://gist.github.com/4638778
23:14 < ricardobeat> it works with socket.end(fs.readFileSync('test.png'))
23:15 < isaacbw> why might json.parse not be happy with ['ALL']
23:15 < geNAZt> but that is not the goal
23:15 < isaacbw> Unexpected token: '
23:16 < isaacbw> oh, nevermin
23:16 < isaacbw> I forgot that you have to use " with JSON
23:16 < azylman> Don't you love json?
23:17 < Stephen> geNAZt: well, data.toString() is likely part of your problem
23:17 < Stephen> Have you tried sending and receiving through typed arrays?
23:17 <@konobi> well, the client is just going to hold the connection open unless you end() the socket
23:17 < geNAZt> Stephen: all of these cases dont work
23:18 < Stephen> Converting Strings to binary will undoubtedly corrupt your file
23:19 < ricardobeat> geNAZt: https://gist.github.com/0be29fdd5378766b3198
23:19 < geNAZt> even with a direct pipe between a readstream and a writestream doesnt work
23:19 < davve> AssertionError: handle != self._handle at Object.afterConnect [as oncomplete] (net.js:727:3)
23:19 < davve> whatsup with that?
23:20 < Stephen> geNAZt: Try wrapping the write call in process.nextTick()
23:20 < geNAZt> ricardobeat: without the encoding it works, i know
23:21 < geNAZt> but the goal is to use the binary encoding
23:21 <@konobi> it's binary by default
23:23 < Stephen> geNAZt: I'm guessing that in the binary case that you need to queue the data until it is fully received before writing to disk
23:23 < geNAZt> Stephen: but why should i do that ?
23:23 < Stephen> I agree
23:24 < geNAZt> event on this case it breaks
23:24 < geNAZt> even*
23:24 < Stephen> Sounds like a bug in the decision tree whenever the binary settings are on both ends
23:24 <@konobi> ricardobeat: nice example
23:25 <@konobi> ricardobeat: you don't even need the encoding option, iirc
23:26 < Stephen> geNAZt: Have your read this: http://stackoverflow.com/questions/6164095/reading-binary-data-from-a-child-process-in-node-js
23:27 < Stephen> It looks like you could be overflowing the buffer on the writestream
23:28 < ricardobeat> note from the docs: This encoding will be removed in future versions of Node.
23:29 < geNAZt> where is that note ?
23:29 < geNAZt> oO
23:31 < Stephen> geNAZt: Basically, when piping that fast your buffers are overflowing on both ends, unable to keep up with one another. Whether it be by enlarging both send and recv buffers, piping through stdout, or both, all examples I find point to the need of an intermediate buffering layer before write
23:32 < Stephen> bbiab, headed home
23:33 <@konobi> Stephen: in that example it's because they're using writeSync as posed to the async version
23:33 <@konobi> but that's from a cursory view
23:34 < geNAZt> i have changes from binary to utf16le encoding but i have the same issues
23:36 <@konobi> unless you are dealing with text, don't use encoding
23:36 < geNAZt> i should use the raw buffers to be send over a tcp multiplexer ?
23:36 < geNAZt> lol
23:37 < geNAZt> the Buffer object is far to big to be complete send over a tcp stream
23:37 <@konobi> or use mux-demux
23:37 < geNAZt> i am using mux-demux
23:37 < geNAZt> and if i dont use a encoding in the filestreams i get a 1.6 MB Buffer Object sent over the muxer fpr a 68kb executable
23:38 < geNAZt> that is overhead pure
23:39 <@konobi> so, you're giving us an example, without any context.
23:39 <@konobi> *slow clap*
23:39 < geNAZt> the context is i have a file that i would send over a mux tcp stream
23:39 <@konobi> you example does not have anything around muxing
23:40 < geNAZt> well sorry about that
23:41 < jcrugzz> getNAZt: I dont believe you can stream binary of mux-demux
23:41 < geNAZt> it can, but then i have the same bugs that i have without mux-demux
23:41 < Raynos> Gettign some cryptic ssl errors ( https://gist.github.com/86168bd70d715a57502d )
23:42 < myndzi> anybody have a recommendation for a live embeddable chat system?
23:42 < myndzi> there are a lot of demos and tutorials etc, but i'm looking for something i can just drop in and run
23:42 <@Nexxy> mibbit
23:42 < myndzi> not irc-based, heh :P
23:43 <@Nexxy> oh, pff
23:43 < myndzi> i mean, i like irc
23:43 <@Nexxy> LIKE IRC
23:43 <@Nexxy> but NOT
23:43 <@Nexxy> okay! :P
23:43 < myndzi> but irc is confusing to people
23:43 <@Nexxy> it's a box
23:43 <@Nexxy> with a text entry
23:43 <@Nexxy> you hit enter
23:43 < myndzi> haha yeah
23:43 < myndzi> except it's so much more
23:43 < myndzi> these people are coming from a "shoutbox"
23:43 <@Nexxy> mibbit obscures a lot of it
23:43 < myndzi> which literally is a box with text entry
23:43 <@Nexxy> mibbit adds a list of names
23:43 <@Nexxy> that'sa bout it
23:43 <@Nexxy> also embedded images
23:43 <@konobi> myndzi: you can hide that from them at the client side
23:44  * myndzi checks it out
23:44 < myndzi> been a while since i had anything to do with it
23:44 <@Nexxy> yeah it's had some updates
23:44 < Havvy> I can help with Mibbit stuff.
23:44 < myndzi> the other reason for non-irc is tie-in with user access
23:44 <@Nexxy> and you even have help!
23:44 < myndzi> since eventually i do want to upgrade their thing
23:44 < myndzi> to not suck
23:45 < myndzi> at some point i'm gonna write my own but .. so many projects :P
23:45 < myndzi> wait what
23:46 < myndzi> "Fr3d" is a server on this list?
23:46 < myndzi> lolol
23:46 < myndzi> that botnet kid is still around? what's he doing running a server mibbit users can use
--- Log closed Sat Jan 26 00:00:21 2013
