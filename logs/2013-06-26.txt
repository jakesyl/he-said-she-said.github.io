--- Log opened Wed Jun 26 00:00:31 2013
00:02 < finnx> #cfengine
00:10 < lurraca> Hi Guys, which framework you think is better suited for a rest api, express or sails?
00:10 < squeeks>  yes.
00:11 < polyrhythm> express is more minimalistic but does less of the work for you
00:11 < polyrhythm> also more widely used and less likely to change much
00:13 < ChrisPartridge> lurraca: look at restify
00:13 < rossk> restify++
00:13 < lurraca> will take a look at restify
00:14 < lurraca> what about compoundjs?
00:14 < ChrisPartridge> lurraca: are you trying to build an API, or a website?
00:14 < ChrisPartridge> sails/compound/derby etc are full stack frameworks, which come with a bunch of stuff you probably don't need if you are creating an API
00:18 < lurraca> ChrisPartidge: API, its just that i come from Rails probably too used to MVC, but yeah, testify seems like the best choice.
00:19 < ChrisPartridge> lurraca: yep, steer clear of MVC then! good luck
00:19 < JNedved> Any Node.js developers out there available for a Sydney, Australia based contract?
00:20 < ChrisPartridge> JNedved: I saw your ad yesterday and passed the details onto a friend, he may be in touch
00:44 < ssafejava> Sometimes lurking pays, literally.
00:46 < ChrisPartridge> ssafejava: can i have some money?
00:50 < ssafejava> if you write code sure
02:15 < Zak> JNedved: can you link to your ad?
02:15 < bulkan> drudge: are you online ?
02:15 < bulkan> non AFK ?
02:19 < oren> how to pipe that . <(npm completion) into a file?
02:29 < JNedved> Contract role available in Sydney http://www.seek.com.au/job/24738791
02:35 < willwh> JNedved: Jamie - telecommuters? 
02:35 < willwh> < c# / node
02:36 < willwh> it doesn't state yes or no
02:36 < JNedved> sorry has to be onsite 
02:37 < willwh> you should say so
02:37 < willwh> while you said you're located "on the northern beaches"
02:37 < willwh> it's not clear
02:37 < willwh> ....being so common in this industry, you'll forgive the assumption
02:37 < willwh> :)
02:38 < cainus> hey all... can anyone recommend a less tedious mongo client than mongodb-native?
02:39 < oren> cainus: not sure what's wrong with it
02:39 < cainus> it works.  it's just tedious.
02:39 < JNedved> yes sorry I'll be clearer about this. No Telecommuting, Onsite only - Sydney Northen beaches 
02:40 < cainus> seems like 4 or 5 callbacks for a query
02:41 < cainus> there are a number of higher-level clients, so I'm not the first one to think this ;)
02:50 < xissy> Hello guys!
02:51 < xissy> I'm a mysql user with node.js, until now i've used node-mysql and sql sentences.
02:51 < xissy> And now i'm looking for some ORM module for node.js and mysql.
02:51 < xissy> Is there any recommendation for me?
02:51 < xissy> how about Sequelize?
02:57 < neeky> xissy, node-orm2 is popular
02:57 < neeky> 261 stars on GitHub
02:58 < xissy> neeky: thanks, what's the main difference between node-orm2 and sequelize?
02:58 < xissy> node-orm2 could be a mature solution than sequelize
02:58 < xissy> ?
02:59 < xissy> I've seen only documentations both of them.
02:59 < neeky> no, sequelize is quite popular
02:59 < neeky> I've olny used mongoose which is a mongodb only ORM, so I dont have an opinion
02:59 < neeky> those tow are very popular though
03:00 < neeky> base don star count, sequelize is more popular
03:00 < neeky> 1052 vs 261
03:00 < neeky> if that's any indication of quality
03:00 < xissy> to me, mongodb was extremely easy but there was a problem related with indexing.
03:00 < neeky> yes, mongo is not an SQL replacement
03:01 < neeky> it's a different animal for sure
03:01 < neeky> my application hapens to be very document-centric - it was a perfect fit
03:01 < xissy> but mongodb's JSON interface is so awesome to me as a node.js user.
03:01 < xissy> nice~
03:02 < neeky> but I see many people come over and try to beat a RDBMS into NoSQL and it just doesn't fit and they become NoSQL haters
03:02 < oren> how to pipe that . <(npm completion) into a file?
03:03 < xissy> oren: i should index some fields so that's not my solution.
03:04 < xissy> neeky: agree, many people prejudge about nosql.
03:07 < AAA_awright> xissy: Except it's not really JSON so you have to do weird crap to encode dates and ObjectIds for sending to the browser
03:07 < nrmL> Is there a reason to use an established format, such as JSON, over creating your own for server to server communication? Eg. Having values separated by a double quote etc (this would be over sockets)
03:07 < AAA_awright> I'd say document database, NoSQL is the most useless term ever devised by database admins
03:07 < nrmL> So it wouldnt be public facing in anyway
03:08 < AAA_awright> nrmL: JSON
03:08 < AAA_awright> XML... protocol buffers...
03:08 < garthk> nrmL: well, depends on how easy you want things to be for people speaking to you.
03:08 < AAA_awright> Binary packing...
03:08 < AAA_awright> MIME?
03:08 < pensmit> What is the best book to learn node?
03:09 < AAA_awright> nrmL: That's a very broad question
03:09 < nrmL> garthk: It would be all internal, no one would ever see it besides people writing it
03:09 < nrmL> AAA_awright: I know there are different type, but i was asking is there a point in using an established format
03:09 < nrmL> AAA_awright: when its going to be all internal
03:09 < ChrisPartridge> nrmL: what if other developers come along down the line?
03:09 < garthk> nrmL: are you the only person speaking to you? Pick whatever you like. Do you want to make it easy for just about anything to talk to you? JSON over HTTP fits that bill. Do you want to make it easy, but size and performance might be a problem? Perhaps check out protocol buffers, but be aware that Node's C-to-JS bridge might slow you down more than you'd like.
03:10 < AAA_awright> nrmL: I highly recommend using HTTP for even internal APIs. If you're passing around serialized objects, newline-seperated JSON works
03:10 < garthk> nrmL: well, "users" includes anyone else on your team or in your company. Does QA want to poke at it from the command line? Letting them nail it with 'curl' and some JSON makes that easy.
03:10 < nrmL> ChrisPartridge, garthk: true!
03:11 < nrmL> AAA_awright: Im using ZeroMQ and wasnt sure 
03:12 < BombStrike> Also JSON is well tested and has implementations in most languages so it's less work for any subsystem you may want to connect to it later.
03:12 < garthk> V8's JSON.parse() is pretty fast, too; I got 80MB/s the last time I checked on a big file. Depending on how much further processing you're doing, I wouldn't be surprised if you could crank AAA's newline-separated JSON idea at 50% of Gigabit Ethernet speed with a single CPU. Give it a shot.
03:13 < garthk> The aggressive license pretty much prevented us from using 0mq. Nice tech, but they want to reserve it completely for the radical end of the open source movement. 
03:13 < xissy> at least JSON looks lighter than XML. :)
03:14 < BombStrike> Yeah, it's quite efficient space wise, gzip the thing and you are good to go. And the human readable part makes it easier to debug.
03:14 < nrmL> garthk: Im blending a couple things together, most parts would be in golang. So Im thinking JSON would be better instead of rolling my own value separated string 
03:14 < garthk> Oh! They've got a static exception, now. That might help.
03:14 < nrmL> Just so everything plays nicely with each other
03:14 < xissy> BombStrike: great!
03:15 < garthk> nrmL: in that case, definitely stick with the JSON.
03:15 < BombStrike> Yeah golang plays very nicely with json.
03:15 < AAA_awright> garthk: Aggressive license?
03:15 < nrmL> BombStrike: the encoding package is awesome
03:16 < nrmL> garthk: I'd like to know about this aggressive license too
03:17 < garthk> AAA_awright: last time we checked, the lawyers said it was full GPL and freaked. Now it's clearly LGPL with permitted static linking. I'm pretty sure we could have used that.
03:17 < AAA_awright> garthk: If you're not distributing the source the license doesn't apply to you anyways
03:17 < garthk> If I recall right, they were operating according to Stallman's "make it full GPL" request here: http://www.gnu.org/licenses/why-not-lgpl.html
03:18 < AAA_awright> (er, if you're not distributing the program, the license doesn't apply to you)
03:18 < garthk> AAA_awright: Aha! Dec 9, 2008 they switched to LGPL. http://www.zeromq.org/blog:historical-highlights
03:19 < garthk> Or perhaps Oct 4. Still 2008, though.
03:19 < AAA_awright> If it's open source I'm not sure how you can do that, all the significant contributors would have to agree
03:19 < garthk> So, seems they decided to prioritise their own adoption rate above Stallman's requested home advantage for full GPL developers.
03:20 < AAA_awright> garthk: But were you ever going to distribute 0MQ code, in compiled form or source?
03:20 < AAA_awright> e.g. Static linking?
03:20 < garthk> AAA_awright: no, but the full GPL prevented any use without source distribution.
03:20 < AAA_awright> Just runtime link it and call it a day
03:21 < AAA_awright> garthk: The GPL grants you permission to distribute the program, not to merely use it
03:21 < garthk> AAA_awright: … whereas now, with LGPL, we could distribute it as a DLL, and with an additional static exception we could link it into our binary. Cool.
03:21 < timoxley> isaacs what's the best way to access an executable
03:21 < timoxley> from a module
03:21 <@isaacbw> why are you turds directing questions at people
03:21 < timoxley> to call with child_process
03:21 < timoxley> hah
03:22 < AAA_awright> timoxley: child_process?
03:22 < timoxley> AAA_awright no like, to access the executable it sets up with "bin"
03:23 < timoxley> int he package.json
03:23 < timoxley> *in the
03:23 < timoxley> I could use `npm bin`
03:23 < garthk> AAA_awright: full GPL on libraries contaminates the executable, hence "At least one application program is free software today specifically because that was necessary for using Readline" http://www.gnu.org/licenses/why-not-lgpl.html
03:23 < garthk> Moot point, though.
03:23 < timoxley> but npm bin takes a long time to boot
03:24 < AAA_awright> garthk: If the library is GPL, statically linking would legally force you to also release as GPL (else it's illegal). I don't think it's appropriate to say the GPL can "contaminate" stuff
03:24 < ChrisPartridge> timoxley: read the package.json and run it directly?
03:24 < timoxley> ChrisPartridge whoa that's simple. ok.
03:25 < AAA_awright> timoxley: Oh I see. package.json isn't a Node.js concept, so you really shouldn't be using it
03:25 < timoxley> AAA_awright huh
03:26 < AAA_awright> (That's something defined at a higher level by the package manager)
03:26 <@isaacbw> does anyone know how to get rid of the "Did you mean http://.../" prompt in chromium?
03:28 <@isaacbw> AAA_awright: node and npm are tighter than you would like them to be
03:28 <@isaacbw> and are willing to admit to yourself :P
03:29 < bulkan> woot
03:29 < trvski> hi
03:29 < dorner> do browsers ever force non-gzip content encodings? hehe
03:29 < neeky> isaacbw, Use a web service to help resolve navigation errors
03:29 < dorner> i want my node server to primarily distro up these gzip cache'd files i hooked up
03:29 < neeky> Under Preferences Privacy
03:30 < dorner> i can obviously serve up the raw ones but just wondering how many browsers would tell gzip to f-off
03:30 <@isaacbw> neeky: wutwut
03:30 < AAA_awright> isaacbw: Hm. No not really. Node.js parses package.json but that's pretty much a replacement for the `module.exports=require('./lib/main.js');` pattern so it's not a primary consern
03:30 < neeky> I think that determines if Chrome(ium) suggests corrections
03:30 <@isaacbw> I just don't want the dialog
03:30 <@isaacbw> oh okay
03:31 <@isaacbw> neeky: nope, doesn't work 
03:31 <@isaacbw> on or off
03:31 < neeky> hmm, that's all i goit
03:31 < neeky> got
03:32 <@isaacbw> it's because I'm use duckduckgo as my search engine, so it's being stupid with single word searches
03:32 < neeky> any mongoose schema ninjas here?
03:33 <@isaacbw> mongoose is for turds
03:33 < dorner> weird q, it's kind of rare for C/ASM people to get into web-dev (nodejs/js) right?
03:33 <@isaacbw> what why
03:33 <@isaacbw> you don't need to pigeon hole yourself
03:34 < dorner> what's pigeon hole yourself mean?
03:34 < dorner> nah i was just wondering
03:34 <@isaacbw> sexual inuendo
03:34 < neeky> I have a specia type of data i need to store and am wondering if a custom type is the best way
03:34 <@isaacbw> +n
03:34 < dorner> i work with lots of web dev people, who knows js/php/css/html etc.. hardly any of them know node, and none of them know C/asm etc
03:34 < dorner> just was wondering
03:34 <@isaacbw> dorner: that's because they're stupid turds
03:35 < dorner> lul nah they are smart
03:35 < dorner> ;d
03:35 < neeky> node's not a language per se
03:35 <@isaacbw> it's easier to make things "work" with web tech, so you have a lower barrier to entry
03:35 < neeky> so javascripters fit in well
03:35 <@isaacbw> but that doesn't mean that someone with strong foundations and C knowledge can't do awesome stuff with the web
03:35 < dorner> true neeky
03:35 < dorner> ya isaacbw
03:35 < neeky> i can baearly speel my naime
03:36 < dorner> my node backend is finally beating php/apache
03:36 < neeky> but i rite in nowd
03:36 < dorner> i havesome weird issue with connect.compress() though
03:36 < dorner> on my server
03:36 < dorner> which introduces quite a bit of latency
03:36 < dorner> anyway i uglify+gzip'd the files and cache'd them in memory now it's rockin
03:36 < dorner> happy
03:36 < neeky> I mean, hell, even MySpace uses Node.js! Come on!
03:36 < dorner> does it? nice
03:36 < neeky> The "new" Myspace does
03:37 < dorner> coo
03:37 < neeky> but who uses myspace
03:37 < dorner> me, now that i know they use nodejs
03:37 < dorner> lulul
03:37 < dorner> jk
03:37 < neeky> that's kind of like bragging that hitler uses node
03:37 < dorner> i do everything in node now
03:37 < dorner> even my 'shell scripting'
03:37 < dorner> hah
03:37 < neeky> You really dont want to brag
03:37 < dorner> i just love node
03:38 < neeky> compress has a edge case bug right now
03:38 < bulkan> node.js is just a tool like Lua,Python,Ruby,C 
03:38 < dorner> o ?
03:38 < neeky> according to TJ a few days ago when I was having bizarre issues
03:38 < bulkan> right tool for the right job :P
03:38 < neeky> he suggested that compress might be what's biting me
03:38 < dorner> neeky, ya last night i was bothering everyone in here about how when using gzip compression in express(and connecT), i'd get 100ms latency when sending back a simple 'hi' string
03:39 < dorner> turned out to be the compress() middleware, which is very small, so it has to be something with node's (0.10.11) zlib or something, on my system
03:39 < dorner> tested on another system, worked fine
03:39 < neeky> oh, the error I'm referring to is that it just breaks 
03:40 < dorner> o
03:40 < neeky> and I can't even remember the boundry case
03:40 < dorner> what version should i use?
03:40 < dorner> if u know..
03:40 < dorner> im about to get rid of express and go pure connect
03:40 < oren> what options do i have for locking my dependencies? check-in node_modules or shrinkwrap ?
03:40 < oren> any other alternatives?
03:40 < neeky> this issue was an upcoming fix, i just turned off compression and turned it on in nginx
03:41 < adarq> ah
03:41 < neeky> And that's my SOP now, nginx for compression and SSL
03:41 < neeky> in front of node
03:41 < adarq> why do u use nginx , because you have mutliple node vhosts?
03:41 < adarq> or
03:41 < adarq> or what
03:41 < neeky>  ssl performance
03:41 < adarq> ah
03:41 < adarq> it's that big of a difference
03:41 < adarq> ?
03:42 < neeky> it's just that nginx is a very hard server
03:42 < ChrisPartridge> adarq: https://github.com/observing/balancerbattle
03:42 < neeky> I like having it in between the world and my data
03:43 < adarq> cool
03:43 < adarq> ya neeky i figure that
03:44 < neeky> nginx primarily does ssl offloading for me
03:44 < adarq> i kind of want to go 100% node
03:44 < adarq> personally, for this single page app project
03:44 < adarq> that's what i've been doing
03:45 < neeky> but i turn compression on and it leaves less things to have to debug in node as my app's complexity grows
03:45 < adarq> ya
03:45 < neeky> so I strip my app to the nuts and bolts of what it needs, and constantly refactor dependencies out
03:45 < neeky> probably to a fault
03:46 < adarq> i do that too
03:46 < adarq> constantly refactor stuff out
03:46 < adarq> i like to get something working first
03:46 < adarq> then strip it
03:46 < neeky> in fact, I really don't use express except for handlebars, an that looks trivial to implement directly with connect
03:47 < adarq> lul i wonder why uglify does to already minified files.. jquery.min.js seems to be acting funny
03:47 < neeky> as in express view engines
03:47 < adarq> i like the templates etc.. ejs, ejs-partials etc
03:47 < adarq> but
03:47 < adarq> im trying hard to learn backbone
03:47 < adarq> i want 100% client side processingwith backbone
03:47 < adarq> backbone has been rough for me, for some reason
03:47 < neeky> I'm also doing backbone on the client side for web clients
03:48 < neeky> my main client are native mobile apps
03:48 < neeky> backbone also has a steep curve for me
03:48 < neeky> i need to 'dive in' for a few days
03:49 < adarq> i love it though
03:49 < adarq> i see the power in it
03:49 < adarq> like, i have this movie/book/music/news search widget thing.. generic model/view/collection stuff which i just basically turned into awidget for everything
03:49 < adarq> and then with scoped jquery i can insert it anywhere
03:49 < adarq> that is far from how i used to do things
03:50 < adarq> so im starting to improve a bit, just not as fast as i'd like i guess
03:50 < semblant> Hi all. I'm trying to set up an Arch Linux development machine and get node configured. I'm new to node, but to my knowledge I have followed the configuration steps as I understood them and believe I have the correct dependencies installed. When I run a simple http.js example I can't get a response back from node. Any ideas? I appreciate the help.
03:50 < neeky> yeah, it took me a while to realize I AM the server
03:50 < adarq> semblant: hastebin.com your errors etc
03:50 < neeky> Arch Linux: I'll bet you have selinux AND iptables
03:50 < semblant> adarq: wilco
03:51 < adamvandenhoven> I'm using Vagrant to do my dev and I'm a little unclear on one point. Would you normally run npm install from vagrant ssh and then duplicate in the vagrant file? or just one or the other?
03:51 < adarq> ? i would imagine you would vagrant ssh, then do all of your npm while in that vagrant box
03:53 < adamvandenhoven> adarq: ok thx
03:54 < adarq> np
03:55 < adarq> once you vagrant ssh into the box, i imagine that's where you want to do all of your work/testing
03:55 < adarq> so all of your npm/node stuff would be there (server)
03:59 <@isaacbw> watchu talkin bout
03:59 < ChrisPartridge> adamvandenhoven: generally your vagrant file is in the repository
03:59 <@isaacbw> just use the synced folders
04:00 < ChrisPartridge> adamvandenhoven: we generally npm install when the project is loaded, and then /vagrant is mapped to your working dir
04:00 <@isaacbw> your VM should be everything but your project
04:00 < ChrisPartridge> yeah that ^
04:01 < garthk> adamvandenhoven: most of my Vagrant testing involves the full Node application, plus the Puppet stuff. I'm also not pushing to NPM, so I've got something running 'npm pack' and then re-linking the .tgz into puppet-modules/${module_name}/files/ so Puppet can pick it up and deploy it.
04:02 < garthk> The Vagrant+Puppet combo ends up deploying my Node app exactly as if I'd deployed it to one of my production boxes. The only difference is in the .yaml file I'm using for config.https://github.com/lorenwest/node-config
04:04 < trvski> Has anyone had any experience packing an app using RPM for deployment?
04:05 < adamvandenhoven> Ok. let me backup. I just want to do "responsible" development in node (unit testing and running in VM to keep my local system out of the way). What I really need is a good up to date tutorial of what to start with. There is so many little bits and pieces out there its hard to know where to start (and a lot of stuff seems to have changed somewhat with recent vagrant releases)
04:06 < semblant> adarq: hastebin.com/pixiyuwiji.vhdl
04:06 < adamvandenhoven> too often I found myself running in circles chasing "best practices" I just want one that works. 
04:17 < adarq> semblant: 
04:17 < semblant> adarq: yes?
04:18 < garthk> adamvandenhoven: I'm using node-tap for testing. For what I'm working on, async.waterfall helps. I use function pairs in the waterfall to perform the tests. The first of each pair triggers something, using the async.waterfall callback as the callback. The next receives the callback, verifies the results, and then does a callback(null) to pass to the next pair.
04:19 < garthk> adamvandenhoven: the biggest pain is getting the argument to t.plan() right. I tried sub-tests with smaller plans, but never managed to get it working. I might try substack's tape module to see if it helps.
04:19 < adarq> sec
04:20 < semblant> np
04:21 < adamvandenhoven> garthk: I'm trying my hand at nodejs for a real app (mostly just fooling around up to now) instead of just browser stuff and I need a good starting point for setting up the project. So a half step before node-tap. :) 
04:22 < garthk> adamvandenhoven: can I assume this is a web app accessed via browser?
04:23 < adamvandenhoven> it will be, yes. 
04:23 < garthk> Ok. So, in package.json: 
04:23 < garthk>     "start": "node bin/server.js",
04:23 < garthk>     "test": "./node_modules/.bin/tap --timeout 2 ./test"
04:23 < samholmes> What are all the available two letter npm package names? :D
04:24 < garthk> and: "main": "lib/index.js"
04:24 < garthk> ^ that's not in scripts, obviously. The other two are in scripts.
04:24 < s2> adarq: back, cat killed router...
04:24 < adarq> ha
04:25 < adarq> s2, basically, you're waiting for an 'end' from the client, which is waiting on data from you
04:25 < adarq> so that's why it's just hanging
04:25 < adamvandenhoven> garthk: ok thanks
04:26 < adarq> you need to do something during the initial callback.. i mean, i simply added request.on('data',function() { } before your request.on('end' ...
04:26 < garthk> In bin/server: config = require('config'), AppClass = require('../'), log = require('bunyan').createLogger(…); var app = new AppClass(log, config); app.start(function(err) { if (err) process.exit(3); });
04:26 < adarq> and it sent hello
04:26 <@isaacbw> garthk: garthk it can just be tap
04:26 < semblant> adarq: I had guessed it was never finishing the request.
04:26 <@isaacbw> no need for that node_modules craziness
04:26 < semblant> adarq: let me give that a shot
04:26 < garthk> isaacbw: does just 'tap' work even if I didn't npm install -g it?
04:26 <@isaacbw> it does if tap is in your package.json
04:28 < garthk> adamvandenhoven: … then in lib/index.js, you want module.exports = function AppClass(log, config) { … this.app = express(); … } and then AppClass.prototype.start = function(callback) { … server.listen(port, address, function(err) { if (err) { log.fatal(err, "bugger!"); callback(err); } else { callback(null, server); } }
04:28 < garthk> isaacbw: oh, cool!
04:28 < ChrisPartridge> isaacbw: how does that sorcery work?
04:29 < adamvandenhoven> isaacbw: add tap to the devDependencies then?
04:29 < semblant> adarq: may you live old and enjoy all your days!
04:29 < garthk> adamvandenhoven: so, what you get for all that is a) 'npm start' starts your service, and b) you can instantiate your app and start it under test with its own custom log, custom config, and custom any other dependencies you want to control under test conditions.
04:29 < semblant> adarq: fixed it, ty.
04:29 < adarq> semblant: hah .. glad to have helped.. thing is, i dont actually know why that fixes it tbh.. i dont normally use the http api directly
04:30 < adarq> but ya the overall issue of 'waiting for res.end' when not sending anything to the client.. you'll get a timeout
04:30 < semblant> adarq: nor do I, lol. It's what I get for following a couple dummy tuts blindly
04:30 < garthk> isaacbw: noticed one silly thing with scripts. I wanted to be able to "scripts": {"start":["npm version build","npm start"]}, but it got executed as "npm version build,npm start". Which wasn't quite what I meant.
04:30 < adamvandenhoven> garthk ok. that's perfect. And if I want to use vagrant, do npm start in the SSH session
04:30 < semblant> adarq: you just alleviated a 2.5 day headache.
04:31 < adarq> damn!
04:31 < adarq> coo
04:31 < garthk> adamvandenhoven: Yep. And, config.vm.forward_port 443, somePortOnLocalHost in your Vagrantfile so you can access it from your system.
04:31 < semblant> have to go apologize to the wife for being grumpy now that its fixed
04:31 < semblant> lol
04:32 < garthk> For live development, you can also: config.vm.share_folder "repo", "/tmp/swb-source", ".", :create => true
04:32 < garthk> Or, whatever you want the path to be. vagrant ssh, cd /tmp/whatever, npm start.
04:32 < adarq> semblant: ya i feel you, frustration is part of the game
04:32 < adarq> i like to setup private network for vagrant.. that way i don'thave to NAT
04:32 < adamvandenhoven> garthk: ok and it will catch file changes?
04:33 < garthk> adamvandenhoven: npm install -g supervisor
04:33 < test_user> hi
04:33 < adamvandenhoven> ok. 
04:34 < garthk> adamvandenhoven: supervisor -w lib,html npm start # https://npmjs.org/package/supervisor
04:34 < garthk> That'll kill and restart your server if the code changes.
04:34 < adamvandenhoven> garthk: thanks. Now I have to go and do all that and actually get it happening
04:34 < garthk> adamvandenhoven: ok. See you in an hour. :)
04:34 < adamvandenhoven> aren't we the optimist
04:34 < adamvandenhoven> :)
04:41 < trvski> rpm
04:41 < trvski> err
04:41 < trvski> … when irc becomes your sh
04:46 < test_user> can anyone help me with a simple node.js problem? I'm using Cloud9 IDE and trying to test but it keeps giving me "TypeError: undefined is not a function" when trying to use the log function. I have log.js in my main directory and being required in the app via "var log = require("./log").log;  "  the log.js is from npmjs.org and I just moved it to the root of the app
04:47 < JNedved> Another shout out to all Node.js developers based in Australia looking for a new contract - must be onsite in Sydney - http://www.seek.com.au/job/24738791 - contact jamie@it-matters.com.au if interersted 
04:54 < MitchW_> nqstat
04:59 < MitchW_> grr, stupid focus follows mouse - sorry
05:26 < timoxley> AAA_awright I detail the problem I was having with npm's bin handling in here: https://github.com/timoxley/bin-path
05:27 < timoxley> mainly, if you're trying to find a .bin, I believe you're screwed unless you're using it programatically, or from a top-level module
05:27 < timoxley> s/programatically/globally
05:28 < AAA_awright> timoxley: What's the problem you're solving though
05:28 < timoxley> trying to find and call a sub-module's executables via exec/spawn
05:28 < AAA_awright> Why?
05:29 < timoxley> AAA_awright so I can run them.
05:29 < AAA_awright> Isn't that what PATH is for?
05:30 < timoxley> hm, I could set $PATH to process.cwd() + '/node_modules/.bin' before spawning
05:30 < AAA_awright> A well designed binary shouldn't need to be called like that, it'll have a library that you can load instead
05:30 < timoxley> AAA_awright in this case, the purpose is to spawn processes
05:31 < AAA_awright> timoxley: That's what fork is for
05:31 < timoxley> AAA_awright child_process.fork?
05:31 < AAA_awright> Yeah
05:31 < timoxley> how is that any different to using spawn?
05:31 < AAA_awright> A fork is the first step of spawning a child process, actually
05:32 < timoxley> ??
05:32 < AAA_awright> Node.js hides it for you, but that's how processes work
05:33 < timoxley> AAA_awright I'm not sure what I am to do with that information
05:33 < AAA_awright> timoxley: Normally in a program, when you spawn a child process, the first thing you do is you fork() the process, then the child process loads the new executable.
05:33 < AAA_awright> Ideally you'd be doing the same thing, fork the current process then call the library for whatever code you're doing
05:35 < timoxley> AAA_awright I guess I could do that. I'd need to build an interface around that, these things were originally designed to run as regular services, so at the moment they only have a command line interface
05:36 < AAA_awright> timoxley: At worst, develop a library that accepts a faux argv, and expose that, instead of calling that package's bin
05:37 <@isaacs> AAA_awright: child_process.fork is not fork[2]
05:37 < AAA_awright> But in the long run I'd be developing a library, that the binary happens to use
05:37 <@isaacs> timoxley: if you run something via an npm scripts command, it'll have node_modules/.bin in the PATH already
05:37 < AAA_awright> isaacs: What's your point
05:38 < AAA_awright> s/binary/executable/
05:38 <@isaacs> AAA_awright: sorry, i was thinking that "05:31 < AAA_awright> A fork is the first step of spawning a child process, actually" was referring to child_process.fork
05:38 <@isaacs> timoxley: what are you trying to do with an executable in node_modules?
05:39 < timoxley> isaacs I've got a few modules (apps) I want to "boot"
05:40 <@isaacs> timoxley: what if they're not in node_modules/.bin?  what if they're in ../../../../node_modules/.bin?
05:40 < timoxley> isaacs exactly.
05:40 <@isaacs> timoxley: "scripts":{"start":"node run-all-apps.js"}
05:41 <@isaacs> timoxley: then in your thingie, do `npm start`, and it'll load run-all-apps.js with the corret PATH to find deps' scripts
05:41 <@isaacs> timoxley: so child_process.spawn('foo', []) will load it from the closest dep that provides it
05:41 <@isaacs> or the global PATH if no deps do
05:42 < timoxley> isaacs hm, that's pretty good
05:43 <@isaacs> yep, it's almost like it was designed that way :)
05:43 <@isaacs> timoxley: this is also good for doing prepublish scripts that rely on coffee-script etc.
05:43 <@isaacs> so you don't ever have to install it as a non-dev dependency, or globally
05:43 <@isaacs> just install as a devDependency, and Trust.
05:44 < oren> what the recommended way to lock my deps? check-in to git?
05:45 < timoxley> isaacs hm, I have another issue related to this, these apps are private modules… so their republish script never gets run if I install them as dependencies of the parent app
05:45 < timoxley> *prepublish
05:46 < timoxley> at the moment I have a horrible hack where the parent apps' makefile runs the makefiles of the children… and my devDeps, are regular deps… and I feel bad. 
05:48 < timoxley> oren http://stackoverflow.com/questions/11459733/check-in-node-modules-vs-shrinkwrap
05:49 < adarq> i wish there was a hackerdojo nearby
05:50 <@isaacs> timoxley: so... srsly.  why?
05:51 <@isaacs> timoxley: why have prepublish scripts in the first place?
05:51 < nightfly> Will re/require'ing a changed file reload it?
05:51 < timoxley> nightfly nope
05:52 < adarq> i pollute the global namespace
05:52 < adarq> polute
05:52 < nightfly> is there any non-hacky way to reload files/modules?
05:53 < adarq> it's not entirely hack imo.. it's a few lines of code
05:53 < timoxley> isaacs good point. I used prepublish so it'd run on npm install when used in isolation 
05:53 < adarq>             delete require.cache[require.resolve(a)]
05:53 < adarq> that's literally all you need to do, then you just re-require() it
05:54 <@isaacs> adarq: yeah, don't do that.
05:54 < adarq> ya
05:54 <@isaacs> nightfly: ^
05:54 < adarq> but it works
05:54 < adarq> heheh
05:54 <@isaacs> "works"
05:54 < oren> timoxley: Xièxiè!
05:54 <@isaacs> setting fire to the house kills all the termites
05:54 <@isaacs> ;P
05:54 < adarq> i do it in dev environment though..
05:54 < adarq> not 'production'
05:54 < adarq> i mod a file, fs.watcher sees it, reloads module, everything works
05:54 < adarq> but i disable it when i have it run in non-dev env
05:55 < adarq> so it suits the need imo ;f
05:55 < adarq> maybe that makes it slightly more acceptable hah
05:56 < nightfly> That would suite my needs quite well.
05:57 < adarq> in that func, a is the full pathname if i recall correctly
05:57 < timoxley> would it make sense for npm to simply always install devDependencies for git url'ed dependencies?
05:57 < adarq> do console.log require.cache
06:02 < adarq> so many join/part/quits on freenode
06:05 < ChrisPartridge> adarq: just hide them
06:06 < nightfly> smart filter
06:07 < adarq> ChrisPartridge: ya i am
06:30 < krunc> so... 512mb, 1 core, xen vps  or  1 gb, 4 virtual core, OpenVZ VPS? .... both the same price from the same host
06:30 < krunc> what would you guys choose?
06:30 < timoxley> isaacs hm, the only problem with your npm start solution is I can't supply arguments
06:30 <@isaacs> timoxley: yeah
06:31 <@isaacs> timoxley: so, your thing is a bin script, that has to run the bin scripts of its deps?
06:31 <@isaacs> timoxley: this sounds like a lot of complex crap
06:31 < timoxley> ha
06:31 <@isaacs> timoxley: i mean, not crap, of course.
06:31 <@isaacs> i'm sure it's lovely
06:31 <@isaacs> but... still..
06:31 <@isaacs> at some point, don't you have to just say "This sucks" and do a different thing?
06:32 < ChrisPartridge> bin script that runs the bin scripts? is that binception?
06:32 < timoxley> isaacs sure, though I guess I'm not sure what a better different thing is at this point
06:33 < ChrisPartridge> timoxley: what exactly are you trying to achieve?
06:35  * isaacs zzz
06:35  * isaacs &
06:35 < timoxley> I have a "portal" that loads a set of apps in iframes, the idea is the apps should be shut down most of the time, but if a request comes in for one of them I want to boot it serve the request and shut it down again.
06:37 < Trangar> Why don't you just use require() and delete require.cache[] ?
06:38 < Trangar> var absoluteUrl = path.resolve(__basedir, "yourapp/index.js"); var app = require(absoluteUrl); delete require.cache[absoluteUrl];
06:39 < timoxley> Trangar that doesn't guarantee everything is cleaned up, for example if I boot a http server it'll still be listening
06:40 < timoxley> setInterval will still fire
06:40 < timoxley> etc
06:40 < Trangar> Then make sure you clean up your resources afterwards
06:40 < Trangar> A normal app would still be running in the background as well
06:40 < timoxley> Trangar not if you kill the process
06:43 < Havvy> Is there a way to get the filesystem's root from Node?
06:43 < Havvy> (I'm trying to do 'if (path !== root) {}')
06:43 < jesusabdullah> Havvy: path.resolve('/') ?
06:43 < Havvy> Will that work on Windows?
06:44 < jesusabdullah> probably
06:44 < jesusabdullah> or at least close enough
06:44 < jesusabdullah> I think we all know that windows doesn't have a true "root"
06:44 < Trangar> it does
06:44 < Trangar> At least, "cd /" in command prompt sends me to C:/
06:44 < jesusabdullah> yeah
06:44 < jesusabdullah> it should get you to DRIVE:\
06:44 < ChrisPartridge> yes, it will return the bootable drive afaik
06:50 < nightfly> What's the javascript equivalent to lisp's apply and ruby's splat operator?
06:51 < Havvy> Function.apply(thisBinding, arguments)
06:51 < Havvy> Err, Function.prototype.apply **
06:52 < nightfly> Awesome, thank you.
06:52 < Havvy> If you aren't sure what to set the thisBinding to, set it to null.
06:52 < oren> I have this line in my http-proxy: '105.221.80.160:4000'  : '127.0.0.1:4000',  but requests to 105.221.80.160:4000 don't seem to work. is it not possible to do that? (it does work if i use a domain instead of ip)
06:52 < nightfly> I assume thisBinding is the the object the function should be called with the value of 'this' as.
06:53 < Havvy> Yeah.
06:54 < ChrisPartridge> oren: the proxy table/router stuff is host based, iirc
06:55 < oren> ChrisPartridge: maybe bouncy can do that. let me check
06:56 < ChrisPartridge> oren: i have no doubt http proxy can do it, just read the docs, theres a tonne of examples in the readme
06:57 < sumo_> pa
06:58 < oren> ChrisPartridge: will do. thanks
07:15 < radu> hi, what do you know about this? warn: websocket parser error: no handler for opcode 10
07:22 < ssafejava> radu: Haven't seen that one, context?
07:27 < radu> socket io with express app
07:27 < radu> node v0.10.11
07:27 < radu> HAProxy in the front
07:32 < Havvy> What happens when I require a directory?
07:33 < kevinsimper> Havvy: Try it out ;) but you will find that it loads the index.js file
07:35 < Havvy> Geeze. Node makes it really easy to write your own module loading system on top of it.
07:36 < kevinsimper> Yeah, programming has become too easy now
07:37 < [AD]Turbo> hi there
07:38 < kevinsimper> hello
07:42 < bulkan> hello kevinsimper 
07:59 < cheetos30> hi, i've been experimenting with node.js. i'm normally a php/apache guy. I don't really get the 'asynchronous' aspect. I am using asynch.series everywhere to get the flow to be 'normal'. For instance.. I can't remember a time in 10 years where i've ever wanted to query a database and walk away without care for the result. It seemes like it would be a fringe-case rather than the default 'way 
07:59 < cheetos30> to go'
08:00 < jesusabdullah> cheetos30: it's not that you don't CARE about the result
08:00 < jesusabdullah> cheetos30: it's that you don't want to sit on your hands while it's happening
08:00 < kevinsimper> cheetos30: No, but when you go away because you are waiting on your DB, you can take another user request
08:00 < jesusabdullah> cheetos30: like, imagine you're making dinner because food is awesome
08:00 < jesusabdullah> cheetos30: what do you do while the roast is cooking? Make the salad.
08:01 < jesusabdullah> cheetos30: some time later: "OH SHIT THE ROAST IS DONE" *pull it out*
08:01 < kevinsimper> haha, jesusabdullah, with PHP you had to watch the roast the WHOLE time :D
08:01 < jesusabdullah> kevinsimper: EXACTLY
08:01 < timoxley> kevinsimper with most languages you have to watch it the whole time
08:01 < jesusabdullah> "fuck when's this roast gonna be done I'm HANGRY"
08:01 < ssafejava> but you used the wrong oven, should've used real_oven_bake, that sucker's burnt
08:02 < jesusabdullah> "cool it's done...oh shit now I need to make the salad still OH GREEAAAT"
08:02 < jesusabdullah> "I could really use a beer right now---fuck I'm a synchronous process and I'm already committed to this crappy salad"
08:03 < jesusabdullah> cheetos30: I hope my analogy was helpful to you.
08:03 < cheetos30> jesusabdullah, i get that, but for web development at least, i find that you always want to do things synchronously. You need to setup a database, authenticate, retrieve data based on the user, it all has to happen in order
08:04 < jesusabdullah> cheetos30: per-request, yeah, oftentimes
08:04 < jesusabdullah> cheetos30: but the roast and the salad are separate requests
08:04 < timoxley> cheetos30 you don't need to use async.series to get what you're describing
08:04 < ssafejava> cheetos30: It still happens in order, but it lets you do other tasks for other reqs at the same time
08:04 < jesusabdullah> cheetos30: maybe you're grillin' burgers instead because you have a big ol' group of hungry barbecue goers
08:05 < jesusabdullah> cheetos30: so you throw multiple burgers on the grill, and when the "time to flip" events happen you take care of them
08:05 < jesusabdullah> cheetos30: instead of only cooking one burger at a time
08:05 < timoxley> cheetos30 async does not lose the order, you just put the things you want to do after inside a callback
08:05 < jesusabdullah> cheetos30: you still need to wait for the burger to be ready to flip on an individual basis, but in the aggregate you're cooking and flipping all kinds of burgers in the meantime
08:05 < timoxley> cheetos30 instead of on the next line
08:07 < jesusabdullah> burgers.forEach(function (burger) { grill.add(burger); burger.on('half-done', function () { burger.flip(); }); burger.on('all-done', function () { grill.remove(burger); plate.push(burger); }); });
08:07 < jesusabdullah> and all those burgers will be plated up in NO time
08:07 < timoxley> cheetos30 i.e. rather than issuing sequential instructions on new lines, you nest them inside callbacks
08:07 < ssafejava> lol enough explanation for ya?
08:07 < timoxley> ^ for async instructions that depend on each other
08:08 < jesusabdullah> if I did my job right, you're jonesin' for a burger right about now.
08:08 < ChrisPartridge> yes..
08:08 < timoxley> cheetos30 but also it's important to think about things in terms of burgers
08:09 < jesusabdullah> timoxley: hey, if it wasn't food it would've been race cars.
08:10 < cheetos30> timoxley, yeah that it is sort of what asynch.series does, I really only use it because it is prettier than many nested callbacks, and I need the sequence. But I find that I am working around the core aspect of node.js a lot, i am treating it as an obstable, when the asynchronous thing is really the main reason for using node
08:10 < jesusabdullah> cheetos30: http://callbackhell.com
08:10 < timoxley> cheetos30 you get used to it
08:11 < jesusabdullah> cheetos30: you also learn how to embrace it, and become a true master griller
08:11 < timoxley> cheetos30 and it may largely disappear once ES6 hits in node 0.12
08:13 < cheetos30> okay, yeah thanks, I imagine you get used to it. For some reason I still find node.js less annoying than PHP, maybe it's the novelty factor for now
08:16 < Hans> how to convert LATIN1 encoded strings to UTF8 in node?
08:20 < dagerik> after installing express locally with npm install express in my project directory. require("express");
08:20 < dagerik> it fails
08:24 < kevinsimper> dagerik: How does it fail?
08:24 < zaphod1984> jesusabdullah i really like your burger analogy 
08:25 < jesusabdullah> zaphod1984: haha, thanks
08:25 < jesusabdullah> zaphod1984: Me, I like food
08:25 < zaphod1984> jesusabdullah i'm kind of hungry now...
08:25 < trvski> Do you have a particular blogging platform that you like?
08:27 < dagerik> kevinsimper:  throw new Error("Cannot find module '" + request + "'");
08:27 < jesusabdullah> trvski: honestly? jekyll.
08:27 < jesusabdullah> trvski: yes, I know, ruby
08:28 < trvski> not a big deal
08:29 < As001> Hello how can I see help in node cli ? ? gives me ... help or info throw error.
08:29 < eideo> help
08:30 < kevinsimper> first try "npm install", if that not work try "npm install request" or try install express again
08:30 < As001> 'ReferenceError: help is not defined'
08:30 < kevinsimper> As001: node --version 
08:31 < As001> 0.8.5
08:31 < kevinsimper> As001: node --help
08:31 < dagerik> kevinsimper: you talking to me?
08:31 < kevinsimper> dagerik: first try "npm install", if that not work try "npm install request" or try install express again
08:33 < dagerik> npm install express atually gives; "Not compatible with your version of node/npm: connect@2.7.11"
08:33 < dagerik> help
08:34 < kevinsimper> dagerik: Have you tried updating to the newerst version? 0.10.12?
08:37 < krunc> oh man, couchdb can store revision histories of documnets easily, where you can load any state of the document isnc ei twas created?
08:48 < dagerik> kevinsimper: my npm version is 1.1.4~dfsg-2, says apt-cache show npm
08:49 < kevinsimper> npm is a module
09:45 < Industrial> hmm. `$ which jslint` returns /usr/local/bin/jslint. npm didn't install it and neither did ubuntu (apt-get remove jslint fails). Where could it be from :S
09:47 <@konobi> Industrial: depends
09:47 < Industrial> oh, its a symlink from nodejs after all
09:49 <@konobi> stop using sudo =0)
09:49 < Hans> \away
09:50 < Industrial> yeah laziness, should just su for admin jobs
09:52 < bulkan> drudge:  ?
09:55 < dmilith> hi
09:55 < dmilith> I have a peculiar problem with node 0.10
09:55 < dmilith> codeLine = codeLine.slice(0, start) + colorize(codeLine.slice(start, end
09:55 < dmilith> TypeError: Cannot call method 'slice' of undefined
09:55 < dmilith> but the thing is: Node/lib/node_modules/coffee-script/lib/coffee-script/helpers.js:216
09:55 < dmilith> it's in coffee-script code (?!)
09:55 < dmilith> latest node, latest coffeescript
09:56 < dmilith> TypeError: Cannot call method 'slice' of undefined
09:56 < dmilith>   at Object.exports.prettyErrorMessage (/Users/dmilith/Apps/Node/lib/node_modules/coffee-script/lib/coffee-script/helpers.js:216:27)
09:56 < dmilith>   at compileScript (/Users/dmilith/Apps/Node/lib/node_modules/coffee-script/lib/coffee-script/command.js:199:25)
09:56 < dmilith>   at /Users/dmilith/Apps/Node/lib/node_modules/coffee-script/lib/coffee-script/command.js:143:18
09:56 < dmilith>   at fs.js:266:14
09:56 < dmilith>   at Object.oncomplete (fs.js:107:15)
09:56 < dmilith> strange isn't it?
09:56 < dmilith> any ideas?
09:57 < `3rdEden> look more like a coffeescript failure then a node 0.10 failure
09:57 < dmilith> yea, maybe
09:57 < dmilith> but I thought the same, then
09:57 < dmilith> tried with 0.8.25
09:57 < dmilith> with same result
09:58 < dmilith> https://github.com/jashkenas/coffee-script/issues/2849
09:58 < dmilith> something similar like this
10:12 < re> Hi. Could anyone please have a look at this issue http://stackoverflow.com/questions/17272628/nodejs-unable-to-verify-leaf-signature-with-self-signed-certificate ? I did not get a single response on SO, but it seems like https with self-signed certs should be easy?
10:13 < spobat> hi
10:13 < spobat> i got a little mysql issue there
10:13 < spobat> I just tried to escape an input but it then does not work as expected anymore
10:13 < spobat> http://ideone.com/ApQicm
10:14 < spobat> I think I can't espace a whole array like that
10:14 < spobat> meaning, values concatenated with ,
10:15 < jetienne> q. i look for a simple http proxy able to limit the speed of download. any suggestion ?
10:15 < re> spobat, you can't parametrize IN
10:15 < stagas> jetienne: a stream https://github.com/TooTallNate/node-throttle
10:16 < spobat> re that makes me very sad :(
10:16 < spobat> ree: what do you suggest to do then?
10:17 < re> I guess you should escape it manually and build that part of a query yourself
10:18 < re> spobat, or just make a query with appropriate number of placeholders
10:18 < theCode> re, it should it be straightforward. Maybe you missed this - http://nodejs.org/api/tls.html#tls_tls_createsecurepair_credentials_isserver_requestcert_rejectunauthorized
10:20 < spobat> re :O
10:20 < spobat> that's weird.
10:21 < re> theCode, I was not using createSecurePair indeed, but the thing is, the code is working when I request localhost, but not when I request 127.0.0.1 - must be an issue with certs?
10:22 < re> spobat, like this "select ... where id not in (?,?,?)", exclusionList, function() ...
10:22 < re> (here exclusionlist should have 3 values)
10:22 < spobat> i'll make a for loop :(
10:22 < spobat> it are N entries :p
10:22 < theCode> you will have to specify the host name explicitly
10:22 < re> theCode, so I can't use it if the host has no hostname, just IP?
10:26 < jetienne> stagas: anything which is already done ? :)
10:26 < jetienne> stagas: i mean I'm a busy person you know :)
10:27 < stagas> jetienne: none that I know of, it depends on what you want to proxy. if it's tcp it should be pretty easy to set it up using that module
10:31 < theCode> whatever you are using to access the app, should be mentioned - IP or hostname
10:32 < aandy> what's the preferred way to use http api's? e.g. elasticsearch and titan. while they're on LAN, i still find it tedious that i *have* to use http (with the added overhead). am i the only one, or have others faced this dilemma aswel? i'm considering having a long idle connection pool (a reverse long pull if you will)
10:34 < spobat> re ree and I assume LIKE also doesn't work? :O 
10:34 < spobat> I tried this:
10:34 < spobat> SELECT * FROM `a` WHERE name like "%?%" OR surname like "%?%"'
10:34 < spobat> with the argument [searchTerm, searchTerm]
10:37 < staar2> hello
10:38 < RLa> tere :)
10:38 < theCode> is it me you're looking for?
10:38 <@MI6> joyent/node: Fedor Indutny master * 4ae96c8 : crypto: do not move half-filled write head - http://git.io/thwWCw
10:41 < saschagehlich> isaacs: ping, are you there?
10:42 < fkm> HI there. I'm not sure if this is the right channel to ask. I have a route with a MySQL query  which fetches a list of events and sends the rows to the template parser. Is there a way to change the DateTime format of those rows without iterating over all the entries? http://dpaste.com/1271419/
10:43 < fkm> I'm using node-mysql, express, and jade.
10:44 < theCode> fkm, it looks like more like MySQL's job
10:47 < fkm> theCode: MySQL itself or node-mysql? I didn't know MySQL could change the output format and the only thing in node-mysql I could find was: "typeCast: Determines if column values should be converted to native JavaScript types." But having the original DateTime string doesn't help me either.
10:48 < fkm> Aaahh. Just found it :-D Thank you theCode!
10:49 < fkm> And I thought, I had MySQL figured out xD
10:49 < fkm> http://dev.mysql.com/doc/refman/5.1/en/date-and-time-functions.html#function_date-format
10:49 < sxpert2> fkm: mysql does wierd things with the data inserted sometimes
10:49 < theCode> fkm, great! Not your fault. MySQL is vast!
10:55 < Vermicelli> Which Linting tool do you guys use if you use at all? Jshint or JsLint? 
10:56 < theCode> hint is considered "voice of the people"
10:56 < theCode> lint is considered "voice of Doug"
10:57 < squeeks> I couldn't have put it better.
11:03 < Vermicelli> good, so what do you use? hint?
11:05 < theCode> yes
11:06 < saschagehlich> anyone familiar with couchdb? I'd like to query the npm registry to get all packages with their amount of downloads in the past 7 days
11:07 < saschagehlich> or even better: the top 5 packages sorted by the downloads of the last week compared to the downloads of the week before that
11:08 -!- mode/#Node.js [+b *!*@cpc18-flit3-2-0-cust47.9-1.cable.virginmedia.com] by ChanServ
11:08 -!- lushious was kicked from #Node.js by ChanServ [Banned: inappropriate quit message (lifted when confirmed changed)]
11:26 < mortgiant> \leave
11:30 < olalonde> \/leave
11:31 < lewis> hi
11:31 < olalonde> hola
11:31 < lewis> what does felix mean by "So I don't have to worry about code accessing the same data structures at the same time?"
11:31 < booyaa> hey guys could you not do a blanket ban on virginmedia connections?
11:32 < olalonde> probably referring to what happens when you do threaded programming?
11:32 < olalonde> you have no guarantee in which order your code will read/write variables. this is not a problem with node.js
11:32 < olalonde> booyaa: what do you mean?
11:33 < booyaa> ChanServ has changed mode: +b *!*@cpc18-flit3-2-0-cust47.9-1.cable.virginmedia.com
11:33 < lewis> why would somebody worry about code accessing the same data structure olalonde
11:33 < booyaa> you're pretty much blocking anyone who might get that address when virgin cycles their net connection
11:33 < olalonde> because its a common problem when working with threads in C for example
11:34 < lewis> olalonde: actually I dont even know what it means to access the same data structure =)
11:34 < olalonde> it's not a problem in Node.js though
11:34 < cainus> hey all... can anyone recommend a less tedious mongo client than mongodb-native?
11:35 < olalonde> lewis: see http://en.wikipedia.org/wiki/Race_condition#Computing but as I said this is not an issue in Node.js
11:36 < lewis> olalonde:  thanks but i was hoping for one of those awesome metaphor to understand it i read from the blog
11:38 < olalonde> I don't know what blog you are talking about..
11:38 < lewis> http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb
11:39 < olalonde> I guess if you never did threaded programming before you cannot appreciate the beauty of this :)
11:39 < olalonde> if you ever do you will understand
11:40 < olalonde> there are entire books on the topic ;)
11:41 < olalonde> http://programmers.stackexchange.com/questions/81003/how-to-explain-why-multi-threading-is-difficult
11:41 < lewis> olalonde: I see
11:42 < lewis> olalonde: thanks by the way
11:43 < olalonde> you're welcome
11:44 < lewis> olalonde: im learning it still though, and js at the same time
11:45 < olalonde> yes, you dont have to worry about this stuff in Node.js though ;)
11:45 < olalonde> you can think of your code as being single threaded
11:47 < lewis> nice =)
11:58 <@MI6> joyent/libuv: Ben Noordhuis v0.10 * 5841852 : test: add 'start timer from check handle' test (+2 more commits) - http://git.io/OycghA
12:06 < sbarow> cainus: have you looked at mongoose?
12:07 < cainus> sbarow: yeah... I've got schemaless data though, so it doesn't make much sense in this case
12:09 < sbarow_> lewis: to go with that metaphor felix gives think of threads as having multiple "kings"
12:10 < lewis> sbarow_: haha how does it relate to accessing data structures
12:11 < lewis> who's that felix guy between
12:11 < lewis> i gotta say i was impressed by his writing style
12:11 < lewis> thumbs up
12:12 < sbarow_> lewis: suppose you could think of that as kings accessing information from one of their workers.
12:12 < sbarow_> buy yeah its way more complicated than that. threading is a "wonderful" topic ;-)
12:14 < sbarow_> lewis: http://programmers.stackexchange.com/questions/54359/how-would-you-explain-multi-threading-to-a-seven-year-old-kid
12:14 < lewis> nice
12:14 < lewis> how did they know im 7
12:15 < sbarow_> lewis: hahaha I was hoping you weren't going to take that as an insult. 
12:15 < lewis> as far as programming goes
12:15 < lewis> that's about my age
12:28 < jsmonkey> Hi, is there any way of making a node app to a binary etc? Lets say I build something great that I want to get paid for without relasing my source code. One way is to minfiy etc but that seems like not good enough when building a whole server side thingy?
12:53 < dagerik> me and my friends are new with js. we are gonna use express + jade + cylus. what testing module should we use?
12:54 < julianduque> dagerik: mocha
12:59 < jez0990> browserify question: am I supposed to add browser-only deps into the main deps list?
13:05 < Jar9869458293812> Dammit .... The code is working only in IE :( and failing in Chrome and FF
13:14 < Jar9869458erer29> My Code is working perfectly in IE but fails in FF and Chrome
13:14 < Jar9869458erer29> Help me pls
13:14 < sxpert2> stop using IE ;-)
13:14 < sxpert2> and then fix your code 
13:14 < jsmonkey> how do you manage todo that? it's usually the other way around :)
13:14 < jdelgado> Exactly what i was thinking
13:14 < sxpert2> jsmonkey: +!
13:14 < Jar9869458erer29> In FF & Chrome iit disconnect 
13:15 < jsmonkey> Jar9869458erer29: please describe your problem again.
13:15 < Jar9869458erer29> IE it works fine
13:15 < Jar9869458erer29> I know it's weird
13:15 < Jar9869458erer29> okay
13:17 < jsmonkey> stop trolling
13:17 < Jar9869458erer29> I'm doing simple chat application in local , my app works fine in IE but in FF and Chrome it gets disconnect automatically and gets reconnected as a new User [This happens when i connect to socket]
13:19 < Skullclown> Jar9869458erer29: jsfiddle/demo
13:22 < neeky> Anyone up for some sweet stack overflow karma? http://stackoverflow.com/questions/17321179/schema-for-complex-sequence-generation-and-storage
13:23 < Jar9869458erer29> Skullclown ?
13:24 < neeky> Jar9869458erer29, paste code or error or demo
13:24 < neeky> so people can see what you are trying to do
13:24 < Jar9869458erer29> jsfiddle dont support Node
13:25 < neeky> it supports client side code, which IE, FF, and Chrome are
13:25 < neeky> t5hen use a gist or hastie
13:29 < Jar9869458erer29> I found the Error ..err...It was calling Form :(
13:33 < AAA_awright> neeky: Sounds like the quintessential use-case for the URI... the value is opaque, it doesn't have any meaning, but you can mint them any way you please
13:34 < neeky> you mean build them like one would build up a URI string?
13:34 < neeky> but each element in my case is a complex object in its own right
13:35 < AAA_awright> neeky: So once you've generated one, store it as an opaque string
13:36 < neeky> Oh, right, yeah, I think I have that part, it's trying to simplify/keep flexible the actual management and generation that's got me
13:37 < neeky> once the sequence is created for an invoice, it has no smarts anymore, it's just  string
13:38 < AAA_awright> Ok, then... I'm trying to figure out the problem
13:38 < neeky> I guess I can drive the rules in controller logic - I was trying to see if mongoose what up to it without too much controller code
13:38 < AAA_awright> These identifiers are stored somewhere?
13:38 < AAA_awright> Oh this is mongoose
13:39 < AAA_awright> Still, these identifiers are minted somewhere
13:39 < neeky> I see, well I'm trying to invision the schema that defines the sequence, not stores it
13:39 < AAA_awright> envision or invert?
13:39 < neeky> the storag is just a String type named "invoice_no" on each invoice document
13:39 < MikeD_> we've been using WSH to run jscript. I don't want to have to redesign in php.  Would node.js be a good option for running arbitrary javascript?
13:39 < neeky> envision
13:40 < AAA_awright> neeky: The template/pattern is going to be stored as a value like any other, I don't think you put it on the schema
13:40 < neeky> node will allow you to shoot yourself in the head with eval() if that's what you are asking MikeD_ 
13:41 < Thorn> hello. I wrote a simple chat with socket.io. once the server is restarted, clients receive every broadcast message twice (socket.broadcase.emit()). is that a known caveat?
13:41 < AAA_awright> MikeD_: new Function if you're generating code that needs to be executed, especially if multiple times (like compiling a template)
13:41 < neeky> oh, so you suggest just a simple string called "invoice_sequence_rule" stored with the ciustomert record
13:41 < neeky> that has tokens that define the number
13:41 < AAA_awright> neeky: Yeah, and it'll have a value like "{YYYY}{mm}-{seq.04d}" or something
13:42 < neeky> that may hold nothing but a string
13:42 < AAA_awright> And it's easy enough to use that to format...
13:42 < neeky> Ahhh, I was overthingking
13:43 < neeky> I was designing a complex schema where each element holds a 'rule', but also stored the current invoice so I could know what to increment when they request a new invoice
13:44 < AAA_awright> >> '{YYYY}{mm}-{seq.04d}'.replace(/{([^}]*)}/g, function(a,n){return n;}); // This is similar to what I do
13:44 < purr> AAA_awright: (string) 'YYYYmm-seq.04d'
13:44 < neeky> I DO think I need to store the current invoice number to know what the next one is (in the absense on mongoose incremental data types)
13:45 < AAA_awright> Yeah, you'll still store metadata like 'Create date' and 'serial number'
13:45 < AAA_awright> It's just there'll also be a string that was generated using that data, at creation time, which would be another type of id
13:45 < neeky> so, '{YY}' would mean year, but just 'YY' means literal 'YY'
13:46 < AAA_awright> That's how I do it, it's similar to RFC 6570 URI Templates
13:46 < neeky> YY and MM are easy, just get v=current month and year, the pure incrementals are the ones i need to store
13:46 < neeky> cool, I'll go skim the rfc
13:47 < neeky> thanks!  I was overthinking the schema a bit
13:47 < neeky> damn, we need a replace bot in here
13:47 < dagerik> which module contains the it() and describe() functions i am seeing in tests?
13:48 < AAA_awright> https://github.com/Acubed/magnode/blob/master/lib/formatToken.js is my token-generating library I wrote... It's probably way overkill and I need to simplify it down, or replace it with an actual RFC 6570 implementation
13:48 < neeky> dagerik, mocha?
13:48 < neeky> dagerik, http://visionmedia.github.io/mocha/#getting-started
13:49 < neeky> AAA_awright, cool, I'll check that out
13:50 < AAA_awright> neeky: And watch out for the fact that Date#getMonth returns zero-indexed months... even though getDate (get day of month) returns 1-indexed days... but whatever
13:50 < neeky> yeah, that drives me up a wall
13:50 < neeky> still can't believe the designers did that
13:50 < dagerik> help me find doc on it() and describe() functions.
13:51 < AAA_awright> I'm suprised I didn't catch that little thing
13:51 < AAA_awright> It was designed? :p
13:51 < neeky> dagerik, you want me to call you and read the docs to you?
13:51 < neeky> I just sent you the link to the site
13:52 < neeky> dagerik, skip over to the github site - all the source and docs are there
13:52 < dagerik> neeky: damnit im unable to find the doc on those functions. i looked
13:54 < dagerik> neeky: actually, i cant find doc on any function from mocha
13:54 < dagerik> i think i need some handholding
13:55 < niggler> dagerik: http://visionmedia.github.io/mocha/
13:57 < neeky> dagerik, It and Describe are in DSL (Domain Specific Language)
13:57 < stack_> hello, what is a common way to share a session state with other applications, for example a django one that stores sessions in a memcached keyvalue-store ?
13:58 < neeky> YOU define what DSL to use, the built-in DSL is called "BDD"
13:58 < neeky> so if you research BDD a bit, you'll find "it()" and "describe()"
13:58 < neeky> http://visionmedia.github.io/mocha/#interfaces
13:59 < brianc> nodeconf - let's talk about it
13:59 < neeky> that may get you closer - testing is more involved than you think - that's why I don't do it
14:00 < brianc> anyone have a suggested way to get to the joyent offices from SFO?
14:00 < radu> speaking of tests, how do I teardown inside each "it" using mocha? 
14:00 < radu> https://gist.github.com/samsonradu/bbee39f5140681dfea57
14:00 < Jar9869458erer29> neeky How to debug from Browser ?
14:00 < radu> here s my first attempt at writing mocha tests
14:00 < neeky> Jar9869458erer29, debug what?
14:01 < Jar9869458erer29> My Node.js code
14:01 < neeky> sadly, i don't get to do nodeconf this year - too busy bootstrapping a company
14:01 < Industrial> Jar9869458erer29: enter that into google
14:01 < Industrial> come back if u cant find it
14:02 < neeky> Jar9869458erer29, that's a pretty broad question, i have no idea what it does
14:02 < neeky> "how long is a string?"
14:03 < Jar9869458erer29> ,[>,]<[.<]
14:04 < neeky> I have no idea what that is
14:04 < Jar9869458erer29> hehe neeky 
14:04 < brianc> anyone have a suggested way to get to the joyent offices from SFO?  Never really been to San Fran before
14:04 < Jar9869458erer29> It's a different language :)
14:05 < zbzzn_> Jar9869458erer29: install node-inspector
14:05 < zbzzn_> start it
14:05 < Skullclown> Jar9869458erer29: you've been asking wrong questions in wrong ways without giving any demo or code. how do you expect us to help?
14:05 < neeky> I'm not that smart, I just sit in here and type stuff into google for people
14:05 < zbzzn_> browse to the URL it tells you
14:06 < brianc> I'll come back when it's not 7:00 am on the west coast
14:06 < Jar9869458erer29> :D
14:06 < Jar9869458erer29> lol
14:06 < zbzzn_> And two wrongs dont make a right
14:07 < Skullclown> and neither do 3 wrongs
14:07 < Skullclown> or 4.
14:07 < zbzzn_> And two rights dont make a wrong
14:07 < zbzzn_> except for "Yeah Right"
14:07 < brianc> three lefts make a right
14:07 < zbzzn_> but thats an exception
14:07 < baked> require some assistance with implementing jquery content change 
14:07 < Skullclown> -(-1) = 1 though so o.o
14:08 < Skullclown> baked: go ahead, just ask the question
14:08 < baked> thanks
14:08 < baked> im looking for some advice - im currently using the express framework
14:09 < baked> im currently learning how to develop a dashboard view
14:09 < baked> using mongo db
14:09 < baked> i am able to render my view with object and display each document within a div element
14:09 < baked> but keeping a dashboard view in mind say i only want to disply 3 documents at a time
14:10 < baked> within a specific div
14:10 < baked> and use paginaiton links to change the list
14:10 < baked> is jQuery the right tree to be barking up
14:12 < neeky> looking at joyent's history - i had no idea they were connected to Dean Allen
14:12 < spion> you can implement pagination fully server-side, fully-client-side, or mixed.
14:13 < neeky> I used to love his blog and Daily Oliver - I hate that he quit writing
14:14 < merpnderp> baked: if you just need some simple one off datatable, use knockout.
14:14 < baked> yea when i say pagination i dont want to change page. i just want to change the content of a ul list
14:15 < merpnderp> you mean like one of those new fangled AJAX requests?
14:16 < baked> i think so? So i have one div element in a dashboard. i have an object with 6 items in it
14:16 < baked> but display 3 at a time
14:17 < baked> so when user clicks next arrow the next 3 items replace the first 3
14:17 < baked> i hope that makes sense :s
14:18 < kuebk> what is the recommended/good module for bson?
14:18 < merpnderp> baked: http://knockoutjs.com/examples/grid.html that should get you started
14:18 < baked> thanks merpnderp
14:19 < baked> yes 
14:19 < baked> thats what i mean
14:19 < baked> ++ ^^
14:19 < baked> where hav eyou been all my life
14:19 < baked> :)
14:29 < radu> hey, I have a strange issue with mocha and chai, I cannot fail a test. Here s the tests file that I run with mocha tests/product.js https://gist.github.com/samsonradu/bbee39f5140681dfea57
14:33 < neeky> anyone written connect middleware to do handlebars templates? Every express middleware I use is actually connect except this one
14:34 < neeky> so if i can refactor out express, makes my app leaner
14:35 < niggler> neeky did you search npm?
14:35 < niggler> https://npmjs.org/package/connect-handlebars
14:36 < neeky> I search github, and found one > 2 years old
14:36 < niggler> disclaimer: haven't actually tried it -- was first result on npm search
14:36 < neeky> that's the one
14:36 < neeky> I'll check the source
14:36 < niggler> a year ago
14:38 < neeky> looks simple enough
14:40 < niggler> neeky try it out and write a blog post about your experience
14:40 < neeky> i suck at blogging - but a blog post about writing a template middleware might have some interest
14:40 < niggler> also, if it's good, add it to https://github.com/senchalabs/connect/wiki
14:40 < neeky> cool
14:41 < niggler> but make sure its good :P
14:42 < neeky> nothing against express, it's fabulous, but if I'm only using the view engine, it makes sense to refactor it out
14:43 < niggler> neeky use only what you need is the nodejs way
14:43 < neeky> i do that to a fault - spend way too much time optimizing and not enough time implementing 
14:43 < DrSean> npm keeps haning, I left it installing something over night.  hours on one get is long enough to assume something is wrong, right?
14:43 < neeky> i need to start using TODOs
14:45 < neeky> DrSean, yeah - 
14:45 < DrSean> 12 hours* I need so stop using num-lock for hotkeys
14:45 < neeky> anything > 1 min is probably too much
14:46 < DrSean> I've retried it a few times, hangs at different points. Any way to fix this? 
14:47 < neeky> DrSean, frequently a dependency of a package will go missing
14:48 < neeky> you'll have to pull the source for the package and fix the dependency, then install it locally
14:48 < DrSean> neeky, if I wget the url it works fine.
14:48 < wumpus_> is this a good place to recruit a good node freelancer?
14:48 < neeky> DrSean, what package?
14:48 < squeeks> I imagine a jobs board might be better
14:48 < neeky> i can take a peek
14:49 < DrSean> neekly, any, curently express
14:49 < DrSean> neekly currently haning on: https://registry.npmjs.org/methods/-/methods-0.0.1.tgz
14:49 < neeky> hmm, maybe something on your end then - hang on
14:49 < wumpus_> squeeks: any suggestion?
14:50 < wumpus_> gun.io?
14:50 < dgrubelic> Any socket.io dev here?
14:51 < ech0s7> Hi all!
14:51 < ech0s7> i have installed node, and jake
14:51 < Skullclown> dgrubelic: a few, most likely
14:51 < ech0s7> but why if i run jake i get command not found ?
14:51 < ech0s7> i'm on Mac OS X
14:51 < neeky> DrSean, installed express and methods both fine
14:51 < wumpus_> install it with -g param
14:51 < Skullclown> ech0s7: installed globally?
14:51 < neeky> does it just hang?
14:51 < ech0s7> Skullclown: yes
14:52 < dgrubelic> has anyone been doing socket caching per user and broadcasting to them?
14:52 < DrSean> neekly, yea just hangs
14:53 < ech0s7> Skullclown what do you mean for "globally" ?
14:53 < wumpus_> ech0s7: npm install jake -g
14:53 < dgrubelic> i'm trying to create an app where uses join a session (there can be a lot sessions) and i want to broadcast messages just to users in that session. 
14:54 < neeky> DrSean, try npm -ddd install <package>
14:54 < neeky> and see if you get insight on what specifically is hanging
14:54 < dgrubelic> The problem occurs when one user refreshes the page, another socket is registred and the same user gets message two times. :(
14:54 < Skullclown> ech0s7: I mean don't say yes if you don't know what it means
14:57 < DrSean> neeky, It's currently hanging on npm http 200 https://registry.npmjs.org/methods/-/methods-0.0.1.tgz
14:58 < qrada> hi
14:58 < staar2> hi
14:58 < EhevuTov> hi
14:58 < DrSean> neekly, before that it extracts things
14:58 < staar2> how i access formbidable on error event in express ?
14:58 < neeky> DrSean, what npm command are you running 'npm -ddd install methods' ?
14:59 < niggler> wumpus_ the easiest way may be to develop competency in-house
14:59 < DrSean> neekly 'npm -ddd install express'
14:59 < dgrubelic> If anyone knows some shit about socket.io and is ready to talk about it, just msg me :)
14:59 < wumpus_> niggler: i'm trying to do it myself but i'm kinda lost
14:59 < wumpus_> i'm building a mess
15:00 < wumpus_> and before it's too late i need consulting or something
15:00 < neeky> DrSean, can you hastebin or gist the output of that command?
15:00 < niggler> you need to follow the zen of nodejs
15:01 < DrSean> neekly, http://pastebin.com/PWtiPnJ7
15:02 < DrSean> neekly, I started it again and this time it completed.
15:13 < dgrubelic> msg /NickServ identify dgrub298geek
15:14 < Seventoes> oh boy
15:14 < dgrubelic> :D
15:14 < Seventoes> time to change your password haha
15:14 < dgrubelic> jap...
15:14 < Seventoes> everywhere that you use it, since that doesn't appear random to me ;)
15:14 < Skullclown> alias auth { /msg NickServ identify PASS }
15:15 < Skullclown> put that in your ALT+R if you're using mIRC
15:15 < Skullclown> then just type /auth
15:15 < Seventoes> more specifically, "/msg NickServ identify dgrub298geek"
15:15 < Seventoes> hehehe
15:15 < Skullclown> :P
15:16 < dgrubelic> ah hells no...
15:17 < neeky> msg /NickServ identify ****** 
15:17 <@MI6> joyent/node: isaacs v0.8 * ccad4c7 : V8 build: 'echo -n' considered harmful (+3 more commits) - http://git.io/7EBLJg
15:18 < neeky> funny - it puts *s when I do that
15:18 < neeky> DrSean, I ran that command 4 times, and it hung 1/4 on methods - so something must be hokey in npm right now
15:19 < DrSean> neeky, ah so not much I can do other than keep treing. 
15:21 < neeky> DrSean, what OS are you on?
15:22 < DrSean> neekly, Debain 6 64bit
15:23 < neeky> are you on latest node?
15:23 < DrSean> Yea
15:24 < neeky> try this: do you have an ~/.npm/methods dir?
15:24 < DrSean> Yes
15:24 < neeky> do rm -rf ~/.npm/methods
15:25 < DrSean> ok, try it again now?
15:25 < neeky> then re-run command with a single -d: 'npm -d install express' and pastebin the output (if it hangs)
15:26 < neeky> the line npm http 200 < means it finds the package fine
15:27 < neeky> so it must be something after that hanging
15:27 < DrSean> neekly, express didn't hang. But less-middleware is. 
15:27 < neeky> so, express installed ok but now npm -d install less-middleware hung?
15:28 <@isaacbw> woo, got medium authorship privileges. Now people will *have* to listen to me
15:28 < DrSean> neely, yea: http://pastebin.com/8ewxkmfd
15:28 <@isaacbw> *medium.como
15:28 <@isaacbw> -o
15:28 <@isaacbw> fkjdsal;kjfdsa
15:28 < neeky> u tipe gud
15:29 < neeky> DrSean, rinse and repeat :)
15:29 < neeky> 'rm -rf ~/.npm/transformers && npm -d install less-middleware'
15:30 <@isaacbw> sudo rm -rf /
15:30 < neeky> do not do that ^^^
15:30 < DrSean> neekly, so I'll have to ddo that for everything? :(
15:30 < neeky> i hope not
15:30 < gdbz> DrSean: try rm -rf ~/.npm
15:30 <@isaacbw> lol it hadn't occured to me that someone might actually type it in to see what happens
15:31 < gdbz> cleanup your old shit :) 
15:31 < neeky> someone more versed than me might have a better way 
15:31 < neeky> seems your npm has gotten a bit unsynced
15:31 < neeky> did you 'just'
15:31 < neeky>  upgrade from an older node?
15:32 < DrSean> no this is a fresh copy of debain
15:32 <@isaacbw> where did you get your node from
15:32 < neeky> can he safely delete ~/.npm?
15:32 <@isaacbw> yea sure whatevs
15:33 < neeky> then yeah, rm -rf ~/.npm
15:33 < neeky> and re-try
15:33 < DrSean> mmk, hoping for best
15:34 < neeky> node re-install is always a click away
15:34 < neeky> protip: on a dev machine nvm is a help
15:34 < neeky> installs node in your ~/
15:35 < neeky> making re-install quick and painless
15:35 < neeky> and lets you switch versions faster than you can type http://www.xhamster.com
15:36 < DrSean> it hanged, reinstalling node
15:37 < neeky> dang
15:37 < neeky> you got a crappy network?
15:37 < DrSean> shouldn't be I'm paing good money for this vps 
15:38 < neeky> at joyent :)
15:38 < neeky> ?
15:38 < DrSean> nah, somewhere else. Got this before I went anywhere near nodejs.
15:39 < power-inside> I'm trying to save a JPG file using appjs.. I use https://github.com/appjs/appjs/wiki/HTML5:-Read-local-files and pass the fileContent into nodejs's writeFile(). It works, but the resulting JPG image doesn't open. Am I missing something? encoding?
15:39 < neeky> I was just being funny
15:39 < DrSean> I thought you were going to try and sell me something :P
15:40 < neeky> nooo, joyent is the main dev of node, it would be ironic if this was on one of their VMs
15:40 < DrSean> Hehe that would be funny. 
15:43 < Bascka> Does anybody know if http proxy chaining is possible with any proxy? do i just need to set the path header as an full url?
15:55 < augustl> hey folks. Other than iptables, are there any generic-ish solutions to have a node process bind to port < 1024?
15:55 < bnoordhuis> augustl: authbind, CAP_NET_BIND_SERVICE
15:55 < augustl> bnoordhuis: looking it up, thanks
15:56 < bnoordhuis> np
16:02 < neeky> augustl, i might also suggest let a proxy connect to port < 1024 in front of node
16:02 < augustl> neeky: I'll probably end up using iptables yeah
16:05 < brianc> hai
16:05 < brianc> I have question loosely related to node(conf)
16:05 < brianc> I'm flying in tomorrow
16:05 <@isaacbw> augustl: the easiest solution is to just run it as sudo
16:05 <@isaacbw> su
16:05 < brianc> any san fran locals recommend the best way to get from SFO to Joyent offices?
16:05 <@isaacbw> root
16:05 <@isaacbw> sudododododo
16:05 <@isaacbw> dodo
16:05 < nathan7> isaacbw: that's a bad idea though
16:05 <@isaacbw> yea don't do it
16:06 <@isaacbw> unless you want to be a big fat turdnugget
16:06 <@isaacbw> but that's cool, no judgment here
16:07 <@isaacbw> +e
16:07 <@isaacbw> brianc: find a hippie on a bike to give you a ride
16:08 < augustl> isaacbw: iptables ftw :)
16:08 <@isaacbw> NYC just got a bike sharing program and homeless people are using them in the stations for exercise
16:08 < augustl> le the OS do what the OS does best, etc
16:09 <@isaacbw> I write my web applications to bootstrap themselves and run in memory
16:09 <@isaacbw> using an OS is for dweebs
16:10 < neeky> AAA_awright, are URI templates as defined by RFC 6750 in use anywhere?
16:10 < neeky> I'm not sure Ive ever seen them
16:10 < AAA_awright> neeky: Yeah, the the authors list specific applications that inspired the functionality
16:11 < AAA_awright> neeky: Notably it's used in JSON Hyper-Schema for creating hyperlinks and Link relations from JSON instances
16:11 <@isaacbw> hyperschema
16:12 < locy> Hello, i want to make a nodejs intranet kind of thing where each nodejs process creates its own unique id which could be used as an address within a nodejs network , any kind of thing already exist?
16:12 < AAA_awright> e.g. "http://example.com/{urlalias}{?args*}"
16:13 <@isaacbw> RFC 6750? I can't find it
16:13 < neeky> 6570
16:13 <@isaacbw> ah okay
16:13 <@isaacbw> cool beans
16:13 < neeky> i don't touch type
16:13 < oren> is there a good reason to only export one function from a file?
16:13 < AAA_awright> neeky: http://tools.ietf.org/html/rfc6570
16:14 < neeky> yeah, I'm reading it now
16:14 < AAA_awright> I appeared to have the OAuth spec open in my web browser, heh, not dyslexia!
16:14 <@isaacbw> oren: it's easier to organize and document
16:14 <@isaacbw> but whatevs
16:14 <@isaacbw> it doesn't matter that much
16:14 < neeky> i have tons of single function files
16:14 < AAA_awright> (I'm currently implementing session tokens in my application)
16:14 < oren> isaacbw: sometimes you have a few functions that are related
16:15 < oren> so it's simple to export them as a single object
16:16 < niggler> oren https://github.com/substack/gamma.js/blob/master/index.js
16:16 < neeky> oren - another example is routes. Since node automatically looks for index.js when you require a folder, https://gist.github.com/nikmartin/21a8ec969f13cab30b8f
16:17 < neeky> goes in every app that uses routes, in ./routes
16:17 < neeky> then every route is a single exported finction in routename.js
16:18 < neeky> sooo much easier to manage routes that way
16:18 < neeky> I do the exact same thing with models
16:19 < oren> niggler: not sure what the code you links me demonstrate
16:20 < neeky> but mine is crystal clear, right?
16:20 < niggler> oh oren  you were asking about exporting one function and exporting a few related functions
16:21 < niggler> in this case, a function is exported, but the related log function is also accessible
16:21 < oren> neeky: still staring at your code (: is that app means express app? (line 3)
16:21 < neeky> yeah
16:21 < niggler> neeky how is connect-handlebars?
16:22 < neeky> this is a method for auto-including routes
16:22 < neeky> niggler, simple
16:22 < tbranyen> hey isaacs, i know joyent is protective of the node.js logo, mind reviewing passing this along to ensure we aren't violating/pissing anyone off: https://github.com/nodegit/nodegit/issues/69
16:22 < neeky> but I forgot I use express routing heavily, so I'll keep express around for a while ;)
16:22 < neeky> so I'll stick with express view renders
16:23 < oren> niggler: intereting. so u'll x = require('./index.js');  x(1)  but u can also x.log(1) ? 
16:23 < niggler> yep oren 
16:23 < niggler> pretty neat
16:23 < Seventoes> oren: x(1) is calling the function 'x', x.log(1) is accessing the 'log' member of the 'x' object
16:23 < Seventoes> (functions are objects too)
16:24 < oren> Seventoes: interesting. never thought of doing that
16:24 < oren> neeky: do u have a git repo i can look at?
16:25 < neeky> no, that snippet is from a private repo - I should probably publish that somewhere - it's not super unique
16:25 < oren> neeky: i get it now
16:25 < oren> neeky: but.....
16:26 < neeky> so, in app.js, where I want my routes, I just require('./routes')
16:26 < oren> in line 16, u require each route - require('./' + route)(app);
16:26 < oren> but where do u store those functions?
16:26 < oren> u should have an array of functions somewhere
16:26 < oren> and another function called get(name) to access them
16:27 < oren> https://github.com/oren/groups/blob/master/db/index.js
16:27 < oren> neeky: ^
16:27 < neeky> ok, so at line 5, I build an array of file names out of the path
16:27 < neeky> and then line 16 requires each file + '.js' in path
16:28 < oren> neeky: right, but don't u need to assign those functions into some variables that u'll be able to call later?
16:29 < root_____> https://play.google.com/store/apps/details?id=com.fish.Fishbowl
16:29 < oren> neeky: https://github.com/oren/groups/blob/master/db/index.js#L44
16:29 < neeky> and here's what a route.js  looks like: https://gist.github.com/nikmartin/f4b003c78c2801514b6e
16:30 < neeky> so each function included is a self contained route in the application
16:30 < durango> What do people in here recommend for web scraping (a single page?)
16:30 < neeky> each route handles all the operations for that REST resource
16:30 < durango> Like what's the difference between node.io and cheerio + request?
16:31 < neeky> that route will also handle the app.post, app.put, and app.delete
16:31 < oren> durango: https://github.com/oren/daily-node-email/blob/master/modules/modules.md
16:31 < neeky> for each route
16:32 < oren> neeky: staring
16:32 < oren> one sec
16:32 < durango> oren: so I guess unix philosophy is the only diff? :P
16:33 < oren> durango: request is making http requests for u. it doesn't have a way to extract information from the DOM
16:33 < neeky> oren, I updated the second gist: https://gist.github.com/nikmartin/f4b003c78c2801514b6e
16:33 < neeky> to show more route verbs
16:34 < durango> oren: hence the "cheerio" part :P
16:34 < durango> node.io vs cheerio *****+**** request
16:35 < neeky> so ./routes/index.js build a list of all *.js files in the same dir, and then requires them, passing them the express object
16:35 < neeky> and in my main app.js, I just require('./routes') down below all my other middleware
16:36 < neeky> so when I add a new route, a simple reload adds the new route
16:36 < neeky> it's purely a way to be obsessive about application structure and management
16:37 < locy> sorry i got dc, didnt see if there was answer
16:37 < neeky> BUT when I do a version bump of the API, i can now have ./routes and ./routes1, ./routes2, etc
16:37 < locy> Hello, i want to make a nodejs intranet kind of thing where each nodejs process creates its own unique id which could be used as an address within a nodejs network , any kind of thing already exist?
16:38 < neeky> locy, im guessing no one has a clue what you asked ;)
16:38 < neeky> so, yopu want a bunch of node.js processes runnning across a cluster of michines inside a lan?
16:38 < neeky> and they talk to each other?
16:39 < locy> yeap, on sifferent servers 
16:39 < locy> different*
16:39 < fkm> What's with the unique IDs?
16:39 < neeky> that's a classic example of shared state
16:39 < locy> so if i want to make a request to the dbnode process i can make it from any node
16:39 < neeky> and unique is bad
16:40 < neeky> you want statelessness
16:40 < durango> Anyone know of a good fuzzy search npm?
16:40 < neeky> then you DONT want state
16:41 < neeky> so each node process really doesn't need to know about the other machines
16:41 < locy> im happy to give each node process its own id, but how to route?
16:41 < neeky> so node processes can come and go without affecting other node processes
16:41 < handyman> anyone know how to fix permissions problems after install module with sudo
16:42 < neeky> with a routing proxy server
16:42 < handyman> on mac
16:42 < locy> at this stage the only way they know each other is though a tcp
16:42 < neeky> locy, why do they NEED to know about each other?
16:42 < kenperkins> isaacs what does npmjs use for search?
16:43 < baked> anyone implemented knockout with jade template engine?
16:43 < neeky> you want http://servername.com to resolve to whoever is capable of handling the request?
16:43 <@isaacs> kenperkins: elasticsearch
16:43 < neeky> where whoever is any node in the cluster/
16:43 < kenperkins> isaacs: did you guys ever consider riak with it's integrated search?
16:43 <@isaacs> kenperkins: nope.
16:43 <@isaacs> kenperkins: the data's not in riak
16:43 < kenperkins> (I used riak with search for 2 years while at clipboard)
16:44 < kenperkins> I know I was saying in lieu of mongo/elastic search
16:44 <@isaacs> kenperkins: and elasticsearch has a really nice interface
16:44 <@isaacs> kenperkins: i'm not using mongo, either
16:44 < neeky> locy, I do that with a load balancing proxy server
16:44 <@isaacs> kenperkins: the registry is a couchdb
16:44 < kenperkins> sorry yes couch
16:44 < kenperkins> I always confuse couch/mongo for some reason :(
16:44 < neeky> but the really cheap and dirty way to do it is round-robin dns
16:44 < oren> neeky: sorry, had to talk to some humens. let me read everything i missed
16:44 < locy> to be able to send msgs or dnode functions to each other by name at this stage there is one database node process, theres are multiple processors to do some "heavy" work then they need to insert info into the db
16:44 < locy> neeky, sounds right
16:45 < neeky> do the nodes need to split up work to do?
16:45 < neeky> that's a bit harder
16:45 <@isaacs> kenperkins: switching from couchdb to riak would be a tremendous amount of work
16:45 <@isaacs> kenperkins: for virtually no benefit.
16:45 <@isaacs> kenperkins: the registry is not much data.
16:45 < kenperkins> I can only imagine, not advocating it btw
16:45 < kenperkins> was only curious
16:45 <@isaacs> kenperkins: minus the tarballs, it's like 150mb
16:45 <@isaacs> maybe as much as 300mb
16:46 < neeky> you want a clustered map/reduce function?
16:46 < kenperkins> my experience with riak (using it for both data and search) was that if we needed to rebuild the index for some reason, that fundamentally impacted normal search scenarios
16:46 < neeky> like hadoop?
16:46 < kenperkins> err
16:46 < kenperkins> normal kv scenarios rather
16:47 < neeky> locy, for just high availability a load balancer will work
16:48 < neeky> for clustered, distributed processing, I'm not sure what exists for node, but that sounds like hadoop to me
16:48 < oren> neeky: got your approach. u pass app into each file
16:48 < locy> whats a good load balancer in npm?
16:48 < locy> thanks
16:48 < neeky> oren, yep
16:48 < kenperkins> locy: what's wrong with haproxy/nginx?
16:48 < neeky> so each route has access to express route middleware
16:48 < oren> neeky: smart cookie
16:49 < neeky> ;) lazy 
16:49 < oren> neeky: so i am not a big fan of frameworks and do everything without them. the problem is the middlewares are not working nicely with my approach so i need to convert stuff to regular funcitons.
16:50 < neeky> locy, on a single server with multiple node.js workers: http://nodejs.org/api/cluster.html
16:50 < locy> multiple
16:50 < locy> multiple servers 
16:50 < neeky> node has clustering built in for multi-core processing - but I thinks that more IPC than RPC
16:51 < oren> for example, instead of cookieParser and cookieSession i need to write a function that encrypt the cookie and sends to the clients.
16:51 < neeky> multiple servers, haproxy
16:52 < neeky> oren, I try to do the same, but from a busines case I weigh time against $$$, and sometimes throw in the towel and move on
16:52 < neeky> using your example, what's specifically not working with cookies?
16:52 < neeky> i just battled cookies myself is why I'm asking
16:53 < neeky> if you look at connect's source for cookie Session, it's 75 loc
16:53 < neeky> so you can always just copy connect and use it directly in your code
16:53 < neeky> it is open source ;)
16:54 < neeky> cookieParser is < 30 loc
16:54 < oren> http://www.senchalabs.org/connect/cookieSession.html
16:54 < oren> i don't understand what's going on there ):
16:54 < oren> not smart enough?
16:55 < oren> what's the high-level idea? encrypt a cookie and send to client?
16:55 < neeky> oren, back up: do you understand how HTTP cookies work?
16:55 < neeky> they are really really stupid
16:55 < oren> neeky: i hope so. server get a request.
16:55 < oren> if no cookie, 
16:55 < neeky> just asking, that's the first step
16:56 < oren> it creates it with some data (unique id maybe) and encrypt it
16:56 < oren> and send back in the header
16:56 < oren> the browser send this cookie in the header as well
16:56 < neeky> in the case of session cookies though, you are just sending the sid AS the cookie value
16:56 < oren> and in some magical way (maybe using a secret) the server decrypt the cookie
16:57 < oren> what's sid AS
16:57 < neeky> the sid = session id AS is as with EMPHASIS
16:57 < neeky> so the client cookie only holds the session id itself
16:58 < neeky> lets go to connect on github so we can havel line numbers
16:58 < neeky> https://github.com/senchalabs/connect/blob/master/lib/middleware/cookieSession.js
16:59 < oren> ok
17:01 < oren> so the each cookie has some unique id and i only store that id in it.
17:01 < neeky> first, secue cookies only get sent if the connection is secure (line 99)
17:01 < neeky> and the cookie is just signed(hashed) and you send the HASH of the 24 bit session id to the client
17:02 < neeky> the secret you set is used to hash the sid, then send the hash to the client
17:02 < neeky> at 106, you check the sid's hash against the cookie's value
17:02 < neeky> if they match, client has not modified the cookie
17:03 < neeky> so you can trust what's in the session on the server
17:03 < neeky> are you using  a session store?
17:03 < neeky> hang on, wife can't print, brb
17:06 < oren> neeky: by session store u mean a db?
17:06 < oren> neeky: i would rather not
17:06 < oren> neeky: i think it's more scalable to avoid it.
17:07 < Seventoes> where are you storing your sessions then? 
17:07 < Seventoes> (coming into this without context so forgive me if i ask a bad question :P )
17:08 < sungeo> hi, does anyone know how to install a module manually?
17:08 < oren> Seventoes: i am just trying to build apps without connect and find it a bit hard since middlewares not playing super nice without connect.
17:08 < oren> Seventoes: so i am looking for ways to replace the cookies-related middlewares with a simple function.
17:09 < oren> or at least that was my plan. and neeky gives me nice overview of how cookies works.
17:09 < Seventoes> if you intend to scale you will need a central place to store the sessions on the backend
17:09 < Seventoes> otherwise people will start losing sessions if they get load balanced to a different server
17:10 < shwaiil> hi!
17:10 < oren> Seventoes: oh. interesting
17:11 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:11 < Seventoes> so just store the session state and ID in a store somewhere and set the client's cookie to that session id
17:12 < shwaiil> Q: I've been trying to learn nodejs for a couple of times, but I usually end up not having the time. I've found about sails.js and derby.js! Is Sails.Js the same as derby.Js ? tks!
17:12 < Seventoes> i know know what either of those things are, but if they were the same thing why would they be named differently? :P
17:13 < shwaiil> * instead of using angular / ember clientside, then laravel server side. Is something like sailsJs or DerbyJs a better solution ?!
17:13 < Seventoes> from what i've experienced so far, all frameworks are fine
17:13 < Seventoes> pick the one that works best with your development processes
17:13 < shwaiil> Seventoes: tks for looking! what I mean is serve, the same propouse ?
17:13 < Seventoes> can't speak to that, i'm not familiar with either :)
17:17 <@MI6> joyent/node: isaacs created branch nodeconf-2013 - http://git.io/6Zo84g
17:20 <@MI6> joyent/libuv: isaacs created tag v0.11.5 - http://git.io/Kuh2fw
17:21 <@MI6> joyent/libuv: isaacs master * 652d5c9 : Now working on v0.11.6 (+1 more commits) - http://git.io/3OxbZw
17:22 < oren> Seventoes: ok. thanks a lot
17:30 < neeky> am I back?
17:30 < neeky> oren, you there?
17:33 < jas-> Anyone experienced with express.js middlware redirects outside of an anonymous function?
17:34 < jdelgado> Anyone use the couchbase npm module?
17:34 < jdelgado> jas-: In what reguard?
17:36 < jas-> jdelgado: app.use('/route', middlWare, template) function middlWare(req, res, next) { if (req.session.var != db_var) { res.redirect('/url') }
17:36 < jas-> }
17:38 < serapath> hi, could someone tell me the difference between 'exports' and 'module.exports' ?
17:38 < jdelgado> jas-: I don't think you can use app.use like that? You have to do app.get('/route', middleware); then on the middleware you can do that? If that answers your question?
17:39 < jdelgado> jas-: Actually you can, don't listen to me - just looked at docs.
17:39 < serapath> like when i do 'module.exports = function() {};' it works, but when i do 'exports = function() {};' it complains. but in a router file, i use 'exports.getlogin = function() {};' which works too
17:39 < neeky> serapath, :http://www.hacksparrow.com/node-js-exports-vs-module-exports.html
17:40 < serapath> cool thx :-)
17:40 < neeky> better explanantion than anyone can give here
17:40 < jdelgado> ^
17:41 < daslicht> :)
17:42 < neeky> oren, to give a super short answer to your issue of wanting to eliminate dependencies, a session is a store
17:42 < neeky> a cookie is, well, a cookie
17:42 < teadict> a cookie is yummy
17:43 < neeky> in pure node, you send a cookie with response.setHeader
17:43 < neeky> if you generate a uuid, and send that uuid as a cookie
17:44 < neeky> then in a database have a table of sessions, where th indes is that uuid, you have just created sessions
17:45 < neeky> now the issue is on the client, what if I take cookievalue 1234, and change it to 1235, to get access to some otehr session?
17:45 < teadict> add sockets and you've got real time session check
17:45 < neeky> that's why you sign the cookie
17:45 < teadict> neeky: who you talking to?
17:45 < teadict> or is this a speech?
17:45 < neeky> oren, 
17:45 < teadict> oh
17:45 < neeky> but he's not listening, but i have to go, so maybe he can scrol back
17:46 < neeky> this is a lecture on sessions in pure node ;)
17:46 < neeky> so I take sid 1234, and hash it with my secret, then send the hash as the cookie, not the sid
17:46 < teadict> so you sign them, then check the sign is in the same record than the id
17:46 < neeky> BOOM! secure cookies!
17:46 < neeky> yup
17:47 < teadict> and add expiration if you feel like
17:47 < teadict> or not, who cares
17:47 < neeky> it really is pretty easy - just make sure the expirationis eiterh session, or give it a time
17:47 < neeky> and when you 'log out' a user, delete the session from the db
17:47 < neeky> boom, session gone, user gone
17:48 < neeky> session cookie to the browser means when you close this browser, your session is gone
17:48 < neeky> and hashes are a core node feature in crypt
17:49 < neeky> now cookie parser is more middleware you'll need to replace
17:49 <@MI6> joyent/node: isaacs master * 4bc024d : uv: Upgrade to v0.11.5 - http://git.io/Mg4byA
17:50 < neeky> so, request.headers.cookie.split(';') gives you an array of cookie tuples
17:51 < neeky> and foreach.cookie.split('=') gives you each tuple
17:51 < neeky> that code has 0% change of working, it's pseudocode
17:52 < squeeks> maybe not as javascript. as python, however...
17:52 < neeky> so when oren come back, tell him to scroll back to get my superb college level course on node cookies
17:53 < neeky> and sessions
17:54 < jammsen> Which database uses notifications, which i can use to display via node.js new articles without reloading?
17:55 <@MI6> joyent/node: Miroslav Bajtos master * c16963b : src: break on uncaught exception - http://git.io/3sTgtA
18:04 <@MI6> joyent/node: isaacs created branch v0.11.3-release - http://git.io/OzdrAQ
18:06 < shinta42> https://sekati.com/etc/install-nodejs-on-debian-squeeze what happen if i dont put --openssl-libpath=/usr/lib/ssl after .confgiure?
18:06 <@MI6> joyent/node: isaacs v0.11.3-release * 531f886 : 2013.06.26, Version 0.11.3 (Unstable) - http://git.io/E9dSgQ
18:07 < jas-> shinta42: It should use the current contents of $PATH to load OpenSSL (generally in /usr/local)
18:07 < shinta42> jas-:is there a way to check if SSL is loaded or not?
18:09 < jas-> shinta42: Run the following from a command prompt: node tests/simple/test-crypto.js
18:10 < jammsen> Which database uses notifications, which i can use to display via node.js new articles without reloading?
18:10 < shinta42> jas-:done...returned nothing...
18:10 < radu> redis pub/sub
18:10 < jas-> shinta42: If you run into errors then node didn't statically link to an existing OpenSSL library. This is however very unlikely considering the debian distro comes with OpenSSL already installed.
18:11 < radu> but you need something like socket.io to emit to the browser
18:11 < jas-> shinta42: If you are still unsure you can always examine the node binary internals to ensure it contains references to various OpenSSL functions with the objdump or nm tools
18:11 < jas-> shinta42: and that means all tests passed
18:12 < shinta42> jas-:thats beyond my ability..i am just a noob
18:13 < jas-> shinta42: That is why I suggested the accompanying test cases first
18:13 < shinta42> jas-:i did node test-crypto.js...it just made a return with no output
18:14 < jas-> shinta42: Yeah which means no exceptions were raised and all assertions succeeded.
18:14 < shinta42> jas-:ok tks
18:14 < jas-> shinta42: np
18:16 <@MI6> joyent/node: isaacs v0.11.3-release * 38c0c47 : 2013.06.26, Version 0.11.3 (Unstable) - http://git.io/kMSzxQ
18:21 < pinvok3> Hey, I'm using typescript with node. I try to use locomotive, so I have to create a controller. But I cannot use module.exports since module is a predefined keyword. Any Idea how can I get along with this?
18:24 < niggler> pinvok3 #typescript
18:26 < pinvok3> niggler: Thanks. I just found out PHPStorm just marks module. as an error. But Typescript compiles fine 
18:26 < pinvok3> meh
18:26 <@MI6> joyent/node: isaacs nodeconf-2013 * 7c17ca2 : NodeConf 2013: exercize extra credit (+3 more commits) - http://git.io/4_ITIA
18:26 < niggler> ah
18:32 < niggler> what's "Error: boob"?
18:36 < Petrogad> I'm trying to understand the best way to find where slowness occurs in my Express app. I'm running jmeter at it and see things start to stack up from 31ms to 350ms.. but don't really know how to isolate the particular part of the route.  Are there any suggestions of what you've done that might help diagnose the issue?
18:36 < neeky> brianc, BART is not a terrible way to move about SF
18:38 < neeky> looks like the Embarcadero stop is 2.5 blocks from joyent
18:39 < neeky> and BART has bike rentals too
18:39 <@mbalho> it does?
18:39 < diogogmt> which lib could I use to dump nested json objects in a prettified way? If i use JSON.stringfy it just dumps the whole object without any indentation 
18:40 <@mbalho> diogogmt: JSON.stringify(obj, null, ' ')
18:40 <@mbalho> diogogmt: or read the docs https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify
18:41 < diogogmt> mbalho: great, thanks
18:50 < brianc> neeky: thanks, i was thinking that's what I'd try
18:51 < brianc> just wanted to make sure
18:51 < brianc> if someone was flying to austin they  might think "I'll just take a bus to down town"
18:51 < brianc> and that would take them 4 hours
18:51 < neeky> heh
18:53 < brettlangdon> Petrogad, you can try using a profiler, maybe something like http://www.nodetime.com
18:54 < brianc> dunno what the embarcadero is
18:55 < neeky> its a BART station - SFO to embarcadero is 30 mins
18:56 < neeky> http://www.bart.gov/schedules/quickplanner.aspx?orig=SFIA&dest=EMBR&type=departure&time=now&date=today
18:56 < brianc> neeky: awesome!
18:56 < brianc> you going to nodeconf?
18:56 < neeky> nah, i'm not able this year
18:58 < oren> neeky: thanks. i'll scroll up tonight! awesome
18:59  * neeky wonders why his brain can not grok regular expressions
19:00 < paulkon> neeky: just spend a couple of hours memorzing the regex symbols and practice reading them and make a sentence out of it
19:00  * neeky sees '/{([^}]*)}/g' and his brain sees 'blarggleblargelhotdog'
19:01 < sungeo> hello, can someone help me with a question about zombie.js?
19:01 < neeky> ^ is start, * is 'any', and () groups, then brrrrrr
19:02 < paulkon> neeky: http://gskinner.com/RegExr/
19:02 < sungeo> hello, can someone help me with a question about zombie.js?
19:03  * neeky googles zombie.js 
19:03 < neeky> noooop
19:04 < niggler> sungeo I'm an expert in vapor.js
19:05 < neeky> but i am an expert in IPABeer.js
19:07 < serapath> whats wrong with this_file.js:  var bird = {}; bird.name = functon(){console.log("Tweety");}; exports = bird;
19:07 < serapath> start_file.js: var bird = require('this_file.js'); bird.name();
19:07 < Vested> I'd guess "functon" is the problem.
19:07 < serapath> it tells me that bird has no method name
19:08 < serapath> why?
19:09 < statu_> serapath, have you written functon? or function? 
19:09 < statu_> serapath, in the code, I mean
19:09 < serapath> function
19:09 < serapath> srz
19:09 < serapath> sry
19:10 < Seventoes> "Page execution time was 1337.15 ms."
19:10 < Seventoes> awww yeee
19:10 < statu_> serapath, I think you have to write bird.exports.name = function() {..}
19:11 < serapath> looks strange, but i'll try
19:11 < mscdex> the bird is the word
19:11 < serapath> no, doesnt work
19:11 < serapath> would have been suprised if it did
19:12 < serapath> what? :P
19:13 < Technodrome> how long did it take you guys to become real good with js?
19:14 < mscdex> over 9000..... minutes
19:14 < statu_> hahaha
19:14  * neeky wonders if he's 'real good' with js
19:15  * neeky is pretty sure the answer is no
19:16 < theCode> took me about 5 years, not THAT good yet
19:17 < serapath> define 'real good'
19:18 < HeartOfAce> JS as a language isn't that bad or complex, but there's still some magic that shows up that makes me go wat. I don't know how to do more complex stuff with the DOM without using jQuery
19:18 < statu_> serapath, I think the problem is when you do var bird = {} and later exports = bird
19:18 < _6a68> Technodrome: two years at a front-endy startup with a LOT of extracurricular reading. YMMV
19:18 < statu_> serapath, if you do var bird = exports and bird.name = function()... it works
19:19 < _6a68> HeartOfAce: what sort of stuff?
19:19 < serapath> thing is, i guess its NOT POSSIBLE to assign something to 'exports'
19:19 < serapath> tried
19:20 < HeartOfAce> I don't know how to use selectors other that getElementById lol
19:20 < HeartOfAce> I've never really bothered trying out stuff like that
19:21 < jdelgado> Anyone use couchbase in here?
19:21 < thomblake> serapath: you can assign something to exports, but exports had previously held a reference to module.exports, and now you're just throwing that reference away.
19:21 < serapath> module.exports.name = 'foo'; /* is cool */ exports.name = 'foo'; /*is cool*/ module.exports = 'foo'; /*is cool*/ exports = 'foor'; //  (╯°□°）╯︵ ┻━┻)
19:21 < serapath> ah ok
19:21 < serapath> makes sense
19:21 < thomblake> serapath: Just use module.exports, which always does what you want.
19:22 < serapath> yes
19:22 < serapath> thx
19:22 < serapath> is 'exports' deprecated?
19:22 < thomblake> I don't think so.  It should be, as far as I'm concerned.
19:22 < serapath> maybe its not because its shorter to type
19:22 < _6a68> HeartOfAce: writing code, reading code, and reading books/blog posts can help you get new ideas :-)
19:22 < serapath> why not make exports behave like module.exports and throw module.exports away? :P
19:22 < thomblake> I've seen this confusion dozens of times now.
19:22 < _6a68> thomblake++
19:23 < thomblake> serapath: because javascript.
19:23 < serapath> k
19:24 < HeartOfAce> _6a68: yeah, I try to read a lot books and stuff, but studying full time takes up a lot of my time TT
19:24 < statu_> serapath, I didn't get it. Which is the correct form?
19:25 < statu_> bird.exports.name = function()..?
19:25 < ankit_bisht> how to send an image through a websocket server?
19:25 < serapath> statu_ just do not use 'exports' and instead always use 'module.exports' ...saves u headaches
19:25 < statu_> ok
19:25 < serapath> because exports is predefined constant
19:25 < serapath> ah no
19:25 < serapath> sry
19:25 < _6a68> HeartOfAce: IMO the wrox book by nicholas zakas covers the basics really well for front-end
19:25 < serapath> because exports is not the real thing
19:25 < serapath> :P
19:26 < statu_> haha
19:26 < statu_> ok, thnks!
19:26 < serapath> like when u assign something to module.exports, it will be used
19:26 < HeartOfAce> thanks, I'll check it out :P
19:26 < serapath> when u assign something to exports, it wont
19:26 < ankit_bisht> please help me too
19:26 < serapath> there is an invisible definition at the top of all your files that should go like this: 'var exports = module.exports'
19:27 < serapath> so now u can use: exports.name = 'foo'  which will has the same effect as module.exports = 'foo'
19:27 < statu_> serapath, thanks, got it :D
19:27 < serapath> but if u do  'exports = 'blarg'
19:27 < serapath> .. k
19:27 < serapath> :-)
19:30 < ankit_bisht> please tell me how to send binary data from a websocket(ws) server
19:39 < limsup> ankit_bisht: base64 encode it?
19:40 < limsup> ankit_bisht: Buffer([0, 1, 2,]).toString('base64')
19:41 < Technodrome> requirejs is so confusing 
19:41 < Technodrome> no joke 
19:42 < ankit_bisht> limsup: i am sending an image through an android client and i want to echo back it to client
19:42 < taterbase> Technodrome: what is confusing about it?
19:43 < Technodrome> its pretty confusing setting up all the config stuff
19:43 < taterbase> Yeah
19:43 < limsup> ankit_bisht: maybe you should use a POST request for that
19:43 < taterbase> Initial set up can be weird
19:43 < taterbase> Especially coming from common.js
19:43 < taterbase> But once it's set up it's pretty nice
19:43 < ankit_bisht> limsup: how can i check that the message comming is an image or string?
19:45 < limsup> *shrug*
19:45 < squeeks> check the magic number?
19:47 < ankit_bisht> limsup: i am using ws.send(message, {binary: true});          its working fine but i want to check if incoming message is binary or string??
19:47 < Seventoes> ankit_bisht: that sounds like something that needs to be done in your android application
19:47 < squeeks> like I said already, check the magic number.
19:47 < Seventoes> ankit_bisht: your application should be expecting this response, right?
19:48 < ankit_bisht> Seventoes: i just wanted to check if its binay or not
19:48 < Seventoes> ankit_bisht: why do you need to? if your application is expecting an image, you process it as an image
19:48 < squeeks> fine, don't listen to me.
19:49 < Seventoes> ankit_bisht: if you really think you need to, do as squeeks says. i can't really imagine an architecture that would require this though
19:50 < Technodrome> javascript is more complicated than Java
19:50 < Seventoes> wut
19:51 < ankit_bisht> Seventoes: its because i want to accept both string as well as an image and wanted to differentiate the sending proccess for both
19:51 < Technodrome> sevastos: Yup! 
19:52 < Seventoes> ankit_bisht: so make your response a json object and base64 encode the image if you need to send it
19:52 < Seventoes> assuming the rest of your API is json of course
19:56 < ankit_bisht> Seventoes: i am using ws instead of websocket on nodejs, so its quite difficult to check binary data, is there a way in ws?
19:57 < Seventoes> ankit_bisht: aren't you needing to perform this check on the android side?
19:58 < Seventoes> ankit_bisht: your responses would look like this: {success:true,type:'string',response:'blah'}
19:58 < Seventoes> or {success:true,type:'image',response:'BBBB=='}
20:24 < skoude> Hi! I'm new to node.js and starting to learn it.. One question about jade + angular js.. f I define an input box like: input(type='text', ng-model='yourName', placehokder='Insert your name')
20:25 < skoude> how do I get it updated to same index.jade page.. for example p HEllo #{yourName} does not work
20:31 < oren> there is a way to add bash autocompletion to npm - https://npmjs.org/doc/completion.html  how to pipe it into a file (or into my bash.rc) - . <(npm completion)
20:32 < oren> what does it even mean? - . <(npm completion)
20:33 < oren> i think i figure it out - npm completion output stuff that i can put into my bash.rc
20:38 < Industrial> Can do/store something per client with dnode? oh I guess just give the methods an identifier.
20:50 < neeky> and . <(npm completion) stuffs the output of that command into your ENV
20:55 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
20:55 < deanm> anyone familiar with using -Wl,-rpath linker flags on the mac?  I'm trying to make an extension that uses qt, but it works differently than on linux
20:55 < deanm> is there a node-gyp channel for native discussion
20:56 <@TooTallNate> deanm: no not really... this is the channel you're looking for
20:56 <@TooTallNate> deanm: so define "different", and what you're expecting
20:57 < deanm> TooTallNate: so on linux, when you use rpath in linker, it produces a library that knows about the right path to other used libraries.  for example, I'm linking to Qt, and on linux it is able to make use of rpath so that one doesn't have to export LD_LIBRARY_PATH if the libraries are installed in a different place
20:58 < deanm> in my case, the qt libraries are actually inside the node_modules dir for the package
20:58 < mu> I have a website that is generated using Grunt and Jade. I'd like to add a page with server-side scripting, but I'm not really sure how this is done or what my options are. I'm wondering if I should perhaps use a node.js-based server to accomplish this?
20:59 < deanm> TooTallNate: on linux, I use this in my bindings.gyp file: 'ldflags':  '-Wl,-rpath <(module_root_dir)/qt/lib'
20:59 < deanm> TooTallNate: but on the mac, those flags don't seem to work the same way
20:59 <@TooTallNate> deanm: ya i have something for you, one sec
21:00 <@TooTallNate> deanm: so you're using the latest version of node-gyp right?
21:00 < deanm> yeah
21:00 < deanm> TooTallNate: for reference, you can see everything here:  https://github.com/deanmao/node-chimera
21:01 <@TooTallNate> deanm: hmmm, that's weird because on osx i'm setting @rpath https://github.com/TooTallNate/node-gyp/blob/master/addon.gypi#L28
21:01 <@TooTallNate> which is supposed to make -rpath behave like linux more or less
21:02 < deanm> TooTallNate: I can try using your settings in the gyp file.  does DYLIB_INSTALL_NAME_BASE work the same way as -Wl,-rpath ?
21:02 <@TooTallNate> deanm: well the addon.gypi file always gets applied in node-gyp builds
21:02 <@TooTallNate> deanm: so you shouldn't have to copy over anything
21:02 <@TooTallNate> deanm: here's how I do it for node-vorbis https://github.com/TooTallNate/node-vorbis/blob/master/common.gypi#L19-L20
21:03 < deanm> TooTallNate: it could also be that when I compile qt, i choose to use -no-rpath in the ./configure.  this prevents the symbols from having a hard path with other qt libraries
21:03 < deanm> TooTallNate: but for some reason, it works in linux even with -no-rpath as long as I set the rpath in my gyp file
21:04 < deanm> TooTallNate: when I run "otool -L build/Release/chimera.node" it should show  that it is linked to the Qt library in my relative path right?
21:05 < deanm> TooTallNate: I'll try building your node-vorbis and running otool to see how it links up
21:06 <@TooTallNate> deanm: i see this https://gist.github.com/TooTallNate/95038ae368ed916186fd
21:06 <@TooTallNate> deanm: note that ogg.node and vorbis.node are in different directories, since the rpath specifies the ogg.node directory
21:08 < deanm> TooTallNate: when I run otool on mine, this is what it looks like:  https://gist.github.com/dean-m/5871688
21:08 < deanm> TooTallNate: the qt libraries don't have any path associated with it
21:10 < hackula> hey gang, I am having some trouble with a node install and wondering if anyone had any ideas.
21:11 < hackula> i am following the typical instructions here for ubuntu https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
21:11 <@TooTallNate> deanm: well mine uses a , after -rpath
21:11 <@TooTallNate> deanm: not sure if that's a big deal or not
21:11 < hackula> it all works until i get to 'sudo apt-get install nodejs'
21:11 <@TooTallNate> i.e. the -Wl,-rpath is all one argument
21:12 < hackula> then it hangs at "waiting for headers 0%" and eventually times out
21:13 < hackula> could chris lea's launchpad repo be down?
21:17 < deanm> hackula: yeah, it sounds like an apt-get issue to me
21:18 < deanm> hackula: just use tim caswell's nvm -- it's an easier way to use node
21:19 < jammsen> Which database uses notifications, which i can use to display via node.js new articles without reloading?
21:22 < sCoRpi> jammsen: do you mean you want to update the views on the clientside when a new record is inserted into the database?
21:23 < jammsen> sCoRpi: in the essence yes, but the database must emit an event that node can read, aka notifications
21:25 < squeeks> databases are "storage" mechanisms, not "messaging" mechanisms, unless you're using redis.
21:25 < sCoRpi> hmm
21:25 < sCoRpi> i think i cannot help you there
21:25 < sCoRpi> but if the database insertion is handled from the node-side aswell
21:26 < sCoRpi> you can just emit a global event using a node eventemitter
21:26 < sCoRpi> and then just listen to your custom events and propagate them to your connected clients
21:26 < squeeks> fine if you're one machine.
21:27 < sCoRpi> yeah of course
21:28 < sCoRpi> squeeks: with multiple machines
21:28 < sCoRpi> couldn't he just use two node servers?
21:28 < sCoRpi> one handling the clientupdates and one for the database
21:28 < sCoRpi> and have those two node server talk to each other?
21:29 < tim_smart> squeeks: redis ftw
21:29 < squeeks> or, you could sit down and read a few books on the basic concepts of RPC and some of the theory behind messaging systems.
21:29 < tim_smart> https://github.com/tim-smart/node-rev
21:29 < sCoRpi> basically node0 is the dbserver and node1 the client server and they have a constant socket connection open
21:29 < sCoRpi> so whenever an event on node0 happens it just gets pushed to node1
21:29 < tim_smart> I made that the other day
21:29 < tim_smart> Also job queues are really useful
21:31 < sCoRpi> i'm not really advanced with node
21:31 < sCoRpi> but just from a logical point of view
21:31 < sCoRpi> wouldn't redis be a tad slower than the direct connection?
21:31 < sCoRpi> it probably doesn't really matter, but just curious
21:31 < rossk> tim_smart: do you have any recommendations for nodejs job queues?
21:31 < tim_smart> rossk: tj did a redis one, I have also made one
21:32 < rossk> LearnBoost/kue?
21:32 < kenperkins> rossk: we did a really nice redis based generalized worker 
21:32 < tim_smart> rossk: http://learnboost.github.io/kue/
21:32 < squeeks> amqp, stomp, 0mq, beanstalk, redis, sqs….
21:32 < kenperkins> (at clipboard)
21:32 < rossk> tim_smart: ok, yeah, that's what we're playing with now
21:32 < rossk> pretty slick
21:32 < tim_smart> I also worked on https://github.com/tim-smart/node-rqueue
21:33 < kenperkins> does Kue support different workers?
21:33 < kenperkins> ah, I See, jobs.process(queueName...)
21:34 < rossk> heyya kenperkins
21:34 < squeeks> not impressed by kue.
21:36 < hackula> deanm: thanks
21:37 < tim_smart> rossk: substack also did dnode
21:38 < tim_smart> Not sure how distributed that is though
21:38 < kenperkins> i should extract and refactor our work-queue code to wrap kue
21:39 < rossk> thanks tim_smart
21:39 < chapel> rossk: Id say stay away from kue
21:39 < rossk> whys that chapel
21:39 < chapel> it isn't bad, but tj doesn't actively develop on it
21:39 < chapel> he doesn't even use it
21:39 < squeeks> not to mention it's biggest flaw.
21:40 < chapel> at least the last time I talked to him about it
21:40 < rossk> chapel: yes, he said that last week when I poked him about it
21:40 < rossk> squeeks: biggest flaw is?
21:41 < chapel> rossk: Ive used it quite a bit, and it has a lot of show stopping bugs that were quite annoying to deal with
21:41 < squeeks> it's for, and almost exclusively for node. kind of defeats the purpose of having a queueing system that kind of locks you into a homogenous environment.
21:41 < chapel> but again, I haven't used it in a few months
21:42 < rossk> alright -- thanks for the feedback everyone
21:43 < squeeks> https://npmjs.org/search?q=protobuf promising.
21:43 < tim_smart> squeeks: Well pretty much all languages have redis clients, not hard to interact with any redis queue
21:43 < radu> redis is awesome!! try it 
21:44 < squeeks> I did, left it when it shat the bed after feeding it a few million lumps of things, wasn't up for tuning it.
21:45 < tim_smart> squeeks: Only time it screwed up for me is when it ran out of memory, which is my problem
21:45 < tim_smart> Even then, it didn't lose any previous data, just didn't accept more ;p
21:45 < squeeks> err, yeah, that's happened to me. I want to stuff a dataset a few times bigger than total ram in. rabbitmq, activemq spill onto disk and are tuneable for that sort of thing.
21:53 < Hochmeister> how I give a uniquie identifyer to a result of an aggregation pipeline? I want each group to have a unique identifier that I can pass to client JavaScript. http://pastebin.com/smC1FyJ0
21:53 < tim_smart> Hochmeister: uuid v4?
21:53 < Hochmeister> tim_smart: from mongo cli?
21:54 < tim_smart> Hochmeister: https://github.com/broofa/node-uuid
21:55 < tim_smart> Hochmeister: Oh, didn't read your gist
21:56 < Hochmeister> tim_smart: that's cool and all but I don't think that's what I'm looking for
21:58 < aleray> hi, I have the following code: http://dpaste.com/1272031/ I would like to populate my trackpoints start and end attributes using mongo 3.6. Any idea?
21:58 < Hochmeister> the problem is, in my real app (not the simplified example) I'm grouping by a url. Then in my JavaScript I'm building DOM elements using that _id value that comes back from the aggregation pipeline. However, I cannot decorate links and such with the url value (it also gets injected into the window.location.hash). I want to use some obfuscation here...
21:59 < Hochmeister> damn, here I thought I was on #mongodb
22:09 < FunnyLookinHat> Anyone here used the ssh2 npm module ?  I can't seem to get it to dump the output from a connection.exec() 
22:12 < rossk> hey FunnyLookinHat
22:12 < FunnyLookinHat> rossk, geez, you're everywhere :D
22:12 < rossk> are you doing a stream.on('data', ?
22:12 < FunnyLookinHat> I have a feeling exec() isn't working correctly, gonna try shell() w/ a stream instead
22:12 < FunnyLookinHat> Yeah
22:12 < rossk> and you've got no data from that?
22:13 < FunnyLookinHat> Nope  :-/
22:13 < FunnyLookinHat> Literally copied the example... go figure.
22:13 < FunnyLookinHat> I mean - running exec('touch somefile') shows up - but I can't get any response back
22:17 < tim_smart> FunnyLookinHat: conn.exec('touch somefile', function (s) { s.pipe(process.stdout, { end : false }) })
22:17 < tim_smart> You doing something like that?
22:18 < tim_smart> I forgot the error argument though
22:18 < FunnyLookinHat> tim_smart, close - doing more or less the "uptime" example from this, but with "more filename" - https://github.com/mscdex/ssh2
22:18 < FunnyLookinHat> I've got it to work if I use a shell() and then write to the stream
22:18 < Zaxnyd> how would an app+api typically handle account creation/registration?
22:19 < tim_smart> FunnyLookinHat: Good luck then, I'm going back to work ;)
22:20 < Zaxnyd> just POST to /users?
22:21 < FunnyLookinHat> Zaxnyd, just depends on how you want to structure... but traditional REST is to POST for creation, PUT for update, GET for read, etc.
22:21 < FunnyLookinHat> I personally prefer to use use-case specific end-points... i.e. /users/create /users/update etc.
22:21 < Zaxnyd> right, but most endpoints would require authentication.  i suppose I'd just open that up?
22:22 < Zaxnyd> allow nonauthenticated posting to the users endpoint
22:22 < Zaxnyd> and consider it a registration if there isn't existing authorization
22:22 < rossk> we separate registration from account-creation
22:23 < rossk> so admins can post to /users to create an account
22:23 < rossk> but joe-schmoe user ends up doing a post to /signup
22:23 < Zaxnyd> I see
22:24 < johnca|home> Hello.  Should I invoke my express app via forever or should I be using something more uber?
22:24 < Zaxnyd> seems a bit of a detraction from pure REST (which I'm not necessarily opposed to)
22:24 < Zaxnyd> rossk
22:24 < rossk> Zaxnyd: true
22:24 < rossk> and pure rest would probably just be a post to /users
22:25 < rossk> and if no session/auth, then its a registration
22:25 < Zaxnyd> that makes sense
22:25 < Zaxnyd> I think I like that
22:30 < neeky> how do a i make a module that if also run as a node app itself, returns a glob of text
22:31 < neeky> as in writes to sddout if run standalone, but if required, exports a function
22:36 < ankit_bisht> in websocket with nodejs, how to check if the message coming is binary or not??
22:36 < someprimetime_> working on a commenting system… thoughts on nesting 1 reply deep vs no nesting and taking a youtube approach?
22:36 < someprimetime_> I kind of like the youtube approach because if I nest 1 level deep Parent > child and I am the parent and reply to the child, where does that go?
22:37 <@xyxne> solution: no comments
22:38 < someprimetime_> psh
22:38 < radu> @someprimetime_ all comments should have a parent reference (either null or an id). If the parent replies to the child then that comment will have the same upper reference as the child
22:39 < someprimetime_> that's not #tech #web2.0 bro
22:39 < someprimetime_> radu: i do that currently… http://pastebin.com/J7rkL5tY
22:39 < someprimetime_> that's my schema
22:39 < someprimetime_> but I mean visually showing them
22:40 < someprimetime_> right now I have nesting 1 level deep, but I don't support nesting further than that because it's kind of a PITA and I think youtube has an easy solution
22:40 < someprimetime_> to show 1 level and then if it's a child reply, have a link to show the comment and prepend it above that child
22:40 < objectivec123> Simple question.. I'm having trouble parsing this json: http://campbx.com/api/xticker.php Using the request module. Console.log(body) shows the correct thing but when I console.log(body['Last Trade'] it's undefined. Any ideas?
22:41 < radu> https://gist.github.com/samsonradu/fb74ab95d9ca3803c24d
22:42 < neeky> objectivec123, spaces are illegal in json, no?
22:42 < objectivec123> yeah its a crappy api
22:43 < neeky> is that a real API?
22:43 < objectivec123> depends what you mean by real.. it's a legit site
22:43 < neeky> well, anyway: console.log(body.Last\ Trade
22:43 < neeky> but that will never work
22:44 < neeky> at best thats a string of text
22:44 < objectivec123> body.Last\ Trade??
22:45 < neeky> or console.log(body.Last_Trade) if it was actual json
22:45 < neeky> yeah, that wont work
22:45 < objectivec123> ok its working with body.['Last\ Trade'];
22:45 < objectivec123> body['Last\ Trade] *
22:46 < neeky> thats what I mean
22:46 < rossk> neeky: you could also just strip spaces from the string then parse
22:46 < rossk> non-ideal.. they should fix their API
22:46 < ankit_bisht> how to check if the message coming is binary or not in websocket with nodejs??
22:46 < neeky> rossk, true, but only ssome spaces :)
22:47 < neeky> which spaces? who knows
22:49 < objectivec123> what's a good way to call a function on a set interval? recursion with a sleep?
22:49 < objectivec123> I want to poll a bunch of apis every few seconds
22:50 < rossk> objectivec123: http://nodejs.org/docs/v0.6.1/api/timers.html
22:51 < rossk> yikes, that's an old link, but setTimeout is your friend
22:51 < rossk> better: http://nodejs.org/api/timers.html
22:51 < rossk> could also use setInterval
22:51 < pandark_> why not setInterval ?
22:52 < pandark_> ^^
22:52 < rossk> :D
22:52 < ankit_bisht> please help me out anyone?
22:52 < rossk> sorry ankit_bisht, never worked with websockets
22:53 < squeeks> ankit_bisht: I've told you enough times already.
22:54 < ankit_bisht> squeeks: nothing helped
22:54 < squeeks> wat
22:54 < ankit_bisht> squeeks: i have new problem
22:54 < squeeks> wat
22:55 < ankit_bisht> squeeks: i just wanted to check if the incoming message is binary or not
22:55 < squeeks> yeah and I told you how.
22:55 < neeky> ankit_bisht, if your problem is: how to check if the message coming is binary or not in websocket with nodejs??
22:55 < neeky> then squeeks gave you the answer 4 hours ago :)
22:56 < ankit_bisht> neeky: no that didn't worked in my case
22:56 < squeeks> protip: what I suggested is what web browsers do.
22:56 < ankit_bisht> squeeks: what type of conditions i have to apply for checking??
22:57 < fostah> hey has anyone ever found a way to alter the TCP socket options SOL_IP and IP_TRANSPARENT in node? It seems like its not possible without hacking the source
22:57 < squeeks> grab first 4-6 bytes, check against known magic values.
22:57 < squeeks> tadaa.
22:59 < ankit_bisht> squeeks , neeky : I don't wanted to send binary, I just needed to check if its an image??
22:59 < squeeks> If you're not going to listen, leave.
22:59 < neeky> squeeks has told you 50 times:
22:59 < neeky> you get data. you look at the 1st 2 bytes of data
22:59 < _6a68> neeky | squeeks: I just used this meme in here yesterday. http://www.quickmeme.com/meme/358vhg/
22:59 < _6a68> seems apt
23:00 < neeky> the first 2 bytes of data in a binary file is a 'magic number'
23:00 < squeeks> "foreign".
23:00 < squeeks> _6a68: not apt, but instead said image reminds me of http://bash.org/?142934 this.
23:01 < neeky> you need a list of magic numbers to look up from
23:01 < _6a68> neeky: perhaps you want to refer ankit_bisht to http://en.wikipedia.org/wiki/Magic_number_(programming)
23:01 < squeeks> or lmgtfy.
23:01 < squeeks> dropping search terms like skrillex drops the bass.
23:01 < neeky> ankit_bisht, google "Magic Numbers"
23:01 < _6a68> squeeks: heh
23:02 < ankit_bisht> neeky: ok i am looking for that, thanx
23:03 < squeeks> neeky: you need more than the first 2, 6 is arguably better.
23:03 < squeeks> "GIF89a" vs "GIF87a", close but no cigar.
23:03 < squeeks> 2 bytes will only get you "JF" and not "JFIF".
23:08 < JNedved> Any Node.js developers looking for a Sydney, Australia based contract for 6-12 months please get in touch - http://www.seek.com.au/job/24738791 - jamie@it-matters.com.au - no telecommuting I'm afraid.
23:10 < neeky> a very stupid and probably your best method would be to read 2000 bytes and test to see if it fits the range of ascii printable characters
23:10 < neeky> i can imaging that being slow as molasses
23:11 < durango> if i was requireing() like ../../db
23:11 < neeky> a binary file will (hopefully) fail that test
23:11 < durango> and inside of ../../db i did a readdir('./lib/hello') how can I make sure './lib' is inside the db folder
23:11 < durango> and not where im currently executing?
23:12 < squeeks> neeky: utf8 will fail the test.
23:15 < neeky> you mean a utf8 encoded binary file?
23:16 < squeeks> … no.
23:16 < neeky> at utf8 text fille will be detected as binary..
23:19 < Havvy> isaacs: NPM question on renaming a package...
23:20 < Havvy> How do I remove the old package?
23:23 <@isaacs> Havvy: npm unpublish -f old-package
23:24 < Havvy> Should I be getting 401s when I do that?
23:25 < Havvy> http://pastebin.com/XPh17ysn
23:26 <@isaacs> Havvy: npm adduser
23:26 <@isaacs> Havvy: maybe upgrade npm if you'er still getting 401s after that
23:27 < Havvy> Yep. Alright. Was just a password issue, since I reset if a few minutes ago.
23:35 < DarcyB> does anybody have any experaince with flatiron's director  for serverside ?
23:39 <@MI6> joyent/node: Ben Noordhuis v0.10 * c1bf89d : doc: tls: ECDH ciphers are not supported - http://git.io/T2AY_w
23:50 < durango> if i was requireing() like ../../db and inside of ../../db i did a readdir('./lib/hello') how can I make sure './lib' is inside the db folder and not where im currently executing?
23:52 <@TooTallNate> durango: you probably want __dirname
23:52 <@TooTallNate> __dirname + '/lib'
23:56 < durango> TooTallNate: i tried that initially
23:56 < durango> will re-add it
23:56 < durango> TooTallNate: nvm thats what I have x-x
23:56 <@MI6> joyent/node: isaacs created tag v0.11.3 - http://git.io/-2-q7A
23:57 <@MI6> joyent/node: isaacs master * 0449c3d : Merge branch 'v0.11.3-release' (+1 more commits) - http://git.io/RibM2Q
--- Log closed Thu Jun 27 00:00:38 2013
