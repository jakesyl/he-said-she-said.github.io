--- Log opened Sun Jun 02 00:00:00 2013
--- Day changed Sun Jun 02 2013
00:00 < ningu> employment contract I mean
00:00 < ckknight> niggler: correct, only the copyright holder or an agent thereof can go after someone for violation.
00:00 < niggler> depends on the state ningu 
00:00 < niggler> right, so where was I wrong in my statement ckknight ?
00:00 < ningu> why does everything always depend :P
00:00 < ckknight> niggler: which statement?
00:00 < ckknight> ningu: because the law is organic
00:00 < niggler> "the only one that can challenge copyright violations is the copyright holder"
00:01 < AAA_awright> That's right
00:01 < niggler> and you said ckknight that it wasn't how it worked in the court of law
00:01 < ckknight> niggler: or an agent thereof
00:01 < ckknight> niggler: no, I was referring to pseudonyms
00:01 < niggler> right but you'd have to establish that you (the real person) is an agent of the pseudonym
00:01 < ningu> the pseudonym is not even a legal entity presumably
00:01 < ckknight> an agent is more like the MPAA representing Universal
00:02 < niggler> but Universal exists
00:02 < ningu> if you could just establish it was another name for you, that should be ok, but I don't know how plausible that is
00:02 < niggler> it is a legal entity in the jurisdiction of the US
00:02 < ckknight> showing that you and a pseudonym are the same person can be done in the courts
00:02 < ckknight> if you check e.e. cumming's books, copyright is under the pseudonym.
00:02 < ningu> hmm
00:03 < ningu> yeah, that would be the obvious place to look, this must be settled
00:03 < ningu> mark twain, stephen king has another name, etc.
00:03 < ckknight> you aren't legally required to use your real name in most cases
00:03 < ckknight> it's only illegal to use a pseudonym for fraudulent purposes
00:03 < AAA_awright> Copyright is given to entities, not names
00:04 < ningu> btw is there a simple answer to the question of what's the diff between SmartOS and Linux on a joyent cloud machine?
00:04 < ningu> since I thought they were all on SmartOS underneath
00:05 < ckknight> ningu: SmartOS has some better debugging capabilities that I know of
00:05 < ckknight> I've not played around with it
00:05 < ningu> but it's still a *nix environment?
00:05 < ckknight> yes
00:05 < ningu> and I assume linux on joyent means no dtrace
00:07 < Zolmeister> does the WTFPL license cover liability?
00:07 < niggler> avoid wtfpl
00:07 < Zolmeister> k....
00:08 < niggler> ckknight: i haven't looked too much into it, but I thought the implicit copyright is not extended to pseudonyms
00:08 < ckknight> it definitely is.
00:08 < ckknight> well, implicit copyright is granted to the entity who created it
00:08 < niggler> can you point to a source that establishes that the *implicit* copyright also applies to pseudonyms
00:09 < niggler> i agree that you can register at copyright.gov as a pseudonym
00:09 < ckknight> http://www.copyright.gov/fls/fl101.html
00:10 < niggler> yeah you have to register
00:10 < niggler> copyright does not protect pseudonyms or other names
00:10 < niggler> so the only way to get protection is to explicitly register
00:11 < ckknight> I think that means you can't copyright a pseudonym
00:11 < deoxxa> so how much did it cost you guys to go to law school?
00:12 < ckknight> deoxxa: hehe, I'm not the lawyer in my family, I have a brother who is
00:12 < ckknight> keeping murderers on our streets :)
00:12 < deoxxa> better than in our houses!
00:12 < niggler> lol i almost went to law school deoxxa but then someone offered more money
00:14 < AAA_awright> niggler: Copyright.gov is wrong, copyright protects works penned with a pesudonym
00:15 < AAA_awright> Read the statute, it doesn't differentiate
00:15 <@isaacbw> lol
00:15 < AAA_awright> I think they just want to collect those application fees
00:15 < ckknight> AAA_awright: I don't think it's wrong, I just think he's misreading the "Copyright does not protect pseudonyms or other names." part
00:16 < ckknight> since Copyright doesn't protect the pseudonym, it protects the work.
00:16 < AAA_awright> Right
00:16 < ckknight> trademarking would be required for pseudonym protection.
00:18 < Zolmeister> how much is a trademark for a pseudonym? (and why would you want to do it)
00:20 < volitek> How do I authenticate a user using socket io? Is there a way I can send the session details with javascript?
00:20 < ckknight> Zolmeister: http://www.uspto.gov/inventors/trademarks.jsp#heading-5
00:21 < Zolmeister> ckknight: thnx
00:22 < JamesMGreene> Is there a way to make `npm pack` include the README.md?  o_O  I don't have it in the `.npmignore` file so I'm very confused why it's not included
00:23 < xxtjaxx> Hi! I get this error when I try to install uglify-js http://paste.debian.net/8037/ Anybody here that knows a fix for that? Seems like source-map is the problem or its depending version info in uglify-js however my knowledge of node is fairly limited at the moment if you could explain it that would be great
00:54 < whiskeynerd> how would I go about linking some data to a user using mongodb?
00:54 < whiskeynerd> I've got a collection for User
00:55 < whiskeynerd> this is for a contact manager
00:57 < deoxxa> whiskeynerd: just... put it on the user?
00:58 < deoxxa> whiskeynerd: if you're using a specific library (which it sounds like you are,) maybe you should ask about it specifically
00:58 < whiskeynerd> nah, this is okay.  I was wondering if I should decouple the data but I guess this is simpler.
00:58 < whiskeynerd> thanks deoxxa
00:59 <@konobi> ningu: questions about smartos?
00:59 < Eigen> man
00:59 < Eigen> i fucked up my favicon
00:59 < ckknight> Eigen: how so?
00:59 < Eigen> for bootstrap
00:59 < Eigen> I'm getting an EONNET error
00:59 < Eigen> dir doesn't exist
01:00 < Eigen> *ENOENT
01:00 < ckknight> Eigen: well, sounds like you should create the directory
01:02 < Eigen> no I'm still getting it and the dir is there
01:02 <@konobi> Eigen: http://nodejs.org/api/process.html#process_process_cwd
01:02 < Eigen> nvm
01:02 < Eigen> foun it
01:02 < Eigen> *found
01:21 < ningu> someone said joyent had a $5/mo machine... is that true?
01:21 < ningu> I can't find it in their pricing.
01:28 <@isaacbw> that would be pretty impressive
01:29 < ningu> so it may not be true :)
01:30 < ChrisPartridge> i don't think it would be very viable if it was :p
01:30 < ningu> any suggestions for the best $5 or less per month vps? ramnode?
01:30 <@isaacbw> you can play around with ec2 without spending a lot of money
01:30 < ningu> I know
01:30 < ChrisPartridge> ningu: do you just need something with smartos? or?
01:31 < ningu> but ec2 performance leaves something to be desired
01:31 <@isaacbw> you only want to spend $5 a month
01:31 < ningu> I could spend more, just wondering
01:31 < ningu> ChrisPartridge: I'm curious about SmartOS. not sure if I need it. :)
01:32 < ningu> the dtrace option is very nice
01:32 < ChrisPartridge> ningu: dtrace + node-stackvis is the bomb, b
01:33 < ningu> yeah
01:33 < ningu> is SmartOS joyent-only? I assume so
01:33 < ChrisPartridge> its open source
01:33 < ningu> ah ok
01:33 < ChrisPartridge> i run my smartos at the office, and on a box in the US
01:33 < ningu> what sort of package management does it have?
01:34 < ChrisPartridge> pkgsrc
01:34 < ningu> hrm
01:34 < ChrisPartridge> https://github.com/joyent/pkgsrc
01:35 < ningu> so it's a bsd ports-like system?
01:38 < ChrisPartridge> yeah, similar afaik
01:40 < ningu> ChrisPartridge: and is the repo comprehensive and updated often?
01:40 < progrock`> Well I'm halfway done with my jsfiddle clone (still need to add sockets for collab).. been using Mongo... but after reading up on similar NoSQL, CouchDB is looking good
01:41 < ningu> progrock`: you had a mongo question the other day, did you figure it out?
01:41 < progrock`> ningu: yeah, well.. in this case, mongo does not do what I would expect (nor what my coworker who isa pro at mongo expected)
01:41 < ningu> well, I am not a pro at mongo, I don't even use it anymore
01:42 < progrock`> hmm, even redis looks like it may be better for this project than mongo, especiall when I get sockets rolling
01:42 < ningu> redis is pretty great at what it does
01:42 < deoxxa> progrock`: what are you wanting to do with mongo?
01:42 < ningu> and redis has transactions which is nice
01:42 < progrock`> deoxxa: are you referring to what didnt make sense?
01:43 < progrock`> ningu: yeah, with sockets, and updating documents (different versions) redis loks like it has potential
01:43 < deoxxa> well, yeah, what did it not do that you expected it to do?
01:43 < progrock`> deoxxa: I was doing a findAndModify...
01:44 < deoxxa> and?
01:44 < progrock`> deoxxa: along this lines of:  findAndModify( { query: {_id: 'newddoc'}, { $set: {content: 'some content'}}, {upsert: true}, {new: true})
01:44 < progrock`> now.. the query I knew would fail
01:45 < progrock`> but what i wanted was the upsert to occur in this case, and a auto generated _id would be made
01:45 < progrock`> BUT, instead, the 'newddoc' in the query was set as the _id
01:45 < progrock`> ningu: is Redis something you use regularly(seing how you said you odnt use mongo anymore)... or somethign else?
01:45 < deoxxa> that sounds like a really weird way to do things
01:45 < ningu> progrock`: I use it for caching and for sessions
01:46 < deoxxa> why not just .insert()?
01:46 < ningu> progrock`: I haven't pushed it very hard though
01:46 < progrock`> deoxxa: well, becuase I was using the same code for updating  adocument as creating a new one
01:47 < progrock`> deoxxa: basically I have it where '/doc/:id/save' either updates the doc, or if :id is not found, creates a new one
01:47 < deoxxa> aka PUT, yep
01:47 < progrock`> ningu: true, yeah, it seem slike an obvious choice for caching and sessions... I'm trying to do a little more.. and from what I'm reading couchDB and redis seem superior to mongo
01:48 < ningu> progrock`: could be, I've never used couch
01:48 < ningu> riak is popular as well
01:48 < progrock`> deoxxa: so yeah, I was just surprised that the _id from my query wass inserted
01:48 < progrock`> ningu: yeah, that was another possibility... just redaing this comparison now http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis
01:49 < progrock`> ningu: I have no intentions what so ever on this one, but surpsisingly elastic search looks close to somethig that would wrk good for this app
01:50 < ningu> yeah, elastic search is good, so is solr
01:50 < ningu> solr has a json api that is pretty easy to use
01:50 < ningu> but it's kind of a beast
01:50 < ningu> in general
01:50 < progrock`> but yeah, I'm not concentrating on search ability
01:51 < progrock`> in fact right now, I don't even plan to have a search ability
01:51 < progrock`> lol
01:51 < progrock`> but versioning would be nice (I dont do that yet.. tho I'm pretty early in development.. BUT it is functional already)
01:51 < ningu> I'm not a big fan of huge xml config files
01:51 < ningu> elasticsearch has versioning?
01:51 < progrock`> I do let you fork.. but I dont save each update where you can backtrack.. I'm just replacing the doc ight now
01:52 < progrock`> ningu:  "has versioning" "parent and children documents"
01:52 < progrock`> ningu: which are 2 very key things I need
01:52 < ningu> progrock`: if you have your controllers defined well then it shouldn't be too arduous to tweak it for different dbs
01:52 < ningu> not seamless but just not a huge hassle
01:52 < progrock`> ningu: but I definitely have no plans of using java on this, atleast not yet.. too bloated for my $4 vps
01:53 < progrock`> ningu: yeah, thats why I'm looking into them now,.. because I relaized within 30 min I could be usign an entirely different one, lol
01:53 < ningu> :)
01:53 < ningu> good to figure it out early
01:58 < progrock`> ningu: so, minus frameworks and external resources (which you could add yourself in the html.. tho I currently automatically inclode jquery2), this app is working pretty solid: http://codedhere.com/doc/51aaa62ab0c3f43718000001/
02:00 < progrock`> just about to get persistent sessions going with connect-mongo (apaprently it take sa different mongo server address format than monk does)
02:01 < progrock`> Gonna get adding framworks and external working quick (easy enough).... Then add some convenience functions (list docs conected with users.. list all docs, etc).. then time to get sockets working :)
02:02 < progrock`> which shouldn't be too bad.. though I'll need to write a chat feature
02:02 <@isaacbw> did you decide what you're making yet?
02:02 < progrock`> oh, and obviously I need to let the user resizng the editors.. and add some more layout options (including a tabed one for responsize)
02:03 < progrock`> isaacbw: yeah, I always had the decided... its a collaborative jsfiddle clone
02:03 < progrock`> that decided*
02:05 <@isaacbw> I was being a little facetious. That sounds like a pretty big project
02:05 <@isaacbw> have you looked at firebase?
02:05 <@isaacbw> it seems to make real time collaboration pretty easy
02:06 < progrock`> isaacbw: no I have not, was gonna go with socket.io
02:06 <@isaacbw> isn't there a collaborative tool like that? 
02:06 < progrock`> isaacbw: and I'm not sure how "big" it will be.. it just depends on what hiccups I run into... but so far, I have almost evrything short of sockets, working with very little code
02:06 <@isaacbw> progrock`: you should at least look at it, even if you end up wanting to roll your own stuff
02:06 < progrock`> isaacbw: I def will
02:08 < progrock`> isaacbw: firebase definitely looks cool.. though 25% of why i am writing this, is to get experience with socket.io
02:08 <@isaacbw> sure
02:08 < progrock`> isaacbw: and I definitey see how I may run into things that will complex the code (at least if I actually make this scale and handle a lot of users... prob dont need to worry about that tho, haha)
02:08 < progrock`> isaacbw: but so far, its beyond simple, lol
02:09 < progrock`> isaacbw: and, like I said, al lthe important stuff, minus sockets, works great so far: http://codedhere.com
02:10 <@isaacbw> nicef
02:10 <@isaacbw> -f
02:10 < progrock`> isaacbw: tho, maybe I'll make a clone of this to work with firebase while its "free'
02:11 < progrock`> sweet, persistent sessions now work.. time to release that online... prob won't need to login again, except to test login/logout (which should be good to go)
02:14 < progrock`> can yo u"push" a deleted git branch so origin with delete it? (obv pushing to origin)
02:15 < deoxxa> git push origin :branch-to-delete
02:16 < ningu> or just --all
02:17 < progrock`> oh, cool
02:17 < progrock`> lol, I always forget to npm install on releases
02:18 < progrock`> there we go, fixed
02:18 < dcunha> guys, I am building a social events platform in node for creating, searching events that happen around you..I did some development in the backend, which will be consumed by mobile apps, and now I want to bring some twitter-ish features like following people and receiving notifications when someone created an event which matches my preferences..Which tools and backend systems can I use for accomplish this following/notifications part? Redis, s
02:18 < dcunha> ocket.io,...?
02:18 < eazel7> hi ppl
02:19 < progrock`> dcunha: well if you want realtime updates (not just when the user loads a page), socket.io may be a good choice
02:20 < dcunha> yup, socket.io is my choice at the moment
02:20 < ChrisPartridge> bacon.pipe(pan).pipe(muffin).pipe(mouth)
02:20 < ningu> ChrisPartridge: http://nodejsreactions.tumblr.com/post/51890978110/fs-createreadstream-datafile-pipe-request-put-endpoint
02:20 < eazel7> is there any kind of messaging strategy for several node processes?
02:21 < gaf> bacon in a muffin...argh
02:21 < ChrisPartridge> lol ningu
02:21 < ningu> ChrisPartridge: there is another one too, http://nodejsreactions.tumblr.com/post/51566814133/src-pipe-dst-pipe-src
02:21 < ChrisPartridge> lol yeah ive seen that one
02:23 <@isaacbw> progrock`: have you see this? http://plnkr.co/
02:23 < eazel7> hehe I didn't know that tumblr page, it's funny =P
02:24 < ningu> eazel7: yeah isaacs linked to it the other day
02:24 < ningu> I like the dtrace bird
02:24 < progrock`> isaacbw: lol, nope
02:25 <@konobi> ningu: not the dtrace pony!?
02:25 < ningu> konobi: which is that?
02:25 < progrock`> isaacbw: well, that def does a lot of what I was planning to do, haha
02:25 <@konobi> ningu: oh, look it up =0)
02:25 < ningu> haha ok
02:26 < gaf> man, http://nodejsreactions.tumblr.com/ is sooo funny, lol, omg
02:26 < progrock`> isaacbw: ohh sweet, it is open souce
02:26 < gaf> "Discovering an awesome library I want to use is in CoffeeScript" the best one
02:27 <@isaacbw> progrock`: a bit of competition never hurts
02:27 < eazel7> ningu: who is isaacs?
02:27 < progrock`> isaacbw: I never expected to eally have a auser base at all... this is 90% learning... 10% somwthing else to show, if I get a newjob
02:27 <@isaacbw> :P
02:28 < ningu> eazel7: the main node.js maintainer
02:28 < eazel7> ningu: ah. oh. I feel a irc ban coming over me
02:29 < ChrisPartridge> konobi: where is this mythical dtrace pony you speak of
02:29 < ningu> eazel7: nah, everyone has to figure this out
02:29 < ningu> ChrisPartridge: jgfi ;)
02:29 < ningu> erm, jfgi
02:30 <@konobi> ChrisPartridge: see substack
02:31 < ChrisPartridge> lol, theres even a video
02:33 < substack> http://substack.net/images/dtrace_pony.png
02:34 < deoxxa> substack: that's horrifying
02:34 < deoxxa> i approve
02:42 <@konobi> substack: how you feeling after the other day?
02:43 <@isaacs> eazel7: i am isaacs
02:44  * isaacs looks like roman cotes
02:44 <@isaacs> *cortes
02:44 < ningu> but not hernan cortez
02:48 < eazel7> hi isaacs =) thanks for maintaining node.js
02:48 < ningu> eazel7: it's also his job :P
02:48 < eazel7> isaacs, node + mongo + angular made me love javascript (which I formerly hated with all my heart)
02:48 <@konobi> isaacs: you goit... =0P
02:48 < ningu> angular is pretty cool
02:49 <@isaacs> eazel7: eventually, it will make you hate it again.
02:49 <@isaacs> eazel7: i hated javascript, then loved it, then hated it again, and now i have reached a zen state where it'sjust like air andi breathe it.
02:49 <@isaacs> it's not GREAT air.
02:49 <@isaacs> but it's ok.
02:49 < ningu> isaacs: btw, any suggestions for where to get info on vert.x that is low on hype? :P
02:49 < eazel7> isaacs, sure, I have as much love/hate cycles as capitalism has its crisis
02:49 < eazel7> no, I have more cycles indeed
02:49 <@isaacs> ningu: glwt
02:50 < ningu> isaacs: sorry, I shouldn't be asking you
02:50 <@isaacs> ningu: heh
02:50 < ningu> it came up on the podcast or I wouldn't have even heard of it
02:50 <@isaacs> ningu: oops.
02:50 < ningu> haha
02:50  * isaacs is a marketing failure
02:50 < ningu> I am not actually tempted
02:50  * isaacs advertising for the competition
02:50 <@isaacs> :)
02:50 < ningu> I'm just kind of like, wtf is this thing
02:51 <@isaacs> it's a JVM polyglot async io thingie
02:51 < ningu> I know what it *is*
02:51 < ningu> in that most basic sense
02:51 <@isaacs> sure
02:51 < ningu> but there are a lot of things that go into a good platform
02:51 < ningu> which none of the marketing-heavy materials discuss
02:52 < eazel7> oh, how I'd like js to have lambda expressions. the only thing I miss from other languages
02:53 < ningu> eazel7: what is function () {} ?
02:53 < nightfly> I'd like implicit return of the last expression in a function.
02:53 < eazel7> ningu, not expressive enough. too difficult to read
02:53 < ningu> sounds like you both want coffeescript
02:54 < ningu> movie idea: implicit return of the jedi
02:54 < eazel7> I'd be happy with a simple shortcut. but js is too spread to add any new thing right now, I think
02:55 < nightfly> I really should give coffee script a try.
02:58 < iheartjs> eazel7: I think we'll get them eventually
02:58 <@isaacs> eazel7: i'm looking forward to fat arrow functions
02:58 < eazel7> isaacs, fat arrow? => is that a fat arrow?
02:58 < ningu> isaacs: with or without {}?
02:59 <@isaacs> eazel7: var self = this; var fn = (arg1,arg2) => { assert(this === self); arg2 }; fn()
02:59 <@isaacs> fat arrow functions dont' ahve a .prototype, and 'this' is always 'this' from wherever they were created.
03:00 <@isaacs> it's like doing .bind(this) at the end of the function
03:00 < ningu> ah cool so not just a syntactic difference
03:00 < harbhub> hey fellas
03:00 < ningu> that should be more efficient too, right?
03:00 < harbhub> i am having trouble with the html5 audio tag
03:00 <@isaacs> ok, back to decoding ssh keys.
03:00  * isaacs &*
03:00  * isaacs &
03:00 <@isaacs> oh, there's no loudbot here.
03:00 < harbhub> my server must be the issue because i test on other sites and it works
03:00 < harbhub> hey isaacs
03:00 < harbhub> guys, my problem is that the LOOP isn't working in the audio element for some reason
03:00 < harbhub> and the only possible error is the node server that i'm running
03:01 < eazel7> but that doesn't build an expression tree, does it?
03:01 < harbhub> i've testing the code in a fiddle as well as on w3schools little tester thing
03:01 < eazel7> I mean, like linq in .net
03:01 < harbhub> <audio src='sound.mp3' autoplay loop></audio>
03:01 < harbhub> it does autoplay
03:01 < harbhub> however, the loop doesn't work
03:01 < harbhub> here is the link:
03:01 < harbhub> http://harbhub.com/public/tests/audioTest.html
03:01 < harbhub> can someone help me with this issue?
03:02 < harbhub> my understanding is that the node server is causing the problem somehow
03:02 < eazel7> I was thinking about something like var fruits = ['apple', 'banana', 'pear', 'orange']; var myFruits = fruits.where(f => f.length > 5).toArray();
03:04 < ejixin> eazel7: map?
03:04 < ejixin> or wait
03:04 < ejixin> filter
03:04 < ejixin> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
03:05 <@konobi> harbhub: i dunno, is that a JS or a node issure?
03:06 < harbhub> must be node
03:06 < harbhub> because i've used js for this exact thing and it always works
03:06 < eazel7> harbhub, it's working for me now
03:06 < harbhub> it loops?!
03:06 < eazel7> harbhub, yes, this address: http://harbhub.com/public/tests/audioTest.html
03:07 < eazel7> harbhub, chrome 28 (beta), linux
03:07 < harbhub> why doesn't it loop for me, though?
03:07 < ejixin> i don't hear anything
03:07 < harbhub> hmm
03:07 < ejixin> oh
03:07 < ejixin> it's an mp3 file that's why
03:07 < ejixin> won't work on firefox
03:07 < harbhub> i'm using chrome, though
03:08 < ejixin> doesn't loop for me on chrome
03:08 < harbhub> http://jsfiddle.net/harbhub/nDkUQ/
03:08 < harbhub> this is what i want it to do
03:08 < harbhub> hmm
03:08 < harbhub> so it isn't working then
03:08 < eazel7> harbhub, in firefox it doesn't even play
03:08 < ejixin> eazel7: firefox doesn't play mp3s
03:08 < harbhub> i can make an ogg copy of the file
03:08 < harbhub> to make sure it plays in all browsers
03:08 < ejixin> you could try doing it explicitly using javascript
03:09 < ejixin> when it ends, just call "play" again
03:09 < ejixin> pretty sure there are events for that
03:09 < harbhub> well that's the thing
03:09 < harbhub> it won't work
03:09 < harbhub> for some reason!!!
03:09 < ejixin> i've had issues with looping short snipits before
03:10 < harbhub> it is like it isn't loading the audio file
03:10 < harbhub> as a resource
03:10 < harbhub> it just uses it to play once
03:10 < harbhub> then poof... no more audio file to loop!
03:11 < harbhub> it won't even let me do stuff like:  var sound = document.getElementById('theSong');
03:11 < harbhub> sound.currentTime = 0
03:11 < harbhub> i can't even do that...
03:11 < harbhub> i believe the error comes from node
03:16 <@konobi> harbhub: all indications as client side... what's the server side?
03:18 < rafaelrinaldi> guys, I'm trying to read files from a dir and store their content into a single instance of string… don't know what I'm doing wrong but every time I print the buffer variable, it's empty. here's what I'm doing: https://gist.github.com/rafaelrinaldi/5692502
03:18 < rafaelrinaldi> tried async before but was having the same issue
03:19 < harbhub> konobi: the server just serves files
03:19 < harbhub> from the public folder
03:19 < harbhub> which holds the audioTest.html and the audioTest.mp3 files
03:19 < harbhub> so, the server just serves those files to the client
03:20 <@konobi> harbhub: so why talk to us about it?
03:23 < eazel7> already passed the twelve o'clock on Saturday and I'm too sober. my religion does not allow that
03:25 < progrock`> eazel7: haha, I could def use some smoke, but at least I'm not sober, lol
03:25 < harbhub> because the code works with apache server according to someone from the HTML channel
03:25 < harbhub> so i came here to see if the issue was the node server
03:26 < harbhub> if someone could get a localhost node server working that can correctly serve the audio file such that it can loop
03:26 < harbhub> then i will believe that the issue is not node, until then the issue seems to be linked to node in some way
03:26 < progrock`> hmm, I really wanna give angular a shot (we're considering using it at work)... just not sure how useful it'll be with my app... everythign is so simple as it is
03:26 < eazel7> progrock`, I ran out of it
03:27 < progrock`> eazel7: me too, lol... had this pretty cool ecig filld with hash, my boy gave me from california... so sad its all out
03:28 < eazel7> progrock`, I put everything I had to the trash bin two weeks ago. that night didn't result as I expected
03:29 < progrock`> umm, well, now I don't have sympathy, lol
03:29 < Eigen> man i suck at web design
03:32 < gaf> lucky you
03:32 <@konobi> me too... i won and award for design, once upon a time... but i'm all backend/systems these days
03:33 <@konobi> i hate design end stuff
03:33 < gaf> the problem is, that css/html is so f boring
03:33 < gaf> if you do the art on ps, can be fun
03:33 <@konobi> good folks are also expensive
03:33 < progrock`> heh, I'm not so great at design.. but definitely stick to doing front end development
03:33 < progrock`> BUT, I make charts, lol.. not boring html/css
03:34 < progrock`> and luckily its in very high deman, and pays quite wel
03:34 <@konobi> i have a good mate who did csszengarden... but i don't think i'd be able to hire him
03:34 < Eigen> what is that jquery library
03:34 < Eigen> that like
03:34 < Eigen> hides things
03:34 < Eigen> and unhides them using css
03:34 < Eigen> *plugin
03:35 < gaf> progrock`, is it? you mean things with high charts, etc?
03:36 < Eigen> like i press a button
03:36 < Eigen> and a form slides under
03:36 <@isaacs> i think for this module i'm going to emulate openssl's coding style
03:36 < progrock`> gaf: no, I made my own library.... just using one is not so special
03:36 <@isaacs> i've never tried k&r weird otb indenting stuff before
03:36 <@isaacs> it looks kind of neat
03:36 < Eigen> i think its jqueryui
03:36 < Eigen> nvm
03:36 < ejixin> isaacs:  :P
03:37 < gaf> ahh, ok. d3.js seems interesting. never used anyway..
03:37 <@tjfontaine> where are my demerits ...
03:37 < ejixin> it's pretty ugly 
03:37 < Eigen> ooh
03:37 < Eigen> d3js looks cool
03:37 < Aria> d3's awesome.
03:37 < Aria> It's very output-focused -- its interaction is subservient to that -- but within that constraint, it is 100% awesome sauce.
03:38 < ChrisPartridge> any gyp pro's around?
03:38 < Aria> I might be one.
03:38 <@isaacs> tjfontaine: ha!
03:38 <@isaacs> tjfontaine: it seems like a fair homage, since i'm porting the code from openssl to JavaScript
03:38 < Eigen> whats gyp?
03:38 <@isaacbw> google is a useful tool
03:39 <@tjfontaine> isaacs: true, while you're in absurd land you might as well go as far down the rabbit hole as possible
03:39 < ChrisPartridge> Aria: Trying to compile node-chimera, but it's not linking against libcrypto.a (can see from ldd on the module after its built), can you see anything wrong here https://github.com/deanmao/node-chimera/blob/master/scripts/compile_binary.sh
03:39 <@isaacs> tjfontaine: :)
03:39 <@isaacs> tjfontaine: plus, i've been getting to cozy with npm and node styles.
03:39 < Aria> What do you mean by 'can see from ldd'?
03:39 <@isaacs> tjfontaine: it's good to mix it up
03:39 < iheartjs> isaacs: it takes some getting used to, but after awhile it's nice, the only thing is I'm still not sure how to do do-while loops
03:40 < Aria> .... That you need that script at all is a funny smell.
03:40 < ejixin> (10:38:04 PM) isaacs: tjfontaine: it seems like a fair homage, since i'm porting the code from openssl to JavaScript
03:40 < ejixin> that's awesome
03:40 < ChrisPartridge> Aria: well thats what I was thinking, as I've never seen anything like that
03:40 <@isaacs> iheartjs: do\n\t{\n\tasdf;\n\t} while (cond);
03:40 <@tjfontaine> node -pe '((10 - 15) % 19)'
03:40 <@tjfontaine> -5
03:40 <@tjfontaine> js numerics are fun
03:41 < progrock`> hahaha, I lovethe nodereactions "discovering an awesome library I want to use is in coffeescript"  I agree entirely with that face
03:41 < iheartjs> isaacs: yea, that just never looks right to me
03:41 < Aria> Yeah. Usually, libcrypto is included in node. What's your gyp file look like?
03:41 < Eigen> why doesn't d3.js use three.js
03:41 < Aria> https://github.com/deanmao/node-chimera/blob/master/binding.gyp /
03:41 < Aria> ?
03:41 < ChrisPartridge> Aria: it's here https://github.com/deanmao/node-chimera/blob/master/binding.gyp
03:41 < ChrisPartridge> yeah, it's not my project, and it looks like the creator was mainly building under OSX
03:41 < Aria> Makes sense.
03:42 < progrock`> Eigen: because d3 shits on three.js, lol
03:42 < Eigen> oh
03:42 < Eigen> I've only worked with three.js
03:42 < Aria> Wow. The linux and mac conditions are nearly identical. And don't seem semantically different where they differ.
03:42 < Eigen> its documentation is shit
03:42 < progrock`> Eigen: Bostock is a function genious.. you'll truely appreciate d3
03:43 < progrock`> Eigen: and you could always use my library ;)  http://nvd3.org
03:43 < progrock`> Eigen: of course d3 is curently mostly 2d, and most svg
03:43 < progrock`> mostly*
03:44 < Eigen> is it not meant for a full webgl app?
03:44 < ChrisPartridge> Aria: yeah, I'm wondering why it requires its own version of openssl to compile against, perhaps thats only required on osx
03:44 < Aria> ChrisPartridge: Could be. MacOS's linker is crazypants.
03:44 < progrock`> Eigen: d3 is meant mainly for an XML based markup language.. mainly SVG, but also HTML, and potentially any other
03:44 < Aria> If that's the case, though, that should be in the condition for the mac OS though.
03:44 < Eigen> you need a map chart in your library
03:45 < progrock`> Eigen: it may be possible to do webgl, tho I have not sen any examples of that, and I'm not familiar enough with webgl, but I dont think they would mix super smoothly
03:45 < Eigen> oh
03:45 < progrock`> Eigen: sadly a lot of the cols ones are private... could obly get OK to release some ofthe charts
03:45 < progrock`> cool*
03:45 < Eigen> that sucks
03:46 < progrock`> we got maps and tree and heatmaps, as well as some other charts private.... especially som really cool stock charts I made
03:46 <@isaacs> tjfontaine: what *should* (-5 % 19) return?
03:46 < progrock`> Eigen: considering I owrk for a financial company.. its pretty shocking I got them to let me release that.. it took a lot of fighting
03:46  * eazel7 is going to get drunk somewhere else
03:46 < progrock`> isaacs: i believe 14
03:46 < Eigen> you work for Goldman Sucks?
03:47 < progrock`> Eigen: no... theres more financial comapnies thn goldman sachs
03:47 < Aria> ChrisPartridge: So what are you trying to solve here?
03:47 < Eigen> ik
03:47 < Eigen> I'm not stupid
03:47 < Eigen> i think
03:47 <@tjfontaine> isaacs: >>> ((10 - 15) % 19)
03:47 <@tjfontaine> 14
03:47 < progrock`> they did try to become one of our clients.. we turned them down
03:47 < ChrisPartridge> Aria: just trying to build it on linux, so I can make a few changes 
03:47 < Aria> Ah. What actual errors are you getting? You mentioned ldd, but not what you did with it.
03:48 < ChrisPartridge> Aria: just ran ldd on the built chimera.node - to see what it was linked against
03:48 <@isaacbw> progrock`: do you get the rights to work you do on your own?
03:48 <@tjfontaine> isaacs: for extra fun (10 - 15) >>> 0 forces you into 32bit so you get an even more hilarious result :)
03:48 <@isaacs> tjfontaine: that's so deeply wrong
03:48 < progrock`> isaacs: yes
03:48 < Aria> ChrisPartridge: ... And? 
03:48 <@isaacs> tjfontaine: by the >>> i'm assuming you're testing against python?
03:48 <@tjfontaine> right
03:48 <@isaacs> tjfontaine: demerit
03:48 <@tjfontaine> heh
03:48 < ChrisPartridge> Aria: it has freetype, and libfontconfig but no reference to libcrypto
03:49 < Aria> ChrisPartridge: But then when it runs, undefined symbols?
03:49 < ChrisPartridge> Aria: yeah exactly (sorry i don't venture out of jsland much)
03:49 <@isaacs> $ cat mod.c && gcc mod.c -o mod && ./mod
03:49 <@isaacs> #include <stdio.h>
03:49 <@isaacs> int main() {
03:49 <@isaacs>   fprintf(stdout, "%d\n", (-5) % 19);
03:49 <@isaacs>   return 0;
03:49 <@isaacs> }
03:49 <@isaacs> -5
03:49 < Aria> Aha!
03:49 < Eigen> i still can't find this sliding this
03:49 <@isaacs> tjfontaine: authoritative ^
03:49 < Eigen> its not on jqueryui
03:49 <@isaacs> tjfontaine: ;P
03:49 <@tjfontaine> isaacs: ruby and perl also agree with python :)
03:49 <@isaacs> tjfontaine: they're also wrong, then
03:50 <@tjfontaine> hehe indeed
03:50 < gaf> isaacs, i'm the mod here, and i have to inform you that you need to use some pastebin service :P
03:50 <@isaacbw> Eigen: ##javascript or #jquery will be a better place for these questions
03:51 <@isaacs> gaf:  lolz
03:52 <@isaacs> flooding in the channel is a node tradition :)
03:52 < Aria> ChrisPartridge: So the binding should probably mention libcrypto -- though .so, not .a, probably. .a files won't show up in ldd, they're static.
03:53 < ChrisPartridge> Aria: ah ok, but maybe I don't need to link against the static build on linux - might recompile QT without the reference to the static openssl, and see if it uses the one on the system - I'm sure I did this last night but had other undefined symbols relating to "gstreamer"
03:53 < gaf> ahh, you are welcome, i was joking :)
03:53 < Aria> Oh fun. Dependency rabbithole!
03:53 < progrock`> gaf: if he didnt think you were joking,m you prob would ave been kicked
03:54 < gaf> lol, i don't think so, i'm the mod here. do you forgot?
03:55 < gaf> anyway
03:55 < gaf> i was soooo kicked couple of weeks ago, i pasted some code in ##javascript
03:55 < ChrisPartridge> Aria: yeah, and it takes a good 30 minutes to compile QT on a decent machine
03:55 < gaf> i was actually kicked, kicked again, than banned
03:55 < Aria> ChrisPartridge: Indeed.
03:55 < gaf> than i was unbanned
03:56 <@isaacs> gaf: ##javascript are kind of rude
03:56 <@isaacs> gaf: not as bad as #bash, though
03:56 < gaf> totally
03:56 <@isaacbw> I can't stand ##javascript
03:56 <@isaacs> gaf: i think most of the users in #bash are just bots that tell you to RTFM
03:56 < gaf> but i like so much ##javascript anyway
03:56 < gaf> i learned so much there, i own them
03:57 < progrock`> isaacs: I agree, freenode channels like ##javascript suck... I'm still old school with generic channels.. efnet's #css ironically is a good js channel, lol
03:59 < gaf> but, i just forgot to mention, that my paste in ##javascript was about 100 lines, lol.it was funny, i pasted by accident
04:00 < Havvy> isaacbw: I'm in ##javascript :/
04:01 < ejixin> same
04:02 < Havvy> What we need is a ##dom
04:02 < gaf> we have
04:02 < gaf> #jquery
04:03 < Havvy> What about those that don't use jQuery?
04:03 < ejixin> but why would anyone refuse to use the superior jquery 
04:03 < gaf> #jquery
04:03 < Havvy> ejixin: I assume that's sarcasm.
04:04 < ejixin> maybe
04:14 < progrock`> isaacs: kinda funny, just realizde plunker uses firebase
04:14 <@isaacbw> Havvy: :P
04:14 <@isaacbw> progrock`: isaacs and I are different people
04:14 < Havvy> Yes, I know.
04:14 < Havvy> <@isaacbw> I can't stand ##javascript
04:14 < progrock`> ahh, that wa sa tab completee 
04:14 <@isaacbw> btw
04:14 < progrock`> my mistake
04:17 < r1card> Question. Let's say you're using a validator library which offers those two functions. How would you interpret the difference between both of those: requireTrimmedWhitespace() enforceTrimmedWhitespace()
04:18 < deoxxa> r1card: i'd assume requireTrimmedWhitespace() would tell me i'm a terrible person if there was whitespace, and enforceTrimmedwhitespace() would just be passive-aggressive and trim the whitespace on its own
04:18 < ejixin> r1card: as the same
04:19 < ejixin> those would get easily confused
04:19 < r1card> :}
04:19 < r1card> At leas you're kinda interpreting it properly.
04:20 < r1card> I'm writing a validator DSL, it'll produce fast validation code for JS, PHP and so on.
04:20 < ejixin> why php
04:20 < r1card> I have filters which enforce a format, and tests which check for a requirement
04:20 < ejixin> i think there's something like for express
04:20 < r1card> And I need an intuitive way to name them "enforce nfc"  "require length-max: 10"
04:20 < ejixin> and node more "unspecifically"
04:22 < r1card> ejixin I happen to need PHP :/ But the idea is it's platform neutral. JavaScript, PHP, Java, Scala, Erlang, whatever.
04:23 < r1card> ejixin, however it's closest to JS, it being a "typed superset" of JSON
04:30 < progrock`> Anyone familair with a nosql that handles versioning well.. ie. I have a document, and everytime I save, I pass in the whole document again, but the DB keeps track of each state, and only stores the diff each time
04:30 < progrock`> does CouchDB do that?
04:36 < progrock`> ok, I think I'm right about couchDB, but always good to har from someone with experience
04:36 < boogyman> or you can try it and find out?
04:36 < progrock`> i think based on it being mvcc, thats perfect for storing multiple versions of a document
04:37 < progrock`> boogyman: obvkiously I plan to, but i'm sure people can give me some insight as well
04:37 < progrock`> so far this is lookign dead on for me... time to createa branch
04:38 -!- mode/#Node.js [+b *!*@cpc9-flit3-2-0-cust134.9-1.cable.virginmedia.com] by ChanServ
04:38 -!- lushious was kicked from #Node.js by ChanServ [Banned: inappropriate quit message (lifted when confirmed changed)]
04:41 < progrock`> hmm, this app is gonna get complicated when I start dealing with concurrent development of the same documents
04:42 < progrock`> tho, I suppose I may actually force collab editiing (ie. if working ont he same document, you'll see it update as other change it... if you dont wan tthat, you must fork)
04:43 < progrock`> tho i cant tell if couch is handling updates to documnets, like adding a key:value... or if they handle updates to strings
04:52 < progrock`> well, now I'm back to debating between couch and redis
04:52 < progrock`> guess I'll hold off for now, and do some front end work
04:52 < progrock`> tho, I'm also debating on using angular for the front end, LOL
05:01 <@isaacbw> it probably won't be very useful for what you're doing
05:01 < progrock`> isaacbw: yeah, i was thinking that.. tho I need to use it soon, since my work is ocnsidering changing to that as our core front end frameowkr
05:02 < progrock`> and since Im the msot experieced front end developer, and none o us have angular support.. I need to know if it will be good or not
05:02 <@isaacbw> angular is great for certain kinds of applications
05:02 <@isaacbw> at the very least you'll finally wrap your head around it and go "wow"
05:03 <@isaacbw> and the manual is very good
05:04 < progrock`> isaacbw: yeah.. that was what i sadi to my boss, i waslike "it looks like it could be really cool.. but, it may or may not be a painf in the ass"... clearly theres a godo amount of boilerplate to get rolling
05:04 < progrock`> but after you get over that hump, it may be good
05:05 < progrock`> well, i still got some busy work.. was originally just using bourbon for my css... but decided to go all out nad use fundation on this project (not needed, but some of the css and js is helpful... especially isnce I'm being lazy)
05:05 <@isaacbw> once you get used to it you'll also get a better idea of what it is and isn't good at
05:05 < progrock`> yeah, exactly
05:05 < progrock`> tho I'm more excited about switching databases
05:06 <@isaacbw> the main thing to understand is that it's all about the directives
05:06 < progrock`> it seems like redis or couchdb may be a much better choice than mongo for what I'm doing
05:07 < progrock`> its sad tho.. before I implemented foundation, I literally had 95% purely semantic, mnimal code
05:07 < progrock`> thats always cool, and rare... yo uusually end up always having at least an extra wrapper or two
05:08 <@isaacbw> heh
05:09 < progrock`> foundation has some really ood mixins.. BUT, theres certain spots where they clearly didnt put enough effort into them, whereyou basiucally need 95
05:09 < progrock`> 95% of their markup even if you are using their mixins
05:09 < M2Ys4U> if you call stream.read(x) and there are x+y bytes in the buffer, read will return x bytes, correct? And if so, if you subsequently stream.read(y), will you get the y bytes that were in the bufer before the first read()?
05:09 < progrock`> I undertsand that the way you add data attributes and the JS automatically takes care of everything is really cool for the html
05:10 < progrock`> but the fact that tey are usually required, even if I was executing with custom js seems stupid
05:11 < ningu> isaacbw: actually I find the docs for angular leave a *lot* to be desired
05:12 < ningu> there are all kinds of mysterious things, like factory vs. service which is never really explained
05:12 <@isaacbw> the conceptual overview could use some work, but it does a good job of fully explaining the gritty details
05:12 < ningu> and the compile/link phase documentation is not very clear unless you already understand it
05:12 <@isaacbw> ningu: it's really just a syntactial difference
05:12 < ningu> also timing issues -- what happens in what order
05:12 <@isaacbw> ordering shouldn't be something you think about if you use the digest cycle properly
05:12 < ningu> child first or parent first -- iirc it varies, controllers work differently than directives
05:13 < ningu> isaacbw: well, there isn't much of a guide for that either :(
05:13 <@isaacbw> :P
05:13 < ningu> I had some issues with getting a dialog box to trigger and have the autocomplete field work properly -- I set up the autocomplete field before opening the dialog box and that messed up the zindex of the div that showed up when there were results
05:13 < ningu> I solved it by hard-coding the z-index with css
05:14 < ningu> I couldn't find a way to get the autocomplete field to be set up only after the dialog opened
05:14 < ningu> so that was the timing/ordering issue I was referring to
05:14 < ningu> the autocomplete thing was set up with a directive
05:19 < Eigen> there is no way
05:19 < Eigen> I can set the printing settings
05:19 < Eigen> without a plugin like jsprintsetup right?
05:19 < deoxxa> wow, printing
05:20 < deoxxa> people still do that?
05:20 < Eigen> yea
05:20 < Eigen> they do man
05:20 < Eigen> people even fax
05:22 < deoxxa> you're having a go aren't you
05:22 < deoxxa> nobody *prints* things lol
05:22 < ningu> actually in japan fax machines are still a big deal
05:22 < deoxxa> that's crazy
05:24 < leichtgewicht> ningu: havn't used one since I arrived in japan.
05:24 < leichtgewicht> (also not in japanese office)
05:24 <@isaacbw> faxing is used all the time for legal documents
05:24 < ningu> leichtgewicht: well, there was an article about it
05:24 < ningu> dunno
05:25 < Eigen> is it possible to exit kiosk mode with js
05:25 < leichtgewicht> Doesn't mean there is none: i just havn't come in contact.
05:26 < deoxxa> leichtgewicht: depends what kind of office
05:26 < deoxxa> in the boring business-type offices, they're everywhere
05:26 < leichtgewicht> alright.
05:26 < deoxxa> if you're working with computers etc everyone's abandoned them
05:26 < leichtgewicht> not boring here :)
05:26 < Eigen> ooh
05:26 < Eigen> I got a 500 on youtube
05:27 < deoxxa> yokatta ne :>
05:27 < leichtgewicht> ma iin janai
05:27 < ningu> eigo ga hanasemasu ka
05:28 < leichtgewicht> alright, switching back to english.
05:28 < ningu> :)
05:54 < harbhub> does anyone have experience with range parsing?
06:04 < ningu> harbhub: I have plenty of experience with regexes in general
06:04 < harbhub> so ningu
06:04 < harbhub> i'm referring to the request header
06:04 < harbhub> request.headers.range
06:05 < ningu> ok
06:05 < harbhub> my server is serving an audio file, and chrome sends that header
06:05 < harbhub> and if i do not handle this properly, then the audio element does not function properly in Chrome browser
06:05 < harbhub> can you help me fix this issue?
06:05 < ningu> if it's just a text parsing issue, probably
06:06 < harbhub> request.headers.range//returns:  bytes=0-
06:06 < ningu> ok
06:06 < harbhub> \when the audio file is requested and served
06:06 < ningu> that means the whole file, presumably
06:06 < harbhub> the file is somewhat served, but since i don't currently handle the range aspect of the request it doesn't work properly
06:06 < harbhub> i.e. it plays the audio file once and cannot loop it or do anything else
06:06 < ningu> I don't really understand what that has to do with the range header, isn't the range header sent to the server?
06:07 < ningu> not to the client
06:07 < harbhub> yep
06:07 < ningu> so it asks for the whole file and you give it the whole file
06:07 < harbhub> but chrome expects a response to that header from what i've gathered
06:07 < ningu> oh
06:07 < ningu> hrm
06:07 < harbhub> right, which isn't enough for chrome lol
06:07 < ningu> what response does it expect?
06:08 < rud> hrmm in socket.io, i have a simple .on('connect', function(socket){…}) which itself emits a node event (passing the socket.id as argument), than another object has a node listener and picks the event, and does *stuff* on the socket. to do said stuff, and since i'm only passing the socket.id, i need to retrieve the socket object from the io.sockets pull, i therefore use the io.sockets.clients() method and iterate until i find my matching socket.id… fine … 
06:08 < rud> except now, this instance of the connected socket will not communicate with the connected socket … why, oh why
06:08 < harbhub> i don't know
06:08 < harbhub> that is my question lol
06:09 < ningu> harbhub: apparently it wants Content-Range
06:10 < ningu> you could just give it back Content-Range with the same thing as Range
06:10 < harbhub> what do you mean?
06:10 < harbhub> i can set the header but i'm not sure
06:10 < ningu> res.setHeaer('Content-Range', req.headers.range);
06:10 < ningu> setHeader*
06:10 < harbhub> i'll try
06:12 < harbhub> 29130
06:12 < harbhub> now it wants that many bytes lmao
06:13 < harbhub> clearly we don't know how to do this heh
06:14 < ningu> harbhub: yeah, I've never done it before
06:15 <@isaacbw> do you ever find yourself on websites and have no idea how you got there
06:15 <@isaacbw> and there's no back button history
06:16 < harbhub> lol no
06:17 < harbhub> are you the same as isaacs?
06:17 < ckknight> Are there any standard naming conventions for promises?
06:24 <@isaacbw> harbhub: no
06:24 < harbhub> okay
06:24 < harbhub> do you have any experience in range requests?
06:25 <@isaacbw> no
06:25 < ningu> harbhub: I would just google this stuff, it's an http/chrome implementation issue
06:33 < ChrisPartridge> Aria: just rebuilt the binary, no errors during gyp build - when trying to require, I get "undefined symbol: __gst_debug_min"
06:40 < owen1> i try to add loudbot to hubot - https://github.com/oren/lee-bot-perry/commit/1da41fd66a92b29271128260e8fec9d01c546bdd  and found myself in an infinite loop.  the idea is whenever hubot see ALL CAPS it screams back something in caps. how can i do that without exploading the memory?
06:40 < owen1> is there a way to temporary disable the listening to caps maybe?
06:42 < jesusabdullah> owen1: check the nick of the screamer to make sure it's not your hubot's
06:42 < owen1> jesusabdullah: interesting. let me see
06:46 < progrock`> man I cant figure out why Foundation's top-bar is adding 1 px for my lists, and not lining up the markup and styles are identical to theirs
06:49 < llancer> quit
06:55 < owen1> jesusabdullah: it didn't work maybe because i don't understand the reason for the crash.  maybe robot.hear /([A-Z0-9?!@#$%^&*]+)/, (msg) ->   already making sure it can't be from the robot itself.
06:55 < jesusabdullah> so console.log everything the trigger gets before you make a message
06:55 < jesusabdullah> also no speaky coffeescript
06:55 < owen1> jesusabdullah: me too!
06:56 < owen1> it's github guys. coming from ruby 
06:56 < progrock`> man, this is absurd, all styles are identical, where the hell could this 1 px be coming from, lol
06:57 < progrock`> ahh, my icons
06:59 < ningu> owen1: your robot can hear?
07:03 < ningu> my lesson for the day: closures in perl may have the same semantics as in js, but they are wayyyyyyyyyyyyy less optimized.
07:19 < garrettwilkin> Hi room
07:20 < garrettwilkin> wondering how you protect yourself from bad data
07:20 < garrettwilkin> when you're calling JSON.parse
07:21 < ningu> try/catch
07:22 < garrettwilkin> okay
07:32 < tieTYT> anyone know what causes this prolem I have? https://github.com/joyent/node/issues/5618
07:40 < Raynos> Ok istanbul is amazing
07:41 < ningu> Raynos: not right now, there is a big police crackdown
07:41 < Raynos> https://github.com/gotwarlost/istanbul
07:45 < progrock`> man wtf is the irssi command to close a message window
07:45 < deoxxa> progrock`: /window close
07:46 < progrock`> thank you
07:46 < ningu> hehe
07:46 < deoxxa> (nice try, btw)
07:47 < yawnt> deoxxa: OOOH I SEE WHAT HE DID THERE
07:48 < progrock`> eird, I thought if a block was hidden, and you used jqury's .height()  it owuld show up as 0.. apparently I was wrong
07:48 < jesusabdullah> hello deoxxa
07:48 < jesusabdullah> wat ur up 2
07:48 < progrock`> oh,that wa sa serious question
07:48 < progrock`> lol
07:48 < progrock`> I seriously couldnt remember... thought /part was it
07:49 < deoxxa> i am at doing dinner make activity for solve hungry feel, jesusabdullah
07:49 < jesusabdullah> I see
07:49 < jesusabdullah> I, uhh
07:49 < jesusabdullah> I made a bunch of chicken last night cause it was about to go bad
07:49 < jesusabdullah> so now I have a ton of "barbecue" "chicken"
07:49 < deoxxa> i did that with eggs today
07:49 < deoxxa> ha
07:49 < jesusabdullah> it's good though
07:49 < deoxxa> actually i could totally do chicken tonight
07:50 < deoxxa> sure beats the hell out of these ufo noodles
07:50 < ashnur> ljharb: i found out that if I give max-age to all my files, that kinda solves the problem and the browser will redownload them if the manifest file changes. so I got a working solution now, I wonder where will be the next gotcha
07:51 < ningu> I think it should be pronounced like one word
07:51 < ningu> maxage
07:51 < ningu> maxage awesomage
07:54 < ashnur> ningu: wat? :D
07:54 < ashnur> i shouldve said max-age=0
08:02 < progrock`> this is driving me insane that there appears to be no easy way to hide the scrolbars on the ACE editor until the content needs to scroll
08:02 < progrock`> that should be defualt IMO... let alone an easy flag
08:02 < progrock`> I'm not gona consider this design done until that works
08:06 < jesusabdullah> deoxxa y ur no webtack
08:07 < deoxxa> jesusabdullah: i have no idea what that is
08:08 < jesusabdullah> lier
08:08 < deoxxa> is truth
08:08 < jesusabdullah> deoxxa: the other other irc channel
08:08 < deoxxa> oh
08:08 < yawnt> OMG
08:08 < deoxxa> i suppose i can go back there now
08:08 < yawnt> THERE'S ANOTHER CHANNEL?
08:08 < yawnt> i thought there was this one only on freenode?
08:09 < deoxxa> there are at least 3 channels on freenode
08:09 < yawnt> #node.js #deoxxacooking and?
08:09 < deoxxa> ha
08:09 < yawnt> no i'm not joking
08:09 < yawnt> i'm seriously in #deoxxacookin
08:09 < yawnt> :|
08:09 < yawnt> *g
08:38 < ChrisPartridge> Aria: I got it working :D
08:39 < JamesMGreene> Is there a way to make `npm pack` include the README.md?  o_O  I don't have it in the `.npmignore` file so I'm very confused why it's not included
08:39 < JamesMGreene> (it does get included if I just do `npm publish`)
08:42 < ningu> does anyone have a link for the most important HTTP details that a well behaved API should be sure to provide?
08:42 < ningu> I don't mean the REST spec so much as, which status codes to return, headers to provide or recognize, etc.
08:42 < ningu> I think I have the basics down but I have a feeling I'm missing some obvious things.
08:42 < r1card> ningu, aside from the HTTP spec, which you know where it is, there's no such link to give you.
08:42 < kuja> hm, good question. I'd be interested in that too, given as I've been spending a lot of time writing APIs lately
08:43 < kuja> Digging through the HTTP RFC can be a bit painful at times
08:43 < r1card> ningu, what often happens is that people tend to ignore 90% of the spec and reimplement parts of it in their abstraction layer.
08:43 < ningu> r1card: yeah... it's just that HTTP is not really meant for APIs and I suspect there are certain de-facto standard practices
08:43 < r1card> ningu, case in point, SOAP is sent over HTTP, written in XML and there's a <soap:headers> section.
08:44 < ningu> heh, yeah
08:44 < r1card> ninegrid, so the http body in soap has headers
08:44 < r1card> so does HTML
08:44 < r1card> Basically it's a giant ball of mess.
08:44 < ningu> my API breaks HTTP in a way because queries are sent as POST requests with a JSON body
08:44 < ningu> so I can't really cache responses even if I want to
08:44 < ningu> but I don't see the alternative, GET with a body is a bad idea, and GET with query params is inadequate
08:45 < ningu> (for my case)
08:45 < kuja> why no cache?
08:45 < r1card> ningu, well you're not breaking http at all.
08:45 < ningu> r1card: but POST is meant to not be idempotent, right?
08:45 < r1card> ningu, you're probably breaking some languages which don't expect it like PHP, but PHP doesn't handle this right anyway
08:45 < ningu> r1card: but I've decided that, since I can't send cache headers properly, I'll cache queries on the server end for a certain period of time and return the cached response
08:46 < ningu> I guess there is no rule against caching the POST response -- it's clients that are not supposed to cache it
08:46 < kuja> Ooh, can't cache client-side.
08:46 < kuja> Yeah that makes sense
08:46 < ningu> r1card: there are a number of stackoverflow and other threads about GET + body and everyone says it's a very bad idea.
08:46 < ningu> r1card: I agree it doesn't break the spec.
08:47 < r1card> ningu, I'll just say it this way. HTTP is crap. And it's not your fault that it is. So you make it work how you can, and it's ok.
08:47 < ningu> hehe
08:47 < ningu> ok so how about this much more specific question
08:47 < rendar> r1card: agreed!
08:47 < ningu> restify supports the Accept-Version header
08:48 < ningu> is there a list somewhere of common nonstandard headers that have proved useful in APIs?
08:49 < r1card> ningu, there are some like X-Requested-With, or headers which "override" the method verb, when you can't use PUT/DELETE etc. request methods.
08:50 < r1card> ningu, however it's anything but common I think.
08:50 < r1card> ningu, btw, headers are supposed to have X- in front when they're not part of the HTTP standard.
08:50 < rendar> r1card: i totally agree with you that HTTP is crap and its not suited for today's apps
08:50 < r1card> And I really don't think Accept-Version is in the HTTP standard.
08:50 < r1card> So here we go another deviation.
08:51 < ningu> r1card: no, it isn't. that was the point. :)
08:51 < r1card> My point was it should be named X-Accept-Version, oh well.
08:51 < progrock`> ok, I'm definitely in a lazy mood... was about to add jqueryui to my app simply for the drag resize functionality, lol
08:51 < r1card> rendar :)
08:51 < progrock`> I guess I'll wait till tomorrow when im not so lazy and do it myself
08:51 < ningu> progrock`: I've done that before
08:51 < JamesMGreene> isaacs et al: Is there a way to make `npm pack` include the README.md?  I don't have it in the `.npmignore` file so I'm very confused why it's not included... it does get included if I just do `npm publish`. o_O
08:52 < r1card> ningu, I think one thing most APIs ignore which is part of HTTP and is useful is the plain simple Accept header.
08:52 < progrock`> ningu: if jqueryui wasnt so heavy, I probably would do it right now
08:52 < r1card> ningu, instead of APIs doing ?format=json they can use the Accept header.
08:52 < ningu> r1card: yeah, I'm using the Accept header
08:52 < kuja> r1card: Content negotiation often has implications in application land so I imagine that is the reason
08:53 < deoxxa> browsers send retarded accept headers
08:53 < r1card> I guess, kuja
08:53 < ningu> deoxxa: like what?
08:53 < ningu> deoxxa: fortunately browsers aren't using my API :)
08:53 < deoxxa> lemme dig up an article on it
08:53 < kuja> r1card: For example my APIs handle only JSON (following the jsonapi.org standard)
08:53 < dypsilon> Hi, everyone, this is probably a question for #javascript or #yui, but I trust this community more: have you used YUI? Do you think it's good? How does it compare to other frameworks?
08:53 < deoxxa> http://www.gethifi.com/blog/browser-rest-http-accept-headers
08:53 < gildean> progrock`: if you don't care about old browsers, then you can just add resize: both; to the css of the element
08:53 < deoxxa> @ ningu
08:53 < kuja> But handling the header and I suppose returning an error response would be more appropriate
08:54 < ningu> deoxxa: cool, thanks
08:54 < ningu> dypsilon: I think of YUI as from a previous generation of the web. but I'm not qualified enough to really defend that statement. :)
08:54 < kuja> r1card: owait you are talking about negotiating content through a query string and the like and not using accept header even though you support multiple formats. Yeah that is suck and people who do that are suck.
08:55 < ningu> my API supports application/json and text/event-stream
08:55 < ningu> I wanted to experiment with streaming so I whipped the event stream thing up
08:55 < r1card> kuja heh :)
08:55 < dypsilon> ningu, hmm, yui3 seems pretty modern. But thanks for your opinion.
08:55 < ningu> dypsilon: I have not looked at recent versions of YUI.
08:55 < progrock`> gildean: I'm not supporting old browsers... infact using jquery2... BUT, that wouldnt work for me
08:56 < kuja> wut? you don't support IE6?
08:57 < gildean> progrock`: why not? you can also set max-height and max-width to limit it
08:57 < progrock`> kuja: heh, ironically, on my personal website I made 3 years ago, I have some pretty fancy js animation, and I actually did support ie5.5+
08:57 < deoxxa> ningu: what does event-stream mean? json-per-line?
08:57 < ningu> deoxxa: yeah, http://en.wikipedia.org/wiki/Server-sent_events
08:57 < progrock`> gildean: because I have 4 windows, and they need to resize together
08:57 < kuja> hah nice
08:57 < ningu> deoxxa: with a "data: " prefix
08:57 < deoxxa> ningu: for that, i use application/json;layout=line-stream
08:58 < ningu> deoxxa: hmm
08:58 < ningu> is that common?
08:58 < deoxxa> not that i know of
08:58 < ningu> hehe
08:58 < deoxxa> i settled on that about a year and a half back
08:58 < progrock`> kuja: http://montev.com    I doubt it still works perfect in ie5.5  ... tho its close to (the only reason it may not is because I recently re-wrote it using JADE and Stylus, and probbaly changed thingsenough for it not to be 100%)
08:58 < gildean> progrock`: hmm, if the resize on the element sets off an event, it would be pretty easy to make the other elements follow the resized one
08:59 < gildean> with js that is
08:59 < deoxxa> ningu: got the idea from here: https://groups.google.com/forum/?fromgroups#!topic/nodejs/0ohwx0vF-SY
08:59 < progrock`> kuja: but the onlt reason I did it was becuase it was my first websit ein about 8 years
08:59 < deoxxa> ningu: so i guess it wasn't a year and a half... more like a year
08:59 < kuja> wow, and still running, sweet.
08:59 < progrock`> gildean: yes, I know.. thats what I need to do
08:59 < ningu> deoxxa: so each newline-terminated bit is its own json?
09:00 < ningu> deoxxa: you use it for arrays of objects or what?
09:00 < deoxxa> ningu: i use it for streams - specifically streams with no set length or end
09:00 < progrock`> gildean: tho its a little more complex than that sti;;
09:00 < deoxxa> ningu: my parser tries to parse every line as JSON and skips out if it can't
09:01 < deoxxa> ningu: so i've got a trick up my sleeve if someone can't do the same
09:01 < deoxxa> ningu: i'll just have it like "[\n{}\n,\n{}\n,\n{}\n]"
09:01 < deoxxa> lol
09:01 < ningu> deoxxa: I was toying with streaming JSON formatted database results, where I send 2000 rows, I could send the first one right away, but it actually ended up *slower* in my tests, I think because postgres doesn't actually return the results right away anyway
09:01 < deoxxa> oh
09:01 < ningu> actually postgres has a "single row mode" that is basically a streaming mode but node-postgres doesn't use it :/
09:02 < deoxxa> some of the things i'm doing don't actually have a database in the middle anywhere
09:02 < deoxxa> so streams are √
09:02 < deoxxa> and i use the same deal for mongodb tailable cursors as well
09:02 < ningu> watch out for that ditm attack
09:02 < deoxxa> ditm?
09:02 < ningu> database-in-the-middle
09:03 < deoxxa> lol
09:03 < deoxxa> that's only an attack on performance
09:03 < ningu> deoxxa: why mongo and not... not-mongo? :)
09:04 < deoxxa> specifically because mongo has tailable cursors
09:04 < ningu> hmm
09:04 < deoxxa> and it's a great fit for what i'm using it for
09:04 < ningu> I'm kind of surprised that other NoSQL does not
09:04 < deoxxa> the system i've got at work is basically require("stream") with a nicer UI
09:05 < deoxxa> mongodb just fits so well because it has things like tailable cursors, capped collections, streaming queries, low-care-level writes, etc
09:08 < ningu> what are capped collections?
09:08 < ningu> hmm... fixed-size
09:08 < ningu> that's pretty useful, yeah
09:09 < progrock`> so ningu, i;ve been making a lot of progress with my app
09:09 < progrock`> tho I'm thinking about going to redis or couchdb instea dof mongo
09:09 < ejixin> i decided not to use a nosql db for my project :P
09:09 < progrock`> need to figure out what suits y needs the most
09:09 < deoxxa> ningu: they recently added TTL-based expiration for records too
09:10 < wathek> Hi everybody
09:10 < ejixin> hi wathek
09:10 < ningu> deoxxa: oh really? cool. I use that in redis for caching, really useful
09:10 < deoxxa> ningu: yeah it's pretty neat
09:11 < ningu> ejixin: me too, except for that caching bit
09:11 < ningu> progrock`: I've only used redis and mongo
09:11 < ningu> others here have used riak, leveldb, couch, etc.
09:11 < ejixin> rethink looked really cool
09:11 < dypsilon> deoxxa, do you stream json objects? I mean, is it possible? Does it work well?
09:11 < ningu> dypsilon: of course it's possible
09:11 < deoxxa> dypsilon: i do - i put a single object on each line
09:11 < ningu> there are several npm modules for it, too
09:12 < ningu> personally I think it's best if you can manage to make the whole thing valid json
09:12 < deoxxa> http://npm.im/jsuck http://npm.im/jspit
09:12 < deoxxa> :>
09:12 < ningu> but if you want to read it as a stream too that might be problematic
09:12 < ningu> not sure
09:13 < dypsilon> but you have to mess with raw strings, don't you? there is no magic that sends you the objects of a collection one by one and you receive them on the other end...
09:14 < progrock`> ningu: yeah my coworker was saying he liked riak.  redic or couch seem to be pretty up my ally
09:15 < progrock`> ningu: I want one, that ideally will handle verioning of my documents (where each save I can just send the entire updated doc, but the db will only save the difference... and allow me to view the doc at all the different save states)
09:16 < ningu> progrock`: I have no idea what does that... git? :P
09:16 <@isaacbw>  progrock` riak redis and couch really fill different niches
09:16 < progrock`> ningu: well, I actually considered doing git for it, haha.. but I think couch actually would do it
09:17 < progrock`> isaacbw: I know.. I think couch or redis would work for what I need.. but I need to research more
09:17 < progrock`> luckily its relatively easy for me to switch dbs at this point in the code
09:17 < ningu> how would you do the versioning in couch?
09:17 < progrock`> ningu: I could be wrong, but I htink thats how couch works with document updates
09:19 < progrock`> the app si coming together nicely tho, and mongo works for now, http://codedhere.com/
09:19 < progrock`> Gotta work on some more settings, and convenience things (the account info is automaticly just lisitng the whole user profile I get from google... I need to clean tha tup, and lsit the users docs, etc.)
09:20 < progrock`> and I wanna do sockets soon... tho not sure if I should wait till I decide on what DB to use
09:20 < progrock`> I think that could change how I handle the sockets.. tho, if its liek everything else, it still will be easy to switch from mongo
09:21 < ningu> yeah, I don't think that will mess you up too much
09:25 < owen1> anyone here tried rethink?
09:25 < owen1> rethinkDB
09:26 < mh`> everywhere i've seen it says its not production ready
09:28 < nathan7> progrock`: couch doesn't keep previous revisions for anything but replication
09:29 < nathan7> progrock`: you can't use it for version control
09:29 < progrock`> nathan7: ahh, guess I was reading wrong
09:29 < progrock`> Tho, before I optimize this app, I could use anything and ssave complete copies each save
09:30 < mh`> owen1: https://news.ycombinator.com/item?id=5074637
09:31 < progrock`> I don't think I'll ever have much of a user base... at least not many any time soon
09:31 < progrock`> so will have plenty of time to optimize for the 5% chance I could have a 100+ daily users at some point
09:31 < mh`> mongo will probably be easiest to use
09:31 < mh`> in that case
09:31 < progrock`> already using mongo
09:31 < mh`> stick with it
09:31 < progrock`> maybe
09:32 < progrock`> I'm going to keep researching nosql alternatives
09:33 < mh`> is there something you dislike about mongo? or just for learning
09:34 < mh`> cuz i'd love to be able to use mongodb (can't because volume/traffic), can't imagine not using it if it fit..
09:35 < nathan7> mh`: err...
09:35 < mh`> hrm?
09:35 < nathan7> It has a variety of consistency/safety issues
09:35 < progrock`> mh`: heh,we use mongo at work... and we definitely plan not to in the future
09:35 < mh`> of course it does
09:35 < nathan7> And.. https://github.com/mongodb/mongo-java-driver/blob/master/src/main/com/mongodb/ConnectionStatus.java#L213
09:35 < mh`> but if he's not talking about having any users
09:35 < mh`> whats the difference
09:35 < progrock`> its not the most stable and scalable thing.. at leats not yet
09:35 < mh`> can just out that shit in notepad
09:35 < mh`> mongodb is like json notepad with sockets
09:36 < mh`> s/out/put
09:36 < nathan7> Notepad will reliably tell you if something failed to save to disk
09:36 < mh`> hah, well played
09:36 < progrock`> well, thats why I'm using mongo, extremely simple for now.. but if I can find a similar nosql that fits mreo of my needs, I will move to it
09:36 < mh`> but not really it wont, it uses windows' APIs for that
09:36 < mh`> so only if they do :)
09:37 < mh`> progrock`: depends on what parts of it you're thinking of when you say similar
09:37 < mh`> if you mean a json-literate document store
09:37 < mh`> not sure
09:37 < progrock`> pretty much
09:37 < nathan7> I'm partial to CouchDB
09:37 < progrock`> tho, not 100% required... would just make things easy if it was
09:37 < progrock`> yeah nathan7 , I'm very much considering couchdb
09:38 < nathan7> I loved it a lot before I used it in production
09:38 < mh`> hahaha
09:38 < nathan7> Nodejitsu's production stack runs off it - there are some minor scaling issues
09:38 < mh`> i think that goes for a lot of things
09:38 < Rikle_S> Hi
09:39 < nathan7> Like, we had a CouchDB fuck itself over every five minutes
09:39 < mh`> how..scaly?
09:39 < nathan7> because of some thing the Erlang VM was doing
09:39 < Rikle_S> why can't i use a callback in writeFileSync ?
09:39 < nathan7> ..because it's synchronous, Rikle_S 
09:39 < nathan7> Maybe you're looking for writeFile
09:39 < progrock`> hmmm, I was originally not going to us jqueryUI... but, the dragging/resizing would be convenient.. AND, more importantly now, I need an easy way to add URLs to a list, and elt the user change the order of the list (jqueryUI's sortable works perfect for that)
09:39 < mh`> yeah maintaining erlang VMs was a nightmare in my experience, not knowing OTP
09:39 < mh`> (we ran rabbitmq clusters)
09:39 < progrock`> which I could think of a much lighter weight alternative right now, but nothings coming to mind
09:39 < nathan7> But CouchDB's replication is a godsend
09:40 < mh`> it better be if you're losing nodes every 5 min
09:40 < Rikle_S> nathan7: and if i need to log something to be shure file is write ?
09:40 < Rikle_S> sure
09:40 < mh`> Rikle_S: if (writeFileSync())
09:40 < nathan7> Rikle_S: it will throw an exception
09:40 < nathan7> Rikle_S: instead of giving you an err
09:40 < Rikle_S> ok
09:40 < nathan7> We had our production couch (externally hosted) die
09:41 < nathan7> and we just had replicas ready to go, shit was back up damn quickly
09:42 < progrock`> nathan7: thats good to know that replicas are very easy to deal with... what about scaling, doesit handle sharding well?
09:42 < nathan7> and if I need to know what's going on with an application, being able to see what states it went through by checking out previous revs is really nice
09:42 < nathan7> progrock`: There's no sharding
09:42 < zenetik> hi, since today i was using core assert function to make my tests. What you guys are using most often to make tests (must be travis-ci compatible)
09:43 < nathan7> I use chai's expect, generally
09:43 < nathan7> or chai's should
09:43 < nathan7> progrock`: You can build sharding, though
09:44 < nathan7> progrock`: there are existing solutions
09:44 < zenetik> nathan7: thanks, is it http://chaijs.com/api/bdd/ ?
09:44 < nathan7> zenetik: yep
09:44 < progrock`> nathan7: so is there any kind of scaking for couch, aside from making the box its on bigger 
09:44 < progrock`> sorry, typed that, looked a way then hit enter after you has already answered it
09:45 < zenetik> nathan7: sound good thx
09:45 < nathan7> progrock`: and.. if you're gonna scale beyond what we have at Nodejitsu, I think you're too rich to care if you do it right
09:45 < progrock`> nathan7: haha, I'm not worried aboiut my apps scaling
09:46 < zenetik> does somebody use travis-ci to make network test ? i'm working on socket stuff, so i need to listen an ip/port and make strange tests on it. Does travis-ci support that ?
09:46 < nathan7> Why not?
09:46 < nathan7> You just get a VM, it SSHs into it and runs your shit
09:46 < progrock`> nathan7: more wondein what my boss, and some coworkers will decide on
09:46 < henrikhodne> zenetik: Yes, we (Travis) do support opening sockets.
09:47 < nathan7> progrock`: Sharding CouchDB is a pretty easy problem
09:47 < nathan7> progrock`: You have the mapreduce views and you have documents
09:47 < nathan7> progrock`: Documents have their _id as key, views have, well, their key as key
09:47 < nathan7> progrock`: ..well, actually, views you need to get from every machine
09:48 < zenetik> henrikhodne: cool thanks, so i can make listen something on 127.0.0.1:anyportiwant and have a test to connect and make stuff on it
09:48 < kuja> Any of you CouchDB enthusiasts tried Couchbase?
09:48 < nathan7> progrock`: so, shard by _id
09:48 < nathan7> zenetik: a port >1024
09:48 < nathan7> zenetik: because you're not root
09:48 < Vermicelli> Does anyone uses this in his application here? http://vimeo.com/56166857
09:48 < zenetik> nathan7: perfect perfect
09:48 < henrikhodne> zenetik: nathan7: Yeah, any port above 1024, otherwise you have to use sudo.
09:48 < zenetik> nathan7: henrikhodne: thanks
09:49 < zenetik> henrikhodne: it's a port scanner, i'd like to avoid scanning north korea from travis servers lol
09:50 < Vermicelli> Anyone? I like TJ's idea, but i haven't seen any big application made this way. Do you guys use it?
09:52 < progrock`> damn, the 'esc' key doesn't trigger a jquery keyPress evernt apparently :(
09:52 < progrock`> Vermicelli: whats the video showing?
09:53 < Vermicelli> It is modular development using express, In there the guy had all components in modules (like login, signup, register) . I wonder if anyone here uses this kind of directory structure
09:54 < progrock`> oh... I want to, somewhat... I'm doing the opposite temporarily
09:54 < Vermicelli> https://github.com/vinitcool76/node-modular-demo
09:54 < Vermicelli> Here is an example
09:54 < progrock`> I at least need to split up users maangement, from docs, from whatever else
09:55 < Vermicelli> I mostly use rails like directory structure. controllers, models, views in apps and config directory etc. But I think this could be great way to have reusable and independent component
09:57 < Vermicelli> @progrock any idea? 
10:06 < rud> hmm is anyone really familiar with socket.io..? have a tiny question regarding when to attach events to sockets..
10:07 < deoxxa> don't ask to ask
10:07 < deoxxa> just ask whatever your damned question is
10:07 < rud> i know, i know, but it's .. hard to explain :)
10:07  * deoxxa shakes fist
10:07 < rud> okok
10:08 <@isaacbw> schools should teach irc etiquette
10:08 < blizzardctx> hi... do you know some way to compare two images and calculate motion and direction in node? please
10:08 <@isaacbw> and mailing list etiquette
10:08 < rud> if i set my sockets events inside the callback of my "connection" event, and keep reference of said socket "down the chain", i can add new events to the socket any time, fine.
10:09 < rud> but, if later on, i want to re-access said socket, (either via io.sockets.sockets[sid] or an iteration of io.sockets.clients()) ...
10:10 < rud> i'm not able to attach new events to the socket i got from io.sockets.*
10:10 < rud> made a tiny gist to show the issue https://gist.github.com/kelexel/5692841
10:15 < ningu> whee, json streaming formatter seems to be working nw
10:21 < rud> deoxxa: see..? that was a tricky one :/
10:37 < ningu> well, my first serious attempt to deal with the new stream api seems to have gone well. yay.
10:38 < ningu> transform streams are pretty cool.
11:02 <@Nexxy> ningu, famous last words
11:03 < deoxxa> ningu: transform streams are indeed cool
11:10 < Industrial> Does this make sense to people? Is there any lib out there doing this sort of stuff? :P http://goo.gl/Na8RY
11:15 < dypsilon> Industrial, for javascript? doesn't make a lot of sense to be honest.
11:16 < Industrial> I guess js doesnt have interfaces
11:16 < Industrial> dypsilon: any suggestions appreciated :)
11:16 < dypsilon> Industrial, no interfaces, classes are very different
11:16 < Industrial> https://gist.github.com/Industrial/66fefed918d100313fbf -> http://www.plantuml.com/plantuml
11:17 < dypsilon> Industrial, ah, you mean just a library for drawing such graphs
11:17 < dypsilon> any graphs
11:17 < dypsilon> i thought you wanted to draw a diagramm of your classes
11:18 < Industrial> no no, that's what I'm using to draw the classes :)
11:21 < Industrial> http://goo.gl/eVgNe
12:14 < garrettwilkin> so write('LEFT');
12:28 < garrettwilkin> If I do this tcpClients[0].write('RIGHT');
12:28 < garrettwilkin> then on the other side of the pipe I get buffer
12:29 < garrettwilkin> and calling toString() on it raises an error
12:29 < garrettwilkin> do i just need to use the encoding argument to the toString method?
12:34 < Aleminio> Hey guys, do i have to remove my old node.js installation before installing nodeenv?
13:05 < SpearThruster> I just installed node.js 
13:05 < SpearThruster> does that make me a hipster? =)
13:11 < mscdex> SpearThruster: it makes you an empowered developer
13:12 < mscdex> isaacs: parsing ssh keys?
13:15 < jas-> Good morning, I have a question regarding the proper usage of the "node_isolate" argument to returns on True() & False()
13:37  * mscdex shakes a fist at Ubuntu
13:38 < mscdex> Y U NO BUNDLE NPM WITH NODE PACKAGE
13:38 < ChrisPartridge> mscdex: how old is the node version though?
13:38 < mscdex> i dunno, but it causes issues
13:39 < gildean> pretty old, iirc it's 0.6.19 on 12.04
13:39 < mscdex> i just had someone try to install an addon with their separately installed npm, and node-gyp would not execute for them
13:39 < gildean> dunno what it is on 12.10 or 13.04
13:39 < mscdex> so i don't know if npm is too old or what
13:39 < mscdex> it's a mystery!
13:40 < hatch> https://launchpad.net/~chris-lea/+archive/node.js/
13:40 < ChrisPartridge> yeah use that ^ 
13:40 < mscdex> yeah, that's what i mentioned to this guy
13:40 < mscdex> i wonder if any other distros separate node and npm this way
13:41 < gildean> yeah. add-apt-repository is pretty nice
13:41 < ChrisPartridge> mscdex: pretty sure it's just because its so old, before node+npm shipped together
13:41 < gildean> mscdex: well only if they use an old version i recon
13:41 < hatch> 0.10+ had npm packaged with node
13:42 < ChrisPartridge> pretty sure it was 0.8+
13:42 < hatch> 0.8.x I still had to install separately on Ubuntu
13:43 < hatch> *npm separately
13:43 < hatch> the reason the default node package is so old is because nobody has updated it....feel free to fix :)
13:49 < AAA_awright> mscdex: If it's being bundled together someone's doing it wrong
13:50 < derhasi> hi, i'm currently looking for a good way (maybe a module) to handle storage of objects in JSON, as I cannot use any "third party db" (mongodb, ...) I'm totally dependent on file storage
13:50 < AAA_awright> Generally you're supposed to have the option of seperating components, e.g. openoffice-core, openoffice-common, etc
13:54 < pirho> derhasi: you might enjoy something like https://github.com/felixge/node-dirty
13:57 < derhasi> pirho: a thanks, i'm just about to try out https://npmjs.org/package/json-file-db
13:58 < pirho> there's a bit of a list here: http://stackoverflow.com/questions/6493382/recommend-database-in-pure-node-js-with-no-dependencies
13:58 < pirho> and of course https://github.com/joyent/node/wiki/modules#database
13:58 < pirho> github is down for me ATM sorry, otherwise i'd have a better search for you
14:00 < derhasi> pirho: a great, did not get those results on my search, thank you!
14:00 < pirho> FYI i searched "node database json disk"
14:01 < derhasi> pirho: thanks, i had been going with "nodjs json file db" ... github seems to be totally down :(
14:01 < pirho> if what you're doing is reasonably simple i'd seriously consider writing my own though it could be as simple as
14:01 < pirho> fs.writeFile('db.json', JSON.stringify({foo: 'bar'}))
14:02 < pirho> yeah github isn't having a fun time ATM at all
14:02 < Trudko> guys simple app . I try to use passport for login http://pastie.org/7996551 ,but i am getting error TypeError: Object #<IncomingMessage> has no method 'flash' whole stack http://pastie.org/7996552
14:02 < derhasi> pirho: that i'm already doing, and now wanted to structure it a little bit more, with eventually using some kind of schema
14:03 < Trudko> i cant find cause of this error  and stack doesnt point to my code
14:03 < nathan7> LEVELDB
14:03 < nathan7> That use case is just *screaming* 'LevelDB'
14:04 < derhasi> nathan7: i don't want to use "3rd party" as I want to package my tool to a desktop application
14:04 < derhasi> and thereofre minimize dependencies
14:05 < deoxxa> your own dependencies are still dependencies
14:05 < deoxxa> if, however, you think you can do a better job than google at writing a data persistence library... go nuts
14:06 < derhasi> deoxxa: I never said that
14:07 < nathan7> bundle the dependencies with your app
14:07 < nathan7> and be done with it
14:07 < nathan7> LevelDB is an in-process database
14:07 < nathan7> it's fast as fuck and pretty much ideal for this use case
14:07 < deoxxa> ^ this
14:07 < deoxxa> it's a perfect fit
14:07 < wathek> Hi everybody, I'm using async module to do parallel function call but I need an advice. So what I'm doing is that my node js server receives data from Redis which is a list of articles so for each article it calls a function that will do the async.parallel call to multiple other functions to check the availabilities of that article. Once we get the availability we store it into Redis in a new list. 
14:07 < olalonde> anyone has used both node-migrate and node-db-migrate? not sure which one to chose
14:08 < wathek> so my problem is the while Node JS is doing this the user can send an Ajax Query to retrieve the list of avalabilites but how can I do to be sure that Node JS did check all the articles ?
14:09 < tjkrusinski> having trouble understanding what you're trying to do
14:09 < wathek> tjkrusinski, what i'm trying to do ?
14:09 < tjkrusinski> wathek, yeah
14:09 < olalonde> wathek: you should probably cache the result and update them with a background job
14:09 < derhasi> deoxxa, nathan7: I get your point, sure, and I would do it that way, if I would no enough about supporting different OS (Win, Mac, Linux) to do so. I just wanted to start with a low-level approach only using "nodejs" and the appjs wrapper
14:10 < derhasi> no = know :D
14:10 < derhasi> performance is no importance in my case :D
14:10 < tjkrusinski> yeah like olalonde said, cache the results, which it seems like you said you are doing already no?
14:11 < wathek> tjkrusinski, olalonde ok look I got a PHP page that shows to the user a list of articles, to make things faster, PHP creates a list in Redis with the articles that he's going to show to the client and then Apache render the PHP page and shows it to the client meanwhile Node JS was checking the availabilities of the articles sent by PHP through Redis
14:12 < wathek> tjkrusinski, olalonde once the page is loaded an Ajax query is sent to Node JS server to retrieve the list of the availabilities 
14:12 < wathek> and it updates the shown page
14:12 < AAA_awright> Uhhhh
14:13 < wathek> so my problem is how can be sure that once Node JS receives the Ajax query it has already finished checking the availability of all the articles ?
14:13 < deoxxa> that sounds like a clusterfuck of massive proportions
14:13 < AAA_awright> wathek: Your web applications should return meaningful content without requiring you execute the code it returns
14:13 < olalonde> weird
14:13 < AAA_awright> Code-on-demand is a so-called "optional constraint" of the Web
14:13 < wathek> hmm
14:13 < wathek> AAA_awright, I don't see what you mean
14:14 < tjkrusinski> yeah I think you're going about the problem wrong from the start
14:14 < olalonde> wathek: you could probably use a variable that tells you if its ok to return the result? or use an event handler?
14:14 < wathek> do you guys want to see the code I wrote ?
14:14 < olalonde> yeah that would help
14:14 < wathek> ok
14:15 < wathek> thank you for your help
14:15 < olalonde> anyone has used both node-migrate and node-db-migrate? not sure which one to chose
14:15 < tjkrusinski> github is super down right now
14:15 < olalonde> node-db-migrate seems more active and feature complete
14:15 < olalonde> right
14:16 < wathek> here's the the server code http://pastebin.com/s3VNDaej
14:16 < olalonde> a unicorn told me this
14:16 < tjkrusinski> fucking unicorn
14:17 < wathek> and here's my seconde file which check the availability http://pastebin.com/uc2JNRYn
14:17 < olalonde> wathek: looks like you dont even have an http server… are you calling your node.js script from php?
14:17 < sikor_sxe> hello, i am new to js promises (i am using q). is there a way to pass two arguments in a resolved promise, so the next step can consume two arguments? or do i need to wrap them in an array?
14:17 < wathek> olalonde, right now I didn't yet created the http server because I cannot find an idea to fix the synchro problem
14:18 < wathek> olalonde, each list of articles sent by PHP to Redis got a unique id
14:18 < wathek> olalonde, Node JS should check the availability of each article and store that in a new list into Redis
14:18 < nathan7> sikor_sxe: wrap 'em in an array
14:18 < nathan7> sikor_sxe: you can do a .spread()
14:19 < olalonde> wathek: when node.js receives the ajax call, it should wait for your script to finish checking disponibility then res.send() will be your callback
14:19 < wathek> olalonde, once the Node JS HTTP Server receive a query with the list id  he'll send back that list to the user
14:19 < nathan7> sikor_sxe: Q([1, 2, 3]).spread(function(a, b, c) { /* a==1, b==2, c==3 */ })
14:19 < wathek> olalonde, how can I make it wait for the script to finish checking ?
14:19 < nathan7> sikor_sxe: .spread is like .then + .apply
14:20 < olalonde> exports.check = function(data, callback) {}  …     yourmodule.check(data, function (disponibilites) { res.send(disponibilities) })
14:20 < olalonde> something like that
14:20 < wathek> oh
14:20 < olalonde> callback will be called when all your  async stuff is finished
14:21 < wathek> olalonde, so my current code is fine
14:21 < olalonde> actually, callback should receive an optional error argument so function (err, disponibilities) { res.send(disponibilities); }
14:21 < olalonde> yes
14:21 < olalonde> for some definitions of fine :)
14:21 < tjkrusinski> olalonde, this is a good use case for tests btw
14:21 < sikor_sxe> nathan7: ok, right now i have a deferred.resolve(result), and i also need to pass "db", so that fin() can close the db. how would i use that spread thingie with the deferred?
14:21 < Trudko> guys simple app . I try to use passport for login http://pastie.org/7996551 ,but i am getting error TypeError: Object #<IncomingMessage> has no method 'flash' whole stack http://pastie.org/7996552
14:21 < tjkrusinski> looks like you guys got it sorted out but when it doubt, write some tests
14:22 < wathek> olalonde, thinking
14:22 < olalonde> wathek: the rule is that whenever you do async stuff you should always accept a callback function that is called when your async stuff is done 
14:23 < olalonde> tjkrusinski: yeah, i do test my own code.. most of the time:)
14:23 < wathek> olalonde, yes but you see in this case the check function is called before the ajax query is received
14:23 < wathek> olalonde, and in some case it's possible that I don't receive any ajax query
14:24 < wathek> olalonde, so how can I bind something that I didn't yet receive ?
14:24 < olalonde> wathek: ok then why don't you store the results in redis and wait for the results before you send a response?
14:24 < nathan7> sikor_sxe: deferred.resolve([a, b]); deferred.spread(function(a, b) { }
14:24 < nathan7> sikor_sxe: err, deferred.promise.spread
14:26 < wathek> olalonde, hmm you mean I create a Redis List once the check finish and if I receive an ajax query before it finishs it'll wait until the list is created in redis ?
14:26 <@isaacbw> what the turd
14:26 <@isaacbw> github is down
14:26 < ChrisPartridge> yeah
14:26 <@isaacbw> bastards
14:26 < olalonde> wathek: if you have the results, you just send them. otherwise, you can add a callback function to an array and your check script should make sure to call all callbacks in the array when its finished… something like that
14:26 < ChrisPartridge> github is fucking up
14:27 < wathek> olalonde, I see that should work
14:27 < olalonde> wathek: yes. you can't really wait in a loop because you would be blocking your whole process. but you can save a callback in a variable and have your check script call it when its done
14:28 < olalonde> try it and let us know later if you have a problem
14:28 < wathek> olalonde, wait I don't understand your idea
14:28 < wathek> if creating a loop will block the whole process 
14:28 < wathek> hmm
14:28 < olalonde> you can't do while (true) { if (list_available} break; } 
14:29 < wathek> yes
14:29 < olalonde> but you can callbacks.push(function(err, list) { console.log(list) })
14:29 < wathek> oh !
14:29 < olalonde> and in your code… callbacks.forEach(function (callback) {callback(err, list); } ) callbacks = []
14:30 < wathek> olalonde, interresting !
14:30 < olalonde> :)
14:30 < olalonde> as you read and use more node.js those kind of coding patterns will become more familiar
14:31 < olalonde> they def looks a bit weird when you are coming from PHP
14:31 < wathek> so I receive and Ajax query it'll check if the list is available or not. if it's available it'll get it and that's that. if not it'll add a callback to the check function
14:31 < olalonde> yeah
14:31 < wathek> olalonde, but I think that there's an other problem
14:31 < wathek> olalonde, I can have multiple check
14:32 < sikor_sxe> nathan7: thanks a lot. that seems to work, i replaced ".then" with ".spread" in the next step is this correct? also, right now ".fin(db)" will result in an undefined db, while ".then(db" works, any clue why this might be?
14:32 < olalonde> yeah, then maybe associate the callback with an ID?
14:32 < olalonde> callbacks[check_id] = callback
14:32 < nathan7> sikor_sxe: I don't know what .fin is
14:32 < wathek> I see
14:32 < wathek> that's cool gonna try it
14:32 < olalonde> and callbacks[check_id](err, list)
14:32 < wathek> thank you so much olalonde 
14:32 < olalonde> np, need to get back to work now :)
14:33 < mscdex> it seems like github can't catch a break lately with their servers
14:33 < wathek> olalonde, ok
14:33 < sikor_sxe> nathan7: it's q specific i guess, some kind of finally clause. but nevermind i just read it is supposed to take no args
14:34 < olalonde> you'd think that github would have some sort of auto scaling system in place by now
14:34 < olalonde> or maybe its a db bottleneck?
14:42 < olalonde> anyone uses node-db-migrate?
14:47 < progrock`> is github down?
14:55 < Aria> http://status.github.com/ 
14:55 < Aria> Man. Rough week for them. 
15:10 < pirho> github back up
15:13 < mikolalysenko> for commits only, the pages are still down
15:13 < mikolalysenko> wait, it just went back up for me
15:24 < rethus> hi
15:24 < rethus> i'm a newbe on node.js.
15:24 < rethus> i have download the binary tar.gz to my debian7 server. 
15:24 < rethus> then I#ve extract it. What the next steps now?
15:25 < danharibo> hi
15:25 < danharibo> Using Jade, how can I append a variable to the list of clsses?
15:25 < danharibo> *classes?
15:26 < ningu> danharibo: are the classes already in a variable or not?
15:27 < danharibo> The one I want to add is, the other is in the jade file
15:27 < ningu> I guess I would just do class="foo #{bar}"
15:27 < danharibo> ah 
15:27 < ningu> or, I think you can do a.foo(class=bar)
15:28 < ningu> yes, I've done that before
15:28 < rethus> i have extract node.js from binary.tar.gz. whats now the first step to run node.js?
15:28 < mscdex> rethus: extract it to /usr/local
15:28 < rethus> is there a daemon, a start-script
15:29 < mscdex> rethus: tar zx --strip=1 -C /usr/local file.tar.gz
15:29 < mscdex> rethus: then just use node
15:29 < danharibo> ningu: perfect, thanks.
15:30 < rethus> mscdex:  thanks a lot. But what means, just use it? I'm only familar with lamp. Is node.js listen on a special port? 
15:31 < rethus> mscdex: your tar-command seems not to work. 
15:31 < rethus> tar zx --strip=1 -C /usr/local node-v0.10.9-linux-x64.tar.gz
15:31 <@isaacbw> node.js is a program that you run with javascript source
15:32 < rethus> if i press enter, nothing happens. only new blank_line
15:32 <@isaacbw> are you trying to install it without knowning what it is?
15:32 < mscdex> ^
15:32 < ningu> rethus: no news is good news
15:32 <@isaacbw> -n
15:32 < rethus> i know, what node.js is, but not, how exactly it work
15:33 < kuja> You tell node to run a javascript file, it runs it.
15:33 < rethus> every howto, which i have seen, was only sourcecode, not starting on bare-metal installation of node.js
15:33 < mscdex> rethus: try the examples on the front page of nodejs.org
15:34 < rethus> mscdex: did you have a fix for your tar-command?
15:34 <@isaacbw> 1) install the binary 2) use the binary
15:34 < mscdex> rethus: there is no fix, it worked
15:34 < rethus> mscdex: how long does it take to extract? Now more than 3 minutes
15:36 < rethus> mscdex: seems to be a little long for 5MB ?!
15:36 < ningu> mscdex: didn't you forget the f flag?
15:37 < rethus> i have this:   (17:28:36) mscdex: rethus: tar zx --strip=1 -C /usr/local file.tar.gz
15:37 < rethus> jep, -f was missing
15:37 < rethus> so far so good
15:38 < mscdex> ningu: i copied from a piped version, my mistake
15:39 < rethus> mscdex: no problem. I'm glad to get some support with the startup of node.js
15:39 < ningu> rethus: so, you should now be able to just type 'node' and you'll be in the repl which lets you enter javascript lines and see the result
15:39 < ningu> if you just want to experiment that's useful
15:40 < ningu> if you want to run an app then it would be, $ node app.js
15:40 < ningu> or whatever the name of the file
15:41 < rethus> ok. I understand this. But in which way can node.js act as server? Can i Programm whole Webpages (HTML,JS) on it, with no need of apache?
15:42 < rethus> ahh, i think i know the answer
15:42 < rethus> i have to create a socket where a own writed app is listen
15:42 < rethus> like a mini-webserver?!
15:42 < ningu> rethus: yes, http.createServer()
15:42 < ningu> http://nodejs.org/api/http.html
15:42 < rethus> thats what the example on the node.js page is, isn't it?
15:43 < ningu> yep
15:43 < rethus> hey man, how cool is this - i write my own webserver within 1 Minute ! :)
15:43 < ningu> oh, there isn't a complete example on the api page, nevermind
15:43 < ningu> but it's good for reference
15:44 < rethus> thanks for the hints.
15:44 < volitek> I've set up passport to authenticate a socket.io web socket: http://stackoverflow.com/questions/15093018/sessions-with-express-js-passport-js But what if I want to allow non-authenticated users to connect too, just to restrict what they're allowed to do? I have a game, and I want non logged in users to be able to watch, but only logged in to be able to join.
15:44 < ningu> try making a file server.js and paste the example from nodejs.org where it says "an example: webserver"
15:44 < ningu> actually, it explains it right there on nodejs.org :)
15:44 <@isaacbw> but reading is hard
15:48 < ningu> there, I finally got my streams to do what they're supposed to do 
15:48 < ningu> "it all makes sense now"
15:49 < rethus> Ok, first Hello world with it. Realy great. 
15:50 < rethus> how did you think about node.js. Could it be(come) a full replacement of apache-webserver?
15:50 < ningu> rethus: many people run node apps with no other server in front of them
15:50 <@isaacbw> lol
15:51 < rethus> ningu: but how do they create html-Pages... all with document.write ?
15:51 < ningu> rethus: no, that runs in the browser
15:51 <@isaacbw> I still don't think you understand what node is
15:52 < ningu> rethus: pages are generated dynamically on the server side. or you can serve static pages, but that isn't really the point, then you would just use apache
15:54 < rethus> ah, ok. I only wan't to have an acknowledgment that i understand it in the right way.
15:55 < rethus> Thanks a lot, for supporting me. I've to read a bit now to get more familar with node.js.
15:56 < axscode> http://jsfiddle.net/8ZdXz/ hi guys im just learning node js, i have this sample using express, i tried loading jquery.js from /views/js/ directory but it seems 404, is there anything i need to add to server to offer jquery.js
15:57 < ningu> axscode: normally you put static files in /public in your app
15:57 < ningu> if it's in /public/js/jquery.js the url will be /js/jquery.js
15:58 < axscode> ahhh
15:58 < ningu>  /views is for templates
15:58 < axscode> ic ic got it ill try now
15:58 < axscode> i dnt need to declare public right?
15:58 < ningu> axscode: you do but it's in the express template
15:59 < ningu> where it says app.use(express.static(...))
15:59 < axscode> so when i load express its automatic?
15:59 < ningu> axscode: if you generated the app with, $ express foo
15:59 < ningu> it will insert that line for you
15:59 < ningu> otherwise, you have to put it in
16:00 < axscode> im using this now -> var app = express();
16:00 < ningu> do you have app.use after that?
16:01 < axscode> app.use('/',)
16:01 < ningu> no, that's wrong
16:01 < axscode> ahh sorry
16:02 < axscode> oh i dont have any app.use, only app.get
16:02 < ningu> yeah, then your app won't do anything :)
16:02 < axscode> omg..
16:02 < axscode> so what should i be adding? 
16:03 < ningu> axscode: http://pastebin.com/Z6YEXd2Y
16:03 < ningu> that's the normal template
16:03 < ningu> really all you need is lines 22 and 23
16:04 < farzher> http://stackoverflow.com/questions/16880118/nodejs-exec-keep-shell-alive
16:04 < ningu> and var path = require('path') at the top
16:04 < ningu> so the path.join() will work
16:08 < axscode> ah perfect
16:08 < axscode> ningu, the ./route and ./route/user is problematic though in my environment
16:08 < axscode> not found.
16:09 < ningu> axscode: so take those lines out if you aren't using them
16:09 < axscode> but it seems its loading everything now
16:09 < ningu> I said you only need those two lines
16:09 < axscode> yep i just removed them
16:09 < axscode> thanks... im so happy now
16:09 < axscode> :p
16:22 < Trudko> Guys I have simple submit form http://jsbin.com/orewiy/1/edit but after i click submit code app.get('/', function (req, res) {is exectured rather then app.post('/login', not sure why
16:25 < ningu> Trudko: have you tried with curl from the command line?
16:26 < ningu> Trudko: to determine if it's a browser or server issue
16:26 < Trudko> ningu: no. I am on windows....
16:27 < Trudko> i dont have cygwin or curl installed
16:27 < ningu> well, what does the express log show?
16:30 < rud> hmm i need to share a json'ified object's content across many workers.. (using socket.io and express..) what storage would you recommend to share the object amongst all workers ..? Redis ?
16:32 < mscdex> rud: a simple way would be to request the object from the master
16:33 < mscdex> rud: now if the workers can change that object and you want to propogate those changes, that's a different story
16:33 < Trudko> ningu: sec will have to figure out how to use express log
16:33 < rud> mscdex: that's the case
16:34 < mscdex> Trudko: http://www.senchalabs.org/connect/logger.html
16:34 < rud> it's basically a 3d map of cached content, any worker might update it, any worker might need to read it
16:37 < Trudko> mscdex: thx
16:38 < Trudko> ningu: ok i will go through code once again there has to be some simple error
16:40 < ningu> probably
17:15 -!- mode/#Node.js [+o TooTallNate] by ChanServ
17:15 < Trudko> ok i found out that actually  it got where i wanted to go  but authetication always fails. if you check app.post('/login',   at http://jsbin.com/ibagew/1/edit  in redirects  to aaa on success  and passport do just this   return done(null, user); so this should count as success shouldnt it? problem is I get redirected to bbb
17:27 < addisonj> hrm, anyone know if node-redis does any sort of connection pooling by default? or is each RedisClient just one connection?
17:52 < Eigen> is there a coffescript verison of node supervise
17:54 < sw99> If you were going to start implementing a blogging app (like Wordpress) in Node.js, would you go for MySQL or CouchDB?
17:54 < sw99> i've been browsing, and it's hard to decide nosql vs sql
17:54 < sw99> for small sites, seems it doesn't make a damn difference
17:54 < sw99> even for forums
17:55 < sw99> so
17:55 < sw99> which is easier to use with node?
17:55 < sw99> i guess mongodb is much easier since it's just json objects in javascript?!
17:56 < Eigen> idk
17:56 < Eigen> depends
17:56 < Eigen> how many things will you be searching?
17:56 < Eigen> do you a relational db?
17:57 < Eigen> are you familiar with both?
17:57 < sw99> i've only used relational in the past, mysql
17:57 < sw99> but that's not a factor
17:57 < sw99> i wanna learn mongo if it's gonna be worth it!
17:57 < Eigen> mongodb is nice
17:57 < Eigen> and flexible
17:57 < Eigen> but it has its place
17:57 < sw99> but won't nosql involve data duplication?
17:59 < Eigen> well its a tradeoff
18:01 < Eigen> you know there are a lot of nodejs blogging apps out there
18:01 < Eigen> at least 6
18:01 < Eigen> or platforms
18:02 < Eigen> you should implement a forum 
18:02 < Eigen> very few of those that are on github
18:02 < Eigen> and ones that are underdeveloped last time i checked
18:02 < sw99> hm ok
18:03 < sw99> but the question is which db should i pick lol
18:03 < Eigen> and then you can use socket.io
18:03 < mscdex> sql!
18:03 < Eigen> use mongodb if its just a small project
18:03 < VapidWorx> sw99 and if you can document it into making mongodb super easy to understand I'd appreciate it too :)
18:03 < Eigen> then you can learn something new
18:15 < macbn> anybody uses cassandra?
18:16 < calvinfo> we did for a little while
18:16 < macbn> do you recommend cassandra for mid-small project?
18:17 < calvinfo> probably not - unless you're dealing with a lot of data
18:17 < calvinfo> which is sorted in some way where having sequential reads helps you a lot
18:18 < macbn> oh
18:18 < macbn> ok
18:18 < pickels> I created an array with an event for all the mutating methods. So if you do a.push a.on('push') is fired. I did this by adding a new push to an instance of an array. Now the problem is that if you console.log or compare the array in tests the new methods show up as well. Is there a way to hide these new methods?
18:18 < macbn> ill stick with mysql then
18:18 < calvinfo> what interested you about it?
18:18 < calvinfo> if you *do* have a lot of data, it can actually work pretty well
18:19 < macbn> lots of data, but too lazy to do db migration
18:19 < macbn> im worried about data integrity when doing db migration
18:20 < calvinfo> ah
18:26 < rethus> Whats about security, if i plan to run node.js for differen users?
18:30 < shredding> sw99: What easier should not be the decision.
18:31 < sw99> shredding: which would you pick for a forum/blog app?
18:31 < sw99> and why?
18:31 < shredding> sw99: It depends. To give you an idea:
18:32 < shredding> no sql is basically useful when you have a structure that has no or not many relations. It can therefore scale easily.
18:32 < shredding> If you have  a structure that need to be transaction save, sql may be a good idea.
18:33 < shredding> So, therefore you can't say "What would you pick for a forum".
18:33 < shredding> It strongly depends on the overall requirements.
18:34 < aandy> +1
18:34 < sw99> ok, so a forum has a thread and posts. so there is a relationship right there between thread and post
18:34 < sw99> so that rules out nosql?
18:34 < shredding> sw99: Not necessarily.
18:34 < shredding> One question to ask is, how'd you query for objects.
18:35 < sw99> not sure :S
18:35 < shredding> If a thread is only displayed in a post, you can easily store them in a no sql structure.
18:35 < shredding> On top of that: NO stands for not only, not for no.
18:36 < shredding> So, db's like mongodb have powerful query patterns.
18:36 < shredding> So it's more a question of how you'd structure your apps.
18:36 < aandy> sw99: no. http://pastie.org/7997468 for instance
18:36 < shredding> But to answer your initial question: I suggest you'd use sql.
18:36 < shredding> Because:
18:37 < aandy> but you also have to consider if you're using nested threads, then you would need to aggregate (map-reduce) 
18:37 < shredding> You seem not to familiar with database structure after all, so sql is a great learning resource and you can build a professional structure with it. 
18:37 < shredding> Every developer must be familiar with sql, so go with that.
18:38 < shredding> Next question may be, which SQL Database ^^
18:38 < sw99> well i have some mysql experience
18:38 < aandy> shredding: postgres! ;)
18:38 < shredding> Awesome. Go with it and implement a caching based on redis, that is a very easy structured noSQL Database.
18:39 < shredding> I'd recommend postgres as well.
18:39 < sw99> why postgres over mysql?
18:39 < shredding> There are 2 reasons.
18:39 < shredding> The first is because of a more strict syntax. This may or may not be cool, more of a personal choice.
18:39 < aandy> 1. postgres > mysql in sheer terms of functionality
18:39 < aandy> :>
18:40 < sw99> hmok
18:40 < sw99> and redis is basically the simplest nosql out there?
18:40 < aandy> redis is like a memory store. check out the link i pasted to you
18:41 < aandy> it is very simple, has some neat data structures, but yes, simple
18:41 < shredding> 2nd is that mySQL is maintained by it's proprietary competitor, oracle and has a questionable future.
18:41 < sw99> ok
18:41 < aandy> shredding: and to add to that: focuses on enterprise more than features
18:42 < shredding> Well, maybe.
18:42 < shredding> I use mySQL in PHP and postgres in Python (which are my main languages).
18:43 < shredding> For both I use Database Abstraction and have not many touch points with the underlying structure.
18:43 < shredding> But, yeah, maybe postgres feature richer.
18:43 < aandy> i'd say there are mysql things i can do in postgres, than there are postgres things i can do in mysql. not that that should be a qualitative measure
18:44 < aandy> it should always be about what your data needs are (and how you're going to query)
18:44 < shredding> I found postgres smarter with complex queries, as I found maria db over mysql.
18:45 < shredding> Anyway, Germany kicks against US now, so I'm only left with one eye ^^
18:45 < aandy> huh :)
18:46 < Industrial> Can't seem to reach nodetoolbox.com nor npmjs.org
18:54 < zztripo> hello all, I got a small question, what exactly happen when I'm piping multiple http request to a file stream? I mean is the data gonna be written in order? how does it work ?
18:57 < zztripo> any takers ? :)
18:57 < zztripo> would gladly accept url references too ... :-)
18:58 < nathan7> zztripo: undefined behaviour.
18:59 < nathan7> zztripo: well, interleaved data
18:59 < zztripo> interesting.. so if I would like to have consistent data, lets say rows, I would need to buffer the writes in some manner ?
18:59 < nathan7> zztripo: https://npmjs.org/package/lazy-concat-stream might be what you want
19:00 < zztripo> taking a look, thanks! :)
19:02 < JamesMGreene> isaacs et al: Is there a way to make `npm pack` include the README.md?  I don't have it in the `.npmignore` file so I'm very confused why it's not included... it does get included if I just do `npm publish`. o_O
19:05 < analphabet> anyone ever got an http 401 response when npm was trying to get a package?
19:07 < zztripo> nathan7: perhaps you know about some reference that actually explains whats happening underneath?
19:07 < Alemimio> hey
19:08 < rhalff> does amazon recognized sloppy coders like me and automatically time out your account? :-) I cannot even get in my console anymore
19:08 < Alemimio> Do I need to remove my current node installation if I'd like to use nodeenv?
19:09 < analphabet> Alemimio: try it :)
19:10 < Alemimio> I will, trying to find how to install it without using pip or easy_install :)
19:11 < analphabet> good luck
19:15 < Industrial> Can I install packages from github directly with npm?
19:18 < Industrial> got it
19:19 < ejixin> niggler: 
19:19 < nathan7> zztripo: joyent/node:lib/streams.js
19:19 < zztripo> nathan7: thanks
19:30 < Trudko> Guys I am trying out passport for authetification. if you check app.post('/login', line   at http://jsbin.com/ibagew/1/edit  you can see in redirects  to aaa on success  and passport authetication callback is doing just this   return done(null, user); so this should count as success shouldnt it? problem is I get redirected to bbb - failure
19:36 < progrock`> Man, whats with the client side socket.io.js file                                                                                                                                                                                                                                                                                                                                                                                                                             
19:37 < progrock`> In al lthe examples I just see a js file included "/socket.io/socket.io.js"
19:37 < progrock`> I knwo the file is within npm modules... but how do I access it via a url
19:37 < progrock`> I dont see any example addressing this, and I'm doing the same thing as the examples, but the file is not found
19:39 < Gottox> progrock`: as soon as you use io.listen(server) on a http object, socket.io will patch this object to handle requests to this file.
19:39 <@isaacs> JamesMGreene: it should alwyas include the README.md no matter what.
19:39 <@isaacs> JamesMGreene: what version of node?
19:40 < owen1> do people use domains?
19:41 <@isaacs> JamesMGreene: works for me
19:41 <@isaacs> $ tar ztvf readme-pack-0.0.0.tgz
19:41 <@isaacs> -rw-r--r--  0 24561  20        314 Jun  2 12:39 package/package.json
19:41 <@isaacs> -rw-r--r--  0 24561  20          4 Jun  2 12:39 package/README.md
19:42 <@isaacs> Industrial: yes, you can install packages directly from github with npm
19:42 <@isaacs> Industrial: npm install isaacs/sax-js
19:42 < Industrial> ow thats so nice :D
19:50 < JamesMGreene> isaacs: Apparently I'm still on an older version here: Node 0.8.22, NPM 1.2.14... but yeah, `npm pack` definitely left out the README.md =\
19:52 < progrock`> Gottox: weird, since I keep getting a 404 on that, even tho everything else appears to be right
19:53 < progrock`> "Cannot GET /socket.io/socket.io.js"
19:54 < Industrial> With Mocha, say I'm testing a prototype and it's methods, how do I create a new instance with beforeEach for each test?
19:55 < Industrial> just do var a=null;forEach(function(cb){a=new Foo;cb();}); ?
19:55 < Industrial> beforeEach*
19:55 < Anduck> can i ask some help about wss?
19:55 < Anduck> i am receiving an error i can't google info about
19:56 < Anduck> "error: reserved fields must be empty 1002"
19:56 < Anduck> trying to wscat -c wss://echo.websocket.org
20:13 < joaojeronimo> Hi guys, does anyone know an alternative to etsy's statsd ? It has very scary code...
20:13 < progrock`> of course running a single ine socket.io app servers socket.io.js np... but mine wont in my mre complex (yet still simple app.js)
20:22 < progrock`> oh got it
20:22 < progrock`> had to pass socket.io server not app
20:23 < progrock`> woohoo, working sockets... now time to get it working within my app
20:23 < eazel7> hi there progrock`
20:25 < progrock`> hey
20:35 < owen1> progrock`: what do u use statd for?
20:35 < progrock`> statd?
20:39 < owen1> progrock`: sorry. joaojeronimo^^
20:39 < owen1> joaojeronimo was asking about it
20:41 < Industrial> How do i create a new Server object for each test? https://gist.github.com/Industrial/c4632d716cc72d649775
20:45 < joaojeronimo> progrock`, statsd sorry
20:48 < owen1> joaojeronimo: sure. can u describe your usecase for using it?
20:48 < owen1> just curious
20:56 < Industrial> How do I make my mocha tests so that I can test with a new instance in each test?
21:00 < joshowens> Is there a trick to getting persistent http connections in node.js?
21:00 < joshowens> I am using the net module and creating a connection
21:00 < bnoordhuis> joshowens: define 'persistent'?
21:00 < joshowens> I've set keepAlive to true and timeout to 0, but it drops the connection after about 56 seconds
21:00 < joshowens> keep the connection open
21:00 < joshowens> this is for airplay, if the connection dies, airplay stops
21:01 < joshowens> long running, persistent, etc :)
21:01 < bnoordhuis> are you the server or the client?
21:01 < joshowens> I am the server connecting to a client
21:01 < joshowens> net.createConnection
21:01 < bnoordhuis> not sure i'm following. a server that connects to a client?
21:02 < joshowens> I should say, I am a server side node.js piece of code that connects to an appletv client
21:02 < bnoordhuis> ah, right
21:02 < joshowens> so I guess for the purposes of net.createConnection, I am a client
21:02 < joshowens> sorry
21:02 < bnoordhuis> okay, clear :)
21:03 < bnoordhuis> just net.createConnection with a zero timeout should do it
21:03 < bnoordhuis> you're sending http over the wire?
21:03 < joshowens> bnoordhuis: I believe so yes
21:04 < joshowens> it is just a simple post request
21:04 < bnoordhuis> can you gist your code?
21:05 < joshowens> isn't mine, but sure
21:05 < joshowens> https://github.com/benvanik/node-airplay/blob/master/lib/airplay/client.js
21:05 < joshowens> that is the npm package I am using
21:06 < bnoordhuis> joshowens: well, for one it sends \n rather than \r\n
21:06 < joshowens> https://gist.github.com/queso/5694982
21:06 < joshowens> I added this in
21:06 < joshowens> around line 16
21:07 < bnoordhuis> joshowens: i don't see anything obviously wrong
21:08 < bnoordhuis> iow, sorry, i don't know
21:08 < joshowens> ok, thx for looking
21:08 < joshowens> soooo close to getting this all done too :)
21:09 < joaojeronimo> owen1: I'm using statsd to do what people do with statsd... aggregate metrics before dispatching them to a graphite backend
21:10 -!- mode/#Node.js [+o TooTallNate] by ChanServ
21:14 < joshowens> man, it is like clockwork, dropping the connection at 56 seconds
21:19 < M28> there's a possible bug in that airplay client thing
21:19 < M28> https://github.com/benvanik/node-airplay/blob/master/lib/airplay/client.js#L48
21:19 < M28> line 61: body = res.substr(splitPoint + 4);
21:20 < M28> if the last header ends in \r\n, which shouldn't happen, but it could be possible, it'll skip the first character of the body
21:20 < M28> since the dev is bothering to normallize the header, he should check for that
21:26 < JohnMcLearSadFac> then create an issue.
21:30 < owen1> joaojeronimo: is it only for server side?
21:31 < joaojeronimo> owen1: yes
21:32 < joaojeronimo> owen1: I'm going to use hostedgraphite.com and need statsd to send stuff there. I don't want to use the hosted statsd (from the same company) because that would be an insane amount of trafic
21:33 < ilovelampordoie> hi, i setup a proxy with http-proxy. it works fine for the initial request and it says it handles webrequests. but all of the subsequent requests (like loading images) still happen from the client. 
21:33 < ilovelampordoie> *handles websockets
21:48 < owen1> joaojeronimo: looks nice. is it hard to host it yourself? 
21:57 < Chiffon35> hi all
22:02 < joaojeronimo> owen1, it's a bit hard and messy to host graphite myself, but I need to run statsd myself and it has awful code.. that's why I was looking for a better alternative
22:03 < Chiffon35> About javascript in general : does anyone know if there is a way to reduce the memory size of a number (8 bytes) if i already know that my number is between 0 and 150 ?
22:15 < bjartwolf> Would anyone care to explain this to me: https://github.com/joyent/node/issues/5610 ? I'm trying to get how this is caused by backpressure, but I don't really get why the stream would go into permanent freeze
22:19 < ningu> bjartwolf: I agree, I also don't understand.
22:20 < ningu> the key question is what isaacs says: What are you doing with the output of mplayer?
22:21 < ningu> iirc mplayer just prints on the system audio device and just prints a few bits of status to stdout, right?
22:21 < bjartwolf> ningu: I'm just worried that I didn't really make myself clear and he closed it to early, but at the same time I'm pretty new to node.js and never touched the source, so I don't really want to "argue" on it either
22:21 < bjartwolf> ningu: I'm not doing anything other than playing the video
22:21 < ningu> what I meant was sends data to the system audio device
22:22 < bjartwolf> you can clone the repo mentioned, if you like, it includes the video. https://github.com/bjartwolf/videoHangs
22:22 < ningu> and to the display I guess
22:22 < ningu> ok
22:22 < bjartwolf> it plays the video and it hangs if you run mplay or play (it's with mplayer and ffplay)
22:22 < bjartwolf> should freeze up around 19 seconds with node.js newer than 0.9.5
22:22 < bjartwolf> and the hackedplay works
22:24 < ningu> hrm, my ffmpeg only has ffmpeg, no ffplay, on OS X
22:24 < bjartwolf> ningu: :(
22:32 < Raynos> I'm trying to symlink things into node_modules
22:32 < Raynos> what's the best way to do this
22:33 < ningu> npm link?
22:33 < Raynos> npm link does global shit 
22:33 < Raynos> I want ./browser to be node_modules/browser
22:33 < Raynos> so I can require("browser") in my tests instead of require("../../")
22:34 < Raynos> npm link fails because the folder doesnt have a package.json
22:35 < Zolmeister> Raynos: put it in a folder under node_modules (node_modules -> mymod -> mymod.js), though you may still need a package.json to tell it which is the js file
22:35 < Raynos> i want the code to be in my project. I really just want a symlink in the node_modules folder, i just can't seem to get it to work :/
22:36 < ningu> bjartwolf: change it to var mplayer = spawn('mplayer', ['-quiet', '-']);
22:37 < ningu> bjartwolf: mplayer prints a continuous status line to stdout, if there is nothing to consume it node stops the pipe
22:37 < ningu> .resume() means, essentially, to discard it
22:37 < ningu> since there are no listeners
22:37 < ningu> so isaacs was correct
22:38 < ningu> not sure for ffplay
22:38 < ningu> since I don't have it
22:38 < bjartwolf> It doesn't matter if it's mplayer of ffplay
22:38 < bjartwolf> the thing is... why does it freeze after 19 seconds?
22:39 < bjartwolf> How come the stream freezes? 
22:39 < ningu> bjartwolf: you weren't listening to what I just said, apparently
22:39 < ningu> try it first
22:39 < bjartwolf> oh, sorry, something higher up there....
22:39 < bjartwolf> i'll try :)
22:39 < ningu> I don't know what ffplay prints to stdout but that's relevant here
22:39 < ningu> so you should try that from the terminal as well
22:42 < bjartwolf> Ah, ok, get it... so mplayer probably tries to write something to stdout after a while, and since nothing it's consuming that it freezes...
22:42 < ningu> yep
22:44 < bjartwolf> ningu: Thanks. It worked. I should probably write up a blogpost or something, it was  abit weird. Since it's hard to see by piping mplayer.stdout to process.stdout that anything particular happens
22:45 < bjartwolf> ningu: So still not 100% sure I get why it happens
22:46 < ningu> yeah, I understand why stdout stops, I don't really understand why that's related to stdin
22:46 < bjartwolf> that's the backpressure thing, I guess. It stops so it freezes all streams writing to it
22:47 < ningu> I suppose but stdin and stdout are different streams
22:47 < ningu> and one is not piped to the other afaik
22:49 < bjartwolf> ningu: I guess (not sure yet) that the output fills up the 16 kb buffer and since it is not piped anywhere it freezes the upstream streams? 
22:49 < ningu> yes, but I don't see why the child processes's stdin should *be* upstream of its stdout
22:49 < ningu> that's what i'm saying
22:49 < ningu> but apparently it is
22:51 < bjartwolf> ningu: I'll try writing up a blogpost at some point, it sort of is an intersting gotcha, even if it makes sense and works as designed, it tricked me.
22:52 < bjartwolf> Especially as it doesn't look like the stdout is really filling up that fast, cause when you pipe it to process.stdout it's not updating much at the screen. I get why it is like that, it's just easy to overlook that the output of the child process is something you should care about, even when you don't care
22:52 < ningu> isaacs says: "@bjartwolf So, what's happening is that the mplayer program is not consuming any more input until something reads its output."
22:52 < Eigen_> how do you stop your relative paths screwing up when using extends with jade
22:53 < Eigen_> *how do you keep them intact
22:53 < ningu> bjartwolf: so that part is entirely internal to mplayer, and apparently also to ffplay.
22:53 <@isaacs> bjartwolf: my guess is that it stops at the same point because mplayer has some default amount that it's willing to buffer before it stops reading.
22:53 <@isaacs> bjartwolf: what's the data coming out of it?
22:53 < ningu> isaacs: it's weird because it's just the status line output. see my comment above, when you add -quiet it's fine.
22:54 < ningu> it's a line that shows how many seconds have been played so far, and you can type commands to pause etc.
22:54 < bjartwolf> isaacs: yes, I think ningu was onto it. It seems to freeze when the buffer of stdout is full.
22:54 < Eigen_> ..
22:54 < ningu> so yes, it's outputting stuff, but it's a bit odd to me that it would stop reading stdin when nothing consumes that status line.
22:54 < ningu> Eigen_: I have no idea what you mean by "keep them intact"
22:55 < Eigen_> my relative path switched from / to /views
22:55 < Eigen_> *ptahs
22:55 < Eigen_> *paths
22:55 < Eigen_> when I render this view
22:55 < ningu> Eigen_: of course, /views is the root directory for jade by default in express
22:55 < bjartwolf> isaacs: The data coming out of mplayer is just the output log
22:56 < ningu> bjartwolf: but the status line is continuously printed while it's playing and that's what seems to be relevant
22:56 < bjartwolf> ningu: yes
22:56 < ningu> the other lines of output are printed either way and it seems to not matter since it's a small amount
22:56 < bjartwolf> ningu: when i piped it to a file, it seemed to grow to apporx 50kb at the point where it freezed
22:57 < bjartwolf> ningu: (very innacurate measurement based on just piping the output to a file and rehitting ls -l..)
22:57 <@isaacs> bjartwolf: is there a flag or something to tell it not to do that?
22:57 < bjartwolf> ningu: yes, ningu found it for me
22:57 < bjartwolf> -quiet
22:57 <@isaacs> bjartwolf: ah, rad
22:57 <@isaacs> bjartwolf: does it still hang if you do -quiet?
22:57 < bjartwolf> isaacs: nope
22:57 < ningu> isaacs: I still don't understand why mplayer decided to do that, but it's an mplayer-internal thing
22:57 <@isaacs> sweet :)
22:58 < bjartwolf> ningu: same with ffplay, it seems.
22:58 < ningu> does ffplay have a similar flag?
22:58 < bjartwolf> I'll look for it... should have a million flags, ffmpeg sure has a lot... :)
22:58 < ningu> hehe
23:09 < ningu> the flamegraph page at http://dtrace.org/blogs/dap/2012/04/25/profiling-node-js/ says "The helper doesn’t work with 64-bit Node yet." what is "the helper" -- stackvis?
23:14 < ningu> looks like it's the ustack helper for node
23:14 < ningu> and looks like it does now support 64bit
23:15 <@tjfontaine> your assumptions are more or less correct
23:15 < ningu> tjfontaine: eh?
23:16 < ningu> I'm going to set up a 32bit instance anyway since it will be way under 4gb ram 
23:16 < ningu> unless you think that's silly :)
23:17 <@tjfontaine> smartos is moving to multilib anyway, so
23:17 < ningu> multilib = supports both?
23:17 <@tjfontaine> but 32bit is fine yes
23:17 < M2Ys4U> hmm, node is crashing on my under load
23:17 < M2Ys4U> ../deps/uv/src/unix/stream.c:726: uv__write: Assertion `stream->write_queue_size == 0' failed.
23:17 < M2Ys4U> Aborted (core dumped)
23:17 <@tjfontaine> M2Ys4U: 0.10.8?
23:17 <@tjfontaine> ningu: yes
23:17 < M2Ys4U> tjfontaine: yes
23:17 <@tjfontaine> M2Ys4U: please upgrade to 0.10.9 and try again
23:17 < ningu> tjfontaine: any performance or other benefits of 32 vs. 64 bit for the smallest standard instance type (standard 0.25)?
23:18 < M2Ys4U> tjfontaine: will do
23:19 <@tjfontaine> ningu: just use what you're most comfortable with
23:19 < ningu> ok
23:19 <@tjfontaine> ningu: and if you don't know what that is, let it go with whatever the default is
23:19 < ningu> there is no default :)
23:19 < ningu> I've used both before, no discernable difference that I'm aware of
23:20 <@tjfontaine> as any well designed system should be :)
23:20 < ningu> hehe
23:20 < ningu> I meant both before on non-joyent cloud instances
23:20 < ningu> I have a 32bit small vps and a 64bit ec2 micro
23:20 < ningu> this is my first experiment with smartos
23:24 < ningu> weird, it isn't letting me create the instance
23:26  * ningu complains to support :)
23:28 < ningu> well, at least it's consistent... I can't create *either* a 32-bit or 64-bit instance. clearly a well-designed system ;)
23:37 < standoo> Has anyone seen Genatz?
23:43 < sja> Hey guys! Are there any SSL-Cert-Updates for https://registry.npmjs.org/ ???
23:44 < sja> I got an invalid cert on chroma and an exception on npm installation of a package. Error: CERT_NOT_YET_VALID
23:44 < sja> chroma = chrome
23:45 < mscdex> sja: that's because npmjs.org uses a self-signed cert
23:46 < deoxxa> yawnt: i don't think you know who you're messing with
23:46 < mscdex> sja: it shouldn't be a problem with npm CLI though
23:47 < sja> mscdex: ok, i made a git, you can see my error: https://gist.github.com/sja/5695394
23:48 < mscdex> sja: *shrug* it works for me
23:48 < mscdex> sja: you're not going through a proxy or anything?
23:48 < sja> nope, direct connected
23:49 < sja> some hours ago i installed other pkgs, so I wondered why this fail
23:50 < mscdex> sja: is the date on that machine correct?
23:50 < sja> ok I tried it again, nothing changed. still CERT_NOT:YET_VALID
23:50 < mscdex> s/correct/current/
23:50 < sja> wohoo
23:51 < sja> yeah, I'm on a raspberry without rtc ... I'm back in the 70s :-)
23:51 < mscdex> :-)
23:51 < sja> thanks!
--- Log closed Mon Jun 03 00:00:00 2013
