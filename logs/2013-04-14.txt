--- Log opened Sun Apr 14 00:00:04 2013
--- Day changed Sun Apr 14 2013
00:00 < andreleite77> test
00:00 < andreleite77> x/join #ubuntu
00:08 < ryanaz> with express how do I do the same thing with post as I can do with get for the params?   app.get('/url/:params', function() { });
00:17 < ryanaz> with express how do I  get params with the app.post () ?    With get it looks like this:  app.get('/url/:params', function() { });
00:20 < mscdex> ryanaz: req.params IIRC
00:21 < mscdex> oh wait
00:21 < mscdex> req.body if you're using bodyParser
00:21 < ryanaz> the syntax for post isn't working â€¦ 
00:22 < ryanaz> app.post('/url/:params', function() { });
00:22 < ryanaz> that doesn't work with '/url/:params'
00:22 < mscdex> for url parameters use req.params
00:22 < mscdex> or req.param(name)
00:23 < mscdex> req.param() searches req.params -> req.body -> req.query
00:25 < Ritzton>  I would like to get the socket object in the toto function, how can I make it please ? http://pastebin.com/VPTGGiax
00:27 < mscdex> Ritzton: use an anonymous function or write a function that returns a closure with access to the socket
00:30 < Ritzton> mscdex> could you write small examples please ? it would be very nice
00:30 < mscdex> Ritzton: an example of the latter: https://gist.github.com/mscdex/a21e781b3ab6084cd695
00:30 < ryanaz> mscdex:   I think you're missing the question ? 
00:30 < mscdex> ryanaz: or you're not explaining it well enough ;-)
00:31 < Ritzton> mscdex> thank's it was what I am trying to do !
00:37 < nanashiRei> okay guys, i have a serious problem. i've got myself a memory leak, but i have no idea how to find it. Is there good profiling tools that you would recommend?
00:37 < nanashiRei> Any help is much appreciated :)
00:38 < Ritzton> mscdex> am I allowed to do something like that : http://pastebin.com/AhMxQYfJ ? to write the "socket.on" where I wrote it
00:41 < mscdex> Ritzton: as long as your `toto` function takes in those two parameters and returns a function with a signature that matches the 'message' event
00:42 < mscdex> nanashiRei: javascript memory leak or C++ addon memory leak?
00:52 < nanashiRei> mscdex: more like a leak i created
00:52 < nanashiRei> But i can't find it. :/
00:52 < nanashiRei> It's the first time in like 2 years i managed to do this :D
00:53 < nanashiRei> (that means no C code)
00:54 < mscdex> nanashiRei: https://github.com/dannycoates/node-inspector and https://github.com/lloyd/node-memwatch are two you might look at
00:55 < nanashiRei> i'll try those
00:55 < nanashiRei> thanks
00:55 < nanashiRei> kinda in a no-way-out situation here
00:55 < nanashiRei> :) thanks
01:02 < Ritzton> is there a function in node js to encode an array to make json data ?
01:02 < cloudbender> ok whew
01:02 < cloudbender> greetings nodesters
01:05 < trippeh> Ritzton: JSON.stringify(your_array_or_whatever)
01:06 < cloudbender> JSON.jsonify
01:06 < cloudbender> ...encodes
01:06 < cloudbender> .stringify decodes
01:07 < Ritzton> trippeh> thank's
01:10 < cloudbender> Is the Buffer stuff new ? (looking at the api)
01:13 < mscdex> cloudbender: eh?
01:13 < cloudbender> Either I missed it before, ot there are more buffer functions in node as of recently.
01:14 < cloudbender> I.E. buf.toJSON() etc.
01:14 < Ritzton> in node js it is said that socket.broadcast send to everybody except the sender, how can I make it send to everybody included the sender ?
01:21 < mscdex> Ritzton: io.sockets.broadcast
01:54 < Ritzton> I am sorry I did what was written here : http://stackoverflow.com/questions/4641053/socket-io-and-session and I cant understand why I have this error => TypeError: Cannot read property 'headers' of undefined ?
02:01 < Ritzton> any idea please ?
02:01 < st_luke> Ritzton: it's a cookies issue
02:02 < Ritzton> what I did wrong ?
02:02 < st_luke> prolly nothing
02:02 < Ritzton> what do you mean ?
02:03 < Ritzton> this is not working so I did something wrong
02:04 < st_luke> that tutorial is over 2 years old
02:06 < Ritzton> yeah ok but how to process now please ?
02:13 < cloudbender> Ritzton, sometimes your values might be coerced to 'undefined' when you pass them.
02:14 < substack> isaacs: why would I get this message? npm WARN cannot run in wd substack.net@0.0.0 ./install.sh (wd=/root/data/ploy/work/aba5caa9158106d3cd5686ff7d78a94c6a807da6.1365905211042)
02:15 < substack> npm doesn't like my install.sh when I npm install .
02:15 < substack> it's a postinstall script
02:16 < substack> I want npm to run a build step after it does install and this is for an application, not a module
02:18 < substack> upgrading npm to see if that goes away
02:19 < substack> looks like it only does this if I'm root
02:19 < substack> that's dumb
02:19 < substack> this is forcing me to add special cases
02:20 < substack> I can't just wipe this image, I don't care if it gets completely owned
02:51 < st_luke> substack: you can set unsafe perms
03:05 < dazoe> why is fs.readFile camelcase and fs.readdir is all lower?
03:05 < dazoe> it's been bugging me
03:06 < hackedy> dazoe: yeah same I just noticed that today. ew.
03:06 < substack> st_luke: I found a hacky way to work around it
03:06 < substack> people shouldn't need to configure stuff to use ploy
03:06 < substack> configuration is for chumps
03:06 < dazoe> substack: var fs = require('fs'); fs.readDir = fs.readdir?
03:07 < mmalecki> fs.readdir is almost a direct bind to readdir(3)
03:07 < mmalecki> while readFile is a rather complex function
03:07 < hackedy> dazoe: well, only File and Sync ever get camelcased in most of the fs module functions
03:07 < substack> dazoe: because readdir is (readdir) not (read)(dir)
03:08 < dazoe> ah
03:08 < hackedy> haha I just realized fdatasyncSync exists
03:08 < substack> the name of the function that node is calling in dirent.h is readdir
03:08 < substack> but there is no readfile in the stdlib
03:09 < substack> so readdir is like a loan word from posix
03:09 < dazoe> substack: but it would be nice to beable to guess method names, instead of having to go the the documentation all the time
03:11 < substack> dazoe: that goes away
03:12 < substack> it helps that node doesn't have too much to memorize
03:12 < dazoe> yeah, it's not bad at all.
03:12 < dazoe> i've actaully have really enjoyed using node
03:13 < supersym> i fucking HATE css
03:13 < supersym> sorry... can I say that?
03:13 < supersym> dumb stupid rules
03:14 < rodan_> at least the method parameters are always pretty obvious
03:16 < dazoe> supersym: css isn't that bad, till is screws up and it takes hours to find that one thing the browser is adding.
03:19 < supersym> dazoe: for one its very counter intuitive at times (floats, clear both) but in this case im baffled about what it does in the background... stylus isnt really helping either
03:20 < supersym> anyway i finally do get some aspect of 'bringin it closer to the element' override rules
03:20 < supersym> i just had to rant tho ;) *goes off to hunt again*
03:20 < rodan_> are you using nib?
03:20 < rodan_> i find it eases, some of the pain.
03:21 < rodan_> still torture though lol
03:24 < supersym> sigh... first hand experience, again: only use classes, don't nest too deep, and when using stylus make sure to check the compiled output
03:25 < supersym> @rodan_ yeah I use some nib features, it could use a few more tho :)
03:28 < cloudbender> I echo supersym's sentiment RE: css
03:28 < cloudbender> css is a suck sandwich with a side of suck and extra suck sauce
03:31 < misteroneill> imo, css is deceptively simple in that you can learn it really easily, but it also requires a ton of discipline to keep it even reasonably sane or maintainable
03:35 < supersym> lol 
03:35 < supersym> I had it easier learning clojure
03:35 < supersym> but i have to admit, some of this is my own fault for choosing significant whitespace over parens
03:36 < supersym> copy-paste mixed spaces/tabs and more of those silly things
03:54 < Glacialheart> this nodejs asynchronus stuff is too fast
03:54 < Glacialheart> i'm not used to it
03:58 < cloudbender> Glacialheart the thing to remember is that the asynchronous task(s) is, in most cases, still executing on long after flow returns to the caller.  You MUST trap the callbacks.
03:58 < Glacialheart> yep. that is exactly what i need to learn
03:59 < Glacialheart> i am just having trouble getting my callbacks right
04:01 < Glacialheart> what do i do if i need like 3 callbacks in a row?
04:01 < Glacialheart> i have a function that needs a callback and that function needs a callback
04:02 < cloudbender> You mean 3 sequential tasks to be completed in order ?
04:02 < Glacialheart> yes
04:03 < Glacialheart> i'm reading in data from a file
04:03 < Glacialheart> and on each line, there are three things I want to do
04:03 < Foxhoundz> anyone know of an ARM build of node.js?
04:03 < cloudbender> well, you can have each callback call the next function in line, but as you probably have noted, this will create a 'pyramid' of calls.
04:03 < Foxhoundz> I tried compiling it on RaspberryPi, but it caused it to overheat
04:03 < Foxhoundz> and crash
04:03 < Glacialheart> yep, it feels like a pyramid of calls
04:04 < Glacialheart> i'm nesting my code, but i'm finding it's hard even then to see the callback heirarchy
04:05 < Glacialheart> i'll keep unit testing what I'm doing, and maybe come up with a way to do it with just 1 callback instead of 2 or more
04:05 < cloudbender> It takes some practice to change yer brain.
04:05 < cloudbender> One thing that helps is using process.nexttick
04:06 < cloudbender> have a callback schedule the next call to the loop, rather than using a direct casll.
04:06 < Glacialheart> interesting
04:07 < Glacialheart> will that make your code wait?
04:07 < Glacialheart> and make it a little less asychronus?
04:07 < cloudbender> Yes.
04:07 < cloudbender> Less nested.
04:07 < cloudbender> And events are very handy also.
04:08 < cloudbender> Node is stable and robust.  It's worth a few weeks of stuggle to get past a few concepts.
04:08 < gnarf> Glacialheart: check out npm async
04:09 < gnarf> Glacialheart: https://github.com/caolan/async
04:09 < cloudbender>  oh, no.
04:09 < gnarf> you desribed a series or a waterfall
04:09 < cloudbender> It will not make your code wait.
04:09 < Glacialheart> cool, i'll check it out
04:10 < cloudbender> It will place the call into a processing queue and move on.
04:10 < gnarf> there are other similar libs that make callback chains less nightmarish
04:10 < gnarf> but async is my goto, so i dont know other suggestions
04:11 < Havvy> async is most peoples' go-to solution.
04:16 < Ritzton> I managed to use session with socket io with this example : https://github.com/senchalabs/connect/issues/588#issuecomment-10271868 but I would like to know how I can update session for it to not expire ? I tried to do this http://pastebin.com/cSvQJUy7 but the problem is when I open 2 browser I am catching the session of the other browser
04:50 < Foxhoundz> is there any way to package an app so that it can be deployed and all dependencies installed in one command (akin to bundle install for ruby)
04:53 < Havvy> Foxhoundz: Yes. You fill out package.js's dependencies and devDependencies objects properly.
04:55 < Havvy> And then you put your unique app files in a git repo with a private repo somewhere on the web. Then you download the repo where you want and run `npm install` and everything should work.
05:04 < Ritzton> I managed to use session with socket io with this example : https://github.com/senchalabs/connect/issues/588#issuecomment-10271868 but I would like to know how I can update session to make it not expire ? I tried to do this http://pastebin.com/cSvQJUy7 but the problem is when I open 2 browser I am catching the session of the other browser, the problem comes from the session.reload
05:13 < hackedy> where's isaacs :<
05:22 < Ritzton> hackedy ? would you have example working with express and socket.io dealing with session timeout ?
05:24 < sha0coder> hi
05:28 < hackedy> Ritzton: ...no? I would not.
05:28 < hackedy> maybe setTimeout? I don't know
05:29 < hackedy> oh wait. oh.
05:33 < Ritzton> hackedy> I think I have solved my problem but now I dont have any expiration date :-/ express.session({key: 'express.sid', cookie: {expire: false}, store: sessionStore})
05:38 < paulbohm> hi, how can i ask a fs.WriteStream to flush to disk?
05:41 < kepp_> getting a "failed to fetch from registry", is there a problem with the registry atm or is this my end?
06:45 < yellah> What is this doing?   client.name = data.match(/\S+/);
07:04 < ningu> so in this language I'm working on, the word for worm sounds like "cowboy"
07:36 < faceleg> ningu: wtf
07:59 < ningu> faceleg: it's just a series of sounds
07:59 < ningu> faceleg: btw, http://lexifier.lautgesetz.com/
07:59 < ningu> that's one of the things I've been working on
07:59 < ningu> it's the app I decided to angularize :)
07:59 < h22> @the topic.. Is that a joke? or actually the phponpie framework?
08:18 < Naked_> hey, what's a good mutex/condition library for nodejs? I'm just trying to prevent multiple asynchronous calls from accessing the same file at the same time, nothing to do with threads or such
08:26 < luto> is it possible that fs.mkdirSync exits before the dir is really created? o.O
08:27 < ningu> anything is possible but that would be a bug :)
08:27 < luto> http://pastebin.com/raw.php?i=whJhZFuU any other explanation for that? sometimes it works, sometimes it doesn't
08:35 < andrei`> I'm confused about how runInThisContext works. When I put 'var a = function(b,c) { return b + c; }; console.log(require('vm').runInThisContext("a(2,3)"));' into a file and run it with 'node filename.js' I get an error message about a being undefined
08:36 < andrei`> Shouldn't runInThisContext have access to 'a' at this point?
08:36 < ningu> I don't know what the vm module is but you should probably read the docs for it :)
08:38 < andrei`> ningu: Yes. The docs are unhelpful in this regard
08:38 < ningu> have you tried require'ing it before you declare the variable?
08:39 < andrei`> The vm module? That makes no sense, it's scope is irrelevant to how runInThisContext works. But yes, my actual code happens to require('vm') first
08:39 < ningu> well I don't know what it does
08:40 < ningu> is there a reason you aren't just using eval()?
08:41 < luto> ningu: I'm so stupid. I really thought that I wrote mkdirSync in there, I even used existsSync ... >.< thanks for your help anyway :D
08:41 < ningu> hehe
08:41 < ashnur> when someone writes an module for npm, why is the global variable `module` unavoidable? in the `if ( module && module.exports) `?
08:42 < andrei`> ningu: Yes. eval called directly runs in the local scope, so I can't introduce global bindings with it
08:42 < ningu> ashnur: because that's how you make your code available when someone require()'s the module
08:43 < andrei`> ningu: And an indirect call to eval does not have access to the current module's scope
08:43 < ashnur> ningu: that is circular reasoning. i wish to understand why we need a global variable to do this
08:44 < ashnur> ningu: i mean, it would be much nicer if i could do (function(root){ if(root.module){} }(this))
08:45 < ningu> ashnur: oh. ok, didn't realize what question you were asking. anyway, I suppose it could be done other ways but js doesn't really have the notion on its own of code that belongs to a file.
08:45 < ningu> anyway, that would be another way to do it, I'm sure it could be done
08:46 < ningu> I suppose node used commonjs because it was already out there
08:49 < ashnur> we are still not talking about the same thing :)
08:50 < ningu> no?
08:50 < ashnur> my concerc is purely aesthetical or how the hack is written
08:50 < ningu> I thought commonjs was the spec for require()
08:50 < ningu> and module.exports
08:50 < ningu> well in that case I don't see why your way is better
08:50 < ningu> since it permits *only* a function
08:51 < ashnur> i do not understand why the `this` in that code is not the global 
08:51 < ningu> well, you didn't explain what you'd do with the root object
08:51 < ashnur> i did. i would like to call root.module instead of the global module
08:51 < ashnur> like in the browser root === window
08:52 < ningu> ok so is that what require() would return?
08:52 < ashnur> no change in that aspect
08:54 < ashnur> and `my way` is not a bit more restrictive than the original. i would like to get rid of the `module` variable as a global, and that is only achievable if I can get a reference to the real global scope. so that i can a call the module property of that 
08:55 < ningu> why do you want to get rid of the global?
08:57 < ashnur> why is that important? :)
08:57 < ningu> well, there isn't much point in making a change unless it accomplishes something
08:58 < ashnur> and I am ok with it if someone could point me out why it is needed
08:59 < ningu> I doubt it's needed. but why is it a problem?
09:02 < ashnur> eh
09:02 < ashnur> forget it
09:02 < ashnur> i will learn eventually from somewhere else how it works, so that i can figure it out why it is needed
09:03 < ashnur> dunno why people here question my intentions almost every damn time i ask something. i mean, it would make sense if i wouldn't be asking "how it works" but "how can i do it"
09:04 < ashnur> but when i ask "how it works" and you keep asking "why you wanna know?", i feel like i am in the wrong place
09:04 < ningu> ashnur: I don't know how it works or I would have told you
09:05 < ningu> anyway, it wasn't "why do you want to know" it was "why do you think it's worth doing" which I think is a fair question
09:06 < ningu> I didn't claim it's not worth doing but I also can't read your mind and it would be a more interesting conversation that way especially since I didn't have any more useful information to contribute
09:07 < ashnur> i don't like global references if they are not explicit. not even in this case
09:07 < ashnur> i mean, i do not like them anyway, but if they are required, i think they should be explicit
09:07 < ningu> ok, well that makes some sense, especially since (afaik) there is no way to list them
09:32 < Sven_vB> hi :)
09:32 < Sven_vB> how can i get the mime module to report text for my .flp files, like "file --mime" does? http://paste.ohai.su/2221/65931672/
09:34 < Sven_vB> nodejs --version = v0.10.4, OS = Ubuntu 12.04.2 LTS "precise"
09:34 < Sven_vB> npm show mime version = 1.2.9
09:42 < Sven_vB> found it, https://github.com/broofa/node-mime/wiki/Requesting-New-Types
09:42 < agu10^> Hello. I leave node.js running but after a few hours it stops
09:42 < agu10^> how can i make a program that will start node.js whenever it fails?
09:42 < ningu> agu10^: use forever or jesus
09:42 < agu10^> idk if it's crashing or what but my website stops working
09:42 < ningu> you should also log your errors
09:43 < divanvisagie> agu10^ : forever
09:43 < ningu> i.e. check for them in the code and print them out or whatever
09:43 < agu10^> ok thanks
09:43 < agu10^> nodejitsu/forever?
09:43 < ningu> yes
09:43 < divanvisagie> yes
09:43 < ningu> I think jesus is better :) but it requires v0.10
09:46 < agu10^> I don't think you're getting what the issue is here
09:46 < agu10^> I think the console or process is getting closed
09:46 < agu10^> that means forever would also end, i think
09:46 < ningu> forever is a separate process
09:46 < ningu> so is jesus
09:46 < agu10^> anyways, do you know what happens when i modify server.js while running it with forever?
09:46 < agu10^> ok i'll see if it works
09:46 < ningu> you don't modify it
09:47 < agu10^> ningu, i need to modify it.
09:47 < agu10^> to deploy a new one
09:47 < ningu> you don't understand how it works.
09:47 < ningu> read the documentation.
09:48 < agu10^> "A simple CLI tool for ensuring that a given script runs continuously (i.e. forever)."
09:48 < agu10^> why would node not run forever if it has an infinite loop?
09:49 < ningu> it halts on unhandled exceptions
09:50 < ningu> it's almost always due to a bug in your code of some sort
09:50 < agu10^> well, that means every time i modify server.js, i have to stop the service and restart
09:50 < ningu> right
09:50 < ningu> you would have to do that anyway
09:52 < Naked_> if I create a writable stream with fs.createWriteStream() and the opening of the file fails, I seem to get an 'error' event and nothing else
09:52 < Naked_> what if opening the file succeeds, but a write sometime later fails - do I still get just 'error', or do I get 'close' as well?
09:53 < ningu> I believe you should get a close
09:54 < Naked_> so how do I know if there is a close event coming or not?
09:54 < ningu> but shouldn't you know when you've finished writing data?
09:54 < ningu> the event is 'finish' when all data has been written
09:55 < Naked_> finish is never emitted if opening the file fails
09:55 < Naked_> is there a finish if there's an error after open succeeds?
09:55 < ningu> not sure, I haven't used writable streams much
09:56 < Naked_> oh boy, once again a dive in the code :(
10:02 < Naked_> argh, it's even worse than what I thought...
10:02 < Naked_> if I'm reading this correctly - a WritableStream that has been opened successfully will not emit 'error' or anything else on errors - instead the only place where the error is reported is the callback given for the write() call
10:02 < Naked_> this is fine, sort of
10:03 < Naked_> but .pipe() passes no callback to write(), so that means that when using pipe(), write errors are silently ignored
10:05 < ningu> hmmmm
10:07 < coaster_> Does anybody else have a problem with part of the Windows environment variables (like %appdata%) being gone after uninstalling v0.10.3 and rebooting?
10:13 < Naked_> https://github.com/joyent/node/issues/5294
10:14 < ningu> Naked_: http://hastebin.com/seboqeyece.coffee
10:14 < ningu> I just tried that by making an directory with mode 000.
10:14 < ningu> the 'error' event fires.
10:15 < Naked_> ningu: there is no problem if 'open' fails - the problem is if 'open' succeeds and 'write' fails
10:15 < ningu> I see
10:16 < ningu> hmm
10:16 < ningu> I'm not sure why it wouldn't emit an error then too
10:16 < Naked_> ningu: because the code doesn't do that
10:17 < ningu> well, I can't think of how to easily simulate it
10:17 < ningu> so I believe you
10:17 < Naked_>   fs.write(this.fd, data, 0, data.length, this.pos, function(er, bytes) {
10:17 < Naked_>     if (er) {
10:17 < Naked_>       self.destroy();
10:17 < Naked_>       return cb(er);
10:17 < Naked_> from fs.js
10:17 < Naked_> self.destroy() causes 'close' to be emitted
10:17 < Naked_> but no 'error' anywhere
10:19 < ningu> Naked_: https://github.com/joyent/node/blob/master/lib/stream.js
10:19 < ningu> see line 91
10:21 < ningu> also https://github.com/joyent/node/blob/master/lib/_stream_readable.js line 498
10:21 < Naked_> ningu: yeah, pipe handles 'error' events "gracefully", but does not pass a callback to write() anywhere so it will just not know about write errors
10:22 < Naked_> ningu: see here what happens if you call write() without a cb argument: https://github.com/joyent/node/blob/master/lib/_stream_writable.js#L166
10:23 < Naked_> and I already pasted what _write does when it encounters errors - just calls cb with err and nothing else
10:25 < ningu> Naked_: not so. or rather, yes, but that doesn't mean it does nothing else.
10:25 < ningu> https://github.com/joyent/node/blob/master/lib/_stream_writable.js#L240
10:26 < Naked_> ningu: hmmh, true! let me read further
10:29 < Naked_> so the callback gets replaced with one that does emit 'error' between write() and _write() inside doWrite, effectively
10:29 < Naked_> ningu: thank you for debugging?
10:29 < ningu> hehe sure
10:29 < ningu> honestly I probably just would have written the code and listened for 'error'
10:29 < ningu> but that's hard to do if you can't mock the situation easily
10:30 < Naked_> well, now I still need to add code to see if 'open' was emitted, so I know if 'close' is going to be emitted
10:30 < ningu> yeah, there's no way around that, really.
10:31 < ningu> that's pretty much how the evented model works -- sometimes you need to stick a variable in a closure to track global state (i.e. global for the EventEmitter)
11:00 < satazor> hey guys
11:00 < satazor> quick question, whats the best way to spawn a process (e.g. git) and know that git is not installed?
11:00 < satazor> The exit code seems to be 1 in both windows and unix
11:01 < satazor> but that's very generic
11:01 < satazor> Parsing the stderr and searching for specific words that indicate that the program does not exists is also cumbersome
11:01 < satazor> because the language of the OS has direct influence on it
11:03 < satazor> my bad, exit code in macosx is 127 and windows is 1
11:03 < satazor> when the command does not exist
11:03 < satazor> but in the real windows shell is 9009
11:06 < dch> satazor: scan the PATH and use fs.stats if you have to, to find git / git.exe
11:07 < satazor> dch: yea it will work but will be slow as hell 
11:07 < dch> I don't think there's a node-native "get me this from the PATH" but there certainly is in windows itself, and I assume so for *nix.
11:08 < ningu> in *nix which foo
11:09 < satazor> yea which works on unix
11:09 < satazor> let me see an alternative in windows
11:10 < korilo> hello 
11:32  * r0kis /amsg Hello guys, I need your help, got a task at university, to make a neclase and make it popular in facebook, so if you dont mind, PLEASE go to http://pieceof.com/products/basket/ and vote for my hand made neclase, I'll be really grateful <3 :)
12:18 < nooga> Quick q question: q.all([foo, bar]).then(function(results){ ... }) // if foo and bar are promises that resolve to Xyz, what is results ? 
12:18 < nooga> [Xyz, Xyz] ?
13:20 < pats_Toms> morning
13:21 < pats_Toms> I want to use sockets in multiple .js files
13:21 < pats_Toms> how really to do that?
13:21 < standoo> pats_Toms: what kind so sockets?
13:21 < pats_Toms> I am using socket.io
13:21 < standoo> ahh
13:21 < mauritslamers> you mean you want to share the socket connection between the files?
13:21 < pats_Toms> what I want to achive
13:21 < standoo> you mean different ports?
13:21 < pats_Toms> yes
13:22 < standoo> pats_Toms: lauch multiple servers
13:22 < mauritslamers> (different ports or share between files?)
13:22 < pats_Toms> I want one connection in multiple files
13:22 < mauritslamers> ok, create one file
13:22 < mauritslamers> which will load the others
13:22 < mauritslamers> then use module to put the socket connection on
13:22 < mauritslamers> and the other files will have access to it
13:23 < pats_Toms> so I need to create another file which to require anywhere I want to use that connection?
13:23 < mauritslamers> http://nodejs.org/api/modules.html
13:23 < dch> satazor: use `where git` on windows. It's present on all versions > XP.
13:24 < satazor> dch: yes I've found that on google
13:24 < satazor> thanks
13:24 < mauritslamers> pats_Toms: read the part about module.parent etc
13:29 < geNAZt> hiho
13:31 < pats_Toms> really don't know if I understand right
13:31 < StephenS> I luv node
13:31 < mauritslamers> pats_Toms: moment, will show some code
13:31 < pats_Toms> all I need is export that io = socket.listen ?
13:31 < mauritslamers> pats_Toms: noâ€¦ 
13:34 < mauritslamers> pats_Toms: 
13:34 < mauritslamers> pats_Toms: https://gist.github.com/mauritslamers/5382744
13:35 < mauritslamers> when running main.js, both "sub"files share access to the same module object through their module.parent
13:35 < mauritslamers> so in one file you can set this value to the socket you want to use, and the rest of the files will have access to it, but only as long as they are required from main.js
13:41 < penguin1> hi
13:41 < sambarino> hola
13:41 < penguin1> Are there any recommended practices for sharing server- and client(browser)-sided code?
13:46 < geNAZt> penguin1, what kind of code sharing do you mean ?
13:46 < geNAZt> automatic code sharing servers or what ?
13:46 < Bubo> Which ORM would you suggest for postgres?
13:47 < geNAZt> Bubo, http://www.sequelizejs.com/documentation
13:48 < Bubo> geNAZt: MySQL? I want postgre
13:48 < JohnMcLear> penguin1: We(etherpad) use require on both client and server
13:48 < geNAZt> / - currently supported: 'mysql', 'sqlite', 'postgres'
13:48 < geNAZt>   dialect: 'mysql',
13:48 < Bubo> Ah, I see it supports it
13:48 < Bubo> thanks
13:49 < penguin1> geNAZt: when should the client do it and when should the server do it
13:49 < geNAZt> well neither of them do it
13:49 < geNAZt> the modules must do it
13:49 < penguin1> The server is not much faster as the client in processing?
13:49 < geNAZt> for example async nodejs module is built for usage in nodejs and in browsers
13:49 < penguin1> I mean, when the client is chrome (with the V8 engine) e.g.?
13:49 < geNAZt> so you can use one module in both systems
13:50 < geNAZt> nodejs is faster in processing javascript as chrome
13:50 < geNAZt> it is much more lightweight (no html apis / dom)
13:51 < pats_Toms> seems like I missed something with sockets. Is there any way to send any socket to client without any event from client?
13:52 < nathanb> what would be the stardard way of node talking to php
13:52 < nathanb> using http calls ?
13:52 < geNAZt> sockets to clients ? oO
13:52 < geNAZt> since when can browsers handle sockets
13:52 < pats_Toms> I mean server - nodeapp, client is browser
13:52 < mauritslamers> pats_Toms: not sure what you mean
13:52 < geNAZt> nathanb, yes
13:52 < geNAZt> well you cant share sockets with a client
13:52 < geNAZt> because a browser cant access sockets
13:53 < mauritslamers> pats_Toms: there can only be sending if there is a connection
13:53 < mauritslamers> so the client will first have to connect
13:53 < mauritslamers> then you can send anything
13:53 < pats_Toms> yes, it's connected
13:53 < geNAZt> and you want to send sockets to it ?
13:53 < pats_Toms> I have heartbeat in debug logs :D
13:54 < geNAZt> like process.send(socket) ?
13:54 < mauritslamers> geNAZt: socket,io
13:54 < geNAZt> yes i know
13:54 < geNAZt> but i think he wants to build p2p with sio
13:54 < mauritslamers> he was trying to share a single io instance between code files
13:54 < geNAZt> which doesnt work
13:54 < pats_Toms> sry, about my bad explanation...
13:54 < geNAZt> ah okay
13:56 < pats_Toms> as in socket.io documentation I can send socket back for example in socket.on('anything', function(data) {}) with socket.emit
13:57 < geNAZt> well you can also use a callback to respond to that event
13:57 < pats_Toms> but is there any way to send everyone who is connected the socket without any of that events like anything/connect and so on
13:57 < mauritslamers> and you can simply use socket.emit() to send anything without event
13:57 < pats_Toms> haha
13:57 < mauritslamers> yes, you can do broadcasting
13:58 < nathanb> would using nodejs to do a rest api be much faster then php 0.o
13:58 < geNAZt> pats_Toms, sio.sockets.emit("eventName")
13:58 < nathanb> even thought prob need to hit php for information
13:58 < geNAZt> will send a event to all connected sockets
13:58 < gildean> nathanb: faster as in performance or faster as in dev time?
13:58 < mauritslamers> nathanb: well, there is one major advantage, as the node code will be optimized while the service is running
13:58 < mauritslamers> you need php accelerators to do that 
13:59 < geNAZt> nathanb, if you need to call a php backend it can be faster
13:59 < geNAZt> but not that much
13:59 < nathanb> mmm
13:59 < geNAZt> it depends on your api
13:59 < mauritslamers> why would you have to hit php?
13:59 < nathanb> main reason is just for code centralised
13:59 < geNAZt> with nodejs you can bundle and async requests
13:59 < nathanb> so no need to have 2 sets of code
13:59 < geNAZt> so you can call multiple api calls at "once"
14:00 < nathanb> mmm
14:00 < nathanb> might go go nginx
14:00 < geNAZt> linkedin does that, http://engineering.linkedin.com/nodejs/blazing-fast-nodejs-10-performance-tips-linkedin-mobile
14:01 < geNAZt> so you can read about api abstraction, done by linkedin
14:33 < pats_Toms> mauritslamers, you still there? about your example at https://gist.github.com/mauritslamers/5382744
14:33 < mauritslamers> still here :)
14:33 < pats_Toms> is there any way to get that 5 in main.js?
14:33 < mauritslamers> yes
14:34 < mauritslamers> module.s
14:34 < pats_Toms> oh
14:34 < pats_Toms> thanks again
14:34 < mauritslamers> because module in main,js === module.parent in required files
14:34 < mauritslamers> module represents the current file, and module.parent represents the file which required the current file
14:35 < mauritslamers> pats_Toms: yw
14:35 < pats_Toms> yw?
14:35 < mauritslamers> you're welcome
14:36 < mauritslamers> :)
14:36 < pats_Toms> ou
14:52 < pats_Toms> seems like parent works, but I can'tuse it with socket.io
14:53 < pats_Toms> when I use of method to set chanel I got "TypeError: Cannot call method 'of' of undefined"
14:53 < pats_Toms> when I console.log module.parent I see io there 
14:54 < mauritslamers> you might have to use module.parent.io.method.call(module.parent.io)
14:54 < mauritslamers> this kind of error sounds like a "this" problem
14:54 < mauritslamers> or, what also might work is to put it in your separate files in a different variable
14:54 < mauritslamers> var io = module.parent.io
14:54 < mauritslamers> and then call your functions
14:56 < pats_Toms> with the "var io = module.parent.io" line I got the same
14:57 < pats_Toms> with something like that - var io = module.parent.io; io.of('/player').emit('now_playing', { title: 'title', artist: 'artist' });
14:59 < ashnur> where can i found out how `npm test` decides if it's passed or failed. because i have some tap output which says passed, but npm still thinks it failed
15:00 < mauritslamers> io.of?
15:00 < mauritslamers> shouldn't that be io.on?
15:01 < ashnur> no one knows?
15:01 < ashnur> or it is common knowled and I should be ashamed for not having a clue?
15:01 < ashnur> knowledge*?
15:03 < ashnur> i've been trying to find it with google, but i can't find anything related
15:04 < mauritslamers> ashnur: sorry, no clue
15:04 < ddod> Any redditors here? I built a node.js scraper for gathering user data and made a subreddit matching system on top of the data I got from it. I'd love to get your feedback: https://news.ycombinator.com/item?id=5546884
15:04 < ashnur> mauritslamers: me neither :(
15:04 < ashnur> i am going to check out the source, maybe i can understand from there
15:05 < ashnur> dafuq if (er.code === "ELIFECYCLE") { means?
15:06 < pats_Toms> mauritslamers, it's socket namespace
15:07 < ashnur> oh this is so frikin frustrating
15:07 < mauritslamers> ashnur: that something is throwing new Error({ code: "ELIFECYCLE" })
15:07 < mauritslamers> pats_Toms: you mean "of"?
15:07 < pats_Toms> yes, with of I can define it
15:08 < ashnur> mauritslamers: i know that, but why and how
15:08 < ashnur> what that even means...?
15:09 < mauritslamers> ashnur: does this help? http://stackoverflow.com/questions/11696327/elifecycle-error-when-installing-bcrypt-on-node-cxx-error
15:09 < ashnur> no
15:09 < ashnur> i already saw that
15:10 < ashnur> https://github.com/isaacs/npm/blob/master/lib/utils/lifecycle.js#L161 its coming from here
15:10 < ashnur> and I do not know why
15:10 < mauritslamers> to me it sounds like it is not able to runs a "normal" lifecycle
15:10 < mauritslamers> s/runs/run
15:11 < mauritslamers> ashnur: it seems the runthrough of npm is called a lifecycle
15:12 < mauritslamers> pats_Toms: the only thing I can think of is that somewhere there is an issue with a this reference
15:12 < ashnur> i give up
15:12 < ashnur> i do not want to learn how npm works, it is not something i feel i should care much about
15:14 < pats_Toms> mauritslamers, none of methods work.
15:14 < pats_Toms> mauritslamers, this is what I get on console.log from module.parent.io
15:14 < pats_Toms> http://vpaste.net/9JqrB
15:14 < mauritslamers> pats_Toms: are you actually sharing the socket?
15:15 < mauritslamers> ah, that is socket.io itself
15:16 < mauritslamers> my preferred method is to open a separate node console and then search for what object to take exactly
15:16 < mauritslamers> it might be that you are sharing the socket, and should have socket.io itself shared, or the other way around
15:16 < mauritslamers> (quite some time ago since I used it)
15:17 < geNAZt> pats_Toms: what are you trying to achive ?
15:17 < mauritslamers> geNAZt: he is still trying to share a socket between different code files, but I guess he is sharing the wrong object
15:18 < pats_Toms> I want to make one sockets listen server in main file and send socket from required one...
15:18 < mauritslamers> pats_Toms: perhaps it would help if you post your entire example so we can have a look
15:22 < geNAZt> pats_Toms: http://hastebin.com/kuqakuluxa.js
15:22 < geNAZt> something like that ?
15:31 < pats_Toms> emm, no
15:31 < pats_Toms> I just want to broadcast that socket
15:31 < pats_Toms> so I don't need for that emitter
15:39 < pats_Toms> before I tread like this http://vpaste.net/AejnI
15:43 < mauritslamers> pats_Toms: hmm, undefined?
15:44 < mauritslamers> that is weird...
15:44 < pats_Toms> yes
15:44 < pats_Toms> there is io in console.log(module.parent)
15:44 < mauritslamers> yes, but what is its value?
15:45 < pats_Toms> I pasted before -http://vpaste.net/9JqrB
15:45 < mauritslamers> of course...
15:45 < mauritslamers> and that is in the same file?
15:46 < pats_Toms> that console.log was before that io.of.... line
15:46 < mauritslamers> so...
15:47 < mauritslamers> it seems that your .of should work, but that some other of doesn't work somewhere internally
15:47 < mauritslamers> so, what if you do var chat = io.of('/player');
15:47 < mauritslamers> chat.emit()
15:48 < mauritslamers> (it should be the same I would guess, but for some reason there is something fishy)
15:48 < pats_Toms> you mean module.chat = io.of('/player'); 
15:48 < pats_Toms> ?
15:48 < geNAZt> one question
15:48 < geNAZt> you know that requiring "blocks" the execution or ?
15:48 < mauritslamers> that could be done later, but first to see whether io.of() actually returns anything proper
15:49 < TheAceOfHearts1> http://oreilly.com/pub/e/2640 did anyone here check this out and know if it's worth giving it a listen?
15:49 < mauritslamers> pats_Toms: I think I know what happensâ€¦ please reverse the order of the module.io assignment and the require
15:49 < geNAZt> try to switch the module.io and the var tag statement
15:49 < mauritslamers> geNAZt: exactly
15:50 < mauritslamers> because otherwise for tag module.parent.io doesn't exist yet
15:52 < pats_Toms> it wont help
15:57 < pats_Toms> but when I tread just module.player = module.io.of('/player');
15:57 < pats_Toms> I got undefined to console.log(module.player)
15:57 < pats_Toms> seems like it really don't returns anything
15:57 < mauritslamers> could you update the code as it is now?
16:00 < pats_Toms> http://vpaste.net/ufKVd
16:04 < mauritslamers> pats_Toms: That is technically possible...
16:04 < geNAZt> pats_Toms: which version of node are you using ?
16:04 < geNAZt> i have rebuilt your example and it works on my computer
16:04 < pats_Toms> v0.8.18
16:04 < geNAZt> with node 0.10.2
16:04 < mauritslamers> ah? it does workâ€¦ 
16:04 < geNAZt> maybe you should update
16:04 < mauritslamers> good
16:05 < geNAZt> yes it works
16:05 < pats_Toms> ok, after some hours I will try to upgrade...
16:05 < mauritslamers> the only thing I could think of is that only a reference was given back, which would then be inited as soon as a connection is made
16:05 < pats_Toms> thanks about support
16:05 < geNAZt> well that is what v8 does
16:05 < geNAZt> :D
16:06 < geNAZt> v8 creates objects and passes the references around
16:08 -!- mode/#Node.js [+o mbalho] by ChanServ
16:09 < SomeoneWeird> Anyone know how to fix "TypeError: Cannot call method 'toString' of undefined" when using sequelize?
16:09 < mauritslamers> geNAZt: I know, but if it would be lazily instantiated, that would have been an option
16:10 < geNAZt> well yes
16:10 < geNAZt> but i dont know how that should work in js :D
16:10 < mauritslamers> no...
16:10 < mauritslamers> it shoudn't...
16:10 < mauritslamers> unless there was some closure of some kind
16:10 < mauritslamers> in that case it would be possible
16:11 < geNAZt> yes
16:14 < medice> geez. too long a break from trying to write node apps, kept wondering why assigning exports to a new object didn't work
16:14 < krun> Hi, i've problem with node on ubuntu 12.10. "Apr 14 18:07:18 krun-ThinkPad-T500 node[3692]: No AX.25 port data configured
16:14 < krun> "
16:15 < krun> when i just run node command i have this line in /var/log/syslog
16:15 < geNAZt> AX.25
16:15 < geNAZt> what does node have todo with wireless signals ?
16:15 < geNAZt> :D
16:15 < krun> no idea
16:15 < geNAZt> sounds like a bad kernel 
16:16 < geNAZt> isnt ubuntu 13.04 out yet ?
16:16 < krun> beta 2 or RC as i know
16:17 < geNAZt> well i have xubuntu 12.10 on my laptop with node 0.10.4
16:17 < geNAZt> and it works
16:22 < Cheery> could someone quickly tell me how to convert Null to Local<Value> ?
16:39 < andrei`> I'm confused about how runInThisContext works. When I put 'var a = function(b,c) { return b + c; }; console.log(require('vm').runInThisContext("a(2,3)"));' into a file and run it with 'node filename.js' I get an error message about 'a' being undefined. I don't see anything in the documentation that explains why this might happen.
16:40 < andrei`> Any ideas?
16:40 < dbrock> I'm implementing a simple HTTP request cache by maintaining arrays of callbacks for cache misses, etc.; any simpler way to do this? (I'm using mikeal/request, FWIW)
16:41 < dbrock> i.e., I want 5 simultaneous requests for FOO to turn into one actual request, which when it finishes invokes all the original 5 callbacks
16:44 < ThePrimeMedian> no-one in expressjs is answering, thought I would try in here... im using express and when submitting form I set the req.flash('error') with the error message, BUT.. I want to also send back the form values to populate the form... is there a module for that? or anyone done it?
16:46 < ThePrimeMedian> oops.. laptop turned off ;)
16:52 < geNAZt> andrei`: it works oO
16:53 < geNAZt> ThePrimeMedian: there is node-validator
16:53 < geNAZt> https://github.com/chriso/node-validator
16:54 < ThePrimeMedian> geNAZt: thanks, but i dont need to validate => I need to be able to repopulate the form after the redirect
16:54 < geNAZt> well i would try to add it into the flash
16:54 < andrei`> geNAZt: I get ReferenceError: a is not defined
16:54 < andrei`> geNAZt: It works if you type it into the repl, are you running it as a script from the commandline?
16:54 < ThePrimeMedian> geNAZt: right, I was going to - just didn't want to re-invent the wheel if someone already did
16:55 < geNAZt> andrei`: i copied the line of your code and executed it in a node v0.10.2 repl
16:55 < geNAZt> and it worked
16:55 < andrei`> geNAZt: Yes, it works in the repl
16:55 < andrei`> geNAZt: That's the bit I don't understand
16:55 < andrei`> geNAZt: Put that code in a file, and call node <filename>
16:56 < geNAZt> hmm
16:57 < andrei`> geNAZt: Yeah. I'm rather confused as I don't see any reason why this should be happening from looking at the docs
16:57 < geNAZt> maybe a bug
16:58 < geNAZt> well the only thing that can be that the repl server created a this context
16:58 < geNAZt> and modules doesnt
16:59 < geNAZt> but also modules have a local context that can be used
16:59 < geNAZt> so it wont make any sense
16:59 < geNAZt> :D
16:59 < andrei`> geNAZt: Yeah :) I tried the mdoule's context, and the global context
17:02 < Industrial> How do I do an asynchronous parallel loop over the members of an object? bare bones no library?
17:02 < Industrial> I can't count the length of the object like I can with an array, and proceed inside the last callback when i is 0
17:03 < geNAZt> Industrial: for(fu in object) { if(object.hasOwnProperty(fu) && typeof object[fu] === "function") { process.nextTick(object[fu]); } }
17:03 < geNAZt> should work
17:10 < dbrock> Industrial: Object.keys and then proceed like you would with an array
17:10 < geNAZt> dbrock: that would count non functional keys in an object
17:12 < dbrock> geNAZt: sounded to me like they simply wanted to do something asynchronous with each property on the object
17:13 < dbrock> geNAZt: the problem essentially is how do you know when all parallel asynchronous operations are done so you can invoke the overall callback
17:17 < geNAZt> https://gist.github.com/geNAZt/beb726797c6059537568
17:17 < geNAZt> works :D
17:39 < samudranb> Hi all, Im getting some errors when trying to install node on ubuntu. Could I get some help please?
17:39 < hackedy> when will node.js support RFC1149? Is that a libuv issue?
17:39 < TheMonarchTx> hello, i'm a windows dev trying to branch out into node, but it's starting to be apparent that it will be simpler to just run linux in a vm for my development
17:40 < dypsilon> hi, do you know any flatiron/broadway alternative?
17:40 < TheMonarchTx> what are 2-3 of the best and easiest distro's to use for someone like me?
17:40 < TheMonarchTx> and any recommendation on what vm software to use from windows? 
17:41 < hackedy> TheMonarchTx: ubuntu is nice for beginners. I would recommend virtualbox for virtualization since it's free and pretty snappy
17:41 < dypsilon> TheMonarchTx, i run preconfigured debian squeeze image on the vmware player and it rocks so far
17:41 < hackedy> vmware player is cool too. it doesn't really matter
17:41 < dypsilon> true
17:42 < samudranb> this is what I am getting: Found 2 errors, including 2 new errors, in 2 files (38 files OK).  Some of the errors reported by GJsLint may be auto-fixable using the script fixjsstyle.
17:42 < dypsilon> i would recommend to go with debian though, because it's what most hosting providers have by default
17:42 < samudranb> But when I execute fixjsstyle, I get a  "command not found"
17:43 < hackedy> samudranb: huh. did it say which files?
17:43 < hackedy> samudranb: you don't have closure linter installed. node comes with the linter bundled but doesn't include fixjsstyle
17:43 < samudranb> hackedy: I think it is this: /tmp/node-v0.10.4/lib/cluster.js:145:(New Error 0006) Wrong indentation: expected any of {6, 9, 13} but got 10  /tmp/node-v0.10.4/lib/net.js:682:(New Error 0006) Wrong indentation: expected any of {4} but got 2
17:46 < hackedy> samudranb: huh, weird. It's fixed in master. will it build anyway or are those errors stopping the whole build process :?
17:49 < samudranb> still getting an error (a new one now) :  make jslint make[1]: Entering directory `/tmp/node-v0.10.4' PYTHONPATH=tools/closure_linter/ /usr/bin/python tools/closure_linter/closure_linter/gjslint.py --unix_mode --strict --nojsdoc -r lib/ -r src/ --exclude_files lib/punycode.js Traceback (most recent call last):   File "tools/closure_linter/closure_linter/gjslint.py", line 43, in <module>     from closure_linter.common import errorp
17:54 < hackedy> samudranb: could you run make again and paste the output to a gist or something so the newlines don't get messed up and we can see more context?
17:54 < hackedy> also usually the exception goes in the line above the "Traceback" bit but looks like it isn't there ?____?
17:56 < samudranb> hackedy: https://gist.github.com/anonymous/5383588
17:58 < StephenS> slow the flow down
17:59 < TheMonarchTx> if i run debian in a vm, can i remote desktop" into the linux vm and interact with it through a GUI like KDE/Gnome (excuse me if those are outdated UI's, it's been a while since I used linux)?
17:59 < StephenS> samudranb: https://github.com/bronikkk/tirpan/blob/master/errorprinter.py
18:00 < samudranb> hackedy: can you guide me what  I should do with that?
18:01 < dypsilon> is there any flatiron/broadway alternative?
18:01 <@mbalho> there are a lot of modules on npm
18:02 < dypsilon> mbalho, if you mean me: trying to find an alternative to flatirons broadway, no luck yet, though i'd ask here
18:03 < bnoordhuis> TheMonarchTx: sure, but this is hardly the appropriate channel for such questions
18:03 < bnoordhuis> maybe for a simple yes or no
18:05 < mbroadst> hey I'm trying to set up a webserver in node as a means to reroute incoming http requests to an internal rpc local socket connection. I want to take something like http://localhost/my/controller/method, strip off the path and convert it to some other format and use that for an rpc method call, and I also want to handle this in a restful way. Originally I was looking at express, but I'm thinking maybe just plain node might be better, any thoughts
18:05 < dypsilon> TheMonarchTx, generally you can do with a vm almost anything you can do with a normal machine.
18:06 < samudranb> StephenS: should I just replace that file with the one in the link?
18:06 < StephenS> make a backup of that file
18:07 < dypsilon> mbalho, look at hapi, it has proxy endpoints and eran has lots of use cases like yours at walmart where they are managing many legacy rpc apis and route them through node. tldr: look at hapi
18:07 < StephenS> however I suspect that path is somehow wrong, as if you have file, but it can't be found
18:08 < mbroadst> dypsilon: was that intended for me? 
18:08 < StephenS> obviously
18:08 < dypsilon> mbalho, yep, you want to run a proxy rest api, don't you?
18:09 < samudranb> StephenS: of course. Thanks! Trying that now.
18:09 < mbroadst> dypsilon: yeah thanks, sorry confusion because your nick completion is screwing up 
18:10 < dypsilon> mbroadst, oh indeed, sorry for that
18:12 < mbroadst> dypsilon: looks like exactly what I was looking for, cheers
18:12 < dypsilon> mbroadst, welcome
18:15 < switz> mongoose question about populated fields: http://stackoverflow.com/questions/16002473/distinct-within-mongoose-populate#
18:16 -!- mode/#Node.js [+o TooTallNate] by ChanServ
18:18 < Ritzton> Hello, I have a question please, I am getting json data and I parse it with JSON.parse, then then inside I have a table with only one row, the key is 6 and when I tried to do : data.forEach I have this error : object has no method foreach, would someone know why ? please
18:19 < geNAZt> becuase the json is not an array
18:19 < geNAZt> its an object
18:19 < qq99> so I'd like to have my node server fork/spawn a process based on user input, any suggestions on sanitizing that?  don't want to encounter someone passing 'rm -rf /*'
18:19 < dypsilon> Ritzton, http://lodash.com/docs#forIn
18:20 < geNAZt> qq99 create user for that and use sandboxes
18:20 < qq99> geNAZt, so like, 'su sandboxed && mycommand [userinput]' ?
18:21 < geNAZt> if you have your rights setup it shouldnt damage anything
18:22 < geNAZt> cloud9 uses a complete sandbox on unix
18:22 < geNAZt> but i cant remember its name
18:23 < qq99> geNAZt, interesting company, though I always wonder who exactly uses these kind of things
18:23 < qq99> geNAZt, but apparently a lot of big names do
18:25 < geNAZt> but the technique they use
18:25 < geNAZt> it has a name :D
18:25 < Ritzton> dypsilon and geNAZt, yeah but it is kind of weird because when I do data = JSON.parse(hfjfeef) and res.render('page', {data: data}); then I can do a forEach in the view, do you know why ?
18:25 < qq99> lol :) thanks
18:25 < geNAZt> currently i am trying to log into c9
18:25 < geNAZt> but it hangs :D:D
18:26 < dypsilon> Ritzton, depends on how you do a foreach in the view, maybe the template engine does for you what lodash does
18:27 < pats_Toms> I updated to node 0.10.4, but seems like it don't help me to get working that thing what I described before
18:27 < Ritzton> what is lodash ?
18:27 < dypsilon> Ritzton, see my link
18:28 < Ritzton> dypsilon>yeah I see the page but it is not saying what is lodash anyway I will figure this out
18:29 < dypsilon> Ritzton, nvm, maybe the view engine has its own foreach implementation which allows you to iterate on the objects.
18:31 < Ritzton> dysilon> is lodash a library that I have to install ? there is no solution in native node js ?
18:33 < dypsilon> Ritzton, that's not a node.js issue per se, it's just how javascript behaves. If you want to iterate over things you either define them as array ( using [] in json) or you use libraries which allow you to iterate over objects (like lodash)
18:36 < sandfox> Hi node peeps!
18:37 < gildean> Ritzton: you can iterate over an object in a couple of different ways, i like this form: Object.keys(parsedobj).forEach(function (key) { console.log(parsedobj[key]); });
18:38 < gildean> where parsedobj is your object to iterate of course
18:39 < Ritzton> gildean> ok I will take this solution thank's, better than installing a new library just for it
18:39 < gildean> np
18:40 < sandfox> I have a question regarding setting NODE_PATH. Is it considered a good, bad, or old-fashioned thing to do as part of an npm start script? e.g "export NODE_PATH=./:$NODE_PATH && coffee app.coffee"
18:40 < StephenS> samudranb: solved it?
18:41 < samudranb> StephenS: nope. Trying to add the Chris Lea ppa and installing from package manager now, instead of compiling.
18:49 < mscdex> sandfox: why would you need that?
18:50 < sandfox> mscdex: because someone has written loads of project using this style of require  "mockPlaces = require 'test/mocks/data/place'"
18:51 < mscdex> yuck
18:51 < sandfox> mscdex: I think it's personally the wrong thing to do and it should use relative paths for the require.. (the coffee-script is another thing altogether)
18:51 < mscdex> agreed
18:53 < sandfox> mscdex: thanks, I needed the sanity check. I think it was the done thing in pre v0.5.x days but life has moved on since thenâ€¦.
19:02 < pats_Toms> oh, seems like I got why I can't get working that setup what geNAZt and mauritslamers described me
19:02 < pats_Toms> are you still in channel? 
19:02 < mauritslamers> I am :)
19:04 < pats_Toms> In that required file I have var something = function() where I am using that module.parent .
19:04 < pats_Toms> when I try to use it out of the function - it works
19:09 < mauritslamers> ah, good!
19:13 < pats_Toms> mauritslamers, what really module.parent.id describes?
19:14 < pats_Toms> which js file is parent?
19:14 < mauritslamers> check the docs I linked earlier :)
19:17 < Daizz> so I want to generate some js code and write it to a file
19:17 < Daizz> should I just dumbly make a long string with variables in tactical places and write that or is there something more sophisticated thing to use?
19:17 < Daizz> -thing
19:21 < ryanaz> how do I have a single file export two functions?   i.e.:  module.exports = { makeInsertQueryString: makeInsertQueryString, makeUpdateQueryString: makeUpdateQueryString };
19:22 < ryanaz> this line isn't working
19:23 < TheMonarchTx> now i'm trying to install node and npm on my fresh ubuntu vm
19:23 < TheMonarchTx> i installed node from git
19:24 < TheMonarchTx> but npm install failed, i think because i installed from the node git master source
19:24 < gildean> ryanaz: you can use exports, as in: exports.function1 = function ... exports.function2 = function... etc.
19:24 < TheMonarchTx> how do i uninstall node?
19:24 < TheMonarchTx> or can i simply switch to a stable node branch in my git clone
19:24 < ryanaz> gildean: thanks.
19:24 < TheMonarchTx> and re-run the install? 
19:25 < Daiz> http://privatepaste.com/feab018a32 << related
19:25 < Daiz> hmm
19:25 < sandfox> TheMonarchTx: what platform etc?
19:26 < Daiz> I guess I could do something like make any customizable values have specific names, eg :blah, then call function.toString(), and run a series of replacements...
19:27 < hackedy> TheMonarchTx: git checkout v0.10.4 or whatever version you want
19:28 < TheMonarchTx> um, i'm running ubuntu inside a vagrant/virtualbox vm
19:33 < sandfox> TheMonarchTx: yeah, git checkout v0.xx.x and recompile. then your winning! 
19:34 < TheMonarchTx> when i try git checkout v0.10.4 i get an error
19:34 < TheMonarchTx> "error: pathspec 'v0.10.4' did not match any file(s) known to git.
19:37 < hackedy> TheMonarchTx: git clone http://github.com/joyent/node.git ???
19:37 < hackedy> does `git tag` show a bunch of tags
19:41 < TheMonarchTx> crap, i cloned someone's fork by accident. no wonder. 
19:42 < gnarf> git remote set-url origin https://github.com/joyent/node.git 
19:42 < gnarf> :)
20:04 < Industrial> Can I use streams to power templates? e.g. when a data event arrives, the value is bound to a bit of the dom?
20:04 < qq99> anyone have luck with changing uid of a spawned process?
20:04 < qq99> I'm getting operation not permitted
20:11 < Saucisson> Hello, i'm looking for help for reading a php session file
20:11 < Saucisson> i can't find how to "convert" it in javascript
20:11 < Saucisson> (in an understandable format)
20:12 < Saucisson> (server side of course... nodejs and stuff )
20:12 < rho> join #javascript
20:12 < rho> derp
20:12 < Saucisson> they are client focused :p
20:12 < Saucisson> i though this server side problematic would fit better for the nodejs chan to get help
20:13 < rho> was actually trying to join javascript, didn't mean it as a suggestion
20:13 < rho> heh
20:13 < Saucisson> oh 
20:13 < Saucisson> lol
20:13 < rho> :)
20:17 <@Nexxy> join #jifasnif
20:17 <@Nexxy> woops!
20:17 <@mbalho> secrets out!
20:18 <@Nexxy> mbalho, you're a founder there
20:23 < dypsilon> i have a daily wtf here: https://gist.github.com/dypsilon/6a94c4a497d34071986b
20:23 < dypsilon> is this kind of thing possible?
20:24 < dypsilon> what do i miss?
20:24 < zodiak> is there any activerecord pattern ORM for node that also works with sqlite3 ? I can find datamapper style, or ar style but not with sqlite :\
20:25 < mauritslamers> dypsilon: I don't get what is returning undefinde?
20:25 < dypsilon> mauritslamers, console.log
20:25 < mauritslamers> ok, but where is this.app defined?
20:26 < mauritslamers> (as in, the example is quite small, so I have no idea what could go wrong there :) )
20:26 < dypsilon> mauritslamers, the fun part is: it doesn't matter! the route method is called fine. that's what bothering me
20:27 < dypsilon> also debugging this.app throughout the code returns undefined, but the code runs fine, calling methods on this.app and everything
20:27 < ggoodman> can anyone give me some tips for tracking down a memory leak?
20:28 < dypsilon> ggoodman, hope that helps, never did it myself https://hacks.mozilla.org/2012/11/tracking-down-memory-leaks-in-node-js-a-node-js-holiday-season/
20:29 < dypsilon> mauritslamers, i know its not a reproducable example, just wanted to know if this kind of thing is possible somehow, seems like i'm running into a node bug
20:30 < mauritslamers> hmm, it might be that you should use require('util').log and .inspect
20:31 < mauritslamers> with inspect you can see more :)
20:32 < mauritslamers> it might be a problem with console.log and not with this.appâ€¦ because this should most definitely not happen
20:32 < dypsilon> so weird
20:33 < dypsilon> mauritslamers, well thank you for letting me know im not crazy
20:33 < mauritslamers> dypsilon: yw :)
20:37 < dypsilon> util.inspec also shows udefined, but calling methods on this "undefined object" is absolutely fine
20:37 < dypsilon> that's it, im installing the new node version
20:38 < mauritslamers> dypsilon: wondering...
20:38 < mauritslamers> could it be that its toString method returns undefined?
20:38 < mauritslamers> that would at least explain why console.log() puts undefined
20:39 < mauritslamers> What I usually do at this kind of things is use the REPL
20:39 < dypsilon> mauritslamers, that's a very good point
20:40 < context> console.log() DOES return undefined.
20:41 < dypsilon> context, what do you mean?
20:41 < mauritslamers> context: it is not about console.log returning anything, it is that it shows undefined for an object that actually contains methods etc
20:41 < context> maybe im missing part of the question
20:41 < context> try console.dir() ?
20:41 < mauritslamers> context: https://gist.github.com/dypsilon/6a94c4a497d34071986b
20:42 < context> yeah, try console.dir
20:42 < dypsilon> mauritslamers, the prototype chain of app goes all the way to event emitter (through event emitter 2 module). you are right, there is probably some toString or something like that in the prototype chain
20:43 < dypsilon> App.prototype.inspect = function () {
20:43 < dypsilon> };
20:43 < dypsilon> is also there, wondering what that does
20:43 < mauritslamers> try to do console.log(this.app.toString)
20:43 < mauritslamers> ahh,â€¦ 
20:43 < mauritslamers> that explains a LOT
20:43 < mauritslamers> that explains why inspect also returns undefined
20:44 < mauritslamers> as inspect will call that function if it exists, just like toString
20:44 < dypsilon> *facepalm*
20:44 < context> even in node console setting toString console.log still shows proper output
20:44 < dypsilon> thank you flatiron devs
20:45 < context> even a blank object with __proto__ stuff still shows {}
20:45 < mauritslamers> yepâ€¦ trying it out now...
20:45 < mauritslamers> it seems something funny happens in whatever dypsilon  is using
20:45  * dypsilon is using flatiron broadway
20:45 < mauritslamers> context: try setting inspect to an empty function
20:46 < mauritslamers> console.log will nicely give undefined twice
20:46 < mauritslamers> dypsilon: you're not crazy, .inspect returns undefined, and that is your proble,
20:46 < mauritslamers> *problem
20:47 < mauritslamers> do we have some node bot around?
20:48 < dypsilon> mauritslamers, you are very right, if i remove the empty inspect function console.log behaves right again, thank you very much, you saved me a couple of hours
20:48 < mauritslamers> dypsilon: you are very very welcome :)
20:49 < dypsilon> :)
20:49 < mauritslamers> in this way we all learn :)
20:49 < mauritslamers> because I didn't really know about inspect, I just guessed that kind of functionality could be the cause :)
20:50 < dypsilon> yeah, that was a mean one
20:51 < mauritslamers> I use Sproutcore a lot, and it uses this kind of tricks (overriding .call for example) 
20:52 < dypsilon> mauritslamers, well, as long as they are documented, it's fine. Also I see no point in defining an empty inspect function..
20:52 < mauritslamers> absolutely rightâ€¦ unless they did it for security reasons, but I don't see what they would gain by it...
20:58 < hcollin> Hi everyone! I hope I am in the right place to ask some quick help
20:59 < mauritslamers> with over 900 people in the channel that shouldn't be a problem I guess ;-)
20:59 < hcollin> I am having trouble installing the node.js pg module in windows 7 system.
21:00 < mauritslamers> no clue about that, sorryâ€¦ it might have to do with compiled dependencies?
21:00 < mauritslamers> in that you don't have a compiler and npm wants one?
21:00 < hcollin> Most likely something like that.
21:00 < Industrial> I have two programs. One compiles stuff from src/ to build/ and then watches src/ for changes to compile those to build/ aswell. stylus, handlebars, jade, livescript, ets. normal files are just moved.
21:01 < mauritslamers> afaik the only way to get that working is to download the (free) VC++ environment from M$
21:01 < hcollin> It was complaining about Python at first (installed one => too new, installed a second one, still lacking something) and the .NET.
21:01 < Industrial> Then I have another process I want watching for build/client/js for any changes and recompile a bunch of stuff into build/client/js/app.min.js
21:01 < Industrial> if I have both running, how do I stop one from clogging the other up?
21:01 < Industrial> e.g. the one outputting to build is writing files in parallel
21:02 < Industrial> which is causing the other to recompile on every new file, 40 times a second.
21:02 < mauritslamers> Industrial: to be that sounds like you should keep stateâ€¦ 
21:02 < mauritslamers> in the sense that the second program will not start another round of compiling, if it is not finished yet :)
21:02 < Industrial> you mean, the processes should communicate? :p
21:03 < Industrial> mauritslamers: ah, right.
21:03 < hcollin> mauritslammers: Tried that already. Did not work too well. So the actual question is: Does anyone have any recommendations for another postgre module than 'pg'?
21:04 < Industrial> mauritslamers: so i just check if any new update events have come in during the active compile, and see that as 1 extra needed loop after the current compile, to be sure to always compile the latest output :)
21:04 < hcollin> Or then again I might just be an idiot. Maybe I will try the ultimate windows fix-it-all tool, reboot.
21:04 < mauritslamers> hcollin: I have no experience with postgres and nodejs, but earlier in the channel: http://www.sequelizejs.com/documentation
21:05 < mauritslamers> Industrial: something like that, you just keep the last request
21:06 < hcollin> mauritslamers: Nice one. Unfortunately I need the postgre. Oh well, I probably just need the jack hammer of reboot. Then try again... =)
21:06 < mauritslamers> Industrial: and there is always statecharts :)
21:06 < hcollin> Cheers and thanks!
21:06 < mauritslamers> hcollin: that has postgres support
21:07 < hcollin> Oh. I did not notice. Need to check it out more then. Thanks!
21:08 < mauritslamers> zodiak: ^^ that link
21:08 < mauritslamers> you were searching for ORM for sqlite? 
21:08 < mauritslamers> http://www.sequelizejs.com/documentation
21:08 < zodiak> mauritslamers, I was.. and I am tinkering with it danke. jst wish it was more ar than data mapper :\
21:08 < zodiak> oh well, can't have everything :)
21:13 < Monkeytoe> hello.. I am trying out node-gyp... in the instructions it says install it with npm install -g node-gyp   it then says to change directory into my app and then type node-gyp configure  ... this is supposed to look for binding.gyp inside the current directory... when I type this command I get 'node-gyp' is not recognized as an internal or external command
21:14 < Monkeytoe> when I navigate to c:/program_files/node  and check the modules directory, I can see that node-gyp is installed
21:14 < mauritslamers> Monkeytoe: close prompt, and open a new one?
21:14 < mauritslamers> might be a ENV vars problem
21:15 < mauritslamers> under Unix one can refresh those easily, but no clue how to do that under windows
21:17 < Monkeytoe> yeah I added the node-gyp bin folder to the env path... only then every time I would type node-gyp it would open in visual studio instead of executing it... so I removed it from the path... maybe I should re add the path and try node node-gyp ?
21:18 < mauritslamers> might beâ€¦ Have been off Windows for ages, so no clue
21:21 < Monkeytoe> hmm no go... keeps opening the file instead of runnign it
21:25 < Monkeytoe> so in linux whenever you install a node module globally with -g... you can run it by just typing its name? so for instance this module is called node-gyp ... if you were to do a npm install -g node-gyp ... you could go to any directory on the system and type node-gyp and it would execute it?
21:25 < mauritslamers> yes
21:25 < Monkeytoe> hmmm it is not working that way for me in windows
21:26 < Monkeytoe> however I can require from any folder and it still finds it
21:26 < Monkeytoe> but I cant command line run the modules from any folder
21:26 < mauritslamers> do you get the problem when you call node-gyp
21:26 < mauritslamers> without extra parameters that is?
21:27 < mauritslamers> Monkeytoe: what happens if you run node-gyp configure?
21:27 < mauritslamers> and / or node-gyp build
21:28 < Monkeytoe> if I do a npm install node-gyp without the -g so it installs locally... then cd node-gyp  and go into the bin folder... then type node-gyp configure it works fine 
21:29 < Monkeytoe> interesting
21:30 < Monkeytoe> however if I go into the folder where npm does the global installs... which is C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\bin>  and do node-gyp configure  it does not run it, it opens it in visual studio
21:32 < Monkeytoe> i bet the default applications is screwy
21:32 < Monkeytoe> probably got visual studio set as the program to open js files by default
21:32 < mauritslamers> that is indeed a good one
21:35 < Monkeytoe> yep
21:35 < Monkeytoe> now it is at least working when I manually add the path
21:35 < Monkeytoe> instead of opening it in visual studio
21:36 < Monkeytoe> windows does not do recursive path adds
21:36 < Monkeytoe> so I cant just add c:\program_files\nodejs to the path
21:36 < Monkeytoe> unless there is a way I dont know about
21:37 < mauritslamers> linux also doesn't 
21:37 < Monkeytoe> hmmm
21:37 < mauritslamers> that would be really tricky if it idid
21:37 < mauritslamers> just add the path to node-gypâ€¦ usually npm keeps this single folder where all the bins are put together
21:41 < Monkeytoe> ah bingo! there is a main bin folder... program_files>nodejs>node_modules>npm>bin   notices there is now a node-gyp-bin folder there... so instead of program_files>nodejs>node_modules>npm>node_modules>node-gyp>bin I set it to that one.. and it still worked
21:41 < Monkeytoe> im betting that is the folder that if it is supposed to work command line globally it would update in there
21:42 < mauritslamers> mmm...
21:42 < mauritslamers> on my system (mac) it is /usr/local/bin
21:42 < Monkeytoe> do you know any other nodejs modules that have global command line options? so I can install it and test to make sure it works
21:42 < mauritslamers> so usually it should create symbolic links to the actual executables
21:42 < mauritslamers> couchapp
21:42 < Monkeytoe> npm install -g couchapp?
21:42 < mauritslamers> yep
21:47 < Monkeytoe> well that didnt work, but that lead me to find out where the directory you were talking about is... noticed on the command line install of couchapp it referenced c:\username\AppData\Roaming\npm 
21:47 < Monkeytoe> and in that directory there is bower , bower.cmp , couchapp , couchapp.cmd, derby, derby.cmd, node-gyp, node-gyp.cmd
21:48 < mauritslamers> so, that is where the PATH env should point to
21:48 < Monkeytoe> yep
21:50 < Monkeytoe> yep that did it
21:50 < Monkeytoe> ah much better
21:50 < mauritslamers> nice :)
21:51 < djshotglass> I have been tasked with setting up a video stream server. It will be used in large remote camps (100-500 men) to stream live (satellite tv) and on-demand (large storage of mp4 movies) over the wireless.
21:51 < djshotglass> I have already made the web frontend with jwplayer but need to find decent stream server software. Media Goblin would be perfect if it did live video. Flumotion might do but it hasn't been active for quite some time.
21:51 < djshotglass> Does anyone do video streaming? What do you use?
21:53 < ashnur> anyone uses tape for tests?
21:56 < AAA_awright> https://magnode.org/rfc/2616 This has to be useful to someone, somewhere
21:56 < AAA_awright> HTML formatted RFCs
21:57 < AAA_awright> (That don't want to make you gouge your eyes out)
21:57 < mauritslamers> AAA_awright: expired certificate...
21:57 < AAA_awright> http://magnode.org/rfc/2616
21:57 < AAA_awright> mauritslamers: Just self-signed
21:57 < AAA_awright> Expired too?
21:57 < mauritslamers> not valid after 19 nov 2012
21:58  * AAA_awright fixes
22:08 < passcod> AAA_awright: are these manmade or generated? It'd be awesome to just point people to magnode.org/rfc/<any rfc number> :D
22:09 < richwestcoast> please support my friend's twitch stream: he just started out http://www.twitch.tv/rathmaza
22:09 < AAA_awright> passcod: It's generated from the plain-text file, with lots of annotations and meta-data in a configuration file
22:09 < passcod> ah
22:09 < AAA_awright> RFC 2616 uses a 70-line config file
22:10 < AAA_awright> Mostly to differentiate between types of ASCII art, differentiate between ABNF grammar sections and definition lists, etc
22:11 < AAA_awright> And to define which page breaks occur in the middle of a paragraph, and perform simple edits where there's mistakes in the text file (there's a few of those)
22:11 < passcod> right. oh well
22:11 < AAA_awright> passcod: What's a random RFC you'd like to see, I'll show you what I mean
22:13 < passcod> oh well, err, 2810 through 2813 is what I'm reading these days
22:13 < pringlescan> Any idea why the content-length HTTP header would be about 1100 or so bytes off from what stat gives me? I'm trying to avoid downloading files that have already been downloaded.
22:15 < AAA_awright> passcod: http://tesla.bzfx.net/rfc/rfc2810.html
22:17 < substack> isaacs: scripts.install might be an anti-pattern for modules but I've found it to be very useful for applications
22:17 < passcod> i see. That's pretty good, although I guess the ToC could be handled better straightaway. is the source for the generator somewhere?
22:19 < AAA_awright> I should do that
22:35 < dypsilon> wow, rfc 2810 is pretty cool
22:40 < dazoe> I have a list of callback functions, IE: blah(function(){ blah2(function(){ blah3(...)})}); But i need a way to make sure that 1st function doesn't run till the last function is finished. the reason being is the last function will change things for the 1st function.
22:40 < dazoe> Is there an easy way of doing this? or should i just write a queue for it
22:40 < chilts> do you mean the last function doesn't run until the first is finished?
22:41 < chilts> what about the 2nd? can that be in parallel or series with the first?
22:41 < chilts> btw: take a look at the 'async' package
22:41 < chilts> that's probably worth a look for what you're doing
22:41 < chilts> dazoe: ^^
22:42 < dazoe> it will be triggered by a user of a site. and the line of function cant be started till the last one has finished
22:42 < dazoe> IE i want to block the first till the last is finished
22:43 < chilts> ignoring users etc, which order do you want blah, blah2 and blah2 to run in?
22:43 < chilts> and blah3
22:44 < dazoe> will they are all callbacks. like getBlah(function(err, blah){ getBlah2(function (err, blah2){ ..changes to blah.. saveBlah(function (err) { ...done...})})});
22:44 < dazoe> i guess it's a race condition
22:46 < dazoe> i need a way to block or queue calls to the function till the last callback is complete.
22:46 < context> what
22:48 < AAA_awright> dypsilon: What part?
22:50 < chilts> dazoe: async.series([getBlah, getBlah2, getBlah3]);
22:50 < chilts> they will run in series, each waiting for the previous to finish
22:50 < chilts> dazoe: https://github.com/caolan/async#series
22:51 < dazoe> chilts: no. the callback for getBlah calls getBlah2
22:52 < chilts> dazoe: do you mean that getBlah2 return a value?
22:52 < chilts> if so, you're doing it wrong, you need to pass values back tot he callbacks
22:52 < chilts> and use async.waterfall()
22:58 < dazoe> chilts: so what happends if you call async.waterfall(...) twice? then you have the same issue. I need a way to make use the whole thing has run till i let it run again.
22:58 < dazoe> http://pastebin.ca/2359300
22:58 < CrazyGangster> Hello ppl, can i use node.js to extract a div block from a site to a file in server-side?
23:01 < Ritzton> I have a question for you please, I am making a game and in this game there is a watchdog in case it is someone's turn and he is not playing, how do you recommend me to implement this watchdog ? to make users ping ?
23:06 < sandfox> CrazyGangster: yes
23:09 < Ritzton> nobody would know any solution for my problem ?? please
23:13 < CrazyGangster> sandfox: thanks
23:22 < michael-robinson> Ritzton: you could use sockets
23:43 < kam187-rMBP> anyone know of a good sticky session add on for websockets/node?
23:56 < AAA_awright> passcod: https://github.com/Acubed/rfc-html
23:57 < passcod> AAA_awright: cool, I'll have a look :)
23:58 < AAA_awright> Try `make download all`
23:58 < AAA_awright> hmm, Makefile won't refresh that, will it
23:59 < AAA_awright> `make download && make all`
23:59 < AAA_awright> Or rather: make downlad && make -k
23:59 < AAA_awright> Or make -j if you're feeling adventurous
--- Log closed Mon Apr 15 00:00:25 2013
