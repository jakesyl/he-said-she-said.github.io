--- Log opened Sun Nov 04 00:00:05 2012
00:01 < MI6> joyent/libuv: Ben Noordhuis master * b5fc944 : build: export _LARGEFILE_SOURCE, _FILE_OFFSET_BITS  Export compile-time d - http://git.io/izALuQ
00:10 < nathan7> raj: node ./scripts/web-server.js
00:26 < MI6> joyent/libuv: Ben Noordhuis master * 0ddf9d6 : Revert "unix: use select() for specific fds on OS X"  This reverts commit (+1 more commits) - http://git.io/YvSEhQ
00:33 < raj> thanks nathan7 
00:33 < nathan7> C=
00:44 < MI6> joyent/node: Fedor Indutny master * 0588266 : debugger: exit and kill child on SIGTERM or SIGHUP (+2 more commits) - http://git.io/M4h6vg
01:46 < chovy> for some reason I see requests like this in my node log:
01:46 < chovy> GET http://vlad-tepes.bofh.it/freenode-proxy-checker.txt
01:46 < chovy> any idea what that's about?
01:52 < Aria> If you're connecting from that host to freenode IRC, it scans you to see if you're an open proxy.
01:53 < chovy> what scans me. freenode?
01:53 < chovy> or is that some spam bot
01:54 < Aria> Freenode.
01:55 < Aria> Since that's a common way (historically) that IRC networks were attacked, connecting through open proxies.
01:55 < chovy> so freenode is sending the get request to my ip?
01:56 < Aria> Yep.
01:57 < Aria> If it works (gets their file -- the host header won't match your server, I bet), it blocks you.
02:01 < sadjow> hello
02:01 < sadjow> some one know about kohana framework PHP ? I am developing a framework like that.
02:06 < niggler> lol sadjow php != node afaict
02:06 < sadjow> lol
02:06 < sadjow> But it is on node.js
02:06 < sadjow> https://github.com/sadjow/falcon
02:07 < niggler> #kohana
02:07 < dzajdband> sadjow what's the question?
02:07 < niggler> http://kohanaframework.org/ suggests #kohana is a good channel
02:08 < dzajdband> sadjow it's about node?
02:08 < sadjow> I am developing a node.js framework inspired by kohana.
02:08 < sadjow> Did you get it?
02:08 < sadjow> The cascading HMVC style of Kohana is awesome. 
02:09 < Aria> I hate to ask, but what's HMVC?
02:09 < sadjow> I know niggler thank you.
02:09 < Aria> Ah, heirarchical. *goes to read and wonders if it's yet another MVC that isn't actually like MVC*
02:09 < sadjow> hierarchical model view controller
02:09 < niggler> aria: homosexual MVC?
02:09 < sadjow> kkkkk niggler
02:10 < Aria> Heh
02:10 < AnonymousFunctio> Hi everybody!
02:10 < sadjow> hi
02:10 < niggler> !hello @AnonymousFunctio 
02:10 < AnonymousFunctio> Anybody know the internals for Socket.IO?  I'm trying to debug it.
02:10 < sadjow> Hello LambaFunction
02:11 < AnonymousFunctio> Ha, sadly, that nick was taken.
02:11 < niggler> i could go for some lamb right now
02:11 < sadjow> Lambda*
02:11 < AnonymousFunctio> I've been going by OTBS4Life lately, but I forgot my password.
02:11 < niggler> lol AnonymousFunctio 
02:11 < sadjow> lol
02:11 < Aria> A tiny bit, AnonymousFunctio.
02:12 < azbyin> AnonymousFunctio, /join #freenode and ask them to send a reset request
02:12 < sadjow> i will change my nick
02:12 < AnonymousFunctio> azbyin, I'll do that, thanks.
02:12 < AnonymousFunctio> Anyway, I'm trying to get Socket.IO working on the Wii Opera browser... 
02:12 < AnonymousFunctio> The initial request seems to succeed...  /socket.io/1/?t=135xxxxxxx&jsonp=0
02:13 < AnonymousFunctio> The server responds with io.j[0]("gOwHhL7147pEA0mb-ojF:60:60:flashsocket,htmlfile,xhr-polling,jsonp-polling"), as expected.... but that callback function is never ran.
02:13 < AnonymousFunctio> If I go in with Firebug Lite and run that code from the console, things start to move.
02:13 < niggler> *is never run
02:13 < AnonymousFunctio> niggler, Yes, thank you
02:13 < AsynchronousLife> hi
02:14 < AsynchronousLife> I was the sadjow
02:14 < AnonymousFunctio> Now, the connection never succeeds because JSON-P doesn't seem to work correctly.
02:14 < AnonymousFunctio> Any thoughts on why that could be?  The Wii has no debugging console or anything.
02:14 < AnonymousFunctio> One theory was some cross-origin crap, but I've tested that, and it doesn't seem to be the case.
02:14 < niggler> that sounds like a client problem
02:14 < AnonymousFunctio> It's definitely a client problem.
02:14 < AnonymousFunctio> I just need to debug it.  :-)
02:14 < niggler> for which #javascript is a relevant channel
02:15 < niggler> or ##javascript i forget which
02:15 < azbyin> ##
02:15 < mscdex> #socket.io ? :-)
02:15 < AnonymousFunctio> mscdex, Good call, didn't know that existed.
02:15 < mscdex> it was just a wild guess
02:15 < niggler> oh that exists!
02:15 < niggler> !shoo
02:15 < AnonymousFunctio> ACtually, I think I've been there before.
02:15 < AnonymousFunctio> Everyone was asleep
02:15 < AnonymousFunctio> but I'll try again.
02:15 < AnonymousFunctio> Thanks!
02:16 < niggler> mscdex: there needs to be a !shoo command like on ##javascript
02:16 < mscdex> or they're out.... it's still only 10:14pm
02:16 < mscdex> est
02:16 < niggler> power just came back
02:17 < mscdex> i've never tried to do dev with the wii opera browser
02:17 < AnonymousFunctio> mscdex, I've done this off and on over the years.  http://www.wiimusic.net
02:18 < AnonymousFunctio> It's always a real bitch to get working.  I figured this time I would spend some time trying to get decent debugging tools.
02:19 < AnonymousFunctio> Weinre would be great, but it doesn't work, likely for the same reason Socket.IO doesn't.
02:19 < niggler> does it support websockets
02:19 < mscdex> i highly doubt it
02:19 < AnonymousFunctio> niggler, No it doesn't.  It's way too old for that.
02:19 < AnonymousFunctio> Opera 9.3
02:19 < niggler> doesn't socket.io depend on websockets
02:19 < AnonymousFunctio> It does have Flash... but not AS3, so no flash sockets.
02:19 < mscdex> websockets is only one of the transports
02:20 < AnonymousFunctio> XHR and all of that works beautifully.
02:20 < AnonymousFunctio> I figured at a minimum, I could do JSON-P polling.
02:20 < AAA_awright> AnonymousFunctio: That's your site?
02:20 < AnonymousFunctio> AAA_awright, Yes
02:21 < niggler> do you need to mod the wii to work it?
02:21 < mscdex> no, just the browser
02:21 < mscdex> which i think is free now
02:21 < AnonymousFunctio> niggler, Nope, loads with the normal "Internet Channel" which is pre-loaded on the Wii (or available as a free download on earlier ones)
02:21 < AAA_awright> AnonymousFunctio: http://radiohyrule.com/ is mine, is that up there? I'll add instructions for listening if you add us :)
02:23 < mscdex> about the only things i use my wii for these days are emulators and wiimc
02:25 < AnonymousFunctio> AAA_awright, Done, you're under soundtracks
02:25 < AnonymousFunctio> If you've got an icon, I'd like to put it up there.  Just send me something square-ish to brad@musatcha.com.  I'll take care of resizing and what not.
02:28 < timeturner> why doesn't npm grab stuff from github the way component(1) does?
02:28 < mscdex> timeturner: npm install https://github.com/user/project/tarball/master ?
02:28 < timeturner> it's wasteful to grab all the tar balls and untar them and then replace everything
02:34 < mfncooper> GitHub may have the source tree, but the published package may have more (e.g. build output, prepublish results)
02:35 < mscdex> mfncooper: i'd bet most publish from the repo
02:37 < mfncooper> Most, perhaps, but I've seen packages that generate docs when prepublish is run, so the output from that won't be in the repo
02:49 < chovy> can i hack on node_modules to test something, what do i have to do to see my changes?
02:54 < mscdex> chovy: just edit the files directly inside node_modules ?
02:54 < mscdex> if it's a binding/addon, you'll have to run node-gyp inside the module's directory
02:54 < mscdex> to rebuild
03:09 < AnonymousFunctio> I'm pretty sure the only folks in #socket.io are bots.
03:22 < mscdex> AnonymousFunctio: i hear rauchg is usually fairly active in there, he's on west coast though i believe
03:22 < AnonymousFunctio> mscdex, Damn those time zones and people that socialize with folks on weekends.  :-)
03:26 < mscdex> :-)
03:26 < AnonymousFunctio> I think I'm getting close to figuring this out anyway... taking a look at line ~1630 in socket.io.js, Socket.prototype.handshake.  That's the code that sticks the script element into the DOM.
03:26 < AnonymousFunctio> I'm typing it in by hand line-by-line, debugging through reproduction, ha.
03:26 < mscdex> \o/
03:27 < mscdex> i love it when i put a project on the back burner because of some problems and then come back to it months later, make a few tweaks, and it starts working ;-)
03:28 < AnonymousFunctio> I think I got it.  It doesn't seem to like document.createElement().
03:28 < AnonymousFunctio> mscdex, What are you working on?
03:28 < mscdex> ssh2 client in pure js
03:28 < clever> why!?
03:28 < mscdex> because spawning child processes is silly
03:29 < AnonymousFunctio> mscdex, Nice!  I think I've heard of this.
03:29 < mscdex> and there aren't any ssh2 libraries that fit the bill
03:29 < mscdex> to bind to
03:30 < clever> mscdex: have you seen ssh -O?
03:30 < clever> (and its related stuff)
03:30 < mscdex> i already said: <mscdex> because spawning child processes is silly
03:30 < clever> (-S, ControlPath, ControlMaster)
03:30 < mscdex> ;-)
03:31 < clever> with the ssh master stuff, you can spawn a single child process
03:31 < clever> and then open multiple channels thru it
03:31 < clever> on demand
03:31 < mscdex> not multiple connections though
03:31 < mscdex> like different hosts
03:31 < clever> yeah, one ssh child per host
03:31 < sashman_> i dont know what to use couchdb or mongodb what r u using?
03:31 < clever> sashman_: mysql-native
03:32 < mscdex> sashman_: is your data relational?
03:32 < sashman_> i dont know 
03:32 < sashman_> is fb relational?
03:32 < TehShrike> Why does Chrome always say that my cookie expires values are "Invalid date"? >:-(
03:33 < sashman_> or any of the kind of apps where user profiles stands in foreground
03:33 < clever> mscdex: are you atleast able to use the ssl socket lib in node?
03:33 < clever> mscdex: or is that incompatible?
03:34 < sashman_> i have pg, mongoose, and nano all installed and dont know what to use and i really even cant figure out how to handle user model and how to handle that the app knows which session belongs to which account
03:34 < sashman_> thats kinda crazy
03:37 < ddod> Does anyone know how I can access a Google service that requires auth but doesn't offer an API (thus making GA useless, I presume)?
03:37 < mscdex> clever: ssh doesn't use ssl
03:37 < clever> mscdex: hows it encrypt it then?
03:38 < mscdex> with crypto
03:38 < clever> ah, so your just using the crypto module directly?
03:38 < mscdex> that's the way it goes :-)
03:39 < clever> mscdex: do you know if the crypto module can generate a key pair and sign a cert?
03:39 < mscdex> i believe so
03:40 < clever> i couldnt find a method for that
03:40 < ddod> So… anyone know how to log into Google's web auth with request?
03:40 < mscdex> clever: well, there's crypto.createSign() for signing
03:41 < mscdex> maybe there isn't one for generating key pairs
03:41 < clever> mscdex: the signer takes a private key and signs some data
03:42 < clever> wouldnt be able to directly make a cert, without knowing its internal format
03:42 < clever> and the cli tooks can already do it with less work
03:43 < chovy> mscdex: k
03:44 < mscdex> clever: then i'd say use the cli tools :-)
03:45 < clever> mscdex: how secure do you think it is, to give the client his own private key (a client side keypair and cert) over ssl?
03:46 < clever> mscdex: i know that the private key is normaly never meant to leave the system its used on, so downloading it from elsewhere is against the norm
03:50 < sashman_> is backbone js a-must-have?, isnt express not already a MCV framework?
03:52 < aho> backbone is for writing client-side applications
03:52 < sashman_> mh ok 
03:55 < mscdex> clever: how secure depends on any existing ssl attack vectors. i personally wouldn't do it, it's one less thing to worry about
03:55 < clever> mscdex: the issue, is that the client end doesnt have the ability to generate key pairs or csr's
03:55 < clever> its much simpler to just generate them server side
03:56 < mscdex> what client is this?
03:56 < mscdex> an amiga? 
03:56 < mscdex> :-)
03:57 < clever> mscdex: a firefox extension
03:57 < clever> mscdex: theres no js lib to generate it, and anything compiled would need ~6 versions (32/64bit, windows, max, linux)
03:57 < mscdex> firefox extensions can't access the disk or anything?
03:58 < clever> they have pretty much total access to the system
03:58 < clever> but id need to provide a copy of the openssl binary, for every os it could posibly run on
03:58 < clever> along with any dyn libs it may need
03:58 < mscdex> so what's wrong with requiring openssl to be installed?
03:58 < clever> the end users are idiots P
03:58 < clever> they can bearly login half the time
03:59 < mscdex> meh, just give them instructions on how to install openssl if they don't have it -- which would mostly only be Windows users I'd say
04:00 < clever> its not that big of a security concern, and the private key should only travel the network once
04:00 < mscdex> or just bundle a 32-bit executable for Windows users and expect all other OS users to have it (which I think is reasonable)
04:00 < clever> that may work
04:02 < clever> i'll have to try a few things out later and see how it works out
04:02 < ddod> so I'm guessing nobody knows how to interact with Google's non-API services?
04:03  * clever heads to bed
04:04 < mscdex> ddod: like?
04:04 < ddod> Trends, specifically
04:04 < ddod> it requires a login but doesn't have an API
04:04 < AnonymousFunctio> Holy shit, I just fixed Socket.IO... my patch makes no sense though.  Let me put this up on a pastebin and see if any of you can figure out what the hell...
04:07 < AnonymousFunctio> http://pastebin.com/ERKNXn3K  Can someone look at this and let me know why this works?
04:07 < AnonymousFunctio> Basically, this chunk of code adds a <script> element to the page, and then specifies a callback, located in the io.j array
04:08 < AnonymousFunctio> All I did was add that function to the array first before referencing it on the script element.
04:08 < AnonymousFunctio> I suppose not all JavaScript engines are guaranteed to exit this function before doing other things, 'eh?
04:08 < clever> AnonymousFunctio: makes sense to me
04:08 < clever> AnonymousFunctio: it looks like your problem, is that inserting the script tag causes the script to be ran on the spot
04:08 < clever> the old code relies on that being async
04:09 < AnonymousFunctio> clever, Yep, precisely.  I thought doing DOM stuff was always async.
04:09 < AnonymousFunctio> I guess not.
04:09 < clever> all browsers ive seen, will queue the download and continue running your code
04:09 < clever> the browser your using must be doing things differently
04:10 < AnonymousFunctio> I'm not terribly surprised... it does a lot of things differently.  :-)  Opera 9.3 for the Wii.
04:10 < clever> you may want to submit that patch to the socket.io guys
04:10 < AnonymousFunctio> It's a bit of desktop Opera, with a whole crap ton of optimizations in place.
04:10 < AnonymousFunctio> Yep, that's my plan.
04:10 < AnonymousFunctio> I'd imagine there's at least some other browser out there with the issue.
04:12 < mscdex> the wii u browser will be much much better
04:12 < AnonymousFunctio> mscdex, Yep, I'm looking forward to it.  http://www.nintendo.com/wiiu/features/browser-specs/
04:12 < AnonymousFunctio> That's actually why I'm doing all of this work... redeveloping the site so when the Wii U comes out, I can quickly get it working with it.
04:13 < AnonymousFunctio> I've got it pre-ordered... planning to wait in line on launch day and code until I'm done.
04:16 < mscdex> it supposedly beats out all other console browsers as well as IE10 for what it's worth
04:16 < mscdex> no flash support though
04:16 < niggler> fuck flash
04:16 < mscdex> and rather limit audio codecs for html5
04:16 < mscdex> s/limit/limited
04:17 < AnonymousFunctio> mscdex, Lack of MP3 support is going to be a pain for me.  I need to dig up all new stations.  Most of the ones I already list are MP3 only.  That being said, there are many that are AAC only these days that I haven't been able to put on the Wii.
04:19 < AAA_awright> Yeah that's something of a pain isn't it
04:20 < AAA_awright> The Icecast guys are something dead set against those codecs, despite being well documented and free
04:20 < AnonymousFunctio> AAA_awright, AAC is not free.
04:20 < AAA_awright> AAC is free.
04:20 < AAA_awright> Not free as in free beer maybe.
04:21 < AnonymousFunctio> AAA_awright, Find me a reliable source on that, and I will run a transcoding server for you.
04:21 < AnonymousFunctio> http://audiopump.co/preview.php
04:21 < AAA_awright> AnonymousFunctio: FFMpeg encodes AAC, that's LGPL
04:22 < AnonymousFunctio> AAA_awright, My server software runs FFMPEG just fine.  I've been using it with STDIO.  The legal issue is the problem for me.
04:22 < AnonymousFunctio> I've been trying to get this project off the ground, but codec licensing is killing me.  I live in the US, most of my servers are in the US, and I can't even figure out who I'm supposed to pay, let alone find out how much it is.
04:22 < AnonymousFunctio> MP3 licensing is quite clear.. they want 3% of associated revenue... which is just about anything.
04:23 < AnonymousFunctio> For now, I just don't do transcoding, even though my software is capable.
04:23 < TehShrike> y'all been paying attention to this Opus codec?
04:23 < TehShrike> It sounds like it's totally badass
04:24 < TehShrike> One of my coworkers has been listening to music encoded with it for a few weeks now, he's pretty impressed.
04:24 < AnonymousFunctio> TehShrike, I haven't heard of it, but seems interesting.  I'm looking at the site now.
04:24 < TehShrike> Apparently it has support in Chromium already, and I think other browsers are planning on implementing it soon too
04:24 < TehShrike> It sounds awesome.
04:25 < AAA_awright> TehShrike: It's some mashup of Theora and Speex iirc, which doesn't impress me how they hacked around that, but otherwise it is rather impressive
04:25 < AnonymousFunctio> TehShrike, Unfortunately, it looks like a distribution format only.  48kHz max... can't use it for a lot of studio recordings.  It also doesn't say on the home page what bit depths are supported.
04:25 < AAA_awright> There's a lot of hacks to circumvent specific shortfalls
04:25 < AnonymousFunctio> I prefer FLAC anyway.  :-)  Of course, that's expensive to broadcast in.
04:25 < TehShrike> AnonymousFunctio: yes, it's designed specifically for streaming voice
04:26 < AnonymousFunctio> TehShrike, Oh, their home page talks about music as well.
04:26 < mscdex> yeah opus sounds promising
04:26 < AAA_awright> It's mixed voice and music and general broadcast uses
04:26 < TehShrike> AnonymousFunctio: Yes, apparently it works well for that as well - we're talking in the context of browser HTML5 support, here
04:26 < niggler> AnonymousFunctio: whats wrong with flac
04:26 < TehShrike> FLAC is great
04:26 < ddod> Okay, I guess one last try for tonight: Can anyone help me log into Google's non-API auth, to, for example, scrape data directly from their consumer services?
04:26 < AnonymousFunctio> niggler, FLAC is great!  I love FLAC.  It's just expensive to stream with.
04:26 < AAA_awright> niggler: There's some things it doesn't support which stereo wav does
04:27 < AnonymousFunctio> AAA_awright, Like what!?
04:27 < TehShrike> I'm sure they're very technical, and don't make much difference to the layman >_<
04:27 < niggler> AnonymousFunctio: do you have to stream in an audio format directly or can you compress?
04:27 < AAA_awright> They are
04:27 < mscdex> ddod: why not just use a scraping module?
04:28 < AnonymousFunctio> niggler, What do you mean?  You mean like gzipping the stream as we go or something?  FLAC gives a better compression ratio.
04:28 < ddod> mscdex: I'd love to, but I don't think any allow you to log into Google through them
04:29 < AAA_awright> AnonymousFunctio: There's some reason that ZREO used wav in the past, like FLAC does interpolation at some point, or only does half the quality of stereo 48kHz wav, or something like that
04:29 < niggler> how about aac?
04:29 < ddod> the issue is that I believe I need to log into Google's standard https://accounts.google.com/ServiceLogin programmatically 
04:29 < niggler> i think arc is free
04:29 < niggler> *AAC
04:29 < AAA_awright> niggler: That's our problem, the Wii U only supports AAC
04:29 < ddod> and serve back up whatever cookies it sends
04:29 < AAA_awright> Which most people don't encode
04:29 < ddod> because it does a CheckCookie function
04:29 < AnonymousFunctio> AAA_awright, That's crazy.  FLAC is lossless.  Put it in an OGG container and you can have essentially as many streams in whatever sample rate or bit depth you want.
04:30 < niggler> so lemme make sure i understand the licensing correctly
04:30 < niggler> if you take mp3s and transcode them as AAC and stream
04:30 < niggler> do you still have to pay mp3 royalties?
04:30 < AnonymousFunctio> niggler, MP3 decoder, and then AAC encoder fees
04:30 < niggler> AAC encoding fees?
04:30 < AnonymousFunctio> niggler, I wouldn't want to do that anyway though... you're taking a double hit on quality loss.  It's better to encode lossy once.
04:31 < AnonymousFunctio> niggler, Whatever the royalty rate is on AAC.
04:31 < niggler> there is none iirc
04:31 < AAA_awright> I think they just want royalties on... hmm... encoders
04:31 < AnonymousFunctio> http://www.vialicensing.com/licensing/aac-faq.aspx
04:31 < ddod> hey guys, I appreciate that I'm not a reg, but don't you think there are better channels for codec discussions when nobody is seemingly available to talk about a nodejs problem?
04:31 < AAA_awright> I don't recall any court cases on the issue though
04:31 < AnonymousFunctio> Looks like there is a fee for the encoder.
04:31 < niggler> " manufacturers or developers of end-user encoder and/or decoder products. "
04:32 < niggler> hold on
04:32 < mscdex> ddod: you might look into translating something like this for use in node: https://github.com/suryasev/unofficial-google-trends-api/blob/master/pyGTrends.py
04:32 < niggler> FFmpeg is free software
04:32 < ddod> mscdex: that's exactly what i've been trying to do
04:32 < AnonymousFunctio> FFMPEG doesn't provide license for many of the codecs it uses.  The end user is then responsible.
04:32 < ddod> unfortunately, that code appears to be broken
04:32 < ddod> Google doesn't log me in when i run it in python
04:32 < niggler> "License fees are due on the sale of encoders and/or decoders only."
04:32 < AAA_awright> niggler: That's my argument, you can implement AAC with free software. The Open Source and Free Software definitions don't cover patents.
04:32 < substack> ddod: if you don't have a good baseline of activity then there won't be people around to help the folks who come around and actually need help
04:33 < ddod> substack, i'm not sure I understand
04:33 < ddod> so, you don't help people unless they always hang out here asking for help?
04:33 < AAA_awright> ddod: If you didn't notice Node.js is very laid back, have you seen the /topic lately? :p
04:33 < niggler> AAA_awright: based on my reading, i don't think there are any licensing fees 
04:33 < ddod> i've noticed a few things about this channel
04:34 < AnonymousFunctio> niggler, I've talked with a lawyer about this.  Basically, FFMPEG and VLC are just timebombs waiting to happen.  Nobody gets sued until a project starts making money.  Then, they come after you.
04:34 < AAA_awright> "No. License fees are due on the sale of encoders and/or decoders only." Huh
04:34 < mathFloorFun> gooble
04:34 < AAA_awright> niggler: I believe for like h.264 there's a fee on encoders
04:34 < niggler> AnonymousFunctio: I'm pretty sure VLC is a time bomb but FFMPEG is distributed as source code
04:35 < AnonymousFunctio> niggler, Source or not, the end user is required to get a license to use the codecs within.
04:35 < AAA_awright> AnonymousFunctio: Lawyers say whatever they want to get money :p Without court cases -- and I'm aware of none -- it's all FUD
04:35 < AAA_awright> Suprise! FUD exists in FOSS, too
04:35 < ddod> substack: so what percentage of the 772 users here have no clue about answering my question and how many are choosing not to because I'm not worthy of response?
04:35 < AnonymousFunctio> AAA_awright, I've actually got one I can trust.  :-)  I work with the guy on a very regular basis.
04:35 < AnonymousFunctio> Old friend.
04:36 < AAA_awright> ddod: It's not something I've done before, for instance
04:36 < niggler> AAA_awright: the word's 'surprise'
04:36 < substack> ddod: scraping google is against their ToS
04:36 < mathFloorFun> I scrape sometimes
04:36 < niggler> AnonymousFunctio: if you go through and come up with an answer id like to see it
04:36 < substack> and anyways you aren't entitled to an answer
04:36 < substack> people help only if they feel like helping
04:36 < niggler> maybe a wiki page with a list of the licensing fees for each codec
04:37 < AAA_awright> AnonymousFunctio: But then again all my knowledge is in FOSS copyright
04:37 < ddod> entitlement is a little different than having a channel specifically designed for helping people with node
04:37 < substack> ddod: you should ask specific questions which are likely to have specific answers
04:37 < AAA_awright> ddod: Not all 772 users are at their keyboards, mind you :p
04:37 < mathFloorFun> OH
04:37 < mathFloorFun> brb
04:38 < AAA_awright> See, that guy gets ie
04:38 < substack> "help me to scrape google" is not specific
04:38 < ddod> That's not what I asked
04:38 < substack> nobody wants to hold your hand
04:38 < ddod> I asked how to programmatically access their consumer login https://accounts.google.com/ServiceLogin
04:38 < niggler> !xy @ddod
04:38 < niggler> damnit
04:39 < TehShrike> lol
04:39 < substack> ddod: you're asking questions about google, not about node
04:39 < TehShrike> niggler: what chatbot are you used to using that has that in its dictionary?
04:39 < TehShrike> I recognize it from #mysql
04:39 < TehShrike> I imagine it's not uncommon to tech chat rooms
04:39 < niggler> TehShrike: the ecmabot in ##javascript
04:39 < ddod> asking questions about accessing Google through node, specifically request
04:39 < niggler> The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that, either. You ask about Y, which is a strange thing to want to do. Just ask about X.
04:39 < ddod> which seems a bit more node specific than audio codecs
04:39 < niggler> ddod: there are two parts to your question
04:39 < ddod> there are many parts of my question
04:40 < ddod> and nobody has answered any of them
04:40 < niggler> one part involves accessing google's resources programmatically
04:40 < niggler> that's a google question
04:40 < substack> ddod: because you suck at asking questions
04:40 < niggler> the second part is, given that it can be accessed, how to do it in node
04:40 < TheAceOfHearts> so, I have a form with like 45 elements from a POST. is there any quick way to handle them all?
04:40 < niggler> the second part can be answered here given the answer to the first part
04:40 < substack> don't feel bad that nobody is going to ask 20 questions to fix your confusion
04:40 < substack> that's not how irc works
04:40 < niggler> and afaict no one knows the answer to the first part here
04:40 < ddod> you guys have been super helpful
04:40 < ddod> i really appreciate it
04:40 < AnonymousFunctio> ddod, Oh for fucks sake, are you really coming in here and bitching about the lack of service you are receiving?  I'll tell you what, post it up on StackOverflow.com... and leave us a link.  I'll look at it.
04:41 < ddod> will do! thanks!
04:41 < TehShrike> TheAceOfHearts: I imagine some code could handle it pretty quickly!
04:41 < AnonymousFunctio> ddod, It's hard to see long questions in here.
04:41 < bakadesu> QQ
04:41 < TheAceOfHearts> TehShrike: I would imagine it could handle it too, but I'm fairly new to javascript @.@ ... Would doing a for...in be a good approach? (https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/for...in) ?
04:42 < niggler> TheAceOfHearts: what exactly are you doing?
04:42 < niggler> and why do you have 45 elements in post
04:42 < TehShrike> Yeah, what data do you have, and what form is it in?
04:43 < TheAceOfHearts> It's supposed to be something like a survey. So I have 45 answers from radio buttons and dropdown. I have to store all 45 values in the database.
04:43 < TehShrike> So you're on the server, and the stuff is all in an object?
04:43 < TheAceOfHearts> yeah
04:43 < TehShrike> I like getOwnPropertyNames().forEach myself
04:44 < TheAceOfHearts> sweet, that looks exactly what I need. Thanks!
04:46 < niggler> is that new TehShrike 
04:47 < TehShrike> JS 1.8.5
04:47 < TheAceOfHearts> link: niggler: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames
04:47 < niggler> so that's like ie9
04:47 < TehShrike> I think so
04:47 < niggler> yep added in ie9
04:47 < Aria> Ayep.
04:48 < niggler> boo its a sham
04:48 < niggler> *there's no shim for it
04:49 < TehShrike> eh?
04:49 < niggler> https://github.com/kriskowal/es5-shim/blob/master/es5-sham.js#L88
04:49 < niggler> id think there's a way to do it with hasownproperty
04:50 < TehShrike> Yeah
04:50 < TehShrike> That does seem a bit dumb
04:50 < TehShrike> I'm sure the shim wouldn't be as efficient, but hey, it's a shim
04:50 < niggler> that's the point of a shim
04:50 < TehShrike> Yeah
04:51 < niggler> there may be some subtlety preventing it
04:52 < TehShrike> "A for...in loop does not iterate over non–enumerable properties"
04:52 < niggler> wait TehShrike non-enumerable properties
04:53 < TehShrike> getOwnPropertyNames "Returns an array of all properties (enumerable or not) found directly upon a given object."
04:53 < TehShrike> What does "enumerable" mean in this case? ...I have no idea
04:54 < TehShrike> https://developer.mozilla.org/en-US/docs/Enumerability_and_ownership_of_properties
04:54 < niggler> there are ways to hide variables
04:56 < bakadesu> almost seems like nodejs will it 1.0 this year
04:56 < AnonymousFunctio> I've got co-workers who think that Node's version number is a clear indicator of stability.  They should just skip ahead to 4.0 so I can get some work done.  :-)
04:57 < TehShrike> >> ({ butts: 'lol' }).getOwnPropertyNames()
04:57 < purr> TehShrike: TypeError: Object #<Object> has no method 'getOwnPropertyNames'
04:57 < TehShrike> whoops
04:57 < TehShrike> >> Object.getOwnPropertyNames({ butts: 'lol' })
04:57 < purr> TehShrike: (object) ['butts']
04:58 < bakadesu> ['hip','hip']
04:58 < TehShrike> "the butt-bone's connected to the... hip bones"
04:59 < niggler> that's disturbing
04:59 < niggler> you must be a real hardass TehShrike 
04:59 < TehShrike> >_< lol
05:04 < uterian> hey guys
05:05 < uterian> what is the method for returning requested page's content back to the client which askes that page?
05:06 < uterian> is there someone guys?
05:06 < uterian> Heeeey?
05:06 < AnonymousFunctio> uterian, Heeeeyyy
05:07 < uterian> Hi :)
05:07 < AnonymousFunctio> uterian, What are you talking about?
05:07 < TehShrike> uterian: http://nodejs.org/api/http.html#http_response_end_data_encoding
05:07 < uterian> ah thanks tehshrike 
05:07 < uterian> let me explain in detail anonymous
05:07 < uterian> I'm a flash game developer and I have to write a server for a browser based online game
05:08 < uterian> and I've chosend nodejs for that server
05:08 < niggler> why not html5?
05:08 < TehShrike> JavaScript is pretty cool in the browser too
05:09 < uterian> in the basic structure, I have a flash client, an individual game website's server(to request information from) and my own server
05:09 < TehShrike> Did y'all see that JavaScript/HTML5 RPG demo that Mozilla made?
05:09 < uterian> Sometimes I have to use serverside functions from my own server to request data from individual server
05:09 < bakadesu> Browserquest?
05:09 < uterian> and consideration of that 'sometimes' is decided by game client
05:10 < Aria> Nothing WRONG with flash for a game. Different market and platforms that it works well on compared to HTML games.
05:10 < uterian> so when it is needed, game client tells my own server that it needs some data from individual server, then my own servers requests that data from the other server and should send that data back to the client
05:10 < uterian> that's the whole story
05:10 < TehShrike> bakadesu: yeah, that one
05:11 < bakadesu> If anyone is interested: http://browserquest.mozilla.org/
05:11 < uterian> not html5 because I need JSON, and nodejs seems like the best way for that
05:11 < substack> Aria: thanks for the sweet tuner patch \o
05:12 < substack> listening to all these great new stations
05:13 < uterian> tehshrike: but I've used response.end without encoding, and it didn't give an error ,but I couldn't read any data , can it be the reason?
05:13 < TehShrike> read any data?  How do you mean?
05:14 < TehShrike> Perhaps you could pastebin an example of what you're doing?
05:14 < AnonymousFunctio> uterian, It still isn't clear what you are talking about.  You're writing a proxy?  What do you mean you couldn't read any data?  Are you reading or writing?  And what's this nonsense about needing JSON as a reason to avoid HTML5?
05:14 < sashman> jow when i have different models do i always have to explicit write the requires of the different js's again and again?
05:15 < bakadesu> uterian: maybe this is what you're looking for?  http://socket.io/
05:15 < uterian> I don'T know about html5 , and it sounds to use js server for using json, I have to use json requests because individual server decides it as obligatory
05:15 < AnonymousFunctio> uterian, What is the specific problem you are having?
05:16 < uterian> bakadesu: thank you I'm gonna check it, I 'm still very new at server programming, it's so confusing :/
05:16 < uterian> I'm gonna try to explain again
05:16 < uterian> I have a mmogame, which is online
05:16 < AnonymousFunctio> uterian, Forget the game part, you're trying to get data from where to where?
05:16 < AnonymousFunctio> Be as specific as you can.
05:16 < uterian> and I have to connect game website's server for it's users informations
05:16 < Aria> substack: Glad you enjoyed it. It's a friend's station, since they snagged an FM license.
05:17 < uterian> both my server and website's server
05:17 < bakadesu> I'm gonna assume the website's database?
05:17 < AnonymousFunctio> uterian, Ok, on the client you have what?  Just Flash?
05:17 < uterian> website's server is not mine, because they are individual company
05:18 < uterian> yeah
05:18 < uterian> action script 3
05:18 < uterian> more accurate actionscript3
05:18 < AnonymousFunctio> uterian, Right, so the data on the third party server contains user information... but your server contains everything you need to run the game, yes?
05:19 < uterian> not exactly
05:19 < uterian> I dont run my game on my server
05:19 < uterian> how can I explain
05:19 < AnonymousFunctio> Explain what the problem is that you have.  Ha, I don't know how else to ask.
05:19 < uterian> there is a website which allows you to upload yourgame to their servers, but you can't access their database directly
05:20 < uterian> because of security reasons ofcourse
05:20 < uterian> so they share needed data with game developers via json requests
05:21 < AnonymousFunctio> What specifically do you mean by "upload your game to their servers"?  What are you uploading?
05:21 < AnonymousFunctio> What is in this database?  If you can't access it directly, how do you access it?
05:21 < uterian> flash game
05:21 < uterian> swf file
05:21 < AnonymousFunctio> What do you mean by "security reasons"
05:21 < AnonymousFunctio> What do you mean by "JSON requests"?
05:22 < bakadesu> I'm gonna take a guess and say crossdomain requests, so the game needs to be hosted on their servers
05:22 < uterian> let me think a way to explain
05:22 < uterian> yup
05:22 < AnonymousFunctio> You mean they host the raw compiled flash files, and they have some sort of API?
05:22 < AnonymousFunctio> ok
05:22 < uterian> crossdomain requests
05:22 < AnonymousFunctio> good
05:22 < AnonymousFunctio> So you're using JSON-P or something?
05:22 < AnonymousFunctio> Or proxying the data on your server?
05:22 < AnonymousFunctio> Or CORS?
05:22 < uterian> yes thats right too
05:22 < AnonymousFunctio> Which?
05:22 < uterian> i don't know anythig about proxy
05:22 < uterian> or cors
05:22 < AnonymousFunctio> Ok, so your JSON-P is working?
05:23 < AnonymousFunctio> Earlier you mentioned you needed to proxy those requests to the game server...
05:23 < uterian> json-p? I request data via GET and POST methods of http
05:23 < uterian> I didn't say "proxy"
05:23 < AnonymousFunctio> uterian, Show us the code for your GET/POST requests for HTTP
05:23 < uterian> ok
05:24 < AnonymousFunctio> Just AS3?
05:24 < AnonymousFunctio> Or are you doing something with JavaScript?
05:24 < uterian> no, as3 is inside my client
05:24 < AnonymousFunctio> Ah, got it
05:24 < uterian> I'm gonna show the code to you which is in my server
05:24 < AnonymousFunctio> Wait... what does your server do?
05:24 < AnonymousFunctio> In the setup you described, it isn't clear that there is a need for your server at all.
05:25 < uterian> ah boudy I already told it
05:25 < uterian> body*
05:25 < uterian> flash ask information from my server and my servers asks information from crossdomain server
05:26 < uterian> and what's the website that I can upload my code?
05:26 < bakadesu> uterian: post your code (some place other than here) to https://gist.github.com/ or pastebin.com 
05:26 < AnonymousFunctio> uterian, That's a proxy server.  And.. it's not working?
05:26 < uterian> thanks bakadesu
05:27 < uterian> anonymous I already told you that I don't know what is proxy
05:27 < uterian> I really dont
05:27 < AnonymousFunctio> uterian, Right, which is why I just told you what it is.
05:27 < AnonymousFunctio> uterian, It's exactly what you are describing.
05:27 < AnonymousFunctio> uterian, A simple server that makes requests on behalf of a client.
05:28 < AnonymousFunctio> uterian, Anyway, what isn't working?
05:28 < uterian> http://pastebin.com/XpV7VY3p
05:29 < uterian> when I request data inside my flash client, my servers returns an empty value, that's the problem
05:29 < AnonymousFunctio> uterian, You've verified that the request is being made to the other server, and that data is coming back?
05:31 < uterian> yup
05:31 < uterian> I think when I request data from my server, it returns directly before my server receives data from crossdomain server
05:32 < uterian> so result becomes an empty value
05:32 < AnonymousFunctio> uterian, Have you tested this theory?  I'm not familiar with restify, so I don't know what your function parameters are supposed to be.
05:33 < uterian> I couldn't because I don't know how to wait respons until server receives data from crossdomain server
05:33 < AnonymousFunctio> There should be a callback function... which looks to be what you have, but again, I don't know what the parameters are supposed to be, so maybe that callback isn't for when there is a response.
05:35 < uterian> hmm
05:36 < uterian> then I'm gonna check that
05:36 < uterian> thanks
05:48 < TheAceOfHearts> is anyone here familiarized with mongodb?
05:49 < TheAceOfHearts> if I wanna link somebody's answer to a question while keeping something to a schema, would the correct way be to add the Question's _ID to the Answer's collection?
05:50 < Riaku> apparently this is a major  problem for people on macs? but... i keep getting this error on centOS
05:50 < Riaku> https://gist.github.com/4010480
05:50 < Riaku> any help would be appreciated
06:04 < Goran> Can someone help me with rsa encryption? I am trying to make secure connection with php and node using rsa public/private keys. I need to encrypt on node side with private key and decrypt on php side using public key. I tried using http://phpseclib.sourceforge.net/ and https://github.com/Obvious/ursa/
06:05 < Goran> gist https://gist.github.com/4010525
06:09 < substack> http://substack.net/images/seaport.png
06:09 < niggler> substack: what do you use to generate those?
06:14 < substack> niggler: inkscape
06:14 < chrisbislr> I had a look at the seaport docs today, it looks really interesting!
06:15 < niggler> does it give the hand-drawn effect?  i saw something recently with mathematica being used for that
06:19 <@Nexxy> niggler, xkcd charts?
06:19 < niggler> yes there we go
06:19 <@Nexxy> http://mathematica.stackexchange.com/questions/11350/xkcd-style-graphs
06:19 <@Nexxy> I think that's the main thread about it
06:20 <@Nexxy> with a bunch of implementations
06:20 < chovy> can someone explain awhat path.resolve() is doing here? https://gist.github.com/42b1299de81dbdb52246
06:21 < niggler> i thought wolfram had something
06:21 < niggler> http://blog.wolfram.com/2012/10/05/automating-xkcd-diagrams-transforming-serious-to-funny/ ah here we go
06:24 < LouisT> niggler: ah that's kinda cool
06:27 < chovy> well im' hosed
06:27 < chovy> i can't include a partial w/in a partial unless i move them all to ./views
06:28 < chovy> and move all my views into ./views
06:28 < chovy> w/o subdirs
06:28 < niggler> whats the confusion
06:29 < niggler> oh chovy you are using it wrong
06:29 < niggler> path.resolve will first go to /home/ettinger/projects/wishd.me/wishd/views
06:30 < niggler> then to /profile (from root, not within /home/ettinger/projects/wishd.me/wishd/views)
06:30 < niggler> and then look for 'follow-button.ejs'
06:30 < niggler> so you probably want ./profile or something
06:30 < chovy> https://github.com/RandomEtc/ejs-locals/issues/13
06:31 < chovy> if you have views in two different directories calling a partial that calls another partial it fails.
06:31 < niggler> you were asking about https://gist.github.com/42b1299de81dbdb52246
06:31 < niggler> and i just explained what it did
06:31 < chovy> i see. i'm just trying to figure out why paths are not resolving properly.
06:31 < niggler> i imagine the paths aren't being retained
06:33 < niggler> chovy: is it possible you aren't using a relative path?
06:34 < chovy> niggler: i think its a bug w/ ejs-locals
06:34 < niggler> I'm trying to figure out exactly why they decided to do it this way
06:34 < chovy> i can only get it to work on one page, or the other, but not both
06:35 < niggler> https://github.com/RandomEtc/ejs-locals/blob/master/index.js#L193
06:35 < chovy> the 2nd partial doens't know about the first, it thinks the intial page view loaded it.
06:35 < niggler> actually chovy when you call partial
06:35 < niggler> https://github.com/RandomEtc/ejs-locals/blob/master/index.js#L308
06:35 < niggler> i think that's the hack
06:36 < niggler> the comment says   // (FIXME: filename is set by ejs engine, other engines may need more help)
06:37 < jesusabdullah> Nexxy: yo dawg how 2 dark internet lol
06:38 < jesusabdullah> niggler: there are also R versions of that
06:38 < jesusabdullah> R is free so like
06:38 < jesusabdullah> yeah!
06:38 < niggler> fuck R
06:38 < niggler> mathematica is a far superior language to R
06:39 < jesusabdullah> you smokin' crack
06:39 < jesusabdullah> mathematica is a steaming pile of turd
06:39 < niggler> its about as bad as octave
06:39 < jesusabdullah> as a language
06:39 < jesusabdullah> mathematica has the leet/sweet algebra system that nobody can match
06:39 < chovy> i was  hoping i could just do partial('/person/button') and it would work, but that looks for it in the root filesystem, not reltaive to optionsfilanem
06:39 < niggler> octave managed to retain all of the crap of matlab without improving the good stuff
06:39 < jesusabdullah> but if you're not using that, Fuck. Mathematica.
06:39 < jesusabdullah> octave managed to implement a matlab clone
06:39 < niggler> mathematica > R
06:39 < jesusabdullah> which is what they set out to do
06:40 < niggler> its not a true clone :/
06:40 < jesusabdullah> no matter how many times you say that it's still gonna be wrong
06:40 < niggler> there's still quite a few things missing in octave
06:40 < niggler> but that's beside the point
06:40 < jesusabdullah> octave is a few versions behind
06:40 < jesusabdullah> and it doesn't implement all the toolboxes
06:40 < jesusabdullah> but from what I've seen it's pretty fuckin' faithful
06:40 < jesusabdullah> which is a lot
06:40 < niggler> about as faithful as a catholic priest
06:41 < jesusabdullah> how about you back that up with a serious example?
06:41 < jesusabdullah> I've seen two things different about octave: none of the object bullshit, and lax quoting rules
06:42 < niggler> i actually haven't tried octave in the past few years
06:42 < niggler> but I've seen quirks involving commenting with the … syntax
06:43 < jesusabdullah> ... syntax?
06:43 < niggler> f(x, …\ny, …\nz)
06:43 < niggler> for example
06:43 < jesusabdullah> oh you mean newline
06:43 < niggler> in matlab, all of the crap after the "…" is a comment
06:43 < jesusabdullah> that's not comments
06:43 < niggler> between "…" and \n
06:44 < niggler> they are treated as comments in matlab but not in octave
06:44 < jesusabdullah> interesting
06:44 < jesusabdullah> otoh you can hashbang octave scripts but not matlab ones
06:44 < niggler> now this wouldn't bother me if it weren't used so liberally by others
06:44 < jesusabdullah> I actually haven't seen that before
06:44 < jesusabdullah> that's pretty lame
06:44 < niggler> is there a gui for octave?
06:45 < jesusabdullah> yeah
06:45 < jesusabdullah> but the gui is retarded who would want that
06:45 < niggler> heh i rarely use matlab on the shell
06:45 < niggler> i do use mathematica a lot though
06:45 < jesusabdullah> I seriously hate mathematica
06:45 < niggler> why?
06:46 < niggler> are you one of the academics on the hate-wolfram bandwagon?
06:46 < jesusabdullah> the language is even more bizarre and even more poorly designed than matlab
06:46 < jesusabdullah> no, I could give a shit about wolfram's ego
06:46 < jesusabdullah> don't get me wrong, I deeply respect the underlying algorithms
06:46 < jesusabdullah> wolfram alpha is awesome
06:46 < niggler> there are strange quirks like //N which never made sense to me
06:46 < jesusabdullah> but jesus christ the syntax is just horrible
06:47 < niggler> how would you improve it?
06:47 < jesusabdullah> make it javascript
06:47 < jesusabdullah> ;)
06:47 < niggler> then you'd have callback hell all over again lol
06:47 < substack> jesusabdullah: implement maxima in pure js
06:47 < jesusabdullah> seriously though, I don't like the capitalized functions and the lack of * for multiplication
06:47 < substack> that'd be a good start at attacking what mathematica is good at
06:48 < jesusabdullah> substack: I kinda wish maxima was just a lisp library instead of a big ol' dsl implemented on it
06:48 < jesusabdullah> like, lisp is actually great for that shit
06:48 < niggler> jesusabdullah: what do you mean?  
06:48 < jesusabdullah> code as data motherfucker
06:48 < niggler> 2*3 gives you 6
06:48 < substack> yeah really
06:49 < niggler> and * gives you point wise multiplication
06:49 < jesusabdullah> niggler: but you type 3xyCos(6)
06:49 < jesusabdullah> and all the functions start with capitals
06:49 < niggler> the kronecker product
06:49 < jesusabdullah> and I don't even remember how retarded the comments were
06:49 < niggler> which actually makes more sense for *
06:49 < niggler> where do you type 3xyCos(6)
06:49 < niggler> [] is for functions in mathematica
06:50 < niggler> unless you want a parser to figure out that 3xycos(6) is actually 3 * x * y * cos(6)
06:50 < niggler> and id genuinely be impressed by a parser that could figure it out
06:50 < jesusabdullah> yeah see?
06:50 < jesusabdullah> calling functions with brackets is just stupid
06:50 < niggler> how is that stupid?
06:50 < jesusabdullah> why the fuck would you do that? it follows no convention in math or in programming
06:50 < jesusabdullah> [] is always indexing
06:50 < niggler> in math it does
06:51 < jesusabdullah> for grouping not for function calls
06:51 < niggler> [] is what you use to enclose things in sums when you have a complex set of sums
06:51 < niggler> and other operators
06:51 < niggler> you write E[…] for expectation value
06:52 < niggler> Var[…]
06:52 < jesusabdullah> it's still much less common than function()
06:52 < jesusabdullah> like, why make shit up?
06:52 < jesusabdullah> How is that better?
06:52 < niggler> function() is computer science
06:52 < niggler> i don't recall anything in math called function()
06:52 < jesusabdullah> the only difference between function() and f() is the length of the character
06:52 < jesusabdullah> or the grouping
06:52 < jesusabdullah> it's still round parens
06:53 < niggler> operators are written with square brackets
06:54 < jesusabdullah> plus, it's entirely appropriate to borrow from other programming languages rather than making bizarre concessions and then try to justify it by pointing out all the edge cases where people use brackets for function application in stem
06:54 < jesusabdullah> like, I will never ever be convinced that any of those things were a good idea
06:54 < milani> Can anyone help me to findout why item is undefined here ?http://pasteit.com/19300
06:54 < milani> http://pasteit.com/19300
06:54 < niggler> how about APL jesusabdullah 
06:54 < niggler> is that an acceptable language to draw from?
06:55 < milani> it is Mongoose driver.
06:55 < jesusabdullah> APL is a case where we learned that something wasn't a good idea
06:55 < jesusabdullah> that can happen
06:55 < jesusabdullah> but there's something to be said for writing a "c-like"
06:55 < niggler> kdb is still used liberally
06:55 < jesusabdullah> Something that might be fun to see
06:55 < niggler> technically jesusabdullah if you want to draw the index argument
06:55 < jesusabdullah> is a LaTeX math parser
06:56 < niggler> haha exactly what i was thinking
06:56 < niggler> do it in latex
06:56 < jesusabdullah> yes I know matlab doesn't use brackets for indexing
06:56 < jesusabdullah> that's kinda dumb too
06:56 < niggler> instead of x[5] or whatever do x_{5}
06:56 < jesusabdullah> yeah
06:57 < niggler> latex is a garbage language
06:57 < jesusabdullah> like, you should be able to eval('\[ \frac12\left(\sum_{i=0}^\infty \frac{x^n}{n!}\right) \]')
06:57 < jesusabdullah> lolol
06:58 < jesusabdullah> that would be simultaneously awesome and horrible
06:58 < niggler> \bigl \biggl
06:58 < niggler> makes baby jesus cry
06:58 < jesusabdullah> tbh I like python for this stuff
06:59 < jesusabdullah> I wonder how sympy is doing
06:59 < jesusabdullah> tried it a few years ago, was very buggy
06:59 < niggler> i never felt comfortable with numpy
06:59 < jesusabdullah> I really liked it
07:00 < niggler> sad to say i still use f77
07:00 < niggler> we need a renaissance
07:00 < niggler> bring back fortran
07:00 < jesusabdullah> you can do matrix maths just fine and then still do a string concat without killing 20 people
07:00 < jesusabdullah> (vs matlab)
07:00 < niggler> that's one area that matlab really really dropped the ball
07:01 < niggler> dealing with text is godawful
07:01 < niggler> str2cell blah blah blah
07:01 < jesusabdullah> dealing with anything that's not a matrix is god awful
07:01 < niggler> many of the standard library functions reminded me of php
07:01 < jesusabdullah> lol yeah
07:01 < niggler> the arguments weren't consistent
07:01 < jesusabdullah> oh God what's that terrible one a whole bunch of people use
07:02 < niggler> strtr versus str_replace for example
07:02 < jesusabdullah> yeah
07:03 < jesusabdullah> naw, there's one that does a weird function application thing
07:03 < jesusabdullah> has a ridiculous name too
07:03 < jesusabdullah> uuugh can't remember
07:04 < jesusabdullah> niggler: https://github.com/jesusabdullah/anisotropy/blob/master/fea_analysis/worker.m
07:05 < niggler> you use a strange syntax
07:05 < niggler> actually you don't actually return anything nvm
07:06 < niggler> so as an example jesusabdullah  on line 11 after the … you could type something and that'd be treated as comment
07:06 < niggler> I'm confused as to why you'd do it all in matlab
07:06 < niggler> and not call matlab from a bash script
07:09 < jesusabdullah> each of those batch jobs takes upwards of 15 mins
07:09 < jesusabdullah> so it does a partial save every time
07:09 < jesusabdullah> I'm a significantly better programmer now
07:11 < sinclair_> jesusabdullah: uh huh
07:11 < niggler> baby jesus would cry
07:12 < sinclair_> niggler: http://www.explosm.net/db/files/Comics/Rob/robert.png
07:12 < niggler> speaking of which, is there a nice repl to play with socket.io
07:12 < niggler> haha sinclair_ 
07:16 < Zoney> i've given up on socket.io and the other node socket thingers
07:21 < niggler> any particular reason Zoney 
07:21 < niggler>  / what do you do
07:21 < Zoney> well
07:22 < Zoney> i've had problems with both engine.io and socket.io with the program just exiting for no ehyme or reason
07:22 < Zoney> sockjs i had poorer success rates
07:22 < Zoney> websocket on had poorer still
07:22 < sinclair_> what was wrong with socket.io?
07:23 < Zoney> even with socket.io, i'm only gettinh about 91% success rates
07:23 < niggler> by exit you mean the server died or the client lost connection
07:23 < Zoney> server died
07:23 < Zoney> no errors reported
07:23 < niggler> any hint as to why it died?
07:23 < niggler> oh
07:23 < sinclair_> no way
07:23 < Zoney> way
07:23 < niggler> that seems strange
07:23 < niggler> unless there's a stray process.exit somewhere
07:23 < Zoney> happens over and over again after running about a day
07:23 < Zoney> i've looked everywhere for a process.exit
07:23 < Zoney> nothing
07:23 < Zoney> it's so weird
07:23 < sinclair_> Zoney: did you run socket.io in a seperate process?
07:24 < Zoney> not even process.on("exit", ..) gets called
07:24 < Zoney> in a seperate process from what?
07:24 < sinclair_> Zoney: were you doing anything unusual with socket.io?
07:24 < Zoney> nope
07:24 < Zoney> in fact, it's a very basic test thing
07:25 < sinclair_> Zoney: use SignalR
07:25 < sinclair_> Zoney: it works
07:25 < niggler> wtf is signalr
07:25 < Zoney> time to learn something .net
07:26 < sinclair_> Microsoft +1
07:26 < niggler> omg what type of recommendation is that
07:26 < niggler> its like recommending a person gouge his eyes out
07:27 < niggler> like the scene from oedipus rex
07:27 < sinclair_> niggler: its professional software written by professional developers
07:27 < niggler> why isn't diagnosing the socket.io problem an acceptable answer here?
07:28 < Zoney> i wonder if signalr would get better than 91% success rate
07:28 < jesusabdullah> what is signalr
07:29 < sinclair_> Zoney: give it a try, its fairly straight forward to set up a hub
07:30 < Zoney> sadly, i know nothing about .net development
07:31 < sinclair_> Zoney: im kinda let down that you are having issues with socket.io
07:31 < sinclair_> i was pinning a lot of hopes on signalr
07:32 < sinclair_> er, socket.io
07:37 < Zoney> you should try it and see how it works for you
07:37 < niggler> lol Zoney you have a small test case that exhibits the issues?
07:37 < niggler> or maybe some platform info
07:38 < Zoney> not anymore
07:38 < Zoney> platform was ec2 micro
07:42 < niggler> ec2 might have crapped out?
07:42 < niggler> ec2 has been known to fuck up every once in a while
07:43 < LouisT> anyone get an ovh kvs when they were free?
07:43 < bakadesu> I've had strange problems with micro instances, where they would resolve on a larger instances
07:44 < Zoney> ya, i thought about testing again someday on a small or medium instance and also a linode
08:05 <@konobi> morning all
08:06 <@konobi> mmalecki: see that trent added dtrace support to bunyan?
08:48 < chovy> Zoney: i found a better deal than linode.
08:48 < chovy> twice the ram for half the price
08:53 < timeturner> chovy: which deal was that?
08:53 < timeturner> I was looking to switch to linode actually...
08:53 < timeturner> from rackspace
08:57 < chovy> bermanhosting
08:57 < shadow_fox> hi i am on debian squeeze , can someone tell me how to install nodejs and npm using this https://gist.github.com/579814 
08:57 < chovy> you can get 1gb for $15/mo
08:57 < chovy> i've been using them about 2 months now
08:57 < chovy> the server is in germany, but i'm ok with that.
09:00 < shadow_fox> nevermind i am using git all the way method.. 
09:18  * yellowstone Hello!
09:53 -!- mode/#node.js [+o piscisaureus_] by ChanServ
11:01 < Industrial> Are there solutions for sharing (model) validation on the client and server?
11:31 < mmalecki> konobi: yup
11:31 < mmalecki> konobi: been planning on adding it to winston too
11:43 < Turquesa> Hi all, I'm developing an app which uses multiple node.js servers. Is it possible to authenticate two node.js servers with SSL? I'm using express with socket.io but I only found authentication between client (web browser) and a single server... Thx you all in advance!
11:45 < Industrial> How do I watch for dir/file adds in a directory?
12:06 < Turquesa>  Hi all, I'm developing an app which uses multiple node.js servers. Is it possible to authenticate two node.js servers with SSL? I'm using express with socket.io but I only found authentication between client (web browser) and a single server... Thx you all in advance!
13:03 -!- mode/#node.js [+o piscisaureus_] by ChanServ
13:22 < Industrial> I'm getting "Error: Could not load the bindings file. Tried:" with bcrypt, I just reinstalled it and still get the problem :S
13:24 < niggler> anyone deploy node apps using git?  right now i just put the dependencies in a package.json file and set up a make target.  is there a standard tool for doing node deployment stuff?
13:27 < nathan7> niggler: I'm looking at fleet
13:43 < PhilipA> Hi I am new to node.js, and uses expressjs. Hope someone can help me with a wierd issue. It seems like when I look at my command promt when loading the front page that the static files are loaded in an endless loop. All the scripts and stylesheets are given a dynamic id like: /javascripts/lib/angular.js?_=1352036376699 200 5ms - 465.22kb Anyone got an idea what might be wrong?
13:45 < mscdex> sounds like something client side
13:45 < PhilipA> I am using angularjs, so that might be the issue
13:48 < mscdex> could be. looks like it's making sure it doesn't get a cached copy
13:49 < PhilipA> Perhaps it could be an endless redirect loop of the routing... guess I have to digg a bit deeper :)
13:50 < PhilipA> thanks for the help
13:51 < Cheery> I have to update my node to 0.8.0 or higher
13:51 < Cheery> apparently
13:57 -!- mode/#node.js [+o piscisaureus_] by ChanServ
13:58 < mscdex> Cheery: it's the latest stable branch
13:59 < tuhoojabotti> Does util.inherits allow me to inherit multiple classes?
14:00 < Cheery> if I'm compiling on linux, is there anything I need to consider?
14:02 < mscdex> Cheery: only that you need python 2.x and a compiler
14:09 < Cheery> I have it installed on my system computer. and raspi probably takes two hours in compiling it.
14:11 < mscdex> Cheery: why not cross-compile?
14:15 < Cheery> mscdex: because I don't know how. and I'm concentrating on udev today, which means I don't need raspi today necessarily for anything.
14:16 < adlwalrus> Hi all, just getting started, and trying to get my feet wet with a simple build script.
14:16 < zezikaro> ok
14:16 < adlwalrus> how do I know what encoding my files are?
14:17 < Cheery> npm WARN package.json openil@0.1.0 No README.md file found!
14:17 < Cheery> heh. should I fix that? :)
14:19 < Industrial> I'm getting "Error: Could not load the bindings file. Tried:" with bcrypt, I just reinstalled it and still get the problem :S
14:19 < mscdex> Industrial: did it compile correctly?
14:19 < mscdex> adlwalrus: what do you mean?
14:20 < mscdex> Cheery: there should be some tutorials on cross compiling for raspi, as i know people are doing that for node
14:20 < Cheery> mscdex: I'll look those if this compiling fails. thanks.
14:21 < mscdex> Cheery: generally you set CC and such to your cross compiler and then set CCFLAGS etc to tune for the cpu and some node-specific switches for ARM
14:21 < Industrial> mscdex: nvm, resolved it.
14:22 < Cheery> I got info about how to do file descriptor polling in node.js
14:22 < adlwalrus> mscdex: well, i'im using fs.readFileSync
14:22 < adlwalrus> mscdex: and idk what encoding to specify for my build script.
14:23 < Cheery> so I guess today is going to concentrate on different sort of events and devices from evdev. :)
14:23 < Cheery> I have several common devices I can play around with.
14:24 < Cheery> from keyboards to joysticks and tablets.
14:24 < mscdex> adlwalrus: did you write the build script?
14:25 < Cheery> time to go grocery shopping before starting this day :)
14:26 < mscdex> adlwalrus: if this is just a one-time thing, use the `file` command on it if you're really not sure. if you're not using any non-ASCII characters, just use 'ascii'
14:32 < adlwalrus> mscdex: I'm not using any non-ascii.
14:32 < adlwalrus> mscdex: although I'm on widnows, unfortunately, so no `file` here.
14:34 < mscdex> adlwalrus: use 'ascii' and you should be fine
14:34 < adlwalrus> mscdex: alright, cool. out of curiosity, what other options are there?
14:34 < adlwalrus> mscdex: do you think I could go wrong with "utf-8"?
14:39 < mscdex> adlwalrus: 'utf8' is fine, it includes ASCII, but has some overhead. other options: http://nodejs.org/api/buffer.html#buffer_buffer
14:42 < adlwalrus> mscdex: hey, thanks man. it's nice to have some guidance while I'm starting out. (this is my first node script!)
14:45 < mscdex> cool :-)
14:47 < instinkt> Compared to writing REST APIs in other languages, is node a better choice if the app is going to be solely spitting out content as a public API?
14:47 < instinkt> I'm mainly pointing to the async code vs. sync for the APIs
14:49 <@mbalho> instinkt: event loopy servers are good for APIs because they can handle many connections
14:49 <@mbalho> instinkt: whereas with say ruby if you have 2 users both doing big queries one will block the other unless you scale out your processes
14:50 < instinkt> mbalho: Yeah, but I can write loopy servers in other languages too. So is nodes advantage mainly based on the fact that it's async from the get go?
14:50 <@mbalho> instinkt: i'd argue its the easiest yea
14:50 <@mbalho> instinkt: mostly cause the core is small and focused and the community is awesome
14:51 <@mbalho> instinkt: you can write server request handler functions that look like function onRequest(req, res) { queryDatabase('foobar').pipe(res) } and handles the streaming
14:52 < instinkt> mbalho: definitely very convenient and cuts a lot of development time and maintenance later on. So, it's good as long as it's just the API and not branching out to building a larger project on top of it?
14:53 <@mbalho> instinkt: its very good for managing I/O, arguable as to whether or not its the best tool for building web frameworks with
14:54 < adlwalrus> is it better to `for(p in o)` or `for(var p in o)`?
14:54 < instinkt> mbalho: I built a few larger projects, and one bigger multiplayer game in node before and it does get complicated because node is just moving so fast and if you'd like to implement something new, you have to do *a lot* of maintenance. 
14:54 < zezikaro> var p
14:54 < zezikaro> of cours
14:54 < instinkt> mbalho: So I got the impression that the best use case is a small to medium fast service kind of app
14:55 < instinkt> mbalho: so for next project I'm considering building the API part of the platform in node
14:55 <@mbalho> instinkt: i find that node core is pretty stable nowadays
14:55 < adlwalrus> zezikaro: alright, thanks. not sure why I learned it the bad way. I just realized that it's probably not good, and that's how I've been doing it for a long while.
14:55 < adlwalrus> zezikaro: gotta unlearn now.
14:55 < zezikaro> always use var
14:56 < AAA_awright> adlwalrus: var a, var a, var a
14:56 < instinkt> mbalho: yeah. it's arguable to what extent is the ecosystem of open source libraries tho
14:56 <@mbalho> instinkt: but i totally recommend doing APIs in node. heres a diagram of my apps node usage from a talk i did recently http://maxogden.github.com/slides/nodedublin/server-diagram.png
14:57 < instinkt> mbalho: thanks a lot for being so helpful
14:57 <@mbalho> instinkt: there are some popular modules that havent caught up yet to stuff that was added to node core over a year ago
14:58 <@mbalho> instinkt: a good rule of thumb with node is 'dont use big modules'
14:58 <@mbalho> :D
14:58 < instinkt> mbalho: hehe
14:58 < instinkt> mbalho: APIs in node couldn't care less :)
14:59 <@mbalho> instinkt: is your multiplayer game on github?
15:00 < instinkt> mbalho: no, it's a project for the national org so it's licensed. I have no rights over it
15:01 <@mbalho> instinkt: ahh bummer
15:02 < instinkt> mbalho: useful blog btw
15:06 < poet> hi
15:07 < poet> i want to start a module or something with node
15:07 < poet> any idea?
15:07 < SoulRaven> anyone worked with geo coordonates
15:07 < SoulRaven> and encoding of geo coordonates?
15:07 < poet> or partner maybe
15:07 < SoulRaven> i have this code, and i don't know way is not working right: http://jsfiddle.net/m7E5a/4/
15:09 < poet> anyoneeeeeeeeeeeeeeeeeeeeeeeee with me????????????????
15:09 < mscdex> SoulRaven: for one thing, bit operators are 32-bit operations in v8
15:09 < adlwalrus> http://www.hastebin.com/vafojegati.coffee <-- my first node script! anyone have any feedback?
15:11 < poet> adlwalrus: yes, u want to start a module w/ me?
15:11 < SoulRaven> mscdex: and i have 32 bit
15:12 < adlwalrus> poet: sure... idk what that actually means, but WTH?
15:15 < poet> adlwalrus: i have no real xp with node i prevent u, any idea about what we can do???
15:15 < mscdex> SoulRaven: i saw 40-bit shifts in there
15:15 < adlwalrus> poet: sorry, my battery's about to die.. gotta go.
15:16 < poet> adlwalrus: okay, github?
15:16 <@mbalho> adlwalrus: looks cool. have you written a function that takes in a callback yet?
15:17 < adlwalrus> mbalho: I mean, I have in my clientside code...
15:17 < mscdex> SoulRaven: and 48 and 56-bit shifts
15:17 < adlwalrus> personally oi like sync programming better, I think.
15:17 < mscdex> i don't think those shifts are giving you the results you are probably expecting
15:18 < adlwalrus> not such a fan of jquery spaghetti, and besides, I think synch programming is more akin to the way that I, as a human, think. mbalho
15:19 < adlwalrus> mbalho: sorry, gotta go, battery's about to die.
15:19 < mscdex> mmmm spaghetti
15:19 < poet> i repeat please: anyone want to start something with me???????????????????
15:20 < shanse> ?????????????????????
15:22 < poet> shanse: i want to start a module with someone (i already know node basics and +)
15:22 < shanse> you need more question marks
15:23 < poet> i dont think so
15:23 < poet> '???????????????????'.length === 19, its enough
15:24 < poet> shanse: u want to do one w/ me???????????????????
15:24 < AndreasMadsen> name some hook.io alternatives. I saw one a week ago and now I have forgotten the name.
15:25 < AAA_awright> poet: What in the world sort of module requires two maintainers to start?
15:25 < AAA_awright> Just write it yourself and others will follow, if it's any good
15:26 < SoulRaven> >> '???????????????????'.length
15:26 < purr> SoulRaven: (number) 19
15:27 < poet> AAA_awright: give me an idea thennnn to start one aloneeeeeee
15:27 < AAA_awright> >_<
15:28 < AAA_awright> poet: You write modules to solve problems. No problems = no module necessary
15:29 < poet> AAA_awright: wat????? im unexperienced i told u, just give me a simple idea that u haveeeeeeeeeeeee
15:30 < AAA_awright> poet: Stop pinging people like you're 13
15:30 < poet> AAA_awright: and please give me steps to go also, and i will inform u about the progress.
15:30 < poet> AAA_awright: im 14 and u? :)
15:30 < AAA_awright> *What *? *I'm *inexperienced *I told *you, just give me any simple ideas that *you *have
15:32 < poet> AAA_awright: ok, thks
15:32 < AAA_awright> GARARAAAAHHHHHH
15:33 < AAA_awright> poet: If it's not an idea that you're passionate about you're going to have a hard time. Find some problem that you're passionate about and solve it
15:35 < poet> AAA_awright: my passion is for node, im not passionate abt problems
15:35 < poet> just give me one ideaaaaaaaaaa pleaseeeeeee
15:35 < onr> he's probably asking a simple idea for starting out module development. it doesn't mean he hasn't problems
15:36 < poet> onr: yeahhhhhhhhhhh
15:37 < substack> poet: go build an application then split out the reusable bits into modules
15:37 < onr> poet: i'd rewrite an existing one, which you find the most interesting and/or simple
15:38 < AAA_awright> poet: If I told you to go out and make a program that can plot the price of oil in terms of the market rate of gold, that'd be boring, no one likes that stuff like I do. What's something you want to do? What features of Node.js attracted you?
15:39 < poet> onr: thats not a good idea, buts i can do that also
15:42 < poet> krkrkrkr i found a good ideaaaaaaaaaa
15:43 < poet> i will do like AAA_awright did before, an irc ranslator for slang phrases into normal sentences
15:44 < poet> is it goooood?????????????
15:44 < AAA_awright> I have an idea, one that fixes excessive repeated characters on IRC
15:44 < poet> substack: and maybe ill split it
15:44 < poet> into my modules :)
15:46 < poet> AAA_awright: ill add this too :)
15:47 < poet> AAA_awright: im very proud of meeeeeeeeeee, thks, u rock
15:47 < poet> ++
15:47 < AAA_awright> poet: If you didn't get the hints, please use proper grammar, no one is going to take you seriously otherwise
15:49 < poet> AAA_awright: okayy no problem
15:49 < poet> AAA_awright: and ill be here more often
15:49 < poet> you are there every day?
15:52 < niggler> AAA_awright: why does your nick start with AAA?
15:53 < AAA_awright> niggler: I steal all my nicknames from other people
15:53 < niggler> ah AAA_awright the pilferer 
15:53 < AAA_awright> And I'm a big gamer, and, well, I get jealous when I go the arcades, you know?
15:54 < niggler> i haven't been to an arcade in more than a decade
15:54 < AAA_awright> niggler: AAA is the guy with all the high scores on all the arcade machines :p
15:54 < niggler> man i miss contra
15:54 < niggler> you know in my area a fellow used the name GOD
15:56 < mnaser> holy crap haven't been using my screen with my laptop for a while going from 13" back to 27", SO MUCH SPACE.
15:56 < niggler> not enough space
15:56 < niggler> i wish the iMacs had higher resolution
15:56 < mnaser> 27" native is pretty big...
15:58 < mnaser> 2560x1440 is pretty big
16:01 < niggler> its not big enough!
16:01 < niggler> i also have many windows open
16:02 < mnaser> niggler: my problem 99% of the time
16:02 < mnaser> "my computer is so slow wtf" and i realize i have tabs and safari windows open and forgotten for weeks
16:03 < niggler> the issue mnaser is that, lets say you are doing some development
16:03 < niggler> you have a few scripts in node
16:04 < niggler> some other client js files
16:04 < niggler> then you are testing, so you have a few browsers open
16:04 < niggler> a few VMs to test on IE
16:04 < mnaser> and a few for googling issues that you're running into
16:04 < niggler> lol google
16:04 < mnaser> and like 7 different tabs because you just cmd+t google the documentation every time
16:04 < gavri> I get sporadic failures when running my tests together with mocha. does mocha run tests concurrently in any situation?
16:04 < niggler> i tinker with the REPL (need a shell window open)
16:04 < mnaser> and don't go back to the original tab haha
16:05 < niggler> so by the time you have everything going you realize that not even two screens are enough
16:05 < mnaser> i have been doing all my dev on a separate "desktop" using expose or whatever, it helps make shit more organized imho
16:06 < mnaser> until you wanna click cmd+w and hit cmd+q instead
16:06 < mnaser> fml
16:06 < nkuttler> serveral browsers? during dev? waste of time.. that's really for the end
16:07 < nkuttler> automated tests > checking in browser anyway
16:08 < apb> guess which keyboard shortcut i just learned
16:08 < mnaser> lmfao
16:09 < mnaser> cmd q does quit your aplication
16:09 < mnaser> s/ap/app/
16:16 < niggler> nkuttler: you would be surprised
16:16 < niggler> doing it whilst developing actually shows you browser incompatibilities early on
16:20 < nkuttler> niggler: not sure what you're doing, but compatibility is rarely a problem for me on the js level
16:20 < nkuttler> can't remember the last time i had a problem there
16:21 < mnaser> nkuttler: i think jquery/frameworks spoil devs because they absorb all the possible ways to deal with different browsers
16:21 < mnaser> can't remember the last time i did a document.getElementById lol
16:21 < nkuttler> mnaser: sure. why do you bring them up though?
16:22 < mnaser> [11:15:09] <niggler> doing it whilst developing actually shows you browser incompatibilities early on
16:22  * nkuttler uses that all the time
16:22 < mnaser> why..
16:22 < nkuttler> mnaser: what else would i use?
16:23 < mnaser> a query selector that does the same thing but would provide you a consistent api over multiple browsers
16:23 < nkuttler> even if i have to use jquery or a selector lib, native by id is much faster
16:23 < mnaser> and while making it easier
16:23 < mnaser> how much faster are we talking about though, is it really worth millisecs difference to deal with that possible issue?
16:26 < nkuttler> i actually switch devices more often than browsers during dev
16:39 < tuhoojabotti> argh, why does vows hide console.log, debugging tests sucks :u
16:41 < EuroNerd> I need some common-sense advice:  I'm writing a node/socket/mongo web app. Is it a better idea to make my admin panel (server & users monitoring & control) as a separate app or part of the main app? (Latter would mean a handful of users would have higher privileges to access admin functionality.)
16:42 < EuroNerd> We're talking a real-time, single-page app.
16:46 < EuroNerd> Separate app would allow to put admin functionality on a separate server, thus making it hard for potential "hackers" to even know where to try to break in to cause damage. On the other hand, all the data accessed by admin panel is stored on a db server obviously accessed by the user-facing app, so there's no complete separation.
16:49 < EuroNerd> Hmm, maybe it's a bad time to ask... I can see it's barely 9am in SF... ;)
16:55 < timoxley> EuroNerd make it a separate app
16:55 < timoxley> EuroNerd doesn't even need to be on different server
16:56 < timoxley> do it mainly for separation of concerns
16:57 < EuroNerd> timoxley, yeah, initially all three components (admin, user app, db) will reside on one VPS, since I'll have like 5 users. ;)  But I want to structure it properly from the start.
16:57 < EuroNerd> timoxley, what do you mean by separation concerns?  
16:57 < timoxley> with express it's easy enough to mount apps inside other apps
16:58 < EuroNerd> You see, there's another way to look at it:  I'll be one of the users, so it would be more convenient for me to be able to use the app like everyone else, and at the same time keep an eye on admin stuff in the same place.
16:59 < timoxley> EuroNerd what do you mean
16:59 < timoxley> have admin controls in the frontend app?
16:59 < timoxley> for admins?
16:59 < EuroNerd> well, like monitor usage (server load, users present) and see alerts for any unusual events
16:59 < EuroNerd> timoxley, yes, assuming the user has admin privileges, i.e. me ;)
17:00 < timoxley> EuroNerd yeah, so you just mount your admin app in your main app if the user supplied correct credentials
17:01 < EuroNerd> OK, but why then would I want to make them (admin & user app) separate at all?
17:02 < timoxley> EuroNerd why not have a refrigerator in your bathroom?
17:03 < EuroNerd> timoxley, assuming I can't afford multiple refrigerators, it's better to put the fridge where I'll need it most often: in the kitchen.  How does that relate to this problem?
17:03 < timoxley> EuroNerd keep the client-facing stuff with the client-facing stuff, admin stuff with the admin stuff.
17:04 < timoxley> EuroNerd it means you can develop and test them separately and not have to worry too much about breaking things
17:04 < timoxley> EuroNerd http://en.wikipedia.org/wiki/Separation_of_concerns
17:04 < EuroNerd> I'm primarily concerned its security. It seemed to me like a good idea to host admin panel separately (once I split into separate servers), in case someone is able to find a bug in my user app and escalate privileges or sth.
17:04 < EuroNerd> Ah! You're right!
17:05 < EuroNerd> If my client-side app fails and my admin is integrated in client, then I can't access admin which might be necessary to fix stuff.
17:06 < timoxley> EuroNerd yeah if you're running them as different processes, sure
17:06 < EuroNerd> timoxley, thanks. I know this is pretty obvious stuff, but I'm so deep in code right now that I only see the trees and not the forest. Needed some common sense. :)
17:07 < timoxley> EuroNerd np.
17:22 < jgornick> Hey guys, with Mongoose 3.3.x, did anything change in the way how you register models to the default mongoose connection/namespace?
17:25 < SoulRaven> is posibile in node or v8 to make 64biti bitwise operation?
17:25 < Sly> SoulRaven, it's always possible. You can even make your own C/C++ addons if you wish.
17:26 < Sly> http://nodejs.org/api/addons.html
17:27 < SoulRaven> :(
17:30 < jwm> jgornick: what is the problem you are having?
17:31 < jgornick> jwm: Let me get a gist together.
17:32 < jgornick> jwm: https://gist.github.com/4012709 On line 14 of mongoose-test.js, I always get "Schema hasn't been registered for model "User""
17:33 < jwm> yeah
17:34 < jwm> did you read the part about using model vs connect
17:34 < jwm> Important! If you opened a separate connection using mongoose.createConnection() but attempt to access the model through mongoose.model('ModelName') it will not work as expected since it is not hooked up to an active db connection. In this case access your model through the connection you created
17:34 < jwm> https://github.com/learnboost/mongoose
17:35 < jwm> jump down to important
17:35 < jwm> it gives you examples
17:36 < jgornick> jwm: But I am using the default connection on mongoose.
17:37 < jwm> whats the difference between connection and createConnection
17:38 < jwm> connect / vs createconnection
17:38 < jwm> ahh
17:38 < jgornick> jwm: http://mongoosejs.com/docs/api.html#index_Mongoose-connect
17:38 < jwm> need to create additional..
17:38 < jgornick> jwm: Yup :)
17:39 < jwm> how is your schema defined
17:40 < jwm> maybe you are using an older schema style
17:40 < jgornick> jwm: My schema is in the second file of the gist.
17:40 < jgornick> jwm: user.js
17:41 < jwm> hah
17:41 < jwm> sorry
17:41 < jgornick> No worries :)
17:41 < sinclair_> serious question, are there any users here doing anything with TypeScript?
17:41 < jwm> you didn't save the schema
17:41 < sinclair_> or, coffeescript
17:41 < jgornick> jwm: What do you mean?
17:44 < jwm> you didn't call save() on it
17:44 < jwm> there is no data in the db
17:45 < jgornick> jwm: Nevermind I figured it out.
17:46 < jgornick> I have my models in a different directory project with a different node_modules so my model was using a different mongoose than my mongoose-test.js mongoose.
17:46 < jwm> what was it?
17:46 < jwm> ahh
17:46 < jwm> different mongoose
17:46 < jwm> :)
17:46 < jgornick> Seriously, all day yesterday and today.
17:46 < jgornick> That's awesome.
17:46 < jwm> well there was no data then
17:46 < jwm> lol
17:46 < jgornick> +1 me
17:46 < jgornick> jwm: Thanks.
17:46 < jwm> we're all learning
17:46 < jgornick> jwm: Something like that, yes.
17:46 < jgornick> :P
17:46 < jwm> hah
17:46 < jwm> are you getting older
17:47 < jwm> work too many hours at the day job
17:47 < jwm> :)
17:47 < jwm> I'm in the same boat if
17:47 < jwm> my mind is chop suey
17:54 < jwm> dropbox from node is a cool idea
17:55 < larzconwell> What do you mean.
18:22 < sppol> test
18:42 < peterschmidler> I am building a cms and consider using node since my roots are in design/frontend dev. What do you guys think about it? Any suggestions?
18:43 < sinclair_> peterschmidler: sure, why not
18:43 < jwm> he left hehe
18:47 < zane> I've been struggling to create a flame graph per the documentation because my dev server is OSX (no ustack helpers) and my prod server is CentOS (no dtrace). Does anybody have a good tutorial / workaround?
18:53 < peterschmidler> is there a nice and straightforward was of deploying a node app on a vps?
18:55 < sinclair_> peterschmidler: ftp?
18:55 < sinclair_> peterschmidler: terminal prompt ?
18:55 < peterschmidler> How easy is it to run and maintain your own node.js server?
18:56 < sinclair_> peterschmidler: relatively easy, but i opt for cheaper solutions
18:56 < peterschmidler> sinclair_: Which?
18:57 < sinclair_> peterschmidler: there is heroku, azure, linode, nodejitsu, there are so many options available
18:58 < peterschmidler> sinclair_: What if I prefer to run my own vps? Is that a bad idea?
18:59 < sinclair_> peterschmidler: there isn't a black or white answer to that question
18:59 < peterschmidler> sinclair_: What would I have to think about?
18:59 < sinclair_> peterschmidler: cost, requirements, 
19:00 < sinclair_> peterschmidler: maintenance 
19:00 < sinclair_> peterschmidler: for a simple website, / cms, with a simple backend, i don't think that warrants a vps at all
19:01 < peterschmidler> sinclair_: I was thinking about hosting multiple sites on that server.
19:01 < AAA_awright> Well how else would you run node.js?
19:02 < sinclair_> AAA_awright: Azure supports iisnode, which runs node under IIS
19:02 < sinclair_> AAA_awright: i like the way Azure handles dead processes actually
19:03 < sinclair_> i don't know what other tech is available to handle restarting a node process on crash
19:03 < AAA_awright> sinclair_: How's that?
19:04 < sinclair_> AAA_awright: it just handles restarting the node process on request if its not running, it does that by way of IIS
19:05 < sinclair_> AAA_awright: which is nice
19:07 < sinclair_> AAA_awright: i don't know what other tech is available to handle that kinda thing, other than having a host node process spawning child_processes
19:07 < sinclair_> which i haven't looked into so much
19:08 < sinclair_> AAA_awright: but, even then, if the host crashes, you still need some form of automated thing to restart it
19:08 < sinclair_> AAA_awright: Azure is able to keep IIS running, so its one less thing to worry about
19:08 < AAA_awright> Well that could be true with any server
19:08 < AAA_awright> What if azure crashes, what brings that back up?
19:08 < AAA_awright> And so on
19:09 < sinclair_> AAA_awright: let Azure take care of that
19:09 < txdv> what if the internet crashes
19:09 < txdv> what if the electricity system crashes
19:09 < txdv> what if our solar system crashes
19:09 < txdv> what if our galaxy crashes
19:09 < txdv> what if the physical laws start to crash
19:09 < AAA_awright> I'm pointing out the absurdity of having such programs
19:09 < sinclair_> AAA_awright: its nice to be able to delegate things like this to the host, its one of the reasons i like PAAS over IAAS
19:10 < txdv> WHO WILL RESTART THE UNIVERSE
19:10 < AAA_awright> Having a program bring it back up isn't going to fix it, fixing your buggy program is going to fix it
19:10 < jwm> I use heliconzoo module
19:10 < jwm> instead of iisnode
19:10 < jwm> it supports everything 
19:10 < jwm> like socket.io
19:10 < sinclair_> AAA_awright: you are looking at it the wrong way
19:10 < peterschmidler> What about https://github.com/nodejitsu/forever?
19:10 < AAA_awright> Comment observed, but how so?
19:11 < sinclair_> AAA_awright: if your application dies because it went down one code path, you don't want your entire application to die right
19:11 < peterschmidler> Anyone running your own fps for an app?
19:11 < peterschmidler> ^vps?
19:12 < AAA_awright> sinclair_: Uh, no?
19:12 < sinclair_> AAA_awright: at least with automated restarts through some host manager, you don't need to be so concerned about things like this... (you can be even more so less concerned if you application is completely stateless :) )
19:13 < sinclair_> AAA_awright: bugs in production software are a reality of life afterall :(
19:13 < AAA_awright> How does this uniquely affect Node.js
19:13 < sinclair_> AAA_awright: what do you mean?
19:13 < AAA_awright> Because that's not how we handle other daemons e.g. Nginx
19:14 < sinclair_> AAA_awright: i don't think its a node specific thing at all
19:14 < sinclair_> AAA_awright: tho, node is different in the regard it runs for a long time
19:14 < sinclair_> AAA_awright: as apposed to other web stacks that like to "get in, get out"
19:14 < AAA_awright> So do most daemons
19:14 < sinclair_> Yeah, thats true
19:15 < sinclair_> but you don't have to manually hack up daemons right?
19:16 < AAA_awright> I wouldn't exactly call my servers a hack
19:16 < sinclair_> AAA_awright: anyway, nodes just a piece of the puzzle, im yet to do anything major with it yet, and haven't been through all its quirks, 
19:16 < sinclair_> AAA_awright: i didn't call your servers a hack tho
19:17 < AAA_awright> sinclair_: Never said you did
19:18 < sinclair_> AAA_awright: sorry, i thought you were implying i suggested it somehow, all good
19:18 < sinclair_> AAA_awright: still, i like platform as a service, its just less to worry about, and generally cheaper
19:19 < AAA_awright> Right, that's what I'm going after
19:19 < sinclair_> AAA_awright: i still kinda like App Engine
19:20 < sinclair_> AAA_awright: if it weren't so proprietary 
19:20  * sinclair_ notes that web scale is easy on App Engine, at the expense of being somewhat difficult to develop on
19:20 < sinclair_> its damn cheap tho
19:23 < onr> web scale :\
19:23 < timeturner> anyone know of a better deal than linode
19:23 < timeturner> since I'm planning to switch to it today
19:23 < onr> where
19:23 < onr> in tokyo?
19:24 < AAA_awright> FACEBOOK IS LIKE WEB SCALE
19:24 < AAA_awright> wait
19:24 < AAA_awright> Wow I botched that one
19:28 < sinclair_> AAA_awright: i cringe when i hear the term "web scale"
19:28 < AAA_awright> What's wrong with web scale?
19:28 < AAA_awright> If you know what it means
19:28 < AAA_awright> Meaning, the web is gargantuan
19:28 < sinclair_> people who say "web scale" often don't know what it means
19:29 < sinclair_> and what it implies, its fits in the buzz word category
19:29 < AAA_awright> Like, you stepped into those newfangled 787s and flew through a library a million times larger than the Library of Congress and then you go onto the Web and you say "damn that's a massive library"
19:29 < sinclair_> AAA_awright: for example, http://www.youtube.com/watch?v=URJeuxI7kHo
19:30 < AAA_awright> sinclair_: I think you're looking for http://www.youtube.com/watch?v=b2F-DItXtZs
19:30 < onr> timeturner: what's wrong with linody?
19:30 < sinclair_> AAA_awright: heh
19:31  * sinclair_ tries to workout how to read anonymous type information from the TypeScript AST
19:32 < sinclair_> damn TS is cool tech
19:32 < mscdex> facebook is WAP scale
19:32 < mscdex> sinclair_: how much are they paying you?
19:32 < AAA_awright> Does /dev/null support sharding?
19:32 < sinclair_> mscdex: i was looking for coffeescripts AST also
19:33 < sinclair_> mscdex: but its not as elegantly accessible as TS, plus, TS is in JS, meaning the AST is accessible in JS, which is kinda where you need it
19:34 < sinclair_> mscdex: that kinda makes it unique in the X to JS languages
19:58 <@konobi> my net connection at linode has been kinda flakey now and again over the last year
19:59 < jwm> sure its not your isp? :)
20:01 <@konobi> entirely
20:08 <@konobi> ircretary: when was jstash last here?
20:08 < ircretary> konobi: jstash was last seen at 2012-11-02T17:20:55.924Z, joining #Node.js
20:10 < r3dbr1ck> h
20:12 < jb_> if i need to wait for two events to emit (db and rabbitmq) before proceeding with some code,
20:12 < jb_> whats the way to go then?
20:13 <@konobi> jb_: do it serially?
20:14 < BleKohl_> why would I want to specify the oldest version in package.json?
20:14 < BleKohl_> doesn't npm default to the newest version anyway?
20:15 < BleKohl_> err, I mean in dependencies
20:16 < jb_> konobi: hum.. yeah
20:20 < jwm> BleKohl_: so your app doesn't break
20:20 < BleKohl_> no, I understand specifying the newest version, such as "<= 1.2.0"
20:20 < BleKohl_> but what's the point of ">= 1.2.0"
20:21 < jwm> well in that case you just want something at least that version or newer
20:21 < jwm> maybe for bug fixes and not carrying about api changes heh
20:22 < BleKohl_> <BleKohl_> doesn't npm default to the newest version anyway?
20:22 < jwm> yes but what if you move this to a global install that has less than that version
20:22 < jwm> or want to keep one old version and one new version
20:22 < jwm> mostly for global packages
20:23 < BleKohl_> hm, for example?
20:24 < BleKohl_> wouldn't each global package have its own node_modules?
20:38 < mnaser> okay so a bit silly but is there a way that people usually go about having node scripts that run every x seconds
20:38 < mnaser> i'm calling my function when i start and once it's done it sets a timeout again 1 second later
20:38 < mnaser> it seems like a common way and i feel like there's probably a nicer/cleaner way than this, heh
20:40 < TheAceOfHearts> so, does anyone have experience using Bootstrap's typeahead with Express and MongoDB? I'm looking for sample code to see if I can adapt it for myself, since my approach is clearly not working
20:42 < timeturner> TheAceOfHearts: technically you shouldn't search query from mongodb
20:42 < timeturner> for live searching
20:43 < TheAceOfHearts> I see
20:43 < nlf> mnaser: could just let it exit and run it in cron?
20:43 < TheAceOfHearts> well, what if I just take out the full list of names and then I check the query from those results?
20:43 < mnaser> nlf: well, it's every 1 minute, and i'm polling for something minutely so i'd want to store it in memory
20:44 < mnaser> i know i could make it persist and store it on disk but i don't really care if the data is lost if the process dies
20:44 < mnaser> basically i'm checking for a value every minute and calculating an average of the past hour and doing something
20:49 < nathan7> mnaser: setInterval?
20:50 < mnaser> nathan7: well i thought about that but i figured if my process takes too long i don't wanna have it happen twice? if that makes sense
20:50 < mnaser> because won't setInterval the next interval even if it's not done the current one?
20:50 < nathan7> mnaser: 'done'?
20:50 < nathan7> mnaser: if your function is running it'll block the event loop
20:50 < nathan7> mnaser: so no timeouts will trigger etc
20:50 < mnaser> aaah okay
20:50 < mnaser> that makes sense
20:51 < mnaser> well
20:51 < nathan7> mnaser: if you do something asynchronous then things work properly and you don't block your entire process
20:51 < mnaser> yes but i'm doing the foreach inside my main function async
20:51 < mnaser> so i'm pretty sure it'll go through
20:51 < nathan7> just setTimeout
20:52 < mnaser> yeah, idk, it feels weird calling mainFunction() in the beginning of my code and setTimeout() on the end, dso yeah :p
20:54 < nathan7> such is life
20:54 < mnaser> :p
21:02 < nathan7> mnaser: http://sprunge.us/FggA
21:03 < mnaser> yeah that's essentially what i have :p
21:03 < nathan7> mnaser: note that it is an IIFE
21:03 < mnaser> IIFE?
21:04 < nathan7> !iife
21:04 < nathan7> hrmpf
21:04 < nathan7> mnaser: immediately evaluated function expression
21:04 < nathan7> mnaser: (function(){ blah(); })();
21:04 < nathan7> mnaser: that creates a function and calls it
21:04 < mnaser> oooh
21:05 < mnaser> i see
21:05 < mnaser> so avoid thats call of it earlier
21:05 < mnaser> makes sense
21:05 < nathan7> yep
21:05 < nathan7> And since it has a name it can refer to itself inside itself
21:06 < mnaser> that makes sense
21:19 < rich__> Anyone know of a yum/rpm package for node.js (installing on latest fedora) ?
21:25 < heathjs> friend of mine in #yeoman is having issues installing yeoman, this is the error he gets from npm install -g yeoman: https://gist.github.com/4013824
21:26 < heathjs> any idea how npm determines where it should be looking for files?
21:31 < nathan7> heathjs: it checks the npmjs.org repo.
21:31 < tilgovi> substack: I'm looking at using parsely in the browser in a chrome packaged app listen socket
21:31 < tilgovi> do you know if, aside from being an event emitter, the http.IncomingMessage does anything interesting aside from hold state?
21:43 < larzconwell> The REPL module, how would I register my own functions through the commands object? When I add commands myself it ignores them.
21:52 < Aria> Which commands object?
21:53 < Mezriss> Hi, I've got a stupid question about npm. I've just used n to update npm from node 0.4 to 0.8, but it seens that my npm was left "as is" and still reqires node.0.6 or less. And it seems that there is no separate link to download npm nowdays
21:54 < Mezriss> So what would be the simpliest way to update npm in mysituation?
21:56 < simlevesque> I'm having trouble with the Node Cookbook, would somebody here happen to have the exercises completed ?
21:57 < larzconwell> Aria,  This: https://gist.github.com/4013950
21:57 < Aria> Ah, peeking under the hood.
21:58 < larzconwell> So do people just normally using rl.context instead?
21:59 < larzconwell> As it seems to be the only way working correctly besides defining on global.
21:59 < jadams> is anyone else having problems with resources hosted at nodeload.github.com?
21:59 < jadams> I can't install yeoman right now, I get https://gist.github.com/4013824
22:00 < jadams> ahhh I see https://github.com/isaacs/npm/issues/2813#issuecomment-10040653
22:00 < Aria> larzconwell: context and commands are different -- .foo vs foo()
22:00 < Aria> larzconwell: But I see no reason adding commands won't work
22:01 < larzconwell> I didn't think so either, but it won't work. 
22:02 < Aria> And defining one works for me.
22:02 < larzconwell> Gist? 
22:04 < Aria> https://gist.github.com/4013966
22:04 < simlevesque> hey guys I'm having trouble with advanced variable declaration, does anyone have an explanation to something like this : lookup = (lookup === "/") ? '/index.html' : lookup;
22:06 < larzconwell> Well that's really weird. That's what I did earlier and it didn't work!
22:06 < larzconwell> It works now though..
22:08 < Aria> simlevesque: foo ? bar : baz is shorthand for "if foo then bar else baz"
22:08 < Aria> simlevesque: So in this case, if lookup is /, then use index.html, else use lookup as it is.
22:09 < larzconwell> simlevesque,  That's just using ternary operator and assigning the correct value. See Aria's explanation on how ternary works.
22:09 < VesQ> ohmy why does simlevesque have vesq in his/her name
22:24 < heathjs> hey so i'm playing around with reading put requests: https://gist.github.com/31f0fe07949ceb219d41
22:25 < heathjs> ah, guess this is what i need: http://nodejs.org/api/string_decoder.html
22:26 < BleKohl_> just use the buffer's toString method
22:26 < BleKohl_> I'm not sure why StringDecoder even exists
23:31 < thv20> anybody up for helping me with a basic beginner's question? i'm trying to get the Twitter Streaming API output to show on the front-end...
23:35 < goku22> that would be front end javascript right
23:35 < thv20> yes
23:35 < goku22> what is the error 
23:35 < thv20> i guess i want to set up some kind of event listener
23:35 < thv20> no error, i just don't know where to look. i'm just getting my head around the basics (sorry :))
23:36 < goku22> nodejs is backend
23:36 < goku22> i have no idea about twitter streaming api
23:36 < thv20> yeah i'm asking how i can get my "console.log(data)" to output to the browser
23:37 < goku22> express
23:37 < thv20> it's a constant stream of info
23:37 < goku22> use some supporting framework 
23:37 < goku22> express is one of the popular ones
23:38 < goku22> anyone… res.socket.remoteAddress is not working for me i am getting back undefined. i am not using socket.io .. i need to get the client IP address 
23:43 < TehShrike> substack: do event emitters work across dnode? What sort of pattern do you use in those situations?
23:59 < wiherek> hi
23:59 < mscdex> node.js rules!
--- Log closed Mon Nov 05 00:00:11 2012
