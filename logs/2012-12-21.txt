--- Log opened Fri Dec 21 00:00:57 2012
00:02 < kenperkins> I find myself gravitating back towards sql tbh
00:03 < superjoe> shun the nonbeliever
00:03 < superjoe> shun
00:03 < TehShrike|Work> KeOps: did you just ask people to look at your project, and then not link to it? :-P
00:03 < TehShrike|Work> I'm a fan of relational databases myself
00:03 < kenperkins> TehShrike|Work++
00:04 < TehShrike|Work> I like describing my data and being able to rely on the database to enforce some things
00:04 < KeOps> TehShrike|Work : i sent a gist link lol, i send it again, specially for you :P https://gist.github.com/4349066
00:04 < ovnicraft> Hello i am new in node, i am writing a lib client to my app (it public XML-RPC services) so i get this code https://gist.github.com/4349701 but when run: node app.'s (its express based) get this error: https://gist.github.com/4349718
00:04 < TehShrike|Work> KeOps: I don't see any questions there
00:05 < ovnicraft> so can anyone guide me in the error ?
00:05 < KeOps> Oh, i think it would be more easier if i send the original copy of the project, cause i did many modification and it's more dificult to fix the problem now lol
00:09 < KeOps> TehShrike|Work :  https://gist.github.com/4349730
00:09 < TehShrike|Work> KeOps: so what's the issue?
00:10 < MI6> joyent/node: isaacs master * ec74555 : benchmark: Set ephemeral ports properly on sunos (+5 more commits) - http://git.io/JoKNbw
00:10 < KeOps> TehShrike|Work : I downloaded a source for a live drawing, it's the index.html with app.js and script.js ( with style.css too ) and it's work nice. But only in black and no clear possibility.  At this, i have a canvas i wrote "ardoise.html" with more color and the clear possibilty.
00:11 < KeOps> TehShrike|Work : So i'm trying to mix them, for having my ardoise.html with all there function, works in live, with like the index.html
00:13 < garthk> I don't recall who told me to stop parsing this bulky XML with an XML parser, but their advice was right on the money. Splitting it with regexps (eww!) is much faster. 
00:14 < garthk> I feel honour-bound to re-do it with a PEG, but it looks like it's going to just work.
00:14 < s5fs> garthk: if you don't have any real xml needs (such as checking against an xsd) then whatever works, works.
00:17 < KeOps> TehShrike|Work :  ? ^^
00:19 < AviMarcus> TehShrike, kenperkins all my production stuff is stuck in mysql. Did a cool project where redis was the best option (and it did awesome)
00:20 < kenperkins> Redis is great, but not for everything
00:20 < TehShrike|Work> KeOps: so what's the question?
00:20 < kenperkins> and fucking a if I hate redis's lack of mature cluster  :D
00:20 < timeturner> zmq
00:21 < KeOps> How to do, for adding my function that i have in "ardoise.html" to the "index.html"  i tried by many times, and i find some issues. But not very clean. If someone can explain me, which function in "Index.html" and "script.js" i have to modify or create .
00:22 < TehShrike|Work> You want the same script shared between two HTML files?
00:27 < KeOps> TehShrike|Work: No, i'm just trying to add the possibility to change the color of the line, and to clear the canvas ( in live for all client on the server )
00:32 < TehShrike|Work> All right, sounds good...
00:32 < TehShrike|Work> I'm just not hearing any specific questions
00:34 < TehShrike|Work> I can give you a thumbs-up, if it helps! :-)
00:35 < KeOps> Lol, ok, no problem... I'm tired as hell and my english is really poor. Tomorow i have to give back my semester project ( this drawing game ) and i'm gonna fail my graduate xD 
00:35 < KeOps> I think it's the first time that i hope that the maya are true, and the world would be end tomorow  lol
00:40 < KeOps> TehShrike|Work: if you can explain me how to add new event to send to  the client, by the way of the server i have, it would be nice
00:41 < KeOps> TehShrike|Work: cause now, i can only draw in black. It's work perfectly nice. I saw that it's the event"moving" in the app.js who send this event. But i don't know how to add new function, like for changing the color, and clear the canvas in all people who are connected
00:42 < MI6> joyent/node: isaacs v0.8 * 0c867ae : blog: Update blog post re streams2 - http://git.io/I1TwHQ
00:42 < mattrobenolt> Is module.paths the best recommended way to find all the directories loaded by node?
00:43 < mattrobenolt> And if so, why is it not documented?
00:48 < eldios> guys I need to practice writing tests.. all in all I want to "learn" how to properly to TDD and BDD.. any hint?
00:49 < MI6> joyent/node: isaacs v0.8 * 9d0103d : blog: More streams2 wordsmithing - http://git.io/A7GVkA
00:49 < eldios> not just in nodejs (though ultimately I will use with it).. as a general concept
00:49 < TehShrike|Work> KeOps: I imagine you would just add a socket.emit('color change', new_color) call on the client, and add a io.sockets.on('color change', function() ... ) handler on the server
00:49 < TehShrike|Work> eldios: I thought this book was pretty reasonable http://www.amazon.com/Test-Driven-Development-Kent-Beck/dp/0321146530/
00:50 < eldios> thanks TehShrike|Work 
00:50 < eldios> 2002?
00:50 < TehShrike|Work> eldios: it's not a new thing :-P
00:50 < eldios> =)
00:51 < TehShrike|Work> All the examples are in Java, if that's an issue
00:52 < eldios> no, not really
00:54 < KeOps> TehShrike|Work : euh ok, i'm trying it now
00:54 < breck> anyone know if there is a tc39 IRC channel?
00:54 < breck> I'd like to help make Javascript support multiline strings: https://github.com/breck7/multiline
00:54 < breck> and not sure where to start
00:55 < AviMarcus> ugh, multiline
00:55 < AviMarcus> the nicest idea I saw was using ` ` for multiline
00:56 < mattrobenolt> breck: Good luck with that. ;)
00:56 < breck> AviMarcus, I like that, do you know if that ever got any traction?
00:56 < AviMarcus> breck, for php you can use HEREDOC.
00:57 < AviMarcus> it said it was part of ECMAScript 6
01:02 < breck> AviMarcus: thanks for the pointer. Just read up on backticks: http://www.nczonline.net/blog/2012/08/01/a-critical-review-of-ecmascript-6-quasi-literals/
01:04 < AviMarcus> oh breck I didn't realize it was for templating too. cool.
01:17  * KeOps   x_x
01:29 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
01:29 < substack> https://en.wikipedia.org/wiki/NPM1
01:29 < TehShrike|Work> :-P
01:30 < TehShrike|Work> new logo? https://en.wikipedia.org/wiki/File:Protein_NPM1_PDB_2p1b.png
01:31 < tg> KeOps: ask here if you have any questions, not in pm
01:31 < KeOps> i'm spotted ^^
02:28 < _numbers> just published this lib https://github.com/mikesmullin/coffee-templates
02:28 < _numbers> if you are using coffeecup or handlebars you might want to take a look
02:28 < deoxxa> oh sweet
02:28 < deoxxa> another templating engine
02:28 < deoxxa> and it's coffeescript!
02:28 < deoxxa> happy day
02:29 < rhdoenges> hey now
02:29 < misterhat> wow you people are obsessed :p
02:29 < misterhat> must write as little code as possible !
02:32 < _numbers> deoxxa: you can use js equally as well. check out the compiling handlebars to noengine js function() example on the readme
02:35 < mAritz> _numbers: it only works clientside as the noengine js function though, right?! unless you use a coffeescript compiler in the browser...
02:36 < _numbers> mAritz: no it works either side that way. no coffeescript required for that part. its just handlebars rendering
03:18 < deoxxa> > typeof NaN === typeof 5
03:18 < deoxxa> true
03:18 < deoxxa> oh come on javascript
03:19  * deoxxa shakes head
03:19 < substack> what's wrong with that?
03:19 < substack> those are both valid floating point values
03:19 < deoxxa> they... are?
03:19 < substack> yes
03:20 < substack> the code to handle NaN is etched into processors
03:20 < substack> as per ieee754
03:20 < AAA_awright> really deoxxa
03:20 < AAA_awright> really
03:21 < AAA_awright> >> 0/0
03:21 < purr> AAA_awright: (number) NaN
03:21 < KeOps> -_-
03:21 < purr> KeOps: ಠ_ಠ is an IRC client/IRC client framework.
03:21 < AAA_awright> Thank you purr
03:21 < KeOps> purr : ? 
03:21 < KeOps> -_-
03:21 < purr> KeOps: ಠ_ಠ is an IRC client/IRC client framework.
03:21 < KeOps> oh i see ^^
03:47 <@isaacs> purr: Hi
03:47 <@isaacs> -_
03:47 <@isaacs> -_-
03:47 < purr> isaacs: ಠ_ಠ is an IRC client/IRC client framework.
03:48  * isaacs waves
03:51  * KeOps try to not fall asleep
03:54 < othiym23> purr is so much nicer here than in some other channels
03:58 < mcwhittemore> Been wondering how/if it is posible to force a third party module to not have access to global, any thoughts here?
04:00 <@isaacs> othiym23: does purr misbehave in other channels?
04:00 <@isaacs> othiym23: occasionally JS bots get kind of annoying because everyone just gets obsessed with trying to escape from the box
04:00 <@isaacs> mcwhittemore: not have access to global, like the global object?
04:00 < othiym23> isaacs: purr doesn't misbehave
04:00 < mmalecki> isaacs: hey, I'm having a weird problem with npm you might be interested in
04:00 <@isaacs> mcwhittemore: no, there is no way.
04:01 < othiym23> purr behaves exactly as elliottcable programmed him to ;)
04:01 <@isaacs> mcwhittemore: not if you load it with require()
04:01 <@isaacs> mmalecki: oh?
04:01 < mcwhittemore> @iaacs: yea, like remove the ability to call console
04:01 < mmalecki> isaacs: npm ERR! Error: unauthorized Name or password is incorrect.: <thing>
04:01 <@isaacs> mcwhittemore: you can run it yourself using the vm module
04:01 <@isaacs> mmalecki: that meanst aht you are using invalid auth
04:01 < mmalecki> which behaves the same way with network switched off...
04:01 <@isaacs> mmalecki: well... that's odd
04:01 < mmalecki> isaacs: I'm using private npm if that changes anything
04:02 <@isaacs> mmalecki: npm only prints that error when it gets a 403
04:02 <@isaacs> mmalecki: or a 401 followed by a failured to login
04:02 <@isaacs> mmalecki: maybe remove any _token or _auth or _authCrypt from .npmrc, and try running `npm adduser` again?
04:02 <@isaacs> mmalecki: are you logged in for one registry, and then accessing a different registry with the same auth, perhaps?
04:03 < mmalecki> isaacs: I removed it, still no luck
04:03 <@isaacs> mmalecki: (that is not well handled right now)
04:03 <@isaacs> mmalecki: ok.  can you log into futon with the same account credentials?
04:03 < mmalecki> isaacs: seriously tho, I just turned off my network connection
04:03 < mmalecki> and it did the same thing, I'm shitting you not
04:03 < mmalecki> isaacs: yeah
04:03 <@isaacs> mmalecki: that's weird
04:03 <@isaacs> mmalecki: try `rm -rf ~/.npm` and try again?
04:03 < mmalecki> I know. I'm recompiling my node to see what's up
04:03 <@isaacs> mmalecki: it might not be even trying if it thinks it's cached?  i don't know.
04:04 <@isaacs> mmalecki: that definitely sounds like a bug, though
04:04 < mcwhittemore> @isaacs: so pulling the module in with require does something that locks you out from overwriter prams?
04:04 < mmalecki> did that countless times
04:04 < mmalecki> yeah, imma put some console.logs here and there
04:04 <@isaacs> mmalecki: get me the npm-debug.log file
04:04 <@isaacs> gist it or whatever
04:04 <@isaacs> mmalecki: very curious
04:04 <@isaacs> mcwhittemore: pulling the module in with require() gives them the same global object you've got
04:05 <@isaacs> mcwhittemore: so they'll be able to get to console, process, etc.
04:05 < othiym23> mcwhittemore: you can "delete console", but it only applies to the current context
04:05 <@isaacs> mcwhittemore: but you can vm.runInNewContext(code, filename, contex) and give them access to anything you like.
04:05 <@isaacs> othiym23: that might not work.  global.console is a getter
04:05 <@isaacs> othiym23: it's slightly magic
04:05 < othiym23> isaacs: "delete global" also works in the REPL ;)
04:05 < mmalecki> isaacs: pm'ed
04:06 < othiym23> I didn't say it was a good idea
04:07 < othiym23> of course, global is still accessible via "this" in the REPL, so all I've done is delete the reference, not completely removed it from scope
04:08 < othiym23> but deleting console seems to completely remove it, which is interesting
04:08 < mcwhittemore> isaacs|othiym23: I was thinking that delete would remove it from the global context thus break all calls to console/require/etc when all I want is to break the calls from within the third party module
04:08 <@isaacs> mmalecki: whoops, replied in pm
04:08 <@isaacs> mmalecki: what does npm whoami print?
04:08 <@isaacs> mmalecki: k
04:09 < mmalecki> mmalecki
04:09 <@isaacs> mmalecki: is that the correct username?
04:09 < mmalecki> mmalecki is also in maintainers for this package
04:09 < mmalecki> and yeah, it is
04:09 < mmalecki> I'm logging into futon with the same exact details
04:09 <@isaacs> mmalecki: ok
04:09 <@isaacs> mmalecki: in ~/.npmrc there is an _auth line, yes?
04:09 < mcwhittemore> isaacs|othiym23: I'm going to step away and check out your two options. Thanks!
04:09 <@isaacs> (do not share it here)
04:09 <@isaacs> (or at all)
04:09 <@isaacs> mcwhittemore: kewl, have fun :)
04:09 < othiym23> mcwhittemore: take a look at vm, I think it's closest to what you want
04:10 < mmalecki> yeah, there is
04:10  * othiym23 takes a moment to solemnly remember isolates
04:10 <@isaacs> mmalecki: ok.  that's a base64 encoded "username:password" pair
04:10 < mmalecki> I debase64'd it and curl'd the registry for my own sanity, worked
04:10 <@isaacs> mmalecki: weeeerrrrrddd
04:10 < mmalecki> also nothing in tcpdump
04:10 <@isaacs> mmalecki: ok, so the place to start console.logging is in node_modules/npm-registry-client/lib/request.js
04:11 < mmalecki> did that :)
04:11 <@isaacs> (/path/to/npm/... first of course)
04:11 <@isaacs> ok
04:11 < mmalecki> it actually sends requests
04:11 <@isaacs> k
04:11 <@isaacs> is it sending an auth?
04:11 < mmalecki> yup
04:11 <@isaacs> ok..
04:11 <@isaacs> strange, then
04:12 < mmalecki> gtg now, sorry
04:12 < mmalecki> (5 AM here)
04:12 <@isaacs> mmalecki: next step is to look in your couchdb logs and figure out why it's returning a 403
04:12 <@isaacs> mmalecki: totally understood.
04:12 <@isaacs> next time :)
04:12 < mmalecki> I'll investigate more in the morning and ping you back
04:12 < mmalecki> thanks :)
04:12 <@isaacs> kewl
04:12 <@isaacs> have fun
04:17 < mmalecki> isaacs: I'm actually an idiot.
04:17 < mmalecki> I reminded myself when I was on a plane and 127.0.0.1'd all production hosts
04:17 < mmalecki> and ran whole env like what
04:17 <@isaacs> mmalecki: hahahah
04:18 <@isaacs> that explains why it worked without networking!
04:18 < mmalecki> yes.
04:18 < mmalecki> sorry for your time dude
04:18 <@isaacs> mmalecki: but you learned a little about how npm works :)
04:18 <@isaacs> it's all good
04:19 < rump> im new to the nosql game so when researching i was able ti witness mongo first becoming the beez knees and the perfect solution to everything and then everyone moving off of it, and then everyone hating it...  what gives?  after a few tests with node it seems awesome and fast and so much better than sql and i even like it better than redis after testing a few different scenarios in it
04:22 < rump> even 100m records way outside of available ram is instantaneous as long as indexes can fit in ram
04:24 <@Nexxy> oi vey
04:24 < andrewaclt> run
04:24 <@Nexxy> I'm runnin' i'm runnin'
04:25 < KeOps> : /
04:25 <@Nexxy> like this: http://www.youtube.com/watch?v=7mZZd4gQrrg
04:25  * KeOps is dead
04:32 < TehShrike> why are you running Nexxy
04:34 < nmartin> If you plan on writing another template engine for node/express/?/ ...
04:34 < nmartin> don't
04:35 < nmartin> ive spent too much time evaluating them all to see which one is least likely to suck 
04:36 < nmartin> the bad thing about having choices is theer are too many choices
04:36 < substack> I haven't needed a template engine in a while
04:36 < substack> I mostly just use the dom and static content these days
04:37 < TehShrike> nmartin: what did you think of grips?
04:38 < nmartin> DAMN. another one...
04:39 < TehShrike> Kyle's goal there was to keep it minimal, which is attracting :-)
04:39 < nmartin> holy shit - grips looks complicated - I'll stick with whiskers
04:41 < nmartin> is grips a troll to see how complex a template engine can get? any github readme that makes my scrollbar < 1/4" tall is broke :)
04:41 < nmartin> whiskers is 100 LOC
04:41 < TehShrike> That's cool, if it does what you need
04:42 < nmartin> seriously, grips is anything but minimal in my 10 second scroll down the readme
04:42 < TehShrike> People always find more things for their templating engine to do, it seems.  I think grips was trying to hit up the main points of the big ones without hitting up all the edge cases that most of them end up covering.
04:44 < nmartin> all i ask of a template engine is: don't screw up html - it's ok as it is, except for the unclosed img tag that drive me crazy 
04:45 < nmartin> give me a conditional and a loop ; thats about all I need
04:45 < TehShrike> Sounds reasonable to me
04:45 < KeOps> TehShrike: you finished to work xD
04:46 < TehShrike> It's true!
04:46 < nmartin> oh, and let the template be readable by most people - jade fails there imo
04:46 < TehShrike> Time for whiskey and YouTube.
04:54 < Raynos_> templating engines
04:54 < Raynos_> I need to write one!
04:54 < Raynos_> It's called an efficient version of jsdom
04:57 < TehShrike> Is jsdom just for simulating a dom on the server, or can you also use it to interact with the dom in the browser?
04:57 < TehShrike> I need a good non-jQuery library for interacting with the dom in the browser.  I'll probably try dollardom soon. https://github.com/julienw/dollardom
04:58 < Raynos_> TehShrike: Have I got gifts for you!
04:58 < TehShrike> gimme gimme!
05:01 < Trindaz> afternoon all
05:02 < Raynos_> TehShrikeL https://gist.github.com/4350728
05:03 < Trindaz> node.js is reporting that getUint64 doesn't exist. How does node handle 64 bit integers?
05:03 < Trindaz> Is there a new release that can handle it?
05:04 < TehShrike> Raynos: I like.
05:05 < Raynos_> And more!
05:06 < TehShrike> How well is element.setAttribute supported in old IE?
05:07 < zomg> TehShrike: iirc in certain cases, better than element.attribute = ...
05:07 < TehShrike> aaaah, only IE8 and later.  Of course.
05:07 < zomg> haha, right so it was the other way around
05:07 < zomg> :P
05:07 < Raynos_> TehShrike: never use setAttribute
05:07 < TehShrike> Raynos_: o rrrrrrly?
05:08 < misterhat> o
05:08 < zomg> There is some weird corner cases where you need to use setAttribute
05:08 < zomg> I forgot what it was though...
05:08 < misterhat> there's always shims!
05:08 < zomg> Possibly to set 'style' in some browsers in one shot
05:08 < misterhat> and it was for class zomg
05:08 < zomg> yeah could be
05:08 < TehShrike> Tell me what to use, because I'm getting to a place where I'm starting to do lots of DOM manipulation and I want to move away from jQuery
05:08 < misterhat> class is a reserved identifier in JS
05:08 < TehShrike> misterhat: in IE, anyway
05:08 < misterhat> although hm
05:08 < zomg> TehShrike: why?
05:08 < misterhat> would element['class'] = bla work?
05:09 < misterhat> dunno
05:09 < zomg> misterhat: I don't think the elements have a property called class
05:09 < TehShrike> zomg: because it's so biiiiig and I'm not using anything beyond the DOM manipulation parts
05:09 < misterhat> zomg: in the DOM?
05:09 < zomg> TehShrike: unless you're serving to users on 56k modems the size of jquery is pretty irrelevant in my opinion :)
05:09 < TehShrike> zomg: it's as much an idealogical ideal as anything.
05:09 < zomg> hehe
05:09 < TehShrike> Wow, I just said "idealogical ideal".  -5 English points for me.
05:09 < zomg> I wonder if  there are any lightweight dom libraries around
05:09 < misterhat> zomg: elements don't have class attribute? what
05:09 < misterhat> lol
05:10 < zomg> misterhat: I mean in the DOM API
05:10 < TehShrike> zomg: I found this one, haven't tried it yet https://github.com/julienw/dollardom
05:10 < misterhat> oh that's probably why then
05:10 < zomg> since class is a reserved keyword
05:10 < zomg> el.className will work though not sure if that was what you were asking :)
05:10 < misterhat> zomg: i was saying that's why setAttribute is there
05:10 < misterhat> well one of the reasons anyway
05:11 < zomg> Yeah
05:11 < AAA_awright> zomg: I wouldn't suggest that, it still can add a significant amount to page load times
05:11 < AAA_awright> milliseconds DO matter
05:12 < AAA_awright> UI study after UI study shows it
05:12 < Raynos_> TehShrike: use properties
05:12 < misterhat> google's hosted minified jquery is pretty fast
05:12 < zomg> AAA_awright: you could probably save those millis by optimizing your PNGs, CSS and whatnot :)
05:12 < misterhat> not advocating it or anything but still
05:12 < misterhat> there are tons of techniques you can use to save millis
05:12 < AAA_awright> zomg: And even more doing both
05:13 < misterhat> CDNs or cookieless serving domains, minified CSS and JS, merging JS files, etc.
05:13 < zomg> Well I think there comes a point where it becomes less relevant
05:13 < TehShrike> Yeah, it's not that much about download size.  I'm not even minifying our code at the moment.
05:13 < Raynos_> TehShrike and others: https://gist.github.com/1613169
05:13 < TehShrike> I just want a library that I can look inside of
05:13 < zomg> I'd hate to do DOM coding by hand just to save some milliseconds
05:13 < TehShrike> It's about code clarity
05:13 < TehShrike> I have to support some really offensive browsers, and I don't want to have to dig into jQuery's guts when weird stuff comes up
05:14 < misterhat> well jquery is pretty cross browse
05:14 < misterhat> r
05:14 < Trindaz> Looks like DataView.getUint64 isn't supported
05:14 < TehShrike> misterhat: yeah, that's a nice plus in its favor
05:14 < substack> TehShrike: I have just the thing for corraling offensive browsers!
05:14 < TehShrike> substack: :-) wassat
05:15 < substack> http://ci.testling.com
05:15 < TehShrike> heehee
05:15 < substack> to make sure all your modules work in all the browsers
05:15 < substack> even the old terrible ones
05:15 < misterhat> yeah substack i love paying to use IE5
05:15 < misterhat> IE6*
05:15 < misterhat> :P
05:15 < TehShrike> It doesn't have a badge for the Windows Mobile version of IE6 that shipped on Windows CE
05:15 < substack> windows mobile version of ie6 >_<
05:15 < TehShrike> It's so bad
05:15 < substack> didn't even know that was a thing
05:16 < zomg> I have Pocket IE 6.5 on my HTC Touch Diamond I think...
05:16 < zomg> best browser ever bitches.
05:16 < substack> I am sorry for you
05:16 < zomg> At least it runs Flash!
05:16 < TehShrike> It could be worse.  The UI is very very simple, so I don't really have to worry about css stuff.
05:16 < TehShrike> It's just buttons, tables, and inputs.
05:17 < TehShrike> And JavaScript that runs it all.
05:17 < TehShrike> It runs on these bad boys http://www.amazon.com/Motorola-MC9190-G-Handheld-Terminal-MC9190-GA0SWEYA6WR/dp/B008OU2ICQ/
05:17 < jedireza> hello everyone, i just published my latest nodejs app on github. check it out and if you like it, send me some feedback — https://github.com/jedireza/drywall
05:19 < TehShrike> jedireza: have an example implementation anywhere?
05:19 < jedireza> only locally
05:21 < zomg> TehShrike: I was going to sound I'd hate to work on the stuff you work on
05:21 < jedireza> i've haven't used heroku yet and was planning on launching it up there soon 
05:21 < zomg> but now that you mention that device, it might actually be interesting
05:21 < zomg> hehe
05:21 < TehShrike> Oh, it's an interesting project
05:21 < zomg> Yeah if it'd been desktop browsers being shitty then ugh
05:21 < zomg> :D
05:21 < TehShrike> I ended up evolving my own client-side framework for building screens in
05:22 < timeturner> what's the best way to do an async operation on each element of an array?
05:22 < TehShrike> It's been pretty fun, honestly
05:22 < timeturner> and then use the results after all the async callbacks have returned
05:22 < TehShrike> If there was CSS stuff to fuck around with I'm sure it would be a nightmare
05:22 < TehShrike> timeturner: https://gist.github.com/4334955
05:23 < kev1n> is node.js a replacement for something like php
05:23 < kev1n> or does it complement it
05:23 < TehShrike> kev1n: depends on what you need to happen on your server
05:24 < Raynos_> TehShrike: https://gist.github.com/4350728 updated that list
05:24 < defunctzombie> isaacs: in the events.js code there is a line "this._events = this._events || null" in the constructor. what exactly is that for?
05:24 < Raynos_> timeturner: https://github.com/Raynos/map-async
05:25 <@isaacs> defunctzombie: objects are faster in v8 if they're monomorphic
05:25 <@isaacs> defunctzombie: so, if it *sometimes* has a given field, make sure it *always* has that field, even if it's null when you're not setting it to something else
05:25 < timeturner> ah, thanks TehShrike
05:25 < defunctzombie> isaacs: right, that I knew about
05:25 < timeturner> Raynos: thanks
05:25 < defunctzombie> but why not just this._events = null ?
05:25 < kev1n> is node.js oo?
05:25 < timeturner> TehShrike: I've been looking for an explanation on writing my own function that does this
05:25 < TehShrike> kev1n: node.js is JavaScript
05:26 < timeturner> this clears it up for me :D
05:26 < kev1n> i know its javascript.. 
05:26 < kev1n> but is it object oriented?
05:26 < kev1n> nevermind
05:26 < kev1n> stupid quesiton
05:26 < TehShrike> timeturner: sweet.  I wrote it just the other night to try to explain the same question to a friend
05:26 < defunctzombie> isaacs: given that it is in the constructor.. what else would it be beforehand?
05:26 < kev1n> sorry its late here im tired as hell. i wanted to ask if its a framework similar to jquery
05:26 < TehShrike> kev1n: JavaScript has objects, but uses prototypal inheritance instead of class-based inheritance
05:26 <@isaacs> defunctzombie: function ExtendsEE() { this.on('foo', bar); EE.apply(this);
05:26 <@isaacs> defunctzombie: this.on() will create this._events
05:27 <@isaacs> defunctzombie: and we can't clobber it
05:27 < TehShrike> kev1n: it's a JavaScript interpreter with some extra tools for interacting with the network/file system/whatever
05:27 < defunctzombie> isaacs: gotcha, thanks. interesting case :)
05:28 < kev1n> oh ok cool
05:28 < kev1n> is it difficult to learn if you know other programming language and have some familiarity with js
05:28 < TehShrike> kev1n: it's really all just JS
05:28 < TehShrike> kev1n: it's just JavaScript, with these libraries you can use if you want http://nodejs.org/api/
05:28 < kev1n> oh ok
05:29 < TehShrike> kev1n: read down all those things and you're good.  Modules and Events are probably some of the most important ones.
05:29 < TehShrike> And Streams, and http.
05:29 < kev1n> im more interested in programming for mobile. would node.js help with that? 
05:30 < TehShrike> kev1n: do your mobile devices talk to a server?
05:30 < jedireza> EventEmitter and the async module saved me from a lot of crappy code
05:30 < Raynos_> thats suprising
05:30 < Raynos_> EventEmitter and async allowed me to write lots of crappy code :D
05:31 < TehShrike> Well, they don't *prevent* it :-P
05:32 < TehShrike> oh, hey, speaking of really awesome things, y'all seen this? https://github.com/azer/node-virtualbox
05:33 < niggler> id like to see a script that takes a node app and produces an OVA
05:33 < defunctzombie> isaacs: https://gist.github.com/4350866 <-- any thoughts on this.. I run into this when wanting to cleanup some event handlers
05:34 <@isaacs> defunctzombie: we'll never add this to core.
05:34 <@isaacs> defunctzombie: the function is already the subscription handle.
05:34 < defunctzombie> gotcha
05:34 <@isaacs> defunctzombie: ev.removeListener('some-event', handler)
05:35 < defunctzombie> fair enough
05:35 < defunctzombie> little more verbose, I guess I find it doesn't lend as easily to cleaning up listeners, but maybe that is perception
05:37 <@isaacs> defunctzombie: well, handlers are very rarely removed.
05:37 <@isaacs> defunctzombie: so we optimize for the case where you add exactly one handler, and never remove it, since that's far and away the most common case.
05:37 < TehShrike> I have not yet used .once or .removeListener
05:38 < defunctzombie> they should probably be removed in more cases than they are
05:38 < defunctzombie> .once should be used more than it is
05:38 < TehShrike> defunctzombie: can you elaborate?
05:38 < defunctzombie> if you have never used removeListener then you are probably leaky somewhere ;)
05:38 < TehShrike> I just started using events in the last few months
05:38 < TehShrike> Right now I'm pretty much just using events on the client side
05:38 < defunctzombie> isaacs: I agree adding is the very common case
05:38 < TehShrike> I load in multiple modules that fire events when things happen
05:39 < TehShrike> There's an event whenever a user logs in, say
05:39 < defunctzombie> isaacs: but I do find that on close events, etc I want to do cleanup
05:39 <@isaacs> defunctzombie: why?
05:39 <@isaacs> defunctzombie: why not just let the GC eat the object and its links?
05:39 < defunctzombie> release resources
05:40 < defunctzombie> if the handlers have closed over resources
05:40 < TehShrike> Also, https://github.com/bentomas/smokesignals is sexy
05:43 < defunctzombie> isaacs: maybe you can clarify this for me http://pastebin.com/3ptd7Lq7 as it was always something I was unclear about
05:44 <@isaacs> defunctzombie: no, you do not need to free th data function
05:44 <@isaacs> defunctzombie: when the socket object is GCed, it'll get deleted
05:45 < defunctzombie> isaacs: why would the socket object be marked for gc since there are active references out to it?
05:45 < defunctzombie> maybe I am missing something (likely the case)
05:45 < TehShrike> Event subscriptions don't stop the garbage collector from cleaning things up?  That's good
05:45 <@isaacs> defunctzombie: what active references?
05:45 <@isaacs> defunctzombie: if it's unreachable, it's marked for deletion
05:46 < defunctzombie> then why would it not be marked for deletion immediately? the server that accepted it stores a reference?
05:47 <@isaacs> defunctzombie: once all the refernces are gone, it's gone
05:47 <@isaacs> defunctzombie: those functions that can reference it, they're not reachable once the socket is gone
05:47 <@isaacs> ie, once the handle is kaput
05:48 < defunctzombie> meaning that it is removed from some other internal array or such
05:48 < defunctzombie> the thing that emitted connection in the first place
05:48 < defunctzombie> ok, fair enough
05:51 <@isaacs> yes, exactly
05:51 <@isaacs> trust me, if we were not garbage collecting sockets unless people cleaned them up manually, we'd be in big trouble :)
05:51 <@isaacs> defunctzombie: ^
05:51 < defunctzombie> yea, I bet
05:52 < defunctzombie> just wanted to understand it a bit better
05:52 < defunctzombie> makes more sense now :) thanks
05:53 < mishra> what node-boilerplate are people using
05:53 < mishra> the npm module?
05:53 < TehShrike> boilerplate?
05:53 < mishra> yeah
05:53 < TehShrike> My boilerplate is exports.module = nameOfAwesomeFunctionIWrote
05:54 < mishra> its basically an empty project thats all set up
05:54 < TehShrike> yyyup
05:55 < TehShrike> I haven't really written anything for any middleware
05:55 < mishra> true
05:56 < TehShrike> substack: did you ever make it through that inspiring, yet blowhard post about mob software?
05:59 < TehShrike> If you made it through, I was actually really interested to hear your opinion
05:59 < zomg> TehShrike: mob software?
06:00 < TehShrike> zomg: http://dreamsongs.com/MobSoftware.html
06:01 < mishra> i was just reading that article
06:01 < mishra> actually
06:01 < TehShrike> No kidding?
06:01 < TehShrike> I first read it some months
06:01 < TehShrike> It's influenced my thinking
06:02 < TehShrike> *some months ago
06:03 < zomg> Ugh, wide text is wide
06:03 < zomg> =)
06:03 < TehShrike> Ctrl+scroll-wheel-up
06:03 < zomg> "The Erotic Life of Code" sounds kinky
06:04 < substack> TehShrike: I read maybe the first quarter of it
06:04 < TehShrike> That is reasonable
06:04 < TehShrike> I had a friend who did the same
06:04 < TehShrike> He likes his own writing, it takes him a while to work to the substance
06:05 < zomg> Yeah was about to say that it needs a tldr version
06:05 < zomg> I'm just skimming it very lightly to see if I can find the good bits :P
06:06 < mishra> tldr: people should contribute to open source more and trust that things will get better
06:06 < zomg> heh
06:06 < TehShrike> To my drugged up mind, the gist was pretty much "for the furtherment of all software to really take off, we need a universal language for libraries to interact with each other"
06:06 < zomg> HTTP
06:06 < zomg> =)
06:06 < mishra> one day
06:06 < TehShrike> zomg: compared to importing DLLs?
06:06 < mishra> i didn't realize that people flamed Dahl off the internet
06:07 < mishra> thats really sad
06:07 < zomg> TehShrike: yeah maybe not for everything :P
06:07 < TehShrike> zomg: there's not much comparison between invoking a networking-based protocol and calling functions on compiled code
06:07 < Trindaz> Why is DataView not documented in either the node.js or Chrome v8 documentation?
06:07 < zomg> But if you think of things as services rather than libraries then it makes sense
06:07 < zomg> Obviously not applicable to everything
06:08 < TehShrike> zomg: but we need to get to a place where *any* library can be cheaply called locally by another library
06:08 < TehShrike> It's not about services
06:08 < zomg> Yeah
06:08 < TehShrike> It's about, is my pi-calculation library accessible from every programming language ever
06:08 < TehShrike> Or whatever.
06:08 < augustl> isaacs: ah I see, thanks. So it is our problem (bane->buster->bane) but npm could also have provided a better error msg? :)
06:08 < mishra> well start up a github lets get hacking
06:09 < TehShrike> mishra: the closest thing I've seen so far is the JVM :-x
06:09 < AAA_awright> Is the v0.9 branch going to get a branch?
06:09 < AAA_awright> I don't see one in Git
06:11 < mishra> AAA_awright: i see .9.1
06:11 < AAA_awright> mbalho: That's a tag... I think
06:11 < Marak> hey babang , welcome to irc
06:12 <@mbalho> wat i didnt say anything
06:12 < TehShrike> YOU KNOW WHAT YOU DID
06:12 <@mbalho> SEAMUS? IS THAT YOU? I THOUGHT YOU DIED IN THE WAR
06:13 < TehShrike> I THOUGHT I'D LOST YOU
06:13 <@mbalho> NOW THAT YER BACK YOU GOTTA TAKE CARE OF THEM GOATS
06:13 < niggler> do i want to know what time zones you are in?
06:14 <@mbalho> pre epoch dog
06:14 <@mbalho> antebellum is the place to be
06:14 < TehShrike> Those fucking goats...
06:14 < TehShrike> niggler: I'm in UTC JUST LIKE EVERYONE ELSE
06:15 < niggler> im an american -> i run on american time
06:15 < mishra> is there any other time?
06:15 < TehShrike> I'm an American, I run on correct time
06:15 < TehShrike> Which is UTC
06:16 < niggler> there's unamerican time
06:16 < AAA_awright> Your mom runs on UTC
06:16 < mishra> ugh thats so unamerican
06:17 < niggler> there's boehner time
06:17 < TehShrike> AAA_awright: I wish!
06:17 < TehShrike> mishra: it's so internet
06:17 < AAA_awright> niggler: Let me guess, always November in an odd-numbered year?
06:18 < niggler> every day is election day
06:18 < niggler> actually, given the color of his face, every day is halloween
06:18 < AAA_awright> Sounds more like Obama time but eh
06:19 < mishra> i can only understand time in # of seconds since 1970
06:20 < niggler> lol lotus 1-2-3
06:20 <@mbalho> .. new Date('February 38th, 19fiftytaco')
06:20 < niggler> you know a herman cain presidency would have been interesting
06:20 <@mbalho> how do you engage the robot again i forget
06:21 < AAA_awright> mishra: Ugh, that's so 315532800000's, us ECMAScript people use milliseconds since 1970
06:21 < niggler> because he'd have been the first CS president
06:21 < mishra> XFD
06:21 < niggler> *president with a degree in computer science
06:21 <@mbalho> the president of estonia learned to program a pdp8 in high school
06:22 < niggler> TIL
06:22 < culturelabs> is it the end of the world
06:22 < niggler> Toomas Hendrik Ilves?
06:22 <@mbalho> yep
06:22 < deoxxa> mbalho: >>
06:22 < niggler> he went to high school in leonia new jersey
06:23 < deoxxa> >> new Date('February 38th, 19fiftytaco')
06:23 < purr> deoxxa: (object) Invalid Date
06:23 <@mbalho> yep they couldnt afford pdp8s in soviet estonia
06:23 < deoxxa> aw
06:23 <@mbalho> dang
06:23 <@mbalho> i thought that javascript implemented that RFC but i guess not
06:25 <@mbalho> peeps i published this module today for programatically controlling linux wireless https://github.com/maxogden/iwlist but i suck at linux
06:25 < substack> whoas
06:25 <@mbalho> i suck so bad i didnt even write the module
06:25 <@mbalho> substack did
06:27 <@mbalho> explain that, science!
06:28 < science> substack wrote everything, what's your point?
06:28 < niggler> "@substack wrote this for hacking into flying robots but told me to publish it to github and npm because he was busy"
06:29 <@mbalho> dangit science
06:29 < deoxxa> science has literally spoken
06:29 < mishra> wait what do you mean by flying robots
06:29 < niggler> substack do you know of any javascript magic so that I could make "a + b" do something different?
06:29 < mishra> where can i get a flying robot?
06:29 < niggler> or maybe introduce a circle_plus b
06:32 < Raynos_> I build a schema validation library ( https://github.com/Colingo/valid-schema#kitchen-sink) anyone have any API opinions?
06:33 < deoxxa> mbalho: just so you know, iwconfig/iwlist both rely on deprecated wireless extensions as of linux 3.7, and iw should be used instead. but you also shouldn't use iw, because as stated at the end of its help output, "Do NOT screenscrape this tool, we don't consider its output stable."...
06:34 < deoxxa> mbalho: so... yeah
06:34 <@mbalho> well if its debian then the package probably wont update in at least 2 years so i should be good cause we'll all have switched to go by then
06:34 < deoxxa> that's true
06:34 < deoxxa> debian sid is still on 3.2
06:35 <@mbalho> deoxxa: does iw do wpa?
06:35 < deoxxa> i'm not sure, actually
06:35 < deoxxa> i think you still need wpa_supplicant for that
06:35 <@mbalho> dang
06:35 < deoxxa> lemme check
06:35 < deoxxa> yeah, still need wpa_supplicant
06:36 <@mbalho> hmm well for my purposes im just gonna stick with iwlist but that is good to know, thanks
06:36 <@mbalho> (wifi on a raspberry pi so it can auto join open networks)
06:37 < mishra> next you should add reaver so it can auto join secured networks lol
06:37 < deoxxa> you can still use iwlist and iwconfig on newer kernels if you compile in the older wireless extensions with mac80211 and install the wireless-tools programs
06:37 < deoxxa> so you're technically not completely boned
06:37 <@mbalho> oh cool
06:38 < deoxxa> linux is great at backwards compatibility
06:38 < deoxxa> (lol)
06:38 <@mbalho> haha
06:38 <@mbalho> i prefer breaking changes actually
06:38 <@mbalho> cause then at least the new stuff is fresh and clean
06:38 <@mbalho> (theoretically)
06:38 < deoxxa> there's definitely something to be said for the amazing BC of windows though
06:38 < deoxxa> i mean, all jokes aside
06:38 < deoxxa> you can take a binary from windows 3.1 and run it on windows 8 today
06:39 <@mbalho> wow
06:39 < deoxxa> that's kind of impressive
06:39 < deoxxa> also frightening
06:39 < deoxxa> raymond chen has some awesome stories about maintaining BC in windows
06:40 < deoxxa> it's the kind of thing you can really only do with a huge army of programmers
06:40 < niggler> can you run 16 bit apps on windows 8?
06:41 < deoxxa> apparently
06:41 < deoxxa> i don't have a windows box to test anymore though :x
06:41 < deoxxa> so i might actually be lying
06:41 < niggler> id be very surprised if they preserved MFC in windows 8
06:52 < SoulRaven> hello
06:53 < SoulRaven> please help me to undestand what is the diff between host and hostname in http.request(options)
06:54 <@mbalho> probably the same as host and hostname in require('url').parse
06:55 < SoulRaven> so, none
06:55 < SoulRaven> host: 'api.geonames.org',
06:55 < SoulRaven>   hostname: 'api.geonames.org',
06:55 < SoulRaven> from url.parse
06:57 < hpj_> how do i get to the socket from within the connect event of net.connect()?
07:06 < minism> im getting EADDRNOTAVAIL on a simple one-liner, http.get('http://google.com').  Any ideas?
07:07 < minism> (it is actually the example code straight from official documentation)
07:08 < deoxxa> minism: is that the only thing you're doing?
07:09 < deoxxa> minism: you're not trying to listen on any interfaces or anything?
07:13 < minism> deoxxa: not at all, im literally running that line from a node shell and getting the error
07:14 < deoxxa> that's definitely weird
07:14 < minism> let me try running it from another directory, maybe node_modules are being screwy
07:14 < minism> but yes i agree, weird
07:14 < deoxxa> EADDRNOTAVAIL means "i tried to bind() to an address and couldn't do it"
07:14 < minism> right
07:14 < deoxxa> (usually)
07:14 < minism> hence my confusion
07:14 < hpj_> how do i get to the socket from within the connect event of net.connect()?
07:15 < SomeoneWeird> isn't it passed to the callback?
07:17 < hpj_> is it? the doc doesn't list any arg
07:17 < hpj_> and i tried "this" also
07:21 < minism> deoxxa: upgraded my node version and that fixed it.  http lib was totally f-ed up somehow
07:21 < minism> deoxxa: thanks for your help
07:22 < deoxxa> minism: no problem, glad it was so simple! :D
07:27 < deoxxa> substack: seaport uses scuttlebutt and stuff now - does that mean there's some kind of seaport-clustering going on now?
07:30 < substack> deoxxa: what do you mean by clustering?
07:30 < substack> it means you can replicate the port records among servers trivially
07:30 < deoxxa> as in more than one seaport server, so if one server explodes or is stolen by wolves i don't have to care so much
07:36 < kanryu> hi
07:37 < kanryu> I have a question about childprocess and stream.
07:38 < jcrew> can you ask it?
07:38 < deoxxa> kanryu: cool story bro
07:38 < kanryu> Now happens memory leak over 1600MB(nodejs32bit, windows8 x64)
07:39 < jcrew> when you do..?
07:40 < zomg> kanryu: What is your application doing?
07:40 < kanryu> I try BITMASs to mp4 with ffmpeg, so using require(childprocess) require(fs)
07:41 < deoxxa> kanryu: can you paste an example on gist.github.com?
07:41 < yawnt> o/ deoxxa 
07:42 < deoxxa> sup yawnt
07:42 < yawnt> deoxxa: apocalypse and stuff, not much
07:42 < SomeoneWeird> require('ffs')
07:42 < kanryu> just a moment...
07:42 < SomeoneWeird> yawnt, are you dead?
07:42 < yawnt> SomeoneWeird: dunno
07:42 < deoxxa> yawnt: on a scale of 0 to you, how jealous are you of me right now? :>
07:42 < yawnt> how do i check?
07:42 < yawnt> deoxxa: fucker
07:42 < yawnt> :'(
07:43 < SomeoneWeird> lmao
07:43  * deoxxa karaage omnomnom
07:43 < yawnt> deoxxa: if i fly to japan in february
07:43 < yawnt> will you host me?
07:43 < deoxxa> i'll be gone on like the 5th
07:43 < deoxxa> so you better make it quick!
07:43 < yawnt> fuck
07:43 < yawnt> i have finals in january
07:43 < yawnt> can't make it before february ;_;
07:44 < deoxxa> awww
07:44 < deoxxa> zannen bro
07:44 < yawnt> yeah
07:44 < yawnt> STAY THERE LONGER
07:44 < yawnt> why do you have to go back anyway? srsbiz?
07:44 < deoxxa> yawnt: i'll be here for a while longer at the end of next year, i plan to stay for a few years to study
07:44 < deoxxa> yeah
07:45 < yawnt> sucks
07:45 < deoxxa> gotta be back in .au for work
07:45 < zomg> For a moment I thought this was #comiket
07:45 < yawnt> can't you telecommute?
07:45 < deoxxa> yawnt: apparently not - not for most of next year anyway
07:45 < yawnt> baww
07:45 < deoxxa> yawnt: i'm semi-telecommuting now
07:45 < yawnt> but 2013 is soo long away
07:45 < deoxxa> i.e. i'm working etc while i'm here
07:45 < deoxxa> in fact, right now!
07:45 < deoxxa> migrating old code, wheee
07:46 < yawnt> i don't wanna wait til dec 2013 to get to jappoland
07:46 < yawnt> deoxxa: i'm fixing testss
07:46 < deoxxa> tests ft[wl]
07:46 < deoxxa> having tests ftw, writing them ftl
07:46 < yawnt> deoxxa: no
07:46 < yawnt> my tests pass
07:46 < yawnt> except that my fix is to check against double copies
07:46 < yawnt> and all the old tests make use of double copies
07:47 < deoxxa> lol
07:47 < yawnt> so i got my tests running and broke all the rest
07:47 < yawnt> o/
07:48 < kanryu> deoxxa: here you are https://gist.github.com/4351283
07:48 < deoxxa> substack: will a newer seaport client (1.1.x) work with an older seaport server (0.7.x)? and vice versa? i'd prefer not to have to run up a whole test environment to find out, so a "probably" or "probably not" will work for me...
07:49 < kanryu> the code occars big memory leaks at node.js v0.9.3, 32bit, windows 8
07:49 < yawnt> time to run
07:49 < yawnt> let's see how much i broke o/
07:49 < deoxxa> kanryu: hrm ok, i'll take a look at it
07:49 < kanryu> thanks
07:50 < deoxxa> kanryu: what size are the .bmp files?
07:51 < kanryu> 1280x720, 24bpp, 2.4MB
07:52 < deoxxa> that makes sense
07:52 < deoxxa> does the memory usage eventually go down?
07:52 < kanryu> delete data; is no means about the code.
07:53 < deoxxa> it sounds like the data is being buffered and held inside the child_process object
07:53 < deoxxa> this can happen if the child_process isn't ready to receive data yet
07:53 < kanryu> yes, the loop 65x12, about 1680MB using by node.exe
07:53 < yawnt> deoxxa: they pass!
07:54 < deoxxa> kanryu: if i make a small change, can you run it for me and tell me if it helps?
07:55 < kanryu> okay
07:55 < deoxxa> ok, please wait a minute :)
08:02 < deoxxa> ok, kanryu, https://gist.github.com/4351300
08:02 < deoxxa> i haven't tested that, so it might have syntax errors
08:02 < deoxxa> but it uses some of the features described at http://nodejs.org/docs/latest/api/all.html#all_stream
08:02 < kanryu> hmm
08:02 < deoxxa> actually, http://nodejs.org/docs/latest/api/all.html#all_writable_stream
08:05 < kanryu> oh, great! that runs nomaly!
08:05 < deoxxa> yay!
08:06 < deoxxa> kanryu: what's happening is that by using the return value of .write(), it's adjusting how fast it's sending data to the child process
08:07 < kanryu> checking result for proc.stdin.write(), and wait event for "drain" on proc.stdin
08:07 < deoxxa> yep
08:07 < deoxxa> streams <3
08:08 < kanryu> so, first calling for write_next_image() is run over soon, and later called again.
08:08 < deoxxa> correct
08:09 < kanryu> It is usually way about this code for node.js ?
08:10 < deoxxa> it's pretty normal, yes (i think)
08:13 < kanryu> I havn't found them in C, Python, other languages yet. that' a quite good study. Thank you very mouch!
08:13 < deoxxa> no problem :)
08:14 < deoxxa> or i should say, douitashimashite :P
08:14 < zomg> deoxxa: おっぱい
08:15 < zomg> I'm such a child
08:15 < zomg> =)
08:15  * deoxxa tch
08:15 < deoxxa> adorable
08:15 < yawnt> lol
08:15  * deoxxa pets zomg
08:15 < yawnt> RUN ZOMG RUN
08:15  * deoxxa pets yawnt
08:15 < yawnt> BEFORE IT'S TOO LATE
08:15 < SomeoneWeird> zombies
08:15 < yawnt> deoxxa: i started watching Accel Worl
08:15 < yawnt> *World
08:16 < deoxxa> i have no idea what that is
08:16 < zomg> <`～´>
08:16 < zomg> I haven't watched any animu lately
08:16 < deoxxa> i'm painfully ignorant of anime these days
08:16 < deoxxa> no time :<
08:16 < yawnt> http://www.youtube.com/watch?v=CCXI3vnc228
08:16 < zomg> Well, for a long time, with the exception of catching up on One Piece
08:16 < yawnt> deoxxa: ^
08:17 < deoxxa> wow, she looks like haruhi
08:17 < yawnt> : |
08:17 < yawnt> nope
08:17 < yawnt> nope.png
08:17 < zomg> Haha I think that was actually something people mentioned back when Accel World was a new thing
08:17 < zomg> Now that I remember
08:17 < zomg> I downloaded Milky Holmes because someone said it was similar to Galaxy Angel in some ways but haven't gotten around to watching it
08:18 < deoxxa> ha, i watched milky holmes when it was new
08:18 < deoxxa> had no idea wtf was going on
08:18 < deoxxa> still don't
08:18 < yawnt> i am so sad i still can't understand native animu
08:18 < yawnt> cause like
08:18 < yawnt> tomorrow they're airing the last episode of SAO
08:18 < zomg> deoxxa: haha, sounds about right for the GA comparison then
08:18 < zomg> =)
08:18 < yawnt> and i have to wait til sunday
08:18 < deoxxa> SAO
08:18 < deoxxa> is that a show about biscuits
08:18 < yawnt> sword art online
08:18 < zomg> Biscuits? :D
08:18 < yawnt> it's about swords
08:18 < deoxxa> http://en.wikipedia.org/wiki/SAO_(biscuit)
08:18 < yawnt> and arts
08:18 < yawnt> online
08:18 < zomg> lol
08:19 < zomg> isn't it about imoutos getting killed in the virtual world or something
08:19 < zomg> or so I heard
08:19 < yawnt> yeah
08:19 < deoxxa> http://images.calorieking.com.au/branding/dc/runtime/portionsense/105.jpg
08:19 < deoxxa> delicious
08:19 < yawnt> bleah
08:19 < yawnt> http://static.buttalapasta.it/625X0/www/buttalapasta/it/img/antipasti-e-aperitivi-per-natale-bruschette-al-al-tonno-r-broccoli.jpg
08:20 < yawnt> : 3
08:20 < yawnt> for the non italians
08:20 < yawnt> it's brocoli and tuna fish 
08:21 < zomg> deoxxa: oh looks like something that's sold in finland as suolakeksi (salt cracker)
08:21 < zomg> TUC's or whatever
08:21 < deoxxa> zomg: yeah, same deal
08:21 < yawnt> zomg: where are you from?
08:21 < yawnt> zomg: yeah we have TUC here
08:21 < yawnt> they look the same, and taste like shit
08:21 < zomg> yawnt: above sentence should've made it pretty obvious ;)
08:21 < yawnt> zomg: sweet
08:21 < yawnt> amongst the hundreds of things i want to do college in finland is one of them
08:22 < yawnt> something i won't  be able to do but yeah ;_;//
08:22 < zomg> Now why would you want to do that?
08:22 < yawnt> zomg: cause i like cold
08:22 < zomg> haha
08:22 < yawnt> and finnish language sounds funny
08:22 < zomg> Yeah it's like -15 C here right now
08:22 < zomg> oh actually -22
08:23 < zomg> finnish is actually a bit similar to japanese pronounciation wise
08:23 < zomg> as crazy as it sounds
08:23 < jcrew> lol 8c here and people are shitting bricks about how cold it is
08:23 < zomg> jcrew: oh they don't even know...
08:23 < zomg> :D
08:24 < jcrew> no kidding, i'm from a colder area too, not -22c but cold enough
08:24 < deoxxa> 6 degrees here
08:24 < kanryu> hmm that leaves problem :(
08:24 < yawnt> oh zomg 
08:24 < deoxxa> n0he4t pr0 360
08:24 < zomg> talking about that, I should go plug in the heater for my car so it won't be painfully cold later
08:24 < yawnt> and also because http://www.leekspin.com/
08:24 < yawnt> i could spend hours on this
08:24 < yawnt> and yeah i did once
08:24 < zomg> yawnt: haha that thing is so dumb =)
08:25 < yawnt> and so funny too
08:25 < yawnt> +0 °C here
08:25 < zomg> if that's your primary exposure to finnish, then yeah it sounds weird to even a finn
08:25 < yawnt> agreed.
08:25 < yawnt> if it's sunny i'm gonna go skiing tomorrow \o/
08:26 < jcrew> is finnish not of germanic descent?
08:26 < yawnt> nope
08:26 < yawnt> it's another family of languages
08:26 < deoxxa> scandinavian right?
08:26 < yawnt> uralic-finnic
08:26 < deoxxa> oh
08:26 < yawnt> it's all by itself
08:27 < yawnt> that's why it's so difficult for the rest of the world to learn
08:28 < deoxxa> oh it's one of those crazy ones
08:28 < deoxxa> along with estonian and stuff
08:28 < yawnt> yep
08:28 < jcrew> yea that's pretty out there, it does sound similar to some asian languages
08:28 < yawnt> jcrew: where are you from?
08:28 < jcrew> the us
08:28  * yawnt is doing a geographical map of #Node.js
08:28  * yawnt points jscrew in the US
08:29 < dhpe> hello from helsinki
08:29 < yawnt> it's a finnish invasion
08:29 < deoxxa> yawnt: you might want to use blu-tac for mine, i move too much
08:29 < yawnt> PREPARE THE REINDEERS
08:29 < jcrew> deoxxa: i'm done with moving finally
08:29 < yawnt> i love moving 
08:29 < jcrew> at least for the next couple of years
08:29 < yawnt> why would anyone be done with it
08:29 < yawnt> :D
08:30 < jcrew> because i have a job that doesn't require me to travel anymore
08:30 < deoxxa> for the last 3 years, i haven't stayed in the same country for longer than 6 months at a time :x
08:30 < deoxxa> though i have spent most of my time in .au, just broken up with random trips and stays in other places
08:30 < jcrew> it was a lot of fun moving around but as a result i don't own anything
08:30 < deoxxa> whaaaat, owning stuff sucks
08:30 < yawnt> ^
08:31 < yawnt> time is all that matters
08:31 < jcrew> let me rephrase - i didn't own anything
08:31 < yawnt> and well.. money and health.. but only because they let you use time 
08:31 < jcrew> having a car is pretty convenient
08:31 < deoxxa> i have like one backpack for my laptop and camera and keyboard, and a small bag of clothes
08:31 < deoxxa> and that's all i need to go anywhere for any time
08:31 < yawnt> deoxxa: AND YOUR EXPERIENCES
08:31 < dhpe> cars suck
08:31 < jcrew> that's all i need too, i liked living that way
08:31 < deoxxa> why would i need to bring them with me
08:32 < yawnt> deoxxa: cause memories ;_;//
08:32 < jcrew> dhpe: kind of needed in california where nothing is walking distance
08:32 < yawnt> where i live now i don't need a car
08:32 < yawnt> bus takes me everywhere
08:32 < yawnt> or train
08:32 < jcrew> i didn't need one in japan or germany or scotland depending on where i was
08:32 < dhpe> yep if you need it, you need it, but it sucks anyway :)
08:32 < yawnt> must be cause it's a student town though
08:32 < yawnt> jcrew: how did you like germany?
08:33 < jcrew> i loved it, i was in unchenn for oktoberfest
08:33 < yawnt> i live in Südtirol now
08:33 < yawnt> so people speak german here
08:33 < jcrew> kind of coincidentally but it was a lot of fun regardless
08:33 < yawnt> :
08:33 < yawnt> :3
08:33 < yawnt> you mean münchen?
08:34 < jcrew> yea, putty is messing up the characters i'm putting in
08:34 < yawnt> münchen is cool
08:34 < yawnt> i spent a while in landshut which is 60km north-west of it
08:35 < yawnt> OH CHICKEN ON A RAFT ON A MONDAY MORNING, WHAT A TERRIBLE SIGHT TO SEE
08:35 < jcrew> we ended up traveling a south, to füssen and then down into austria and switzerland and then eventually italy to visit where my grandpa was from where we got kicked out of italy
08:36 < yawnt> lulz
08:36 < yawnt> where did he live?
08:37 < yawnt> there's a nice castle in füssen
08:37 < jcrew> really small town just over the alps, still has no running water
08:37 < jcrew> sewer system isn't covered
08:37 < yawnt> woah
08:37 < jcrew> drawing a blank on the name of the city
08:37 < yawnt> my home home (not my college)
08:38 < yawnt> is in vicenza, so 60 miles east of venice
08:39 < jcrew> he was sicilian but he emigrated out of the north and went to school there which they informed us after we showed up, had burnt down like 15 years prior to us showing up.  they didn't think that detail was important when we called them though lol
08:40 < yawnt> lol
08:40 < jcrew> so we drove down into the city from munchen and stayed in fussen a few nights along the way to find out the school had burnt down and they had no papers
08:40 < yawnt> sad
08:40 < yawnt> :(
08:40 < jcrew> it was fun
08:41 < jcrew> having the cops pull us over and then haggle
08:43 < yawnt> baww
08:43 < yawnt> i have analysis class in 30m
08:48 -!- ServerMode/#Node.js [+o Nexxy] by wolfe.freenode.net
08:50 < [AD]Turbo> ciao
08:53 < AviMarcus> isaacs, do you happen to still be around?
09:09 < hpj_> how do i keep track of tcp connections under win32, because sockets don't have fd there?
09:56 < Zelest> o_O
09:56 < Zelest> seems like the mayans were right after all.. :o
09:59 < SomeoneWeird> uhoh
09:59 < SomeoneWeird> lmao Zelest 
10:00 < Zelest> :-D
10:00 < AAA_awright> Fail
10:00 < SomeoneWeird> its ok it's nearly the 22nd here 
10:05 < timoxley> a heads up to Australian developers: early bird CampJS tickets go on sale at 9am EST http://tickets.campjs.com
10:14 <@Nexxy> irccloud, pull yourself together
10:17 < SomeoneWeird> you broke it Nexxy 
10:17 <@Nexxy> SomeoneWeird, of course I did
10:17 < Zelest> If it's working, it's not going fast enough! :-)
10:27 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
11:04 < Vill> Hello, I have application using express.js an I would like to output in the console message when the application is closed. How to do that?
11:06 < gildean> Vill: the application is closed how?
11:07 < Vill> crl+c from the console, but I might send custom close request and use process.exit([code]); with the custom shutdown request I can ofc prepend process.exit() with logging functions, but I would like to receive message when the application is closed anyway
11:15 < deoxxa> Vill: you can't make that work all the time
11:15 < deoxxa> Vill: for example, if the application crashes
11:15 < Vill> if it crashes, then no logging for me, right?
11:16 < deoxxa> bingo
11:16 < gildean> deoxxa: well you can, for exmaple if you use for example forever-monitor to start the process programmatically
11:16 < deoxxa> oh yeah, of course, if you monitor it from outside
11:16 < gildean> two for examples, i need more coffee
11:16 < Vill> that's what i'm googling right now =D
11:18 < Vill> forever-monitor documentation:
11:18 < Vill>  
11:18 < Vill>     Log files and associated logging options for this instance
11:18 < Vill>     'logFile': 'path/to/file', // Path to log output from forever process (when daemonized)
11:18 < Vill>     'outFile': 'path/to/file', // Path to log output from child stdout
11:18 < Vill>     'errFile': 'path/to/file'  // Path to log output from child stderr
11:19 < astropirate> are you having fun?
11:20 < Vill> sorry, astropirate
12:21 < Industrial> What's the best way to visualize an EventEmitter(2) network? all the events/callbacks? Is there a module for that (tm)?
12:28 < db42> how good of a practice is it to writ eJS code direcltly in jade (for client side parsing)
12:37 < mpfundstein> Industrial: I think you should register them in a global tree. so everytime an event is added, add it to the tree of the parent. than you can easily create a JSON out of that information
13:13 < heideggermartin> Hello.
13:14 < heideggermartin> is this the right place to ask questions about npm?
13:15 < deoxxa> heideggermartin: sure
13:15 < heideggermartin> I am trying to setup a private couchdb for use in my company ... 
13:15 < heideggermartin> and to access it I want to use https
13:16 < heideggermartin> npm set registry https://user:password@myserver
13:17 < heideggermartin> I do have the server ready to communicate on that path ... with https
13:17 < heideggermartin> but I get a nasty Error: SSL Error: DEPTH_ZERO_SELF_SIGNED_CERT
13:18 < juboba> hey, I'm writing a servlet using node.js. This servlet will handle lots of requests from users hoping go get their unread messages. I'l use a long polling strategy to do this. Is this a good idea?
13:18 < SomeoneWeird> npm config set strict-ssl false
13:19 < juboba> I was looking at php long polling examples using the Apache server. But I think that if the number of simultaneous connections increases apache would have a very hard time handling those requests.
13:19 < juboba> am I right?
13:19 < db42> juboba, why not use socket.io ?
13:20 < juboba> db42, yes, socket.io with node.js
13:20 < juboba> s/with/for
13:20 < heideggermartin> SomeoneWeird thanks!
13:21 < SomeoneWeird> work? :)
13:26 < juboba> db42, so I'm good?
13:26 < db42> i hope so ;)
13:29 < Industrial> Are http requests uniquely identifyable or should I create a uuid-v4 myself for each request?
13:30 < Industrial> (in a http.createServer() callback)
13:31 < heideggermartin> Another question related to the npm registry: Can I set it up to use a key file for authentication like for ssh?
13:33 < heideggermartin> .oO( this is more of a general http question )
13:53 < deoxxa> heideggermartin: sure
13:53 < deoxxa> heideggermartin: well, sure, as long as couchdb supports client-side certificates
13:53 < deoxxa> heideggermartin: or if you want to put something in front of it that does (i'm looking at you, nginx)
13:54 < yawnt> deoxxa: they opened up to public in 2009
13:55 < yawnt> NOW GET YOUR CAMERA AND DO YOUR JOB DAMMIT
13:55 < heideggermartin> deoxxa: I changed my opinion while searching for an answer: I think it would be more suited to have a openid authentication ;)
13:55 < deoxxa> yawnt: derkajerrrrb
13:56 < yawnt> derkajerb to you too
13:56 < deoxxa> yawnt: isn't that thing like out off the coast of kanagawa or something
13:56 < heideggermartin> deoxxa: I want the team-members to be able to access the private npm-repository as painlessly as possible ...
13:57 < deoxxa> heideggermartin: i use a private registry at work as well
13:57 < deoxxa> heideggermartin: i just put it on our internal network and called it a day
13:58 < deoxxa> heideggermartin: it doesn't even have auth set up for reading, it's all open
13:58 < yawnt> deoxxa: you get there from Nagasaki
13:58 < yawnt> "Currently, sightseeing boat trips around the island are provided by two operators; Yamasa-Kaiun from Nagasaki Port, Kyodo Co. from Nomo Island. As of April 22, 2009, the island is open once again for public visits, with Yamasa Kaiun providing transportation to the island from Nagasaki."
13:58 < deoxxa> lol what
13:58 < deoxxa> that's ages away
13:58 < heideggermartin> If i put it on a internal network that it doesn't work from home/on-the-road without vpm (which is again a hazzle to install.
13:58 < deoxxa> that's like, almost literally the other side of japan
13:59 < deoxxa> well, i guess it kind of is the other side
13:59 < yawnt> deoxxa: i mean
13:59 < yawnt> it is the other side of japan
13:59 < yawnt> BUT IMAGINE THE POSSIBILITIES
13:59  * yawnt shows deoxxa a world of endless wonders
13:59 < deoxxa> the possibilities include me getting arrested and/or starving to death on an abandoned coal mine
13:59 < heideggermartin> deoxxa: if you come to japan, be sure to let me know when you are in osaka ;) (always looking for a nice chat)
13:59 < deoxxa> because you know all the good photo spots will be illegal to go to
13:59 < deoxxa> heideggermartin: i'm in tokyo right now ;)
13:59 < yawnt> deoxxa: as i said "endless"
14:00  * yawnt creates a rainbow from his hands
14:00 < yawnt> *endless*
14:00 < deoxxa> heideggermartin: what area of osaka? i used to live in hirano (i miss that place, *sniff*)
14:00 < heideggermartin> deoxxa: Nishiyodogawa, between amagasaki and Umeda
14:00 < deoxxa> oh neat
14:01 < yawnt> a longer name for a city no?
14:01 < heideggermartin> hirano is the furthest away from nishiyodogawa ;)
14:02 < deoxxa> not as bad as aichi-ken ama-gun tobishima-mura ouaza tobishima-shinden aza take-no-gou yotare-minami-no-wari
14:02 < deoxxa> (which is a real place)
14:02 < heideggermartin> (I think i never went there ...)
14:02 < yawnt> lol
14:02 < deoxxa> heideggermartin: probably a good thing! hirano is kind of known for being dangerous (yakuza, illegal immigrants, etc)
14:03 < deoxxa> heideggermartin: it still holds a special spot in my heart though :3
14:03 < deoxxa> though i'm in nippori now, which kind of has the same reputation
14:03 < yawnt> deoxxa: but you get along well with those people
14:03 < yawnt> :>
14:03 < deoxxa> maybe i'm just drawn to danger?
14:04 < deoxxa> yawnt: hey the yakuza are cool, they're all business. if you don't get in their way, they have absolutely no reason to mess with you.
14:05 < heideggermartin> deoxxa: how long will you stay in japan?
14:05 < deoxxa> i'm only here until february, then i have to be back in australia for $WORK
14:05 < deoxxa> :<
14:06 < heideggermartin> deoxxa: Argh: I am too late: today is a cool web-end-of-year party ... in tokyo
14:07 < deoxxa> today?!
14:07 < deoxxa> where? :<
14:07 < yawnt> BEHIND YOU
14:07 < yawnt> RUN
14:07 < deoxxa> i was looking for something to do tonight and settled on "catch up on episodes of supernatural"
14:07 < heideggermartin> deoxxa: chemicalnabe around roppongi
14:07 < deoxxa> clearly the wrong choice
14:08 < heideggermartin> deoxxa: y?
14:09 < deoxxa> well i could have been hanging out with web people instead, clearly
14:09 < heideggermartin> deoxxa: ah right ...
14:10 < heideggermartin> deoxxa: anyways: i assume you are deoxxa@twitter?
14:10 < deoxxa> indeed i am
14:10 < deoxxa> also github
14:16 < deoxxa> heideggermartin: how'd you score a job in japan anyway? i'm always interested to hear about the process, since i'll hopefully be going through it at some point myself
14:18 < heideggermartin> deoxxa: going to conferences ... user group meetings, studying japanese ...
14:18 < deoxxa> i see
14:18 < yawnt> i'm 1/3 through then
14:18 < yawnt> lol
14:19 < heideggermartin> deoxxa: also it makes it easy to be married to a local girl ;)
14:20 < deoxxa> that probably helps, ha
14:20 < yawnt> lol
14:20 < heideggermartin> She is kicking my ass to finally start to communicate.
14:20 < deoxxa> communicate with... other... people?
14:20 < heideggermartin> companies (get a job)
14:21 < deoxxa> oh, heh
14:22 < heideggermartin> My japanese is barely usable at best.
14:22 < deoxxa> yeah, i'm like, upper-beginner myself
14:22 < deoxxa> at best
14:22 < heideggermartin> deoxxa: that is sufficient for a lot.
14:22 < innociv> What brought up the japonaise conversation?
14:23 < deoxxa> yeah it definitely lets me get by
14:23 < yawnt> i linked a picture of Hashima innociv 
14:23 < heideggermartin> painful long sessions of listening to japanese persons trying to communicate with you ;)
14:23 < innociv> Ah
14:23 < yawnt> japan.js
14:23 < deoxxa> like i can sort out directions or order food, but i'm not going to be having a conversation about nuclear physics any time soon
14:23 < heideggermartin> I think I had once a 3 hour discussion with my father in law that worked with 3 words ...
14:24 < deoxxa> lol
14:24 < deoxxa> i don't know actually, i think i might be underrepresenting myself there
14:24 < yawnt> "wakarimashita"
14:24 < yawnt> "ie"
14:24 < yawnt> "wakarimasen"
14:24 < db42> there should be a .js domain
14:24 < deoxxa> everyone japanese who i speak to says i speak really well
14:24 < db42> think of the possbilities for JavaScript :)
14:24 < yawnt> db42: there was a proposal
14:25 < deoxxa> even my actual friends, who are honest with me
14:25 < deoxxa> (as opposed to "ahh, jouzu ne")
14:25 < yawnt> http://wewantjs.org/ <- db42 
14:25 < deoxxa> kind of hard to believe that though when i find myself just hopelessly lost at least 4-5 times each conversation
14:25 < heideggermartin> deoxxa: lol ... well that does change at work ;)
14:26 < db42> yawnt, whats next ? .html and .web ? :)
14:26 < yawnt> i definitely need someone to speak jappo with
14:26 < deoxxa> whoever registers index.html is a genius
14:26 < yawnt> WHY IS ITALY ON THE OTHER SIDE OF THE PLANET
14:26 < deoxxa> yawnt: tectonic purposes
14:26 < yawnt> i'm gonna pull it all the way up the ocean til it borders with asia
14:27 < deoxxa> heideggermartin: i hope you mean it changes for the better :<
14:27 < heideggermartin> deoxxa: No...
14:27 < deoxxa> :<
14:27 < schlitzer> hey
14:28 < schlitzer> i´m quite new to javascript and node.js, i´m used to write python code...
14:28 < heideggermartin> deoxxa: They try to actually communicate with you (to get things done) and if that doesn't work ... uhm... stress/pain/...
14:28 < deoxxa> haha
14:28 < schlitzer> i´m somehow confused about the stack traces
14:29 < schlitzer> my prog is throwing an error "somewhere" but i cannot see where, the stacktrace comes from somewhere in the net module... but i do not understand what am i doing wrong :-/
14:29 < heideggermartin> schlitzer: they are inverted ...
14:30 < deoxxa> heideggermartin: i'm actually here this time specifically so i can attend a japanese class - 4 weeks of "intensive" lessons... it's going to be a bit crazy
14:30 < deoxxa> but i really think i'll come out the end a lot more confident at least
14:30 < schlitzer> uhm, just found it, i tried to aquire port 80, and i´m not root. stupid me
14:31 < schlitzer> heideggermartin, so i have to read those logs from buttom up?
14:31 < stuartmcfarlane> I have 2 versions of a mongoose schema. I save a document of schema A. When I try to read is back as schema B I get no result. Is there some way to support api versioning with mongoose schemas?
14:32 < heideggermartin> schlitzer: the last call is on top the first on the bottom
14:34 < heideggermartin> deoxxa: good luck with the japanese class, it did help me a lot
14:36 < aandy> schlitzer: also, make sure you name your functions if you don't. that'll help give you a clue where in your file it is
14:39 < schlitzer> aandy, so doing this is a bad idea: net.createServer(function(s) {stuff to do}
14:40 < deoxxa> schlitzer: you can (and probably should) do net.createServer(function on_connection(s) { ... }); or something similar
14:40 < schlitzer> should i better do "function DoServerStuff(s)" and  net.createServer(DoServerStuff)??
14:40 < deoxxa> schlitzer: or, yes, you can declare your functions beforehand instead of inline
14:41 < deoxxa> schlitzer: both have their uses
14:41 < stuartmcfarlane> is there a more appropriate place to look for mongoose support?
14:42 < schlitzer> deoxxa, ahh okay, the method you mentioned just give the function a name, so it is not anonymous, kkk
14:42 < deoxxa> schlitzer: yep
14:42 < schlitzer> thx for the hint
14:58 < heideggermartin> stuartmcfarlane: #mongoosejs
14:58 < heideggermartin> stuartmcfarlane: https://github.com/LearnBoost/mongoose#getting-support
15:30 < SoulRaven> hello
15:30 < SoulRaven> anybody knows any online resources that contains all the http status code test cases?
15:30 < PigDude> test cases?
15:31 < PigDude> you mean for testing different response?
15:31 < SoulRaven> i mean links with diferent status codes responses
15:31 < PigDude> oh, I do know there are some sites ... none off the top of my head though
15:31 < SoulRaven> i want to make a failover for on diferent status codes
15:46 < trinadh> SoulRaven: http://httpstat.us/ , is that what you were looking for..
16:10 < stefan__> any romanian here? :)
16:16 < KBme> hi
16:17 < KBme> is it possible to have the same code serve for javascript-disabled users, and have the same code execute client-side for javascript-enabled users?
16:17 < KBme> or does it have to be different code?
16:25 < stefan__> searching for best node.js hosting server, any ideeas?*
16:25 < mrvisser> stefan__: I've been using Joyent cloud, it's been pretty good.
16:26 < mrvisser> you can get an xsmall machine for ~$20/mo
16:41 < PigDude> linode has worked well for me for small applications for a long time now
16:42 < MI6> joyent/node: isaacs reviewme * 6377c81 : stdio: Fix windows stdio pipes in streams2 land  Hopefully. - http://git.io/oES4oQ
16:43 < zot> anybody familiar w/ mocha?  (or is there a mocha channel i haven't found?)
16:44 < zot> well, in any case, is this style illegal: http://pastebin.com/VfT2f55F
16:44 < zot> (basically, iteratively creating 'it' cases)
16:44 < zot> cuz it exits unexpectedly before executing any of my actual test loop.
16:45 < MI6> joyent/node: isaacs v0.8 * d30e76e : npm: upgrade to 1.1.70 - http://git.io/zKmEdw
16:46 < zot> i can put assert(false) in the first line of the it() child func, and that never fires; instead i just get 'program terminated', and an incomplete mocha report
16:51 < MI6> joyent/node: isaacs master * c048c81 : http: Trivial fix for comments and 'this.read' - http://git.io/KsxvfA
16:51 < zot> hrm.  answer found.  my beforeEach was somehow corrupting it :/
16:54 < MI6> joyent/node: isaacs master * fb915ed : lint - http://git.io/cr-mag
17:01 < MI6> joyent/node: isaacs master * 0edd93d : test: Fix simple/test-http-localaddress - http://git.io/kxsl5Q
17:04 < peterschmidler> Where does npm install global modules on osx?
17:06 < Sly> peterschmidler: Have you checked /usr/local/lib/node_modules?
17:07 < peterschmidler> Sly: Thanks! That'S it.
17:08 < Sly> No problem.
17:14 < prismatictrail> with grunt 0.3, I am able to have an npm script like "grunt test"; with grunt 0.4 this fails, as it's trying to call grunt from sh. anyone know the recommended way to do that?
17:14 < prismatictrail> hoping to avoid a global dep
17:15 < prismatictrail> oops, didn't realize there was a #grunt :-)
17:25 <@isaacs> mbalho: LOL
17:26 <@isaacs> mbalho: that was the best line in that exchagne.
17:42 < substack> deoxxa: seaport <1 will not work at all with seaport >1
17:45 < Shihan> im a little lost with something... when i require() a module, it searches for module as per the doco (http://nodejs.org/api/modules.html), but it also looks in <install_directory>/lib/node/... is that a bug? shouldn't it be looking in lib/node_modules?
17:46 < gildean> Shihan: i think that's some legacy thing
17:52 < Shihan> does that mean the only way to make a app look in the global install directory (/opt/node/lib/node_modules) is by either setting NODE_PATH or "npm link"?
17:56 < jcrew> Shihan: npm global install is for binaries, not stuff you're trying to 'require'
18:00 < Shihan> fair enough i guess
18:01 < ralphholzmann> woot, check out my server's cpu graph after switching from a queued system to a stream-based system http://grabs.ralphholzmann.com/vai1zzsie9418aor.png
18:02 < jcrew> looks like you need more stuff to run on your server
18:03 < Shihan> so i guess the answer is there is no real global node_modules directory per-se (though it does seem to look in ~/.node_modules)?
18:04 < jcrew> Shihan: i think you can configure it that way, but the global flag was intended for utilities/tools (binaries)
18:04 < jcrew> i wouldn't know the answer off hand on how to make it look globally for requires
18:05 <@mbalho> isaacs: yea that guy is so <facepalm>
18:05 < Shihan> well, node_path seems to tell it, but im kinda worried about how you keep it all up to date... like express installs globally, then installs locally as well... makes me wonder if im not going to run into versioning issues unless every express app is kept up to date if you know what i mean
18:06 < kenperkins> morning folks
18:07 < kenperkins> I want to kick <so> out of the channel
18:07 < kenperkins> I'm tired of his name always being highlighted :D
18:07 < creationix> kenperkins, sounds like a problem with your client ;)
18:07 < kenperkins> whatever do you mean :D
18:07 < creationix> I mean, I don't see annoying highlights
18:08 < kenperkins> I was being sarcastic :D
18:08 < creationix> indeed
18:08 < creationix> :)
18:08 < creationix> Shihan, the global install is only used for the express command line
18:09 < creationix> the local intalls are what each app uses
18:10 <@isaacs> mbalho: it was so entertaining, though.
18:10 < Shihan> no, i get that... but isnt the express binary going to be somehow inherently links to its node_modules counterpart?
18:10 < Shihan> s/links/linked/
18:10 <@isaacs> mbalho: a friend of mine was upset that i did put him in his place with 140 characters of devastating factitude, but.. meh.  it takes more than 140 chars to explain how wrong he is.
18:10 <@isaacs> at a certain point you can either play the game, or go away.
18:11 <@isaacs> s/that i did/that i didn't/
18:12 < creationix> Shihan, not that I know of
18:13 < Dededede4> I use node.js to manipulate multiple mysql connections at the same time, and my callbacks functions never called
18:15 <@mbalho> isaacs: twitter is good for sharing links to articles and ironic jokes
18:15 < jcrew> Dededede4: do you have example code?
18:15 < Dededede4> and there are Callback function called after several minutes
18:16 < Dededede4> jcrew: no :( there can be up to 100 simultaneous requests
18:16 < gColossus> I am installing azure-cli using "sudo npm install azure-cli -g" with node v0.8.16 and npm v1.1.69. However, it failing due to an error related to git checkout "release-dec-2012" did not match any file(s) known to git. The complete log could be found here. Would anyone be able to look at it and give me some pointers? http://sprunge.us/EVEc
18:18 < gColossus> I could see that release-dec-2012, in fact, exists: https://github.com/WindowsAzure/azure-sdk-for-node.git#release-dec-2012
18:18 < owen1> where does node stores it's strusted certificate authoroties?
18:18 < Dededede4> up to 3000 simultaneous requests*
18:19 < Shihan> creationix, fair enough...
18:25 < jcrew> Dededede4: are you sure it's not network or long running sql requests?
18:27 < Dededede4> mysql server is on localhost and while it is long with nodejs, is fast with phpmyadmin
18:28 < anteaya> I just downloaded node-v0.8.16-linux-x86.tar.gz and the sha checks out. I have no file that responds to ./configure within the node directory. Suggestions?
18:29 < jcrew> Dededede4: you're running 3000 simultaneous requests with phpmyadmin?
18:31 < anteaya> I found a configure file in node/lib/node_modules/npm
18:33 < Dededede4> the response arrives in 0.0000 sec with phpmyadmin, if the problem came from performance of servers, it would be higher
18:40 < jcrew> cool
18:41 < Dededede4> (I find it really difficult to explain it in English)
18:42 < jcrew> Dededede4: i think just a sample code would be easiest for anyone
18:43 < tjfontaine> it could be that phpmyadmin is using the unix socket, while your nodejs configuration is using tcp, and other things may be impacting it at that point
18:44 < anteaya> so node 8.5 has a configure executable in the root directory and node 8.6 doesn't
18:44 < anteaya> yes the README for both 8.5 and 8.6 gives the same instructions
18:44 < anteaya> s/yes/yet
18:46 < anteaya> doesn't anyone have the correct installation instructions for node 8.6 onward?
18:46 <@mbalho> anteaya: you can clone from git and then do git checkout v0.8.16 and then ./configure and make
18:47 < anteaya> mbalho, I can try that, which repo url do you suggest?
18:48 <@mbalho> anteaya: the official one, http://github.com/joyent/node
18:50 < anteaya> mbalho, thank you
18:51 < creationix> anteaya, if 8.6 is missing the configure script, that a problem
18:51 < creationix> it should be there
18:51  * creationix checks the tarball
18:52 < creationix> I see configure in the 0.8.6 tarball
18:52 < anteaya> creationix, it appears that it is there in the 8.6.tar.gz but not in the 8.6-linux-x86.tar.gz
18:53 < anteaya> I think I downloaded the incorrect option
18:53 < creationix> right, the pre-built binaries don't need a configure
18:53 < anteaya> creationix, ah okay
18:53 < anteaya> creationix, do you think the README contained therein might reflect that?
18:53 < creationix> I love the linux binaries.  I can upgrade node versions in seconds instead of minutes
18:53 < anteaya> rather than saying ./configure, make, make install
18:54 < TooTallNate> anteaya: that's a good point
18:54 < creationix> anteaya, perhaps.  Ping isaacs.  He does those packages afaik
18:54 <@mbalho> creationix: but what if the government hacks your binaries!!!
18:54 < anteaya> isaacs, ping
18:54 < creationix> or TooTallNate :)
18:54 < anteaya> TooTallNate, are you able to effect a change?
18:54 < anteaya> if so, sorry isaacs 
18:54 < TooTallNate> anteaya: fwiw isaacs has been wanting a basic ./configure script in the binary tarballs for a while
18:55 < anteaya> TooTallNate, opps I opened a can of worms
18:55 < anteaya> sorry about that, I just want node.js on my system
18:55 < TooTallNate> something that would allow you to specify a --prefix before doing the make && make install dance
18:55 <@mbalho> anteaya: nah this is just how open source works
18:55 < anteaya> I already have my hands in too many pies
18:55 < TooTallNate> anteaya: ya you're fine :p
18:56 < TooTallNate> anteaya: if you want a quick install script try https://gist.github.com/3288316
18:56 < anteaya> TooTallNate, mbalho thanks for understanding, a flag (clearly stated in readme) would have worked for me
18:56 < TooTallNate> anteaya: note: needs updated variables
18:56 < anteaya> TooTallNate, thank you
19:00 < creationix> TooTallNate, the only problem with that script is it installs README, LICENSE.txt and other packaging files into $PREFIX
19:01 < TooTallNate> creationix: ya good point
19:01 < TooTallNate> creationix: simple fix?
19:01 < TooTallNate> tar flag?
19:01 < creationix> I guess the tar line could exclude those three or four files explicitly
19:02 < creationix> I always untarzip manually, do a "rm *" and rsync the folders on top of $PREFIX
19:02 < anteaya> TooTallNate, it installed darwin on my system and I am on Fedora 17
19:03 < TooTallNate> anteaya: ya that's cause you needed to update the PLATFORM variable first :p
19:03 < TooTallNate> anteaya: to "linux"
19:03 < creationix> yeah, currently the files are "ChangeLog", "LICENSE", and "README.md"
19:03 < anteaya> TooTallNate, missed that
19:03 < TooTallNate> anteaya: sorry, should have specified
19:03 < TooTallNate> anteaya: also update the VERSION
19:03 < TooTallNate> to 0.8.16
19:03 < TooTallNate> cause the one that's on there is old
19:03 < creationix> or use nvm
19:03 < TooTallNate> ^ or that
19:03 < creationix> assuming it's not broken
19:04 < creationix> I accept just about any pull request and it often gets broken because of that
19:04 < anteaya> I don't know what nvm is
19:04 < creationix> https://github.com/creationix/nvm
19:04 < anteaya> I also had to up date the arch
19:04 < creationix> it's a bash function that makes it easy to switch between node versions
19:04 < TooTallNate> anteaya: values are "ia32" for x86 and "x64" for x64 FYI
19:04 < anteaya> I think I am well and firmly falling down the rabbit hole
19:05 < creationix> where did ia32 come from?
19:05 < TooTallNate> creationix: not really sure… v8 i think?
19:05 < creationix> `uname -m` return "i686" on my 32 bit machines
19:05 < anteaya> ah that is good to know, I never would have guessed ia32
19:05 < TooTallNate> creationix: did you get a jsconf ticket?
19:05 < creationix> yep!
19:05 < jcrew> intel architecture 32b
19:05 < TooTallNate> nice :)
19:05 < TooTallNate> jcrew: nice again :)
19:06 < creationix> going to bring the family
19:06 <@isaacs> anteaya: yes, TooTallNate is an agent of Node.js.  He can help you.
19:06 <@isaacs> anteaya: he has powers.
19:06 < anteaya> TooTallNate, so do I just edit the .sh file and run it again or do I need to remove anything first?
19:06 < TooTallNate> 00-agent technically
19:06 < creationix> anteaya, run again should be fine
19:06 < TooTallNate> anteaya: you should just have to update those variables at the top, and then run it again
19:06 < anteaya> isaacs, ohhh thank you, glad to know I am talking with someone with powerful powers. :D
19:06 <@isaacs> anteaya: Among them, the powers of Helicopters, Build Systems, Height, and Beardedness
19:07 <@isaacs> and TTYs
19:07 < anteaya> Helicopters and TTYs?
19:07 < anteaya> I am impressed
19:08 < ehershey> I bet every helicopter is hiding at least a tty or two
19:08 < anteaya> errors: gzip: stdin: not in gzip format
19:08 < anteaya> tar: Child returned status 1
19:08 < anteaya> tar: Error is not recoverable: exiting now
19:08 < TooTallNate> anteaya: gist us your script
19:08 < TooTallNate> anteaya: or fork mine
19:09 < MI6> joyent/node: Scott Blomquist master * 841b7f5 : Ease building with VS Express by checking in generated files. (+1 more commits) - http://git.io/8SlAyg
19:09 < anteaya> https://gist.github.com/ed40810c0b26ec98bb5b
19:10 < db42> what is recommended to handle the client side javascript objects ? backbone ? something else ?
19:10 < creationix> now what's the difference between ia32 and x86
19:10 < jcrew> creationix: none
19:11 < creationix> db42, node doesn't care how the browser handles objects
19:11 < jcrew> i think intel did that for marketing or so that people would know AMD didn't create the instruction set
19:11 < anteaya> I know it is me that did something wrong, I just don't know what I did
19:11 < andrewaclt> db42, it's only confusing because IA-64 != x86-64
19:11 < db42> andrewaclt, ??
19:11 < db42> creationix, i know, just wondering whats the recommendation....
19:11 < andrewaclt> db42, I meant creationix 
19:11 < andrewaclt> :)
19:12 < creationix> I like backbone for smallish projects
19:12 < creationix> no framework at all for tiny projects
19:12 < creationix> and I avoid large projects
19:12 < db42> this is a learning project
19:12 < andrewaclt> heh
19:12 < db42> i'm doing stuff mono, then after i figured it out, looking for something to help me out :)
19:12 < db42> any recommended backbone tutorial ?
19:12 < jedireza> http://addyosmani.github.com/backbone-fundamentals/
19:13 < jedireza> this book helped me a lot
19:13 < TooTallNate> anteaya: oh sorry, my bad, do "x86" instead of "x64"
19:13 < TooTallNate> i mean "ia32"
19:13 < anteaya> yeah, that worked
19:13 < anteaya> thanks
19:13 < andrewaclt> bums me out that backbone depends on jquery
19:13 < TooTallNate> np
19:14 < creationix> andrewaclt, it doesn't
19:14 < creationix> it does depend on underscore though
19:14 < andrewaclt> creationix, lies
19:14 < creationix> jquery is only needed for the automatic server integration
19:14 < creationix> and zepto works as well
19:14 < andrewaclt> It depends heavily for views
19:14 < jedireza> or you could use http://zeptojs.com/ with backbone
19:14  * creationix used to work on backbone for a very short time many years ago, long before it was open source
19:15 < creationix> andrewaclt, I actually started a backbone port that had zero dependencies and only ran on es5 runtimes
19:15 < creationix> but there wasn't much interest
19:15 < anteaya> so now that I have it installed how do I test to see if it is working the way it should be?
19:15 < creationix> anteaya, node -v
19:15 < Abody> Hi!
19:15 < Abody> I have a tiny question
19:16 < Abody> I'm not 100% sure #node.js is the right place to ask this
19:16 < Abody> So
19:16 < anteaya> guess this means no: node -v
19:16 < anteaya> bash: node: command not found...
19:16 < Abody> Someone just did a GitHub commit (UglifyJS); I installed it via NPM
19:16 < Abody> Does NPM auto-sync with the new commits?
19:16 < creationix> anteaya, just do it manually
19:16 < anteaya> do what manually?
19:17 < creationix> install it without the script
19:17 < creationix> http://nodejs.org/dist/v0.8.16/node-v0.8.16-linux-x86.tar.gz
19:17 < creationix> tar -xzvf node-v0.8.16-linux-x86.tar.gz
19:17 < anteaya> creationix, guess I am going to have to
19:17 < creationix> cd node-v0.8.16-linux-x86
19:17 < creationix> rm *
19:17 < creationix> rsync -av ./ /usr/local/
19:17 < PigDude> -v is for wimps
19:17 < db42> how is node.js memory wise ?
19:17 < PigDude> db42, big
19:17 < db42> i'm wondering on VPShosting how much memory to get
19:17 < creationix> the rsync may need sudo if you haven't chowned /usr/local
19:18 < creationix> db42, about 10mb overhead
19:18 < PigDude> db42, 64G
19:18 < db42> 64G, rofl, thats expensive
19:18 < db42> creationix, per what ?
19:18 < creationix> per process
19:19 < gildean> a process running a simple webserver takes about 8MB of memory
19:19 < creationix> PigDude, naw, -v is for speedreaders
19:19 < gildean> without any connections that is
19:20 < creationix> db42, what kind of program do you want to host
19:21 < creationix> if it's just to play around with node on a low-traffic site, the smallest vps you can get will be plenty
19:21 < creationix> I run howtonode.org on a 512mb linode and it's way overpowered
19:21 < creationix> that gets about 2000 visitors a day
19:23 < RLa> db42, also check out appfog's free account
19:24 < PigDude> creationix, hehe
19:24 < RLa> they now also have cheaper paid plans with more db storage room too
19:24 < PigDude> but if you are running mail server for the domain on the same machine or anything, you'll want osme extra ram
19:24 < DaniloLR> Hi. Can I reuse a collection object from a MongoDb client ? 
19:25 < Abody> Okay; my question is: if I'm installing an application that's hosted on GitHub via NPM, do commits to the files automatically 'sync' to NPM?
19:27 < freewil> Abody, what do you mean it's hosted on github via npm
19:27 < Abody> freewil: sorry, I installed it via NPM, it's hosted on GitHub
19:27 < creationix> npm has no github hooks if that's what you mean
19:27 < creationix> npm publishing is explicit
19:27 < Abody> creationix: oh, that's what I meant; yes
19:28 < creationix> you can push a change in package.json to github
19:28 < creationix> but it will only affect people who manually clone from github and then run npm install
19:28 < creationix> people installing from npm will still get the last published version
19:29 < freewil> i like to use npm version
19:29 < freewil> which will bump the version in package.json and make a git tag
19:29 < freewil> then push to github and the tag
19:29 < creationix> nice, didn't know about that
19:29 < freewil> then do a npm publish
19:29 < Abody> Abody: got it, understood; thanks! :)
19:31 < anteaya> creationix, node responds now
19:31 < creationix> yay
19:32 < anteaya> creationix, TooTallNate thanks for the journey, was fun
19:32 < creationix> does "node -v" show "/usr/local/bin/node"
19:32 < timeturner> sync io is faster in this case: https://twitter.com/tjholowaychuk/status/282182767196909568
19:32 < creationix> I mean "which node"
19:32 < anteaya> creationix, /usr/local/bin/node
19:33 < creationix> now if you want to be able to install global npm modules without using sudo, chown /usr/local/ to your user
19:33 < anteaya> I just downloaded the v8.16.tar.gz and followed the README
19:33 < TooTallNate> timeturner: we're lucky to be able to use sync io in that case since it's just a build system, not a running server
19:33 < anteaya> creationix, thanks, I think I will move onto my regularly scheduled goals for the day
19:34 < creationix> have fun
19:34 < sk8ball> Can anyone point me toward a pre-built linux VM for node.js development that already has nodejs, express, mongodb, redis, and mebbe mongoose or whatever installed already
19:34 < anteaya> creationix, but thanks for the help, was fun to meet you all
19:37 < othiym23> yo substack: I ganked one of your "mind = blown" images for my Twitter banner. I credit you but I wanted to double-check that that was cool
19:37 < othiym23> substack: let me know if it's not and I'll come up with something else
19:37 < MI6> joyent/node: isaacs created branch v0.9.4-release - http://git.io/mwcZ_g
19:37 < substack> why do people even ask to use my images >_<
19:38 < astropirate> substack, because chicks dig them
19:38 < substack> othiym23: asking is for suckers
19:38 < Abody> substack: I'm just curious, what images are you referring to?
19:39 < Abody> (Sorry, just joined #node.js and it looked interesting :P)
19:39 < substack> http://substack.net/images/mind_explosion.png
19:39 < PigDude> boom
19:40 < Abody> substack: That's neat :)
19:40 < Abody> substack: your work?
19:40 < drudge> substack: need bigger version
19:41 < drudge> wallpaper size
19:41 < substack> http://substack.net/images/mind_explosion.svg
19:42 < PigDude> inkscape?
19:42 < drudge> thanks substack
19:44 < eydaimon> How can I execute a system call?
19:44 < TooTallNate> eydaimon: which one?
19:46 < eydaimon> well, in this case I want to run a coffee script command (in a Cakefile)
19:46 < sk8ball> quick question... as someone relatively new to nodejs and has only played around with it previously but is now considering using it in production would you all reccommend i upgrade to .10?
19:46 < sk8ball> or stick with 8.16?
19:46 < eydaimon> TooTallNate: coffee  -j main.js -c lib/*coffee  
19:46 < sk8ball> err 0.8.16
19:47 < TooTallNate> eydaimon: use child process
19:47 < juboba> In socket.io is it possible to send data from the client on 'connection'?
19:47 < eydaimon> TooTallNate: thanks. 
19:47 < sk8ball> and how does .10 make any sense, why didnt they version it 1.0
19:47 < sk8ball> ?
19:47 < MI6> joyent/node: Nathan Rajlich master * 837df70 : repl: don't touch `require.cache`  Fixes #3226.  Consider a production se - http://git.io/Rr8AtA
19:48 < juboba> does anybody use socket.io?
19:48 < TheJH> Is node still using thread pools for FS IO? I just read about the AIO syscalls and was wondering why node isn't using those...
19:50 < juboba> using socket.io, how can I tell the server who just logged in? ( I have this info available on the client)
19:50 < Abody> juboba: That doesn't make any sense
19:51 < Abody> If you want the client to tell the server a user ID or so, just send it along the socket from the client
19:51 < Abody> juboba: and that should be quite easy if you're using JSON
19:52 < gildean> or just send a custom event
19:53 < juboba> Abody, sorry dude I'm new to node.js I'm testing stuff. Trying to build a minimal message sending device
19:54 < Abody> juboba: don't be sorry :) Just be clearer about what you're trying to achieve
19:54 < Abody> juboba: So are you using JSON?
19:55 < juboba> Abody, i.e. io.connect('http://myserver:myport', {uid: 1}); is this possible?
19:55 < Abody> Oh
19:55 < Abody> Nope
19:55 < Abody> See
19:55 < Abody> io.connect is only used to *start* the connection
19:55 < Abody> You're not supposed to send any info with it
19:55 < Abody> After you connect,
19:55 < juboba> Abody, yes I was trying to send data inmediately, instead of sending it after
19:55 < Abody> Just send a message:
19:56 < Abody> Well you can't really do that
19:56 < Abody> Unless
19:56 < juboba> ohh and in the server I can link the handshake with the uid
20:07 < sk8ball> Does anyone have a linux node VM setup they can point me towards to download
20:07 < bradleymeck> isaacs: when you get some time, do you know an elegant way to buffer a portion of a readable stream into a different readable stream as it comes in (similar to how 'xyz'.substring(1,2) works). right now im using a passthrough and checking _readableState.length which is ok I guess
20:10 <@isaacs> bradleymeck: why?  just don't read it until you ned it.
20:11 < bradleymeck> cause i have a multiplexed buffer that is being split up but want to continually read and avoid back pressure temporarily. ie. my tar reader wants to keep reading the file even though the consumer may not want the data yet
20:12 <@isaacs> bradleymeck: so, set a higher highWaterMark
20:12 <@isaacs> bradleymeck: it'll keep buffering up to that point
20:13 < bradleymeck> im splitting up the stream the tar stream vs the entry streams. I could keep it all as one stream but would need to guard against overreading and need to fake the 'end' event.
20:15 < Kakera> if my socket emits an 'error' even, how do I check programmatically what kind of an error it is?
20:15 < Kakera> for example, how to check whether it is ECONNREFUSED?
20:16 < Kakera> since the error object is undocumented, the only way I can think of is something like `if (error.toString == 'connect ECONNREFUSED')`
20:16 < Kakera> but this is kinda ugly
20:16 < Kakera> *toString()
20:18 < jcrew> Kakera: the error object is provided by v8, you can find the docs from google
20:18 < jcrew> they're written by google, as well
20:22 < jcrew> Kakera: you may be looking for error.name
20:23 < Kakera> jcrew, I need to know for sure. I can't test this
20:23 < jcrew> Kakera: you can't test a connection refused?
20:26 < Kakera> { [Error: connect ECONNREFUSED]
20:26 < Kakera>   code: 'ECONNREFUSED',
20:26 < Kakera>   errno: 'ECONNREFUSED',
20:26 < Kakera>   syscall: 'connect' }
20:26 < Kakera> I see
20:26 < ben_alman> any value in something like https://gist.github.com/4355516
20:26 < Kakera> still, I wonder why this isn't documented
20:26 < ben_alman> people seem to love or hate either way
20:26 < othiym23> substack: that's what I figured, but wanted to be courteous'n'shit
20:26 < db42> creationix, thinking in general...
20:29 < Kakera> https://github.com/joyent/node/blob/master/lib/net.js#L825
20:29 < Kakera> why does it assign the same thing to e.errno and e.code?
20:29 < Kakera> should I expect them to be always the same?
20:32 < jcrew> in that case, i'd assume so
20:33 < Kakera> that huge last blogpost
20:35 < lamefun> hi
20:35 <@Nexxy> Kakera, fwiw I've used err.code for some time and it works well
20:35 < lamefun> Can I sandbox potentially malicious JavaScript with just Node.js?
20:35 < lamefun> Or am I better off creating my own v8 application?
20:36 <@Nexxy> lamefun, http://nodejs.org/api/vm.html
20:36 < MI6> joyent/node: isaacs created tag v0.9.4 - http://git.io/QNVxzQ
20:36 < Kakera> bad idea
20:36 < MI6> joyent/node: isaacs v0.9.4-release * d86d83c : 2012.12.21, Version 0.9.4 (Unstable)  * streams: Update all streaming int - http://git.io/goe8MQ
20:36 < Kakera> while(true); will hang his app
20:37 < lamefun> Nexxy: I want to create a game that uses JavaScript as Quake uses QVM. Is it a remotely good idea?
20:37 <@Nexxy> why not?
20:37 < freewil> ive never understood what vm was for
20:37 < freewil> can you really create a secure sandbox
20:37 < lamefun> IDK, people have been criticizing me for wanting to do that with Teeworlds.
20:37 < tjfontaine> depends on what you mean by sandbox
20:37 <@Nexxy> lamefun, people criticize
20:38 < freewil> what are some examples of a good use for vm
20:38 < jcrew> they will criticize regardless of whether it is a good idea
20:39 < MI6> joyent/node: isaacs master * 70eb227 : Now working on 0.9.5 (+7 more commits) - http://git.io/PJLYmQ
20:40 < othiym23> lamefun: vm allows you to sandbox what objects are available to code, but it can't prevent DOSes (cuz of the halting problem, if nothing else)
20:40 < lamefun> othiym23: can I spawn watchdog process?
20:40 < othiym23> since it's not running in a separate thread or address space, it's got the same privileges around all that stuff as the code outside the vm
20:40 < lamefun> v8 can be interruped by another thread
20:40 < othiym23> lamefun: yeah, but that should be done with a child process, not a vm
20:41 < tjfontaine> lamefun: a child process is a good place to start, but you'll also probably want to figure out if you want to allow fs, net, and module loading
20:41 < othiym23> if you wanted to write a native extension, you could maybe fix that
20:41 < othiym23> there was an attempt to bring V8's isolates into Node, but that failed
20:41 < othiym23> I don't know why
20:41 < lamefun> am I better off creating my own v8 based application or using Node.js?
20:41 <@Nexxy> it's not hard to kill processes that don't behave the way you wnt
20:42 < othiym23> lamefun: if building your own v8-based application sounds fun / easy / interesting, then that's probably the best course for you
20:42 < othiym23> but there's a lot of added value in libuv and the Node standard library
20:42 < hendore> Any socket.io gurus here? I just wanted to know if its possible (without emiting an event) to store data on the client side socket from the server
20:42 <@Nexxy> hendore, so like, with telepathy?
20:42 < lamefun> It's a game, so frames should not take more than 3 seconds. And it also should do it gracefully, without crashing the whole game: interrupt the malicious mod and show the main menu.
20:43 < othiym23> given that socket.io is all about creating an abstract event stream between client and server, I'm not sure I understand your question, hendore
20:43 < hendore> so server may do something like: mySocket.set('someName', someValue); and client could then get that using clientSocket.get('someName)
20:43 < jcrew> Nexxy: lmao, exactly what i thought
20:43 < jcrew> hendore: it would still have to emit an event
20:43 < lamefun> BTW, does Node.js provide something like what GObject introspection does for Gjs?
20:43 < othiym23> lamefun: you can do that with setTimeout, although setTimeout may not give you the precision you need for a smooth rendering pipeline
20:43 < jcrew> and it's like 3 lines of code to make that work with emits
20:43 < lamefun> Scan C sources and export to JavaScript.
20:44 < freewil> hendore, the whole point of an event is to give the client some information
20:44 < othiym23> hendore: you've moved outside the scope of socket.io at that point
20:44 < hendore> yes, I understand that
20:44 < othiym23> I mean, that's trivial to do with xhr
20:44 < tjfontaine> lamefun: using libclang it's pretty trivial to write wrappers, but there's nothing entirely fleshed out right now, I have an example for ffi
20:44 < othiym23> lamefun: there's node-ffi, but I think that's the inverse of what you're asking for
20:45 < hendore> At the moment, when the client connects to the server i send a message "get-worlds" the server then listens for this event, and when called, emits an event back to the calling client with a list of worlds (json object) which the client then uses to update the dom
20:45 < othiym23> lamefun: it sorta sounds like you're asking for something like Unity with JS for scripting ;)
20:46 < jcrew> hendore: are you looking for a blocking call to get information from the server?
20:46 < Vendethiel> Hello. Trying to install nodejs on centOS here. http://nodejs.tchol.org/ seems to be done, any idea ?
20:47 < MI6> joyent/node: isaacs v0.8 * 6738e68 : blog: Post about v0.9.4 - http://git.io/kus_CA
20:47 < othiym23> lamefun: I guess what I'm saying is it sounds like you want a runtime with V8 embedded in it, rather than a platform built on Node
20:47 < othiym23> although I think with enough grit and determination, you could probably make Node do what you want
20:47 < tjfontaine> unless scripts need to do file and other IO operations outside the game engine
20:48 < othiym23> scripts should be consuming a sanitized API at that point, tjfontaine 
20:48 < hendore> jcrew, I don't want to block the server, I could use ajax to do this, with an endpoint on the server that returns the list but I'm trying to get familiar with sockets, at the moment the code i described looks like this: https://gist.github.com/998c9916998cd99c8de7
20:48 < othiym23> in which case you can put them in a vm / whatever other potentially-native sandobxing you want to put up
20:48 < tjfontaine> othiym23: I don't disagree, but it's easier to sanitize that through node contexts, than pure v8
20:48 < othiym23> probably
20:49 < othiym23> if I were trying to build a 60fps rendering pipeline where I were allowing untrusted plugins into the mix, I'm not sure Node would be me first (or third) choice
20:49 < jcrew> hendore: your best bet is to implement a 'get/set' combination for your socket
20:50 < MI6> joyent/node: Maciej Małecki master * f84bf5b : build: allow to specify custom tags  When building custom `node` versions - http://git.io/sMN9Sw
20:51 < othiym23> oho, so mmalecki's patch made it in
20:52 < lamefun> othiym23: http://pastebin.mozilla.org/2012198
20:52 < lamefun> this would be more than enough for me
20:52 < hendore> jcrew, I'm wondering if the emit method has a callback for returning a result, but probably not right?
20:53 < Vendethiel> Any idea for installing on CentOS ?
20:53 < hendore> would be nice to see: mySocket.emit('get-something', function(resultData){});
20:53 < lamefun> No C++ parsing needed, easy to generate both C++ and JavaScript documentation
20:54 < jcrew> hendore: i commented on your gist
20:54 < othiym23> lamefun: you could totally expose that in a VM, then all you'd need is some kind of mechanism for terminating processing if it took too long
20:54 < LouisT> I'm using socket.io on a PaaS, so it's using xhr-polling, when one person closes their tab i need it to be reported to the other player but for some reason it doesn't work with xhr-polling as it would with 'normal' websockets, any ideas?
20:54 < jcrew> hendore: on how to implement a get/set function
20:54 < othiym23> which is still a decently hard problem, depending on how untrustworthy your untrusted code is
20:55 < lamefun> I mean, easy binding of C++ --> JavaScript
20:55 < othiym23> LouisT: due to the nature of long polling, it's going to take a little while for socket.io to notice that the event stream has been dropped by the other end
20:55 < othiym23> lamefun: take a look at node-ffi
20:55 < othiym23> it might be enough for what you're trying to do
20:56 < LouisT> othiym23: yes, i realize that's the issue, but do you have any ideas on a solution for that?
20:56 < othiym23> LouisT: switch to a websocket-only implementation like shoes? ;)
20:57 < othiym23> the alternative is ratchet down your polling interval and configure socket.io to be more aggressive about marking connections as closed which might get noisy
20:58 < TehShrike|Work> Oh shiiiiiiiiiii http://blog.nodejs.org/2012/12/21/node-v0-9-4-unstable/
20:58 < othiym23> yeah, I was just about to grep for what changes were made to "support" systemtap
20:59 < othiym23> my experience with systemtap and Node has not been overly positive
21:01 < LouisT> othiym23: that doesn't work with PaaS D:
21:03 < othiym23> LouisT: depends on the PaaS ;)
21:03 < othiym23> is Heroku still breaking websockets?
21:03 < othiym23> I thought they fixed that
21:04 < jcrew> i haven't had any problems with websockets on heroku
21:04 < LouisT> othiym23: appfog, they break websockets
21:04 < LouisT> at least as far as i can tell
21:04 < othiym23> ah, sucky
21:04 < LouisT> i can't find anything online about how to fix it
21:04 < othiym23> well, try cranking down the polling interval and make the connection timeout a lot shorter in socket.io
21:05 < LouisT> i made it 5
21:05 < LouisT> still not low enough heh
21:05 < othiym23> I don't think you have a better option when your transport is xhr, unforch
21:05 < LouisT> i tried socket.close() in onbeforeunload, that fails.. heh
21:05 < othiym23> theoretically there are window.onclose handlers, but I don't think those can be combined with xhr stuff
21:06 < othiym23> but maybe you could try that?
21:06 < LouisT> well it KINDA works.. i have to return true to bring up the alert asking if the person wants to stay on the page or not, gives time for socket.close() to work, but if they say no it's not good enough heh
21:07 < geNAZt> maybe you can try to prevent the Events default 
21:07 < geNAZt> and then return true if the socket is closed
21:08 < othiym23> you could be sneaky and have it inject an img tag that hits an endpoint saying that connection is about to close
21:09 < jcrew> creative s
21:09 < geNAZt> has someone ran into a bug with expressjs and socket.io where u cant sent responses ?
21:10 < geNAZt> https://gist.github.com/4355854
21:10 < geNAZt> node -v 0.9.3
21:14 < tanepiper> oooh 0.9.4 branch cut on github
21:19 < cjno> anyone npm savvy around? I tried something stupid and ended up with npm behaving very strangely
21:20 < cjno> so I have buster-test-cli, whose two latest versions are 0.6.2 and 0.7.0. I attempted to republish 0.6.2 with a fixed package.json. Now the website says 0.7.0 is the latest version, and `npm install buster-test-cli` installs 0.6.2
21:20 < cjno> same thing with buster@{0.6.2, 0.6.3}
21:20 < cjno> I know re-publishing old packages is retarded, but right now I really need the ability to republish the two latest versions of both those packages
21:22 < jrajav> Time for a 0.7.1?
21:22 < jrajav> :P
21:23 < cjno> heh
21:23 < cjno> I guess
21:23 < EyePulp> Looking for pointers on a decent S3 module.  I use boto on the python side, and it's pretty well supported and popular.  I see a lot of  module options under node, anyone have good/bad experiences to share?
21:24 < jrajav> My cat died a long time ago
21:24 < jrajav> That was a pretty bad experience
21:24 < tanepiper> i used visionmedia's one, i forget the name, but it worked fine
21:24 < tanepiper> also check out grunt-s3, not sure what it uses under the hood (if anything)
21:25 < tedsuo> isaacs: Is there a video of your talk on the new streams api?
21:26 < EyePulp> tanepiper: looks like grunt uses knox, which is the visionmedia one
21:26 < tanepiper> that's the one
21:26 < othiym23> knox is sort of the default
21:27 < othiym23> I know some people who were using it and said they ran into some weirdness, but that's all I remember right now
21:27 < EyePulp> tanepiper - I take it you use gruntjs?  (changing topics a bit) =)
21:27 < othiym23> also that it might be semi-unmaintained
21:27 < tanepiper> EyePulp: yea
21:27 < tanepiper> othiym23: yea, might need some updates but it does work
21:28 < othiym23> looks like Domenic and / or TJ have been working on it recently
21:28 < EyePulp> tanepiper: what exactly is grunt used for?  I read over the home page, but it didn't really make me go "aha!"  It looked like it does a little of everything.
21:29 < EyePulp> Amazon has an "official" version too - https://github.com/aws/aws-sdk-js
21:29 < EyePulp> for what it's worth.
21:29 < tanepiper> EyePulp: yea, took a talk on it for me to get it - it's a bit of a swiss-army knife tool :)  It's kind of like rake, lets you set up tasks (like running jshint, minify - or run tests)
21:30 < dannymick> it's a command line utility that does a bit of linting, tests, concatenation + minification
21:30 < dannymick> I haven't used it yet
21:31 < dannymick> I'm trying to work on my own command line utility - which is custom to my development workflow
21:33 < EyePulp> ll
21:39 < eydaimon> Can anyone recommend a good library for memcached?
21:40 < jcrew> othiym23: apparently i just wasn't paying well enough attention, heroku still blocks websockets
21:44 < Cheery> did anyone made json-unix-pipe for node.js yet?
21:45 < Cheery> thing is I'd like to get node.js app communicate with another node.js app
21:47 < LouisT> Cheery: isn't that already possible?
21:47 < Cheery> LouisT: how?
21:47 < Cheery> sure I can get it done, but I wonder if there's readymade thing
21:48 < tjfontaine> Cheery: there's the child process api
21:49 < LouisT> or you could read from stdin
21:49 < Cheery> tjfontaine: how does it work?
21:49 < tjfontaine> Cheery: http://nodejs.org/api/child_process.html
21:49 < LouisT> http://nodejs.org/api/child_process.html#child_process_child_send_message_sendhandle
21:49 < aandy> anyone know a good (windows) hex diff tool? to see byte (hex) differences between two files
21:50 < tjfontaine> Cheery: pipes generally
21:50 < LouisT> could also use dnode as well i guess
21:50 < tjfontaine> aandy: araxis used to be the goto diff tool
21:50 < LouisT> https://github.com/substack/dnode
21:51 < Cheery> tjfontaine: if I do a desktop env based on this, does it cause problems with programs that haven't been written in node.js?
21:52 < tjfontaine> Cheery: if you are going to be mixing things then perhaps a unix socket and dnode would be a better solution for you
21:53 < Cheery> tjfontaine: this looks like what I need
21:54 < Cheery> so that's solved out.
21:54 < geNAZt> i have a question about express and socket.io
21:54 < geNAZt> when i create a express app, append it to the callback of the http.createServer function
21:55 < Cheery> I guess I'll have a functioning desktop environment with bitmap fonts within few days. :)
21:55 < geNAZt> and then append socket.io 
21:55 < geNAZt> which one is first emitted
21:56 < Cheery> actually I have another question..
21:56 < Cheery> I wonder if I could emulate virtual terminal on node.js.. and if there's lib that does it already.
21:57 < tjfontaine> Cheery: you mean like https://github.com/chjj/tty.js/
21:57 < Cheery> YAY!
21:57 < Cheery> tjfontaine: are you sure you haven't done this thing yet?
21:57 < Cheery> it's like you're giving me all the pieces lol.
21:57 < tjfontaine> define "this"
21:58 < Cheery> desktop environment
21:58 < Cheery> tjfontaine: it's exactly what I need minus the www stuff.
21:59 < tjfontaine> Cheery: well I haven't but you know gdk has a websocket/canvas backend that basically makes most gtk enabled apps usable in a browser
21:59 < db42> browserify
22:00 < Cheery> tjfontaine: I don't.
22:01 < Cheery> I'm thinking about experimental platform to try out ideas around desktop interfaces.
22:02 < db42> do VNC in web browser
22:03 < ZBZZN_> a noob question: If someone has a node package and I want to add code to it but the person doesn't develop the package anymore, anything I can do besides forking it and changing the name?
22:03 < Cheery> I rather do a platform that's far more flexible than that.. and has the feeling of 'real' in it.
22:03 < geNAZt> ZBZZN_: you can try and make a pull request
22:03 < db42> i would just love and use remote VNC via web browser
22:04 < db42> without having an client to install on the computers
22:04 < ZBZZN_> The person isn't responding to pull requests or emails
22:04 < Cheery> it might be cool, but not in my scope :)
22:04 < geNAZt> then you only can fork
22:04 <@Nexxy> ZBZZN_, maybe ping isaacs about it
22:04 < Cheery> ZBZZN_: what's theproject?
22:04 < gildean> ZBZZN_: forward the messages to isaacs, fork the repo, and maybe isaacs will give you the control of the package on npm
22:05 < ZBZZN_> node gitteh
22:05 < geNAZt> i have found a bug "between" express and socket.io
22:05 < Cheery> looks cool
22:05 < ZBZZN_> but I think I will leave that one
22:05 <@Nexxy> you should probably just fork
22:06 < Cheery> getting to sleep :)
22:06 < geNAZt> the bug is, if i use express and it 404 errors, then socket.io does its work, socket.io emits to express back
22:06 < Cheery> tjfontaine: thanks from helping me out.
22:07 < geNAZt> where should i do it in ?
22:07 < geNAZt> socket.io or express ?
22:07 < ZBZZN_> I need to get some sleep
22:09 < aandy> tjfontaine: perfect, thanks! sorry for the long reply, i'm sitting at a pc with < 2gb ram, everything is *excruciatingly* slow
22:10 < s5fs> Nexxy: fork it all
22:14 < EyePulp> is it me or does 0.8 seem larger than 0.10  numerically?
22:14 < EyePulp> I know server isn't necessarily numeric, but it just throws me.
22:14 < EyePulp> er, semver
22:16 < zomg> EyePulp: yeah you'd think after 0.9 comes 1.0 because, well, that's how numbers work
22:16 < zomg> =)
22:16 < tjfontaine> Cheery: no problem, sorry work interrupted me
22:17 < EyePulp> yeah.
22:31 < juboba> I have a connection established in my page layout to a node servlet. My only problem is that when I navigate in the page the connection is closed and reopened. Can I mantain the connection until the user leaves?
22:35 < [Fudge]> when writing a library, is it fine to return null as the error?
22:35 < [Fudge]> or what should I return
22:35 < [Fudge]> (when it's done something successfully)
22:37 <@isaacs> tedsuo: not yet, I don't think.  I'll tweet it when there is.
22:37  * isaacs away
22:39 < Kakera> are there any plans to add stuff like writeUInt32LE (is there a general term for these methods?) to streams?
22:40 < Kakera> so that you don't have to read the data into a buffer first
22:40 < Kakera> now that we have a unified Stream interface, I don't see why these methods couldn't be added to the base class and call the overridden _read internally
22:41 < Kakera> uh, I meant readUInt32LE, not writeUInt32LE
22:47 < aandy> Kakera: i see your point, but what's your use case? i mean, if you read a uint you want to store it, not "emit" it, wouldn't you?
22:48 < aandy> if you have some "stream" which omits offset and byte, you'd collect it to actually use it (by storing it in a buffer). or are you reading bigger chunks?
22:48 < slickplaid> Does anyone have a good solution for working with flat files as storage mechanisms? I have an app that is run by the user and we want to be able to save their work into files for portability. Any pre-/well-made solutions to save me some time?
22:49 < Kakera> aandy, yeah I just thought about it
22:49 < jacobolus> anyone recommend a good node restful http client (for any existing web API) that I should look at for inspiration in trying to write a new node client for an http service?
22:49 < jcrew> jacobolus: express works fine for restful services
22:49 < jacobolus> jcrew: I don't want to make a restful server
22:49 < aandy> Kakera: that being said, you *could* implement it rather simple in a Stream object (prototype)
22:50 < jacobolus> jcrew: I want to consume one from the client side, with node as the client
22:50 < jcrew> jacobolus: ahh, misread that
22:51 < Kakera> aandy, say you have a stream that you know will consist of one 32-bit int and two 16-bit ints
22:51 < slickplaid> I suppose nStore could work for it, just looking for other suggestions for flat files.
22:51 < Kakera> I want to feed the stream to some function that would callback with a parsed object
22:51 < Kakera> perhaps there is a module for that?
22:52 <@konobi> Kakera: ctype
22:53 < aandy> Kakera: so you'd always emit 3 numbers?
22:53 < Kakera> aandy, yes
22:54 < Kakera> konobi, I don't see that it supports streams
22:55 < aandy> wouldn't it be easier to do that manually? have a function readNextThree() { data = []; data.push(this.readUint32LE()); data.push(this.readUint16LE()); data.push(this.readUint16LE()); self.emit('new_trio', data); }
22:55 <@konobi> Kakera: um... it's a plain ol callback
22:55 < Kakera> aandy, it's a stream
22:56 < Kakera> in that case it's easier to just read 8 bytes and work with that
22:56 < aandy> that's what i'm trying to say
22:56 <@konobi> stream.on('data', function (d){ parser.readData(... 
22:57 < Kakera> I just found this http://bigeasy.github.com/node-packet
22:57 < Kakera> konobi, what if the chunk is incomplete
22:58 <@konobi> Kakera: then use a stream that buffers
22:58 < Kakera> konobi, but what if I have a really huge data structure? then it's better to start parsing what we already have rather than idle waiting for the whole thing to arrive
22:59 <@konobi> then split your parser into peices
23:00 < Kakera> well, the module I linked seems to make it simple
23:00 <@konobi> you'd still have buffering issues
23:01 < Kakera> why?
23:01 < Kakera> pipe the stream into the parser and let it handle it
23:01 <@konobi> oh... i see, it's handling it by implementing it as a stream/emmitter
23:01 <@konobi> then go nuts
23:02 < Kakera> it doesn't support 64-bit ints though :(
23:05 < Kakera> and I don't see how it could without bringing in any dependencies
23:06 < aandy> you're lucky to have clean data though. i don't need to worry about reading 64bit ints, because i have to parse the numbers myself ;>
23:10 < lateringame> Horray :) I think this is the biggest channel I know on IRC. Love you guys ^^
23:13 < aandy> lateringame: lol. you're welcome :p
23:16 < aandy> glad to see someone's happy to be alive post apocalypse
23:16 < jcrew> i had someone say to me earlier while we were correcting a problem "You know, we wouldn't be working on this if the world had ended"
23:17 < aandy> he said that as a bad thing or? ;)
23:17 < jcrew> he then proceeded to tell me he shaved just in case he had to report in upstairs so they wouldn't think he was lazy
23:17 < aandy> lol
23:18 < jcrew> upstairs being heaven
23:18 < jcrew> i thought it was a funny thing to say because the problem was a typo in an environment variable that took like 2 minutes to find
23:19 < aandy> plot twist: got sent upstairs and fired
23:20 < jcrew> he got fired for masking goatse and meatspin links with intranet urls
23:20 < jcrew> they rehired him because he said his dad was the owner of ninettendo
23:21 < aandy> ah, fair point
23:21 < jcrew> and that he had their ip addresses so he knows where they live
23:22 < aandy> jokes on him, 'cus i use proxy
23:22 < aandy> but jokes on my, because he uses reverse proxy
23:22 < aandy> all in all, a good bloke
23:22 < jcrew> he said he hacked into your facebook account
23:22 < jcrew> so he knows everything
23:22 < jcrew> you guys are practically one
23:23 < aandy> well, as long as he hasn't gotten my g+ profile
23:24 < aandy> have fun celebrating my friends birthdays and liking a bunch of cat pics
23:24 < jcrew> he deleted the cat pics and put up chocolate labs
23:25 < aandy> hmpf
23:49 < scottcorgan> Anyone have any references to articles that explain why JSON.parse is blocking?
23:51 < samholmes> Could I get some advice on how to do something?
23:51 < ljharb> scottcorgan: because it can throw an exception, and there's no official JS pattern for error handling besides that.
23:52 < samholmes> It involves dnode, shoe and express.
23:53 < scottcorgan> ljharb: how would one go about handle parsing json without blocking?
23:53 < samholmes> I have a module/file that exports an event emitter that allows controller files to listen on an event when content is created (through HTTP with express on top).
23:54 < ljharb> scottcorgan: function (foo, callback) { var error = null, data; try { data = JSON.parse(foo); } catch (ex) { error = ex; } callback(error, data); }
23:54 < ljharb> scottcorgan: same way you turn any blocking operation into an async one
23:55 < samholmes> When an event is emitted from this model, a controller file captures the event and then emits an event on an emitter exposed through dnode.
23:55 < scottcorgan> ljharb: ah yes, thank you. Duh!
23:55 < samholmes> Remote connections to the server can listen on this dnode emitter and thus receive the content in real-time.
23:56 < samholmes> However, the problem I'm facing with this design is that not all remote connections should be able to receive the same content in real-time.
23:57 < substack> it's probably not great to expose event emitters over dnode
23:57 < samholmes> substack: It appears to have memory issues.
23:58 < samholmes> substack: But how else would I design a real-time pub-sub type of system on top of dnode?
--- Log closed Sat Dec 22 00:00:03 2012
