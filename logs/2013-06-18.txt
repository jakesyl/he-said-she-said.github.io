--- Log opened Tue Jun 18 00:00:17 2013
--- Day changed Tue Jun 18 2013
00:00 <@xyxne> :)
00:00 < Zolmeister> overra: install linux....
00:00 < overra> this isn't for me :)
00:01 < overra> im on osx and i use debian for servers. someone was having issues with a change i made to something, it wouldn't work in windows but works in osx and linux
00:02 < Zolmeister> overra: ah, did you tell them to install linux? (jk, I get it)
00:02 < overra> lol :)
00:04 < overra> anyone else get the new github "repository next"?
00:05 < Zolmeister> overra: yeah, I think it's awful
00:05 < Zolmeister> my biggest issue is the location of the git urls
00:05 < overra> that
00:05 < overra> exactly
00:05 < Zolmeister> and they got rid of the ssh url
00:06 < overra> there are ssh urls on repos you own
00:07 < williamcotton> Zolmeister: the whole point of the redesign was to get those GIT urls out of the way :)
00:07 < Zolmeister> williamcotton: yeah, but why?!
00:07 < williamcotton> but yeah, I dunno if that is a good idea or not
00:07 < dcbartlett> add functionality without removing functionality
00:07 < dcbartlett> >.>
00:07 < williamcotton> it's sort of pointless once you've got that repo locally, you know?
00:08 < dcbartlett> well
00:08 < dcbartlett> i did learn something
00:08 < dcbartlett> if you git clone
00:08 < dcbartlett> with the http address
00:08 < dcbartlett> and then you gain ability to push/pull
00:08 < williamcotton> those URLs are only really necessary for brand new repos
00:08 < dcbartlett> it won't push properly over the http url
00:08 < Zolmeister> williamcotton: but its the most important part of the repo! I don't event care about seeing the code, I just want to see the readme and the clone url.
00:09 < williamcotton> Zolmeister: yeah, for repos that are new to you, that is what you want to see
00:09 < williamcotton> but for repos that you already work with, you don't need those front and center
00:09 < williamcotton> and that was their motivation
00:09 < williamcotton> I dunno if I agree, though, haha
00:09 < williamcotton> because personally, I think discovery of new code is something I do a LOT more than interact with my existing repos
00:10 < Zolmeister> its the whole point of github
00:10 < Zolmeister> (open source sharing + discovery)
00:11 < williamcotton> ok, where do we march with our burning torches?
00:11 < overra> lol
00:11 < williamcotton> are you in SF? we could just march over there
00:11 < dcbartlett> over in #github
00:11 < dcbartlett> heh
00:11 < williamcotton> steal all of their whiskey
00:15 < williamcotton> ok
00:15 < williamcotton> here's what was said: "you can just use the URL bar"
00:15 < williamcotton> like, your URL bar in your browser
00:15 < williamcotton> which is a good point
00:15 < williamcotton> haha
00:15 < overra> lol
00:16 < williamcotton> because yeah, it's the same friggen thing
00:18 <@xyxne> ugh
00:18 < darkPassenger> ah man im doing an ajax request and it return an empty responseText (even tho I get 200 and readyState 4)
00:18 <@xyxne> git clone via http is bs
00:18 < darkPassenger> i don't know what to do what could be good debugging steps ? 
00:19 < darkPassenger> i use chrome btw, and the ajax request is done on /url from localhost
00:19 < s5fs> xyxne: for why?
00:20 <@xyxne> s5fs, I always have to type in my username/pass 
00:20 <@xyxne> even if I have my github key on my agent
00:20 <@xyxne> whereas if I use git urls I have no problem
00:24 < s5fs> xyxne: yeah, that is annoying esp since i don't know your password
00:24 <@xyxne> oh it's easy, I use a formula for determining the password of a given service
00:25 <@xyxne> once you know my formula you can pretty much get into anything I have an account for
00:25 < s5fs> hang on, i'm getting a pencil
00:25 < s5fs> "the algorithm is based on how I felt at the time of the pwd creation, the cycle of the moon and the number of red skittles in the last bag I ate"
00:26 <@xyxne> depressedwaningtwelve
00:26 < s5fs> all the "e"s are 3s
00:26 <@xyxne> d3pr3ss3dw4n1ngtw3lv3
00:27 < s5fs> haha, perfect
00:27 < s5fs>  /l33t
00:27 < s5fs> yay i have ssh-keygen now on angstrom! time to key all the things
00:27 < rook2pawn> is there a way to unnattach the http server parser ondata?
00:28 < rook2pawn> specifically around line 342 https://github.com/joyent/node/blob/master/lib/_http_server.js
00:32 < darkPassenger> i cant seem to be able to pass variable from server-side to client-side 
00:35 < firebalrog> deployed a site on azure with node for a hackathon Saturday did pretty well given the short time.
00:52 < jasonkuhrt> I'm having trouble with ECONNRESET errors stemming from TCP.onread
00:52 < jasonkuhrt> I've read through https://groups.google.com/forum/?fromgroups#!topic/nodejs/Sc-_U-aoMsU
00:52 < jasonkuhrt> but it doesn't seem too helpful
00:53 < jasonkuhrt> I will definetely add error handlers to the streams and try using domains
00:53 <@isaacbw> does anyone know the format of the apple terminal config's <data> element for colors?
00:53 <@isaacbw> damn apple doing some crazy stupid shit
00:53 < jasonkuhrt> but anything else I should know
00:54 <@isaacbw> domains are for crazy people
00:54 -!- mode/#Node.js [+o TooTallNate] by ChanServ
00:55 < tim_smart> whois isaacbw 
00:56 < overra> isaacbw: talking about the stuff like "<62706c69 73743030.... "?
00:57 < dcbartlett> !whois isaacbw 
00:57 < dcbartlett> darn
00:58 < myndzi> wtf
00:58 < myndzi> util.inspect is giving me [object Object]
00:58 < tim_smart> I was wonder if it was an alias for isaacs :)
00:58 < myndzi> any idea why that would be? node 0.8
00:58 < ckknight> tim_smart: it's not
00:58 < dcbartlett> myndzi, how are you using it?
00:58 <@isaacbw> overra: the thing that looks like a digest
00:58 < myndzi> console.log(util.inspect(res));
00:58 <@isaacbw> why are people looking at me
00:58 <@isaacbw> STOP LOOKING AT ME
00:59  * ckknight stares intently
00:59 < dcbartlett> myndzi, that is an object
00:59 < dcbartlett> >.>
00:59 < myndzi> ?
00:59 < dcbartlett> does not util.inspect give you an object?
00:59 < dcbartlett> hum
00:59 < ckknight> it should give a string
00:59 <@isaacbw> wait, maybe it's just a hex color code for some crazy truecolor terminal
00:59 < ckknight> return*
01:00 < dcbartlett> humn
01:00 <@isaacbw> no, no it isn't
01:00 < myndzi> http://nodejs.org/docs/v0.8.9/api/util.html#util_util_inspect_object_showhidden_depth_colors
01:00 < myndzi> default is to recurse twice, but using (res, false, null) doesn't help
01:01 < myndzi> node -v : v0.8.9
01:01 < dcbartlett> > console.log(util.inspect("test"))
01:01 < dcbartlett> 'test'
01:01 < dcbartlett> hum
01:01 < myndzi> 0.8 branch has gone a ways since this one but it doesn't strike me as a version problem
01:01 < dcbartlett> yeah so
01:02 < dcbartlett> with that logic, i guess something funcky is going on
01:02 < dcbartlett> lol
01:02 < dcbartlett> console.log(res)
01:02 < dcbartlett> what does that give you?
01:03 <@isaacbw> it's base64
01:03 < myndzi> [object Object]
01:03 < myndzi> which is why i tried to use util.inspect :P
01:03 < myndzi> from the repl it works okay
01:03 < myndzi> o_O
01:03 <@isaacbw> why would you need base64 for a color value
01:03 < anonymous> isaacbw: what are you looking at again?
01:04 < dcbartlett> myndzi, what SHOULD res be
01:04 < myndzi> database results
01:04 < dcbartlett> i spose would be a better question
01:04 < dcbartlett> lol
01:04 < dcbartlett> so an object
01:04 < dcbartlett> ok
01:04 < myndzi> i tried logging arguments with the same problem
01:04 < myndzi> i literally just started this script
01:04 < myndzi> all it does is connect to mysql and issue a query
01:04 < myndzi> this is the callback to that
01:04 <@isaacbw> anonymous:  amac os x terminal plist file
01:04 <@isaacbw> *a mac
01:04 < dcbartlett> try console.log(" " + res)
01:05 < dcbartlett> see what happens
01:05 < anonymous> issacbw: the colors are binary data archives of NSColor objects
01:05 < myndzi> [object Object]
01:05 < myndzi> :\
01:05 < dcbartlett> i think that might fail
01:05 < dcbartlett> heh
01:05 < dcbartlett> hum
01:05 < myndzi> i don't know why console.log(arguments) fails
01:05 < myndzi> this is really weird
01:05 <@isaacbw> anonymous: oh, beautiful. Thank you!
01:05 < myndzi> maybe i should just upgrade and hope the reinstall helps
01:05 < dcbartlett> mind sharing your cade with me?
01:05 < dcbartlett> hastebin.com or somehting
01:06 < anonymous> isaacbw: You're welcome. I'm not sure how they are archived … possibly with NSKeyedArchiver, maybe just NSArchiver.
01:06 < myndzi> http://pastebin.com/LEAS0eLs
01:06 <@isaacbw> anonymous: I think I'm just going to give up being able to use it
01:07 < myndzi> for what it's worth, heh
01:07 < dcbartlett> should adopt hastebin.com
01:07 < dcbartlett> its cleaner
01:07 < dcbartlett> :D
01:07 < myndzi> yeah but it has a weird interface so i don't know what it's going to do yet :P
01:07 < dcbartlett> easy
01:07 < dcbartlett> pop in code
01:07 < dcbartlett> save
01:07 < dcbartlett> change .ext for syntax highlighting
01:07 < dcbartlett> :D
01:07 < myndzi> i don't want some autosaving thing etc.
01:07 < dcbartlett> they expire after 30 days
01:07 < myndzi> i mean autosave as you input
01:07 <@isaacbw> anonymous: do you know if someone on a mac os x box would be able to import it and then export it to something more sane? I'm just trying to get at the color scheme
01:07 < myndzi> it looked like it might be that kind of thing
01:08 < myndzi> anyway
01:08 < dcbartlett> its not
01:08 < dcbartlett> i use it all the time
01:08 < dcbartlett> it doesn't save as you type
01:08 < dcbartlett> you have to manually save
01:08 < myndzi> good to know
01:08 < anonymous> @isaacbw: yea,  a mac dev could … what format are you looking for?
01:09 < dcbartlett> wait
01:09 < ssafejava> Is there a good reason for an API to throw a status code in the response body and return 200 OK for every request, instead of using the status codes properly?
01:09 < myndzi> i wish there was a way to get a .tar.gz link when browsing windows from github :\
01:09 < dcbartlett> your callbacks are tossing res as the first argument, rather than err?
01:09 <@isaacbw> anonymous: just any sort of color code so I can add the colors to my .Xresources
01:09 < myndzi> facepalm..
01:09 < myndzi> it should still output something though
01:09 <@isaacbw> anything but this binary serialization of an objective-c object :P
01:10 < pirho> ssafejava: JSONP
01:10 <@isaacbw> otherwise I can probably harvest something from this screenshot of the scheme using a color picker
01:10 < myndzi> okay
01:10 < myndzi> i guess that was the output of 'throw err'
01:10 < myndzi> god knows why
01:10 < pirho> but ideally the API will not fall into a JSONP compatible mode unless the requests have something like ?callback= or ?jsonp
01:10 < dcbartlett> myndzi, if res (the first argument) is empty
01:10 < dcbartlett> it will just say object
01:10 < dcbartlett> heh
01:10 < myndzi> it had to be something stupid like that, thanks :P
01:10 < dcbartlett> np
01:10 < ssafejava> pirho: Ah, if it's returning JSONP, does it need to always throw 200s?
01:10 < anonymous> @isaacbw: give me a few minutes .. I'll see if I can whip something up
01:11 < pirho> ssafejava: most of the time,ye s
01:11 <@isaacbw> anonymous: oh man, thank you so much
01:11 < pirho> ssafejava: 200s are the lowest common denominator for JSONP clients
01:11 < pirho> ssafejava: i have a good article, sec
01:11 < ssafejava> thanks pirho
01:12 < pirho> ssafejava: don't take this as gospel but it's very good http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api
01:12 < myndzi> i guess that's the downside of working with promises for the past months haha
01:12 < myndzi> on track again!
01:14 < dcbartlett> myndzi, yeah, i like promises too
01:16 -!- mode/#Node.js [+o TooTallNate] by ChanServ
01:18 <@isaacbw> anonymous: I'm having some luck with the color picker
01:19 < ssafejava> Thanks for the link. Looks like the gospel is, throw real codes, throw codes in body if possible to support JSONP
01:59 < Zolmeister> If I want to apply the GPL v3 license to my source code, is it ok to just have it in a LICENSE file, or is it (legally) necessary (as the say on the site) to have it in all source files (seems a bit much)?
02:04 < sitapati> Zolmeister: peeps usually just put it in as a header comment in source files
02:04 < Zolmeister> sitapati: yeah... but I have a lot of files
02:05 < Bascka> Does anybody know if any http proxy supports "chaining" and if so, how does the request header look like?
02:10 < doomlaptop> when using sockets with express, it is intentional that with every request a new socket connection is made and thus changing the socket id?
02:11 < s5fs> doomlaptop: that's been my experience as well
02:11 < doomlaptop> or i am doing something wrong and it should be persistent through-out the wbepage (even when user goes from page to page)
02:11 < insel> how and where can i set modules "global" ... on my local machine i dont need to install modules over and over... on my remote machine i have to
02:12 < doomlaptop> alright s5fs...so i'll just have to deal with it
02:12 < s5fs> doomlaptop: i believe you are doing it right. when i navigate from page-to-page I get a new socket as well
02:13 < doomlaptop> alright
02:13 < doomlaptop> yeah i mean, it's kinda logical isn't it
02:13 < s5fs> doomlaptop: i'm using sessions to keep track of which sio connection belongs to which user, etc
02:13 < doomlaptop> it really doesn't have anywhere to keep the socket
02:14 < s5fs> yup, no socket pocket to store it in
02:17 < doomlaptop> hm s5fs you using express?
02:18 < jasonkuhrt> should node.js domains catch TypeErrors?
02:18 < doomlaptop> ah nvm, figured it out
02:19 < s5fs> doomlaptop: yup
02:19 < jasonkuhrt> I am intentionally making some TypeErrors inside a domain but the domain is not catching it?
02:19 < s5fs> doomlaptop: i'm heading for home but feel free to ping me if you have questions. my solution wasn't elegant but does work, haha!
02:20 < jasonkuhrt> Same with a ReferenceError, if I trigger these errors inside a setTimeout everything works as expected
02:20 < jasonkuhrt> why is that?
02:20 < doomlaptop> hehe s5fs 
02:20 < doomlaptop> yeah thanks
02:20 < doomlaptop> i'll try to manage it tho, will go crab some Chinese from Chinatown and then back to coding
02:25 < jasonkuhrt> It seems the reason is that domains only consume event emitter errors, and certain callbacks like those to fs.* and setTimeout
02:25 -!- mode/#Node.js [+o TooTallNate] by ChanServ
02:25 < jasonkuhrt> so if I make a reference error inside a setTimeout callback it will be picked up by a domain
02:26 < jasonkuhrt> but not so if its not within an event emitter or callback
02:26 < jasonkuhrt> correct?
02:27 < kmiyashiro> that gif is terrifying
02:34 < timoxley> jasonkuhrt require('domain').create().on('error', function(err) {console.log('error', err)}).run(function() {undefined.call()})
02:35 < jasonkuhrt> timoxley: >error [TypeError: Cannot call method 'call' of undefined]
02:35 < timoxley> jasonkuhrt = it caught the error
02:35 < timoxley> jasonkuhrt doesn't work on 0.8 though
02:36 < jasonkuhrt> so my understanding is wrong
02:36 < jasonkuhrt> hm
02:37 < jasonkuhrt> when I try that in my app its not working:
02:37 < jasonkuhrt>     undefined.call();
02:37 < jasonkuhrt>               ^
02:37 < jasonkuhrt> TypeError: Cannot call method 'call' of undefined
02:38 < jasonkuhrt> based on this domain wrapping:
02:38 < jasonkuhrt>     d.bind(handleConnection).bind(this)(socket);
02:38 < jasonkuhrt> anything thrown within handleConnection should be caught by the 'd' domain yes?
02:39 < jasonkuhrt>   function handleConnection(socket) {
02:39 < jasonkuhrt>     undefined.call(); ...
02:39 < jasonkuhrt> unlike your snippet this undefined.call() crashes the process
02:41 < ChrisPartridge> brianc_: ping
02:46 < jasonkuhrt> hm, now its working....
02:46 < jasonkuhrt> I think .bind(this) was screwing things up
03:53 < ChrisPartridge> isaacbw: http://i.imgur.com/zi60Pb5.jpg
04:30 < plops> Hello
04:32 < plops> hello
04:35 < othiym23> WHOOOOS SUPER EXCITED ABOUT NODE CONF
04:35 < othiym23> I'LL GIVE YOU A HINT: WHOEVER IT IS REALLY LIKES CAPS
04:36 <@mbalho> HINT ABOUT WHAT
04:36 < othiym23> HINT ABOUT WHOS EXCITED ABOUT NODECONF WHOOOOO
04:36 < ningu> "hint" means "dogs" in Yiddish
04:37 < plops> hellp
04:37 < othiym23> ningu: noted
04:37 < Havvy> Guess who isn't excited by node conf.
04:38 < othiym23> Havvy: is it you?
04:38 < Havvy> Ding ding ding. We have a winner. Get this guy a ticket to Node Conf as a prize!
04:39 < othiym23> but... but... I already have one
04:39 < Havvy> Alright....change of plans. Get this guy a hug!
04:40 < othiym23> yay hugs!
04:40 < othiym23> I like hugs
04:40 <@mbalho> if you show up to nodeconf they wont turn you away, just bring a tent and some food
04:40 <@mbalho> #protip
04:41 < plops> hi
04:41 < ningu> plops: if you want help you should say what for
04:41 < ningu> or you could just leave, that works too
04:42 < Havvy> ningu: You have no clue how many people I've seen do that.
04:42 < ningu> Havvy: leave IRC? 
04:42 < Havvy> But then I'd miss all the fun.
04:42 < ningu> no, I meant how many people you've seen do what, leave IRC?
04:43 < Havvy> Oh.
04:43 < Havvy> Hundreds.
04:43 <@mbalho> plop your question down
04:43 <@mbalho> yar har har
04:43 < Havvy> Say hi in a support channel, or ask for help, and then leave within a minute.
04:45 < ningu> otoh, I've asked a question in a dead channel and left it open for hours and come back to find no one else said anything at all
04:45 < ningu> #lucene was like that
04:45 < ningu> wait... did irc invent hashtags?
04:45 < doomlaptop> s5fs got my implementation working fine... using userId instead of sessionId tho
04:46 < doomlaptop> userId from database then
04:46 < ningu> plops: it helps to stay in here if you have a question
04:47 < maxDemian> Hi all
04:51 < plops> Hi!!
04:51 < maxDemian> I am doing an ajax request to a localhost/url which send a post and get the results back, now I would like to send it back to the client , and I don't know how. I have tried res.send(); res.end(); 
04:51 < maxDemian> i think im missing something 
04:52 < maxDemian> the post is sent to an external server on the web
04:52 < maxDemian> and the data im getting is html 
04:52 < ningu> maxDemian: is the post request going to your node server or are you doing it from your node server?
04:53 < maxDemian> the client ajax to node server , node server send a post to external web server and get html from it 
04:53 < maxDemian> so im doing it from the node server, 
04:53 < ningu> maxDemian: the easiest way is probably if you use mikeal's request module.
04:53 < ningu> you would do request(...).pipe(res);
04:53 < maxDemian> i can console.log(htmlResponse) no problem and i see the result, but i can't ssend it back to the client. 
04:54 < ningu> maxDemian: you can do it with your own code too, of course. if you gist it we can take a look
04:54 < maxDemian> sure, ill try to get the most significant snippet
04:54 < maxDemian> so how does it work, pastebin ? 
04:54 < ningu> sure
04:54 < maxDemian> mind private ? 
04:55 < ningu> paste the link in the channel
04:55 < ningu> it's better if everyone can see and learn and/or comment
04:56 < perezd> are there any perf numbers comparing haproxy or nginx proxying to the stdlib cluster module?
04:56 < ningu> perezd: huh? those do two very different things
04:57 < perezd> request proxying?
04:57 < ningu> the cluster module is to make use of multiple cores
04:57 < perezd> yes
04:57 < perezd> and if I use haproxy
04:57 < perezd> I can make use of multiple cores
04:57 < perezd> by running n independent node instances
04:58 < ningu> oh, ok. that makes sense now :)
05:00 < faceleg> how would one deploy multiple node apps on a single server, similar to how one can with php+apache?
05:00 < harbhub> easy
05:01 < harbhub> well, i use nodejitsu for my server
05:01 < faceleg> also ensuring that any node app that crashed was automagically restarted
05:01 < harbhub> you can use child_process
05:01 < harbhub> you can use nodemon and forever
05:01 < faceleg> is that with nodejitsu's sercver?
05:01 < ningu> faceleg: forever to keep them running, bouncy/nginx/haproxy/etc. to route the requests to the right app
05:01 < harbhub> to make sure when they crash it restarts
05:01 < faceleg> i awnt this for a custom  server i control 
05:01 < ningu> faceleg: then do it my way :P
05:01 < faceleg> i want to move me team @ a standard web studio to node
05:01 < harbhub> do it the way we are saying
05:01 < faceleg> yeah i hear you
05:01 < harbhub> use forever to keep shit running
05:02 < ningu> faceleg: I use nginx, but I don't have a strong opinion on what you should use. nginx works fine
05:02 < ningu> but other stuff works fine too
05:02 < harbhub> ningu, can you use node to route requests?
05:02 < faceleg> ngnx sounds good to me, it is what i imagined using
05:02 < harbhub> instead of nginx
05:02 < ningu> harbhub: yes, with bouncy
05:02 < harbhub> okay cool
05:02 < harbhub> faceleg
05:02 < faceleg> i was more asking if there is 'a standard' 
05:02 < faceleg> harbhub: 
05:02 < harbhub> nginx is pretty standard
05:02 < ningu> faceleg: proxy_pass, include proxy_params
05:02 < ningu> there are a million tutorials
05:02 < harbhub> that is what the people at linked in use
05:03 < ningu> faceleg: you can also have multiple upstream servers and use nginx as a load balancer, if you want
05:03 < harbhub> unless they changed it by now heh
05:03 < faceleg> is there a comon guide
05:03 < faceleg> do you have a link to a good one?
05:03 < faceleg> oh yeah
05:03 < faceleg> this is still in planning stages, we're a ph shop atm. but thing is i'm lead dev and i loath php
05:03 < harbhub> i mean honestly i would use node.js to load balance
05:03 < harbhub> just have a main gateway and point to different servers to handle requests (like a round robin)
05:04 < faceleg> ngnx better for the static files?
05:04 < ningu> faceleg: this looks comprehensive, http://blog.argteam.com/coding/hardening-node-js-for-production-part-2-using-nginx-to-avoid-node-js-load/
05:04 < ningu> faceleg: if yu want simple there may be others
05:04 < faceleg> guys none of these sites will need multiple machines
05:04 < harbhub> same app(s) on each server, just round robin the requests
05:04 < faceleg> these are like
05:04 < harbhub> that is what nodejitsu does
05:04 < faceleg> small e commerce stores or brochure sites 
05:04 < harbhub> then you don't need a load balancer
05:04 < faceleg> i think most is ~8 hits a second peak
05:04 < faceleg> no 
05:04 < faceleg> i never said I did :P
05:04 < harbhub> lol
05:04 < harbhub> okay
05:04 < harbhub> well we didn't know
05:04 < ningu> faceleg: that guide looks like it covers all the bases for nginx
05:04 < harbhub> you made it sound like this was a bigger project heh
05:05 < harbhub> at least i took it that way, anyways
05:05 < harbhub> just make an http server
05:05 < faceleg> I just needed to know how people handle deployment of multiple node sites on a single serber
05:05 < ningu> faceleg: and here's the minimum, http://www.nginxtips.com/how-to-setup-nginx-as-proxy-for-nodejs/
05:05 < harbhub> and handle the requests
05:05 < harbhub> faceleg it is really easy...
05:05 < ningu> well, you run them on different localhost ports
05:05 < ChrisPartridge> https://github.com/observing/balancerbattle
05:05 < harbhub> you have the request coming in, right?
05:05 < ChrisPartridge> relevant ^
05:05 < faceleg> each app[ needs to be totally seperate in case client packs sad and demands we send them zip of code so they can find differen studio
05:05 < harbhub> that request has data
05:05 < faceleg> it happens
05:05 < harbhub> it includes the domain name that sends it
05:05 < faceleg> harbhub ningu I appreciate teh links 
05:06 < ningu> faceleg: you route based on the domain or based on the url path or both
05:06 < harbhub> i don't have links this is just super basic node.js
05:06 < harbhub> built in to the http module
05:06 < harbhub> request.headers.host
05:06 < faceleg> i believe it is easy (node is like a dream) but there aer so many guides one can easily waste hours on a dumb on
05:06 < harbhub> you handle each host by pointing to whatever is relevant to that app
05:06 < harbhub> ningu and i are saying the same thing heh
05:07 < harbhub> just handle the requests as they come
05:07 < harbhub> if a request comes for domainname1.com
05:07 < faceleg> yep
05:07 < harbhub> then do whatever you want
05:07 < faceleg> well, just like apache-php
05:07 < harbhub> if it comes for domainname2.net then handle it appropriately
05:07 < faceleg> only not a million years old and horrible
05:07 < faceleg> yep
05:07 < harbhub> so you can do that with the http module
05:07 < faceleg> i can't fucking wait to become a node shop
05:07 < harbhub> lol
05:08 < harbhub> it will take some time to adapt to the environment
05:08 < faceleg> I'd feel more comfortable with ngnx, don't know why
05:08 < faceleg> not for me
05:08 < harbhub> unless you are really familiar with asynchronous programming
05:08 < faceleg> for the peons
05:08 < faceleg> who only know ophp
05:08 < faceleg> I'm familiar with all of the programming
05:08 < faceleg> :P
05:08 < harbhub> well take some time playing with the core node modules
05:08 < harbhub> path, http, os (i like checking my operating system statistics), etc
05:09 < faceleg> i'm not a node newb
05:09 < harbhub> var fs = require('fs');  that is a powerful module
05:09 < faceleg> i just haven't used it in production
05:09 < harbhub> oh well okay then you should be good to go
05:09 < faceleg> i maintain nodegit
05:09 < ningu> faceleg: yeah, just mess with it a little
05:09 < harbhub> if you want a static file server
05:09 < ningu> it is really easy like harbhub is saying
05:09 < harbhub> make sure you handle the headers
05:10 < faceleg> yeah, just haven't used it asa
05:10 < faceleg> replacement for apache-php 
05:10 < faceleg> which is the goal for this year
05:10 < faceleg> been using express, doesn't that do this?
05:10 < harbhub> also, don't be afraid to try out modules by the community
05:10 < harbhub> express is a framework
05:10 < ningu> faceleg: doesn't it do what?
05:10 < faceleg> and if I were to use ngnx for static then wouldn't it handle them?
05:10 < faceleg> lol
05:10 < faceleg> yes it is
05:10 < harbhub> i personally like to avoid frameworks
05:11 < faceleg> i find express light enough
05:11 < faceleg> i have tried 4
05:11 < ningu> faceleg: it receives the requests but you need to add a couple headers from nginx or whatever is proxuing
05:11 < harbhub> yeah i just made my own file server lol
05:11 < ningu> proxying
05:11 < harbhub> it taught me a lot
05:11 < harbhub> especially handling range headers correctly
05:11 < harbhub> so you can use node-static
05:11 < faceleg> mkaing relatively basic client sites i don't imagine i will be pushing into that sort of territory
05:11 < harbhub> or express or whatever
05:12 < faceleg> yeah
05:12 < harbhub> you could go rogue like me
05:12 < harbhub> and use core node modules
05:12 < faceleg> i'm familar with node and the general tools
05:12 < faceleg> lol
05:12 < harbhub> it takes some time but you really get to know node better
05:12 < faceleg> ningu: tell him i'm not a noob 
05:12 < ningu> haha
05:12 < ningu> he is not a noob
05:12 < harbhub> lol
05:12 < faceleg> lol
05:13 < faceleg> i really do appreciate the advice and links though, save me hours of sifting
05:13 < faceleg> and i agreee with not needing a framework
05:13 < faceleg> but for what i'm doing express covers most of the fundametnals that i need
05:13 < harbhub> i don't have anything against them, i just like doing things my way
05:13 < ChrisPartridge> ningu: still using postgres?
05:13 < faceleg> without forcing me to do anything hack,y
05:14 < faceleg> yeah i understand completly
05:14 < ningu> ChrisPartridge: yep, how come?
05:14 < ChrisPartridge> ningu: doing backups at all?
05:14 < ningu> just sql dumps
05:15 < ChrisPartridge> ningu: if you want to do PITR, check out 'walter' in npm - its pretty much heroku's wal-e in node
05:15 < ningu> cool
05:15 < ningu> but the thing that really needs backup is not a node app, will that matter?
05:15 < faceleg> do you guys know of any web studios using node for general client work?
05:15 < ningu> I suppose not
05:16 < ChrisPartridge> ningu: it is just a node cli tool
05:16 < ChrisPartridge> which you use with cron/postgres archive commands
05:17 < harbhub> what type of work faceleg?
05:18 < faceleg> harbhub: i mean studios like: http://www.panmedia.co.nz/
05:19 < faceleg> mainly domiated by php/rails curretly, but I feel node is well suited to this sort of environment
05:20 < harbhub> i don't know
05:21 < faceleg> neither
05:21 < faceleg> studios don't usually broadcast what they use
05:22 < faceleg> it just interests me is all
05:22 < ningu> someone should rewrite "long black veil" as "ruby on rails"
05:22 < faceleg> node might be seen as scary and new to those places
05:22 < harbhub> what are you trying to do exactly?
05:22 < faceleg> i want to use node instead of php
05:22 < faceleg> because i strongly dislike the latter
05:22 < ningu> why not django? :P
05:23 < faceleg> because i have no experience with python nor the desire to learn it
05:23 < faceleg> whereas i have loads of xp with js
05:23 < faceleg> and enjoy the language greatly 
05:23 < harbhub> well you can open a websocket with node for bilateral communication, you can push messages to the client from the server, you can send ajax requests from client to the server
05:23 < harbhub> all in javascript
05:23 < faceleg> i know htis
05:23 < ezkl> http://clock.co.uk/ use quite a bit of node
05:24 < harbhub> linkedin.com uses node
05:24 < harbhub> nodejitsu uses node, windows is starting to like node with azure
05:24 < faceleg> yeah
05:24 < faceleg> it is a train i want to e on
05:24 < faceleg> be*
05:24 < harbhub> if you are wondering if node is production ready, then the answer is yes
05:24 < faceleg> and as i work in a web studio
05:24 < plops> myspace use nodejs
05:24 < faceleg> no I'm not wondering this
05:24 < ningu> are there any trains in NZ?
05:25 < faceleg> yeah actaull
05:25 < faceleg> btw ningu i got that job & moved city, i acctaully take train to work now
05:25 < ezkl> faceleg: Do yourself a favor and learn how to develop software, not how to write apps in any one language
05:25 < faceleg> sighj
05:25 < ningu> faceleg: like a subway, or a real train?
05:25 < plops> ningu: guach!!!
05:26 < faceleg> ezkl: i actually know how to do this, i am asking these questions in relation to my current position, which is as a web developer
05:26 < doomlaptop> ningu you'll surely find work when you know how to nodeJS 
05:26 < ningu> eh?
05:26 < harbhub> yeah i mean knowing just node.js and javascript is like knowing just asp.net and csharp
05:26 < ningu> doomlaptop: do you have me confused with someone else?
05:26 < ningu> I do know node.js, and I've found work
05:26 < faceleg> why assumin I know only php and js?
05:26 < doomlaptop> ningu yes..i actually am
05:26 < harbhub> ningu, what work do you do?
05:26 < doomlaptop> sorry about that
05:27 < ningu> harbhub: it's a bit hard to summarize, so: panlex.org
05:27 < ningu> harbhub: I designed their public api among other things
05:27 < ezkl> faceleg: Right on. I'm not trying to be a jerk. Just passing on some good advice that was given to me. 
05:27 < faceleg> appreciated
05:27 < harbhub> ningu, english will be the global language.  end of discussion
05:27 < ningu> harbhub: if that's your attitude then, indeed, we have nothing to discuss
05:27 < faceleg> stressed lately and have short fuse
05:27 <@mbalho> lolz
05:27 < faceleg> @ ezkl 
05:27 < harbhub> i'm also not making assumptions, i'm just agreeing that people should know multiple languages
05:28 < plops> faceleg See, I'm an artist and I do make art on the web. When I wanted to do something catenin to ask a scheduled if nodejs could now, I can do what I want without having anyone to aldo mine :)
05:28 < harbhub> well, if you disagree with my premise, then we have something to discuss
05:28 < ningu> harbhub: what is your premise?
05:28 < harbhub> but if you also think English is the global language, then we agree on that point
05:29 < harbhub> Premise 1:  English is the global language
05:29 < ningu> harbhub: you said "will be"
05:29 < faceleg> i COULD NOT AGREE MORE. 
05:29 < harbhub> Conclusion:  English is the global language
05:29 < ningu> harbhub: anyway, I'm not sure exactly what "the global language" means but sure, if anything meets that definition currently, it's English.
05:29 -!- mbalho changed the topic of #Node.js to: node.js - javascript is the global language - http://nodejs.org -  http://logs.nodejs.org - http://stackoverflow.com/questions/tagged/node.js
05:30 < faceleg> my team here knows php only, it is ghastly
05:30 < plops> ajaja!! yeah maracuyea!! Aunque se hable mas el español :P
05:30 < harbhub> your website pan is about global languages
05:30 < ningu> mbalho: haha
05:30 < harbhub> i speak some spanish
05:30 < faceleg> please don't
05:30 < ningu> harbhub: you misunderstood it if you think it's about global languages
05:30 < faceleg> hey guys start an argument
05:30 <@mbalho> harbhub: did you try reading about the project before declaring your opinion?
05:30 < ningu> harbhub: anyway, it isn't even my project, I just work for them.
05:30 < faceleg> lol
05:31 < harbhub> nope i read about mandarin english etc being possible global languages
05:31 < ningu> harbhub: not that I am opposed to it or anything. just saying it isn't my particular vision
05:31 < harbhub> then i stopped reading lol
05:31 <@mbalho> tl;dr lolol
05:31 < harbhub> mbalho, so yes i tried reading it
05:32 < harbhub> didn't get very far in though
05:32 < ezkl> The Long Now Foundation is the truth.
05:32 < ningu> the node.js api is at http://dev.panlex.org/api/
05:32 < ningu> rather: the node.js coded api, it's a general api.
05:33 < harbhub> i'm not sure i see the point of multiple languages
05:34 < harbhub> at some point we could just make one really good language that is "turing complete" hehe
05:34 < ningu> harbhub: do you see the point of multiple programming languages, for example?
05:34 < ningu> how about multiple countries and governments?
05:34 < ningu> the latter is actually much more relevant
05:34 < faceleg> lol wtf
05:34 < harbhub> heh
05:34 < harbhub> well the thing with language
05:34 < faceleg> "see the point of multiple languages"
05:34 < plops> lol
05:34 < faceleg> r u 4 real
05:34 < faceleg> how about 
05:35 < ningu> faceleg: actually, it's a pretty basic divide between the people who "see the point" and those who don't
05:35 < faceleg> the languages you know effect how you think, and what concepts you can entertain
05:35 < ningu> I have no idea what the percentages are, most people just haven't thought about it
05:35 < faceleg> i proved this to myself when i learned chinese, then some latin
05:35 < faceleg> languages are fundamental to thought
05:35 < plops> ok... faceleg great point!
05:35 < ningu> faceleg: that's more on the right track, although I'd rather not say people *can't* think certain concepts
05:36 < ningu> in any case it's a fundamental artifact of a given human society
05:36 < harbhub> if you don't agree with my view point (before i even state my case) then ban me?  heh
05:36 < faceleg> ask any behaviourist and they'll tellyou that the best theory on thoght is that it is verbal behaviour where the subject is both the speaker and the listener
05:36 < faceleg> thus language
05:36 < ningu> so if you think knowing anything about cognition, or society, or history is important, you should want to at least know about languages
05:36 < faceleg> in many ways, language IS culture
05:36 < harbhub> cultural is not necessarily good
05:36 < faceleg> neither is chocolate
05:37 < harbhub> cultural relativism, for instance
05:37 < faceleg> mostly I hate french people
05:37 < harbhub> oh wait, i might get banned for know more philosophy principles than the person banning me
05:37 < harbhub> heh
05:37 < harbhub> sorry i think about morals
05:37 < ningu> harbhub: what exactly is the problem with cultural relativism, out of curiosity? I'm just wondering how you would state the case.
05:37 < harbhub> ah
05:37 < harbhub> finally someone to listen
05:37 < harbhub> my case:
05:38 < harbhub> according to cultural relativism, it is okay for someone to act a certain way if the culture accepts it
05:38 < harbhub> and different cultures accept different things
05:38 < harbhub> like:  marrying a 13 year old girl to some old guy
05:38 < ningu> harbhub: that isn't at all what cultural relativism means to me.
05:38 < harbhub> personally, i don't care where you are from and how your culture raised you
05:38 < harbhub> that is just wrong
05:38 < ningu> harbhub: what it means to me is that one should not assume there is an objective basis for what cultures are superior
05:38 < harbhub> same goes for having slaves
05:38 < harbhub> mistreating women
05:38 < harbhub> etc
05:39 < faceleg> i don't care about what you're talking about
05:39 < faceleg> but those things are wrong
05:39 < harbhub> that is my point
05:39 < plops> hardhub no culture is wrong, we must be very careful to say that
05:39 < harbhub> i disagree, and the world seems to disagree with you plops
05:39 < harbhub> hitler's culture in germany
05:39 < harbhub> was considered wrong
05:39 < harbhub> eugenics there etc
05:39 < snappy> Does anyone know how to enter the repl when loading a js file? I tried node -i file.js
05:39 < snappy> but it quits immediately
05:40 < harbhub> by giving cultures the right to state what is right/wrong, you end up with people justifying sick things
05:40 < harbhub> and that, in my opinion, is bad
05:40 < ningu> harbhub: so who decides?
05:40 < harbhub> i decide
05:40 < harbhub> because i am a kind person
05:40 < harbhub> with a good education
05:40 < plops> harbhub What you think is wrong, or that violates human rights, does not mean this bad, just that he has a position different from yours
05:40 < harbhub> i think certain things are objectively wrong
05:41 < ningu> harbhub: I probably have a very similar idea to you of what I think is right and wrong but I don't see how to justify that I should be the one to decide
05:41 < harbhub> i think we should be the ones to decide
05:41 < ningu> who is "we"?
05:41 < ningu> white people?
05:41 < harbhub> nope
05:41 < faceleg> i think we have the biggest And best guns
05:41 < harbhub> why would color of skin matter?
05:41 < harbhub> just smart people with good moral compasses
05:42 < plops> Indians living with loincloth, but this is not bad ????
05:42 < faceleg> also many of us have the belief that we are right because of christ
05:42 < harbhub> listen to my arguments
05:42 < ningu> harbhub: no one will ever agree on who those people are
05:42 < harbhub> mistreating women
05:42 < faceleg> bang!boom! send in the marines
05:42 < harbhub> marrying off young children to grown men
05:42 <@mbalho> can you guys join a channel like #offtopicdebates
05:42 < harbhub> hitler...
05:42 < ningu> haha
05:42 < harbhub> all those things
05:42 < faceleg> JSF away!
05:42 < plops> faceleg ... ok
05:42 < harbhub> nodejs is about community
05:42 < harbhub> we are building the morals of the community
05:42 < ningu> mbalho: I apologize for starting this, I didn't really mean to
05:42 < ningu> well, I didn't really start it
05:43 < ningu> I just linked to the site for where I work
05:43 < harbhub> i sort of kinda started it
05:43 < faceleg> white people dictate morals due to our technical and miliatary dominance
05:43 < harbhub> i can stop now if you guys want
05:43 <@mbalho> yes 
05:43 < ezkl> Godwin's Law.
05:43 <@mbalho> or take it elsewhere
05:43 <@mbalho> its scaring the children
05:43 < harbhub> what children?
05:43 < faceleg> i'm 12
05:43 <@mbalho> see
05:43 < harbhub> scared of a talk on morals?
05:43 < plops> mbalho have much reason!
05:43 < harbhub> heh
05:43 < harbhub> mbalho doesn't want morals to be discussed in node.js  o.0
05:43 < faceleg> my mum said you should watch your potty mouth
05:43 < faceleg> morals is a naughty word
05:43 < ningu> harbhub: you are not being persecuted
05:44 < ningu> you are acting like a troll even if you have a sincere position
05:45 < harbhub> how do i state my position without being a troll?
05:45 < harbhub> you might want to teach me this because it always happens
05:45 < harbhub> i get called a troll...
05:45 < faceleg> i agree with you
05:45 <@mbalho> harbhub: find a group of people that enjoys debating things as much as you do
05:46 < faceleg> but not htat cultural differences are wrong
05:46 < faceleg> just that wrong things are wrong
05:46 < harbhub> that is my point
05:46 < faceleg> and white peolpe should shoot the wrongdoers
05:46 < faceleg> or anyone witholding oil
05:46 < harbhub> mbalho, i thought node.js would enjoy an ethics debate heh
05:46 < plops> harbhub: ok... I'm from Colombia, a country of war, and people like you are seen daily, only 60 year defending ideals
05:47 < harbhub> people like me?
05:47  * CookieNomster looks again at channel name.
05:47 < CookieNomster> Hmmm...
05:47 < harbhub> hmmm
05:47 < faceleg> i've spent a bunch of time in china
05:47 < harbhub> plops i don't understand what you are trying to say
05:47 < faceleg> normal people there just don't care teh same way we do
05:47 < faceleg> he says you live in a fluffy world w
05:47 < harbhub> yeah, sorry channel, sorry for caring
05:47 < faceleg> apology accepted
05:47 < harbhub> i do live in a fluffy ass world
05:48 < harbhub> USA is fluffy as it gets
05:48 < faceleg> amnesty international called, they want their evangelist bak
05:48 < harbhub> i have a friend in Turkey, she is protesting there
05:48 < oceabreeze> `Guys codeenvy online ide supports express framework? Os should i just use pure node?
05:48 < CookieNomster> Now I'm wondering how this discussion started, but maaaaaaaan the scrollback is long. :P
05:48 < harbhub> and i consider that fluffy still
05:48 < harbhub> compared to serria
05:48 < faceleg> my extended family in china eat meat that may or may not ber absolutely carcinogenic
05:48 < myndzi> you guys everybody shut up. harbhub should totally be allowed to tell people they can't tell people what's right and wrong
05:48 < harbhub> oceabreeze, i use pure node
05:49 < ningu> CookieNomster: it isn't worth it
05:49 < faceleg> they take pork, soak it in lamb piss and sell it as lamb
05:49 < myndzi> it's not self-conflicted at all!
05:49 < myndzi> :P
05:49 <@mbalho> harbhub: the point of moderation in this channel is to keep it open and available for support, to make sure it is inviting
05:49 < faceleg> or bleach beef and sell it as pork
05:49 < plops> faceleg, I see no reason to fight or argue, let it go!
05:49 < oceabreeze> Cus my work pc is runing on win xp, and i have no access to virtual box and other fancy stuff
05:49 < faceleg> plops: yes
05:49 <@mbalho> harbhub: intense discussions about irrelevant topics can harm that goal
05:49 < faceleg> i'm out, thanks for the advice 
05:49 < faceleg> :)
05:50 < CookieNomster> So... what was that about again? :P
05:50 < CookieNomster> (Sorry! Sorry!)
05:50 <@mbalho> CookieNomster: it was about everything
05:51 < CookieNomster> Oh, but that's easy. The answer is 42.
05:51 < oceabreeze> Guys is there are any open source projects written in node.js which i can download and inspect, so i can get the idea of how stuff is done in node? I mean real world projects with auth etc
05:51 < harbhub> general moral principles
05:51 < harbhub> lol
05:51 < harbhub> oceabreeze
05:51 < harbhub> nodejitsu has lots of open source projects
05:51 < harbhub> they use a lot of that code in production even
05:51 < CookieNomster> oceabreeze: there are plenty of projects to look at, but I don't think there is a fixed way "how stuff is done" in node.
05:52 < CookieNomster> oceabreeze: I'd read the node API and look into streams. Streams are awesome.
05:53 < oceabreeze> Thanks, harbhub ill take a look. CookieNomster yea definitely, but i am expirienced rails developer, so i dont see myself reading all these "Jumpstart Node" books all over again
05:54 < oceabreeze> as i did with rails few years ago
05:54 < harbhub> i wouldn't read any books
05:54 < harbhub> think of a task:
05:54 < harbhub> what is your first task?
05:54 < harbhub> then try to make it happen, ask us questions
05:54 < harbhub> that is how i would suggest you learn node
05:55 < oceabreeze> yeh thats how it should be done :)
05:55 < CookieNomster> oceabreeze: certainly don't read books or tutorials. Just look at the current API. It tells you a lot about node.
05:55 < CookieNomster> oceabreeze: I'd definatly look at the `fs` and `net` at the very least.
05:56 < CookieNomster> (Geez. Definatly? Wow. Brainfart...)
05:56 < harbhub> fs is the most important module i suppose
05:56 < harbhub> look at http module too
05:56 < CookieNomster> Yes.
05:56 < harbhub> make your own module too
05:56 < harbhub> so you know how module works lol
06:00 < harbhub> later fellas
06:00 < harbhub> sorry for discussing morals with you
06:13 < othiym23> "beefd" is a much better target for a proof of work calculator than "00000"
06:14 < Trangar> 80085?
06:14 < jesusabdullah> maybe.
06:15 < CookieNomster> Anyone here using Drone.io for continous integration?
06:15 < jesusabdullah> unfamiliar. Link?
06:15 < CookieNomster> I just published a code coverage badge generator.
06:15 < othiym23> I woulda gone for "beefed" if crypto.createHash() weren't so goddamned slow
06:15 < CookieNomster> https://npmjs.org/package/coverage-badge
06:15 < jesusabdullah> I *am* on the lookout for CI tools that don't make me angry
06:15 < CookieNomster> jesusabdullah: Drone.io works nicely.
06:15 < CookieNomster> And now I have a working code coverage badge as well. :)
06:16 < jesusabdullah> cute!
06:16 < jesusabdullah> too bad what I want is a lil' somethin' somethin' I can run on my own VPS
06:16 < jesusabdullah> meaning opan saurce
06:17 < CookieNomster> Yeah, there's definitely a lack of good open source CI servers.
06:17 < CookieNomster> But for public project I don't care so much.
06:17 < othiym23> jesusabdullah: have you checked out Strider yet?
06:17 < jesusabdullah> othiym23: unfamiliar, link?
06:17 < jesusabdullah> othiym23: my best research technique is, well, what I'm doing right now
06:17 < jesusabdullah> othiym23: which is asking all y'alls?
06:18 < CookieNomster> jesusabdullah: nope, that's new to me. Thanks!
06:18 < othiym23> jesusabdullah: https://github.com/Strider-CD/strider
06:18 < CookieNomster> I mean othiym23: thanks. :P
06:18 < othiym23> might be heavier than you're looking for, but I know the authors and they're pretty solid Noders
06:18 < othiym23> also I like them they are my friends The End
06:19 < jesusabdullah> yessch, the new github design
06:19 < jesusabdullah> I like about 90% of it
06:19 < jesusabdullah> but the percent language bar is useless to me cause it's always safety orange
06:19 < jesusabdullah> and I wish the clone url was at the top of the sidebar instead of the bottom
06:19 < CookieNomster> jesusabdullah: I completely agree. :)
06:20 < jesusabdullah> Like, the rest of it is great!
06:20 < CookieNomster> Jup.
06:20 < jesusabdullah> but, man, I clone shit all the time
06:20 < jesusabdullah> maybe if I was more of a polyglot, or if js's color wasn't safety orange XD
06:21 < jesusabdullah> see, python gets Calming Blue
06:21 < othiym23> I clone repos like once per PR and I don't even use the clone bar like ever because I just type "g c https://github.com/user/whatever.git" by hand because it's easier than cut and paste
06:21 < othiym23> my definition of "easier" may not match yours
06:21 < jesusabdullah> yeah, I mean
06:21 < CookieNomster> LiveScript gets nauseating green. :P
06:21 < jesusabdullah> I'm about 50/50 on that
06:22 < jesusabdullah> Hey, I like nauseating green!
06:22 < jesusabdullah> hmmm
06:22 < othiym23> the language bar on this repo looks like a 70s craft project barfed on it: https://github.com/othiym23/nonsense-benchmark
06:23 < Trangar> Ok so I want to make a game in NodeJS, any suggestions on what kind of game (mud, browser text-based, javascript canvas) do you guys recommend and what libraries would you use?
06:23 < jesusabdullah> Trangar: http://voxeljs.com
06:24 < jesusabdullah> Trangar: it's more a browserify thing, but there's work that needs to be done on multiplayer backend action
06:24 < s5fs> doomlaptop: cool, glad you got it working :)
06:24 < othiym23> 60fps FPS written entirely with voxels, rendered on the server
06:24 < othiym23> that ought to keep you busy for a while
06:24 < jesusabdullah> yeah it's pretty sexy
06:24 < Trangar> Haha
06:24 < doomlaptop> yeah s5fs it's fine now
06:24 < doomlaptop> just gotta do a socket => user finding now
06:24 < jesusabdullah> othiym23: haha, nice @ language bar
06:24 < doomlaptop> other way is working fine right now
06:24 < jesusabdullah> othiym23: cool visual for this project though
06:25 < jesusabdullah> heh
06:25 < jesusabdullah> somewhere in my head I finally put together that othiym23 on here is the twitter account with the red pony
06:25 < jesusabdullah> derp
06:25 < Trangar> jesusabdullah, damn that's sexy
06:25 < jesusabdullah> Trangar: inorite?
06:26 < jesusabdullah> Trangar: my personal project when I have time/inclination is https://github.com/jesusabdullah/dc-tycoon
06:26 < jesusabdullah> at least I think that's the url lemme check
06:26 < Trangar> I could make multiplayer for this..
06:26 < chouncle> quit
06:26 < othiym23> jesusabdullah: I think everybody has that "problem", but I love my avi too much to change it
06:26 < jesusabdullah> nope, https://github.com/jesusabdullah/data-center-tycoon
06:26 < jesusabdullah> that's the one
06:26 < othiym23> it's got history on its side
06:26 < ssafejava> yeah I agree re: new github design, I don't get the 'minimalist' garbage. this is a system for programmers, we like options
06:26 < jesusabdullah> Trangar: maxogden has some work on that, I'd see where he's at and go from there
06:27 < jesusabdullah> ssafejava: like I said, I think 90% of it is great
06:27 < ssafejava> new fork is nice though
06:27 < jesusabdullah> ssafejava: Really, if the color pallate for the languages was more harmonious and the clone url was at the top of the sidebar instead of at the bottom I'd be a pretty happy camper
06:27 < jesusabdullah> except for these fucking mosquitoes, they're really bad this year
06:28 < othiym23> tough shit, buddy
06:28 < othiym23> that's what you get for living in the Upper 1
06:28 < jesusabdullah> yeah, screw everyone that lives in the bay area and is like, "ha! ha! WE only have ANTS"
06:28 < othiym23> that and guilt by association with Sarah Palin
06:28 < jesusabdullah> you mention that name again and I'll fly down there and regale you with the hour long story of Sarah Palin's rise and fall from fame
06:28 < othiym23> and cheap meth from Wasilla, I guess
06:29 < jesusabdullah> and follow up with the story of Ted Steven's demise and the Murkowski write-in campaign and three-way race between her, Mr. Tea Pawty and Scott McAdams
06:29 < jesusabdullah> THEN you'll be sorry
06:29 < othiym23> my governor was in a Dead Kennedys song, so I've got that going for me
06:30 < jesusabdullah> oh, and then how the republican party up here had a schism due to the tea party
06:30 < jesusabdullah> Alaskan politics: Total Insanity.
06:31 < jesusabdullah> orite, CookieNomster why were you asking about peeps using drone.io again?
06:31 < jesusabdullah> also do you have a github y/n
06:31 < CookieNomster> jesusabdullah: because of this https://github.com/PPvG/node-coverage-badge
06:31 < othiym23> I went to school in Montana when the local militias were in full Black Helicopter mode and my college girlfriend's dad moved to Seward because there weren't any millwright jobs left in Montana, so I sorta had the gist already
06:32 < jesusabdullah> you're ppvg, CookieNomster ?
06:32 < CookieNomster> Jup
06:32 < jesusabdullah> ahhh, Seward
06:32 < jesusabdullah> Cool to visit
06:33 < jesusabdullah> I hear it's kind of a shitty place to live though
06:33 < jesusabdullah> but nothing compared to the bush
06:33 < othiym23> that's OK, my college girlfriend's dad was kind of a shitty guy
06:33 < jesusabdullah> I've heard Kotzebue and Selawik are the worst, Bethel's pretty bad too
06:33 < jesusabdullah> I had the "pleasure" of living in Bethel for a year
06:34 < jesusabdullah> othiym23: now thyat's a myaverick
06:35 < othiym23> heh
06:35 < jesusabdullah> that's a fake accent btw
06:35 < othiym23> what's the fastest way for me to get an http client that actually, like, uses Keep-Alive?
06:35 < jesusabdullah> uhhh, node's doesn't?
06:35 < othiym23> no, you have to give it a Keep-Alive agent somehow
06:35 < jesusabdullah> huh
06:36 < jesusabdullah> I see
06:36 < jesusabdullah> yeah, no idea
06:36 < jesusabdullah> soz
06:37 < othiym23> I bet I can make request do it
06:37 < jesusabdullah> yeah probably
06:37 < jesusabdullah> requirst does everything
06:37 < substack> everything ever
06:38 < jesusabdullah> yes
06:38 < substack> and then some
06:38 < jesusabdullah> hey substack I heard request is being refactored into an HTTP CLIENT FRAMEWORK
06:38 < jesusabdullah> trolololo
06:39 < othiym23> mikeal swears he's making it smaller
06:39 < othiym23> all I know is that every time I use it, I'm sure glad that it does OAuth signing for me
06:40 < othiym23> because that is definitely something that needs to be an integral part of a simple HTTP request module
06:51 < jesusabdullah> yeah othiym23 really I'm pretty happy with request
07:01 < jesusabdullah> daang got quiet in HERE real quick
07:04 <@xyxne> jesusabdullah, way to go
07:10 < jesusabdullah> xyxne: MY BAD
07:11 < nathan7> jesusabdullah: SHOUT MORE
07:11 < nathan7> IT'LL ADD CONTENT :D
07:12 < CookieNomster> WHAT'S HAPPENING? I HEARD THE SHOUTING AND CAME RIGHT OVER!
07:12 < nathan7> WELL WE'RE JUST BUSY SHOUTING ABOUT IMPORTANT THINGS HERE
07:12 < CookieNomster> OH OKAY
07:12 < CookieNomster> CARRY ON
07:13 < nathan7> VERY WELL
07:16 < oceabreeze> guys give me some links to open source nodejs projects
07:17 < substack> oceabreeze: for what purpose?
07:17 < ChrisPartridge> oceabreeze: have you seen github before?
07:18 < px> npmjs.org
07:18 < oceabreeze> i need real world code examples
07:18 < jesusabdullah> oceabreeze: what do you want to do?
07:18 < jesusabdullah> oceabreeze: https://github.com/jesusabdullah that's mine, most code's node
07:18 < oceabreeze> a webb app with simple auth, image gallery
07:18 < jesusabdullah> oceabreeze: https://github.com/substack
07:18 < jesusabdullah> oceabreeze: substizzy is very prolific
07:19 < jesusabdullah> oceabreeze: https://github.com/nodejitsu These guys run a cloud computing company
07:19 < oceabreeze> and other standard stuff
07:19 < jesusabdullah> oceabreeze: https://github.com/niftylettuce You may find some stuff here, this guy can prototype a site like nobody's business it's honestly kind of ridiculous
07:20 < nathan7> jesusabdullah: We run the universe, bro
07:21 < oceabreeze> oki thanks, ill check them out :)
07:22 < jesusabdullah> oceabreeze: word
07:22 < chewed-on> Is there any web framework for Node.js that is similar to Symfony 2 ?
07:23 < ChrisPartridge> chewed-on: geddy, sails, derby - few others 
07:24 < chewed-on> Which one is most recommended
07:24 < jesusabdullah> chewed-on: what are the salient points of symfony other than php?
07:24 < jesusabdullah> chewed-on: none of them XD
07:24 < jesusabdullah> chewed-on: the two dominant schools of thought are "use express" and "don't use a framework"
07:25 < jesusabdullah> chewed-on: third is a loose conglomeration of people that see a need for a framework but can't agree on what's important to have in said framework and keep writing their own
07:25 < ChrisPartridge> ^
07:25 < jesusabdullah> chewed-on: but if you tell me what's in symfony I might be able to give you an idea about what tools will bring you the closest
07:25 < chewed-on> jesusabdullah: what I like about Symfony is the Doctrine ORM, Command Line tools to generate entities, controllers and views, the structure of the web application and maybe a few other things.
07:26 < jesusabdullah> hmmm
07:26 < chewed-on> Looks like Geddy has the structure down...
07:26 < jesusabdullah> yeah, geddy's pretty solid there, you can't really write anything that doesn't fit its structure
07:26 < jesusabdullah> what about, uhh
07:26 < jesusabdullah> https://github.com/niftylettuce/expressling ?
07:26 < jesusabdullah> that's a "boilerplate" for express
07:26 < oceabreeze> Isn't using of pure node is a pain in the ass and is similar to using pure ruby for writing a web app?
07:26 < jesusabdullah> assuming I typed that right
07:26 < jesusabdullah> oceabreeze: no
07:27 < jesusabdullah> oceabreeze: first of all, node's standard tools for webstuffs are actually useful. they stay out of the way but aren't fucking retarded
07:27 < jesusabdullah> oceabreeze: it doesn't do a lot for you but that does give you a lot of flexibility, and there are a lot of libraries out there you can LEGO together to do what you need
07:28 < jesusabdullah> oceabreeze: https://github.com/isaacs/npm-www
07:28 < [AD]Turbo> hola
07:28 < ChrisPartridge> and if you don't nest callback after callback, you can make code look nice
07:28 < jesusabdullah> hellote
07:28 < jesusabdullah> basically, when it comes to frameworks in node it's more about how much you like LEGOing and how many decisions you want to make
07:30 < oceabreeze> Thats nice
07:30 < jesusabdullah> oceabreeze: because node people are all hipsters, there are more ODMs than ORMs, but many people eschew both
07:30  * ChrisPartridge coughs
07:30 < jesusabdullah> ChrisPartridge: what did you write an orm?
07:31 < nathan7> LET'S WRITE MORE ORMS
07:31 < ChrisPartridge> jesusabdullah: yes and no, i was more referring to all hipsters :p
07:31 < jesusabdullah> chewed-on: You might be interested in jugglingdb, I personally think it's kind of a mess
07:31 < chewed-on> I hope I didn't start a war lol
07:32 < substack> chewed-on: node is anarchy
07:32 < jesusabdullah> chewed-on: I think the best solution for js I saw wrt SQL was a query generation library, gave you a js API that would pop out strings you could pass to your SQL thinger
07:32 < substack> and some of us LIKE it that way
07:32 < jesusabdullah> chewed-on: and if you're down with mongodb, mongoose has orm-like capabilities
07:32 < jesusabdullah> substack's online abode is like a cabin in Appalachia with six shotguns and a bloodhound
07:33 < jesusabdullah> actually, no
07:33 < jesusabdullah> sub's a Swiss Family Robinson kinda guy
07:33 < substack> a coonhound
07:33 < jesusabdullah> haha
07:33 < jesusabdullah> substack: you've seen Swiss Family Robinson?
07:33 < substack> some
07:33 < jesusabdullah> good enough
07:34 < substack> I was just lamenting why there aren't more ewok-style villages instead of cities
07:34 < substack> built around giant trees with rope bridges
07:34 < substack> doesn't make any sense
07:34 < jesusabdullah> yeah, see? Swiss Family Robinson.
07:34 < ejexin> hey substack
07:34 < ejexin> optimist is great :P
07:34 < substack> it's ok
07:34 < substack> it does too many things I didn't know any better
07:34 < jesusabdullah> substack that's not being very...OPTIMISTIC
07:35 < ChrisPartridge> that reminds me, see my question about a .env() option substack ?
07:35 < ChrisPartridge> (just to add more to something that already does too much :P)
07:35 < ejexin> substack: oh well i found it pretty useful
07:35 < ejexin> and appreciate it
07:35 < substack> ChrisPartridge: I am pretty done adding any features
07:35 < substack> only bug fixes
07:35 < jesusabdullah> an options parser should be like a six-shooter
07:35 < jesusabdullah> you can pour the sand out of it and it still works
07:36 < jesusabdullah> ChrisPartridge: nconf? :v :v
07:36 < ChrisPartridge> jesusabdullah: hm, possibly
07:37 < ChrisPartridge> jesusabdullah: I was thinking an option to say .env('some-arg', 'POSSIBLE_ENV_VAR')
07:37 < substack> the only reason I even use optimist for new things is that it has all those obscure unixy edge cases in its parsing algorithm ironed out
07:37 < substack> -n1 --foo=bar --beep boop -xzvf baz.tar.gz
07:37 < ejexin> i just found it more convenient 
07:37 < substack> that kind of crap
07:38 < jesusabdullah> substack: I mean, all you'd really have to do is shift .usage elsewhere and maybe decrease the API surface area, right?
07:39 < jesusabdullah> substack: the core parsing algorithms, defaults, etc., seem pretty spot on to me
07:39 < substack> if I ever release a 1.0.0, everybody's favorite features will go away
07:39 < jesusabdullah> I mean
07:39 < jesusabdullah> the only thing I want to go away are the usage things, the chaining api and the automagic .argv
07:39 < jesusabdullah> I wanna pass in process.argv explicitly
07:39 < substack> I hate those too.
07:39 < ejexin> i'd like to be able to do like
07:39 < ejexin> -h 
07:40 < ejexin> to get the usage information and params
07:40 < substack> but process.argv is already kind of magic
07:40 < substack> its first 2 args are node and the filename
07:40 < jesusabdullah> process.argv.slice(2) ?
07:40 < substack> ejexin: if (argv.h) printHelp()
07:41 < ejexin> yeah substack but i already defined my usage in .usage 
07:41 < ejexin> i like its formatted parameter list too
07:41 < jesusabdullah> ejexin: substack: Then maybe make a separate library that can take an optimist and a usage, and returns a function that will return that stuff
07:41 < jesusabdullah> ejexin: good feature, wrong library
07:41 < ejexin> yeah i know
07:42 < substack> ejexin: you should probably just use https://npmjs.org/package/nomnom
07:43 < substack> it does all of that kind of thing much more consistently
07:43 < ejexin> ah that looks interesting 
07:43 < nathan7> random crazy thought: lib that build an option parser specifically for your thing
07:43 < ejexin> well it's nothing urgent 
07:43 < nathan7> *builds
07:43 < ejexin> i'm happy with optimist for now
07:44 < nathan7> that you just have as a devDependency
07:49 < jesusabdullah> nathan7: sounds gnar-dogg
07:49 < jesusabdullah> nathan7: I'm not one for code generation
07:49 < jesusabdullah> nathan7: okay with tools like browserify and uglify, but those are more code xform tools than code gen tools
08:02 < chewed-on> Do you guys use EJS or Swig ?
08:02 < chewed-on> for templating engine
08:03 < chewed-on> I used Twig before and Swig looks just like it.
08:04 < jesusabdullah> uhhh
08:04 < jesusabdullah> I've used ejs before
08:04 < jesusabdullah> and a few variants of mustache
08:04 < jesusabdullah> haven't used swig but heard good things
08:04 < jesusabdullah> it doesn't really matter what you use to template as long as you dig it
08:10 < nathan7> jesusabdullah: Yeah, but shipping optimist with your lib just because it has a little CLI app
08:12 < jesusabdullah> nathan7: an optimist refactor would make it significantly smaller
08:13 < nathan7> jesusabdullah: mhm
08:13 < nathan7> jesusabdullah: really npm needs to get better
08:18 < jesusabdullah> nathan7: there are way worse things you can have as deps than optimist. Like, winston in node-prompt.
08:24 < con3x> Can anyone recommend me a library/way to do promises well in node?
08:29 < ckknight> con3x: Q seems like a good Promises/A+-spec compliant one
08:30 < con3x> ckknight: Cheers, thats the one I've been looking at so I'll give it a go :)
08:31 < jesusabdullah> yeah, Q is sort of the de-facto standard amongst people-that-like-promises-for-some-reason
08:31 < ckknight> jesusabdullah: what's wrong with promises?
08:32 < jesusabdullah> ckknight: nothing really, I just never felt the need for them
08:32 < ckknight> fair enough
08:35 < ckknight> con3x: as long as you use a library that's Promises/A+-compliant, that's what matters, because then it's interoperable with any other Promises/A+-compliant library
08:35 < jesusabdullah> "strong bad, I think you're supposed to have pecs" "DON'T NEED 'EM"
08:35 < jesusabdullah> That's why they call me AC: All. Callbacks.
08:36 < con3x> I'm basically having a problem with a value that needs to be returned at the top level of a function. If I call it anywhere else it doesn't behave correctly
09:15 < Stumbler> anyone recommend a long running process manager?
09:17 < con3x> Is it possible to block until a variable is set in Javascript?
09:17 < con3x> This is driving me nuts because I can only return from the top function
09:19 < saanplus> Hi, new to node, want to know how can i use node-dev with eclipse
09:22 < AndroidJS> Hello there, I've been trying to setup nodejs on my android, and have gotten as far as getting the node-v0.8.1.tar.gz file, and tar xzf node-v0.8.1.tar.gz, When I try to ./configure after that it tells me permission denied, even after I use "su"
09:22 < AndroidJS> Does anyone know of any tutorial I can use to guide me through this process?
09:22 < con3x> AndroidJS: have you checked the permissions?
09:22 < sCoRpi> hello
09:23 < AndroidJS> Hey con3x, I'm unsure of how to check the permissions
09:23 < con3x> ls -l will tell you
09:23 < con3x> Although it shouldn't really matter if you're root.
09:24 < sCoRpi> Is piping (audio) files from the fs to the response a bad idea? 
09:24 < AndroidJS> I am root from what I can gather
09:24 < sCoRpi> In a case like this: You doN't expose files directly but a user needs to provides some kind of key which then gets transformed into the actualy file, which then is served up - to prevent direct linkage
09:25 < con3x> sCoRpi: I'd say thats probably a good idea, maybe with a buffer but I don't see any real problem.
09:25 < aandy> anyone used glacier?
09:25 < AndroidJS> It simply tells me "Permission Denied", even as root.
09:26 < r04r> aandy: im using glacier
09:27 < con3x> AndroidJS: Hmmm, it might not have execute permissions, you could try chmod -R 755 * in the node directory (be careful, if you do this somewhere else it could brick your phone)
09:27 < con3x> It could be a number of things
09:28 < aandy> r04r: ok, great. i'm looking over the faq, and i'm a bit unsure on the structure. from what i can tell, selected data for download is available for 24 hours - what happens after that? i open a new "request" to download the same data (if i didn't manage to get it all in time)? it mentions a job typically takes 3-5 hours - based on what? i couldn't even download the amounts i need in 3-5 hours unless i had gbit (and glacier aswel). can you say anything about
09:30 < AndroidJS> I just tried that, still gives me permission denied
09:31 < sCoRpi> con3x: thanks, will give it a try then :9
09:31 < sCoRpi> :)
09:35 < r04r> aandy: When you put data on glacier it gets moved to "cold storage". That means you cannot access it immediately. You need to request access, and 3-4 hours from when you requesti t, the data will be available for download using regular means
09:36 < r04r> aandy: However long your download takes after the 3-4 hours request time is essentially irrelevant, and gets tacked upon the initial wait time
09:37 < aandy> r04r: oh okay, thanks. that clears it up. but it's only available for 24 hours (so 3-4 hours + 24 hours, then cold again), correct?
09:38 < aandy> would it be possible to do overlaps? having gaps of 3-5 hours when trying to download 10TB might be a bit .. anoying
09:38 < r04r> aandy: I believe so yes, though I'm not certaina bout that
09:38 < r04r> I think the file will stay available while you're downloading it, but I have no experience with such large amounts of data
09:39 < aandy> r04r: okay, thank you so much :)
09:39 < r04r> also aandy if you have less than like a 100Mbps line it seems amazon recommends you actually mail in the data using a physical hard drive
09:39 < r04r> which is awesome imo
09:40 < r04r> http://aws.amazon.com/importexport/
09:40 < aandy> it's a bit of a jungle, so i'm trying to gather as much info as i can to get an overview :)
09:40 < aandy> r04r: oh, that's perfect
09:49 < algesten> how do I close a readablestream such as the http response? i don't want the body, i just want to close and ignore it.
09:54 < aandy> do you mean server request, or web request -> response? or, are you serving or getting?
09:55 < algesten> http.request(opts, function(res) {})
09:55 < algesten> the res object
09:56 < aandy> well, if you're not listening for the data event, you won't "get" the body. you want to abort it while it's responding to you? e.g. a file download
09:57 < aandy> you could try res.end(), not sure what the use is
09:57 < aandy> sounds like you want to make a HEAD request rather than GET (or POST)
09:59 < gildean> algesten: http://nodejs.org/api/http.html#http_request_abort
09:59 < tsunamie> hey guys, in there a modaul for image managment? ie. manages the whole uploading and displaying of the images? I want to beable to limit the size of the images
10:00 < aandy> algesten: http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html
10:00 < tsunamie> say when you upload, it will tell you weather or not the images is to big and also allow you to select an area in the image to be shown.
10:00 < algesten> will request.abort really close the response? .. hm.. i suppose it's the same socket...
10:01 < algesten> aandy i'm doing a HEAD request, but the numptie implementing the server seems to send some crap back anyways.
10:02 < aandy> :(
10:03 < aandy> yeah, then abort like gildean said. and yes it will close the REQUEST from your end, and not receive the rest
10:03 < algesten> aandy. seems to do the trick. thanks!
10:03 < aandy> what the server will do, is probably handle it gracefully and not crap out, but that's not immidiately your problem :p
10:03 < aandy> unless you crash it ;)
10:03 < algesten> aandy I don't care. Someone else's problem :)
10:04 < aandy> var douchebag_req = http.request();
10:04 < aandy> :>
10:04 < olalonde> wow
10:04 < olalonde> I just bought a  LM270WQ1 screen
10:04 < olalonde> gorgeouuuus
10:05 < aandy> nice try, apple employee
10:05 < olalonde> haha
10:05 < olalonde> i dont think apple likes those being sold
10:06 < aandy> ;)
10:06 < olalonde> bought it in china by some company called KOIOS
10:06 < olalonde> they put a frame around the screen basically
10:06 < olalonde> or something like that
10:11 < Stumbler> Can anyone recommend a long running process manager?
10:11 < olalonde> maybe forever?
10:13 <@MI6> joyent/node: Rod Vagg master * d3b06f1 : doc: cleanup addons code, fix isolate positioning (+1 more commits) - http://git.io/0sPObw
10:14 < Stumbler> hrm, not quite what I'm after.  I'd like a system that lets me more or less manage a collection of running processes with error policies.  a nice interface with stats would be pretty cool too.  I'm looking myself, just thought someone might have something that's an obvious win
10:14 < olalonde> ah ok
10:14 < olalonde> recently there was a process manager dailyjs
10:14 < olalonde> let me check my starred repos
10:15 < aandy> pm2?
10:15 < olalonde> https://github.com/Unitech/pm2
10:15 < olalonde> haha yeah this one
10:15 < olalonde> i dont know if it fits your requirements though
10:16 < aandy> looks really neat actually
10:19 < con3x> I'm having a problem with restify-oauth
10:19 < Stumbler> That looks pretty ideal actually, thanks guys
10:19 < olalonde> welcome!
10:19 < con3x> I can't get it to return the token from any async function, anybody have any ideas?
10:19 < olalonde> say thanks to Unitech :)
10:20 < olalonde> con3x: pastebin your code
10:21 < con3x> olalonde: http://pastebin.com/Qk8MgX9G
10:21 < con3x> Cheers :)
10:22 < olalonde> what line does it fail?
10:22 < eere> hellow, hows the quickest way to use request to check if a version of a file on a swerver is different to the local one using header info?
10:22 < con3x> It doesn't actually fail, it just returns a client authorization error instead of the token
10:23 < olalonde> is it possible your callback's first argument should be an error?
10:23 < olalonde> maybe try callback(null, token)
10:23 < olalonde> im not sure as i dont use this library
10:23 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
10:23 < con3x> If you take the ballback in grant token and move it out of the async it works =/
10:24 < con3x> olalonde: Thats just a function I wrote myself to clean up the code a bit.
10:24 < aandy> yeah, try callback(null, token), that's what the example uses
10:24 < aandy> https://github.com/domenic/restify-oauth2/blob/master/examples/cc/hooks.js
10:24 < olalonde> line 19
10:25 < con3x> Thats what it is =/
10:25 < con3x> result = token; cb(null,token);
10:25 < aandy> the first parameter is used for errors typically. so sending the token as an error might screw it up :)
10:25 < olalonde> its somewhat a convention that the first argument of a callback is always an error
10:25 < olalonde> libraries that dont follow this convention make me sad :(
10:25 < olalonde> and I did a little inside
10:25 < con3x> The function createToken is just one I've wrote to tidy, it doesn't follow the convention :)
10:26 < con3x> Although I should add an error argument to it
10:26 < aandy> con3x: no, not your createoken function, the function you pass as the last argument to that function
10:26 < aandy> and yes you should. keep putting errors up the pipe, so you can handle them (if you need to) at any given level
10:26 < olalonde> and I die*
10:27 < con3x> sandy: what line? =/
10:27 < con3x> nvm got it.
10:28 < lmatteis> hi all
10:28 < gishmel> has anyone ever used topcoat? topcoat.io
10:28 < lmatteis> what's a simple node.js database for storing JSON?
10:28 < lmatteis> does it even exist such a thing :)
10:28 < olalonde> MongoDB
10:28 < lmatteis> nah mongo is something else
10:28 < lmatteis> i was thinking something written in Node :)
10:28 < squeeks> simple? disk.
10:28 < aandy> lol
10:28 < olalonde> mongoose library might help you
10:29 < wangbus> leveldb
10:29 < olalonde> haha right
10:29 < aandy> mongodb is bson, and nothing you have in json can't be stored in bson
10:29 < con3x> Looks like I'll have to return it syncronously and hope the DB write succeeds =/
10:29 < lmatteis> but i have a large JSON
10:29 < lmatteis> so loading the JSON each time from disk is hard
10:29 < aandy> lmatteis: use a db
10:29 < olalonde> I dont think writing a database in node.js would be the best idea just yet
10:29 < lmatteis> why not
10:29 < olalonde> why not use mongodb...
10:30 < hipsters_> or redis
10:30 < aandy> because mongo isn't node apparently :P
10:30 < lmatteis> lol
10:30 < lmatteis> ok thanks
10:30 < squeeks> I guess he doesn't want to lose his data either.
10:30 < aandy> http://www.rethinkdb.com/ is another json model db
10:30 < eere> how to check if two opts are the same, not necessarily in the same orders?
10:30 < aandy> squeeks: :D
10:30 < olalonde> does redis let you know about json though?
10:30 < olalonde> i mean
10:30 < olalonde> does it know about json
10:30 < hipsters_> of course
10:30 < tsunamie> say when you upload, it will tell you weather or not the images is to big and also allow you to select an area in the image to be shown.
10:30 < aandy> how to store jason?
10:31 < tsunamie> hey guys, in there a modaul for image managment? ie. manages the whole uploading and displaying of the images? I want to beable to limit the size of the images
10:31 < hipsters_> you can either stringify it or store it one level as a hash
10:31 < olalonde> dont store jason
10:31 < olalonde> he has a right to his freedom
10:31 < aandy> but but
10:31 < olalonde> hipsters_: ok
10:32 < olalonde> tsunamie: there's a module for imagemagick
10:32 < tsunamie> olalonde ty
10:33 < aandy> squeeks: https://twitter.com/bigdataborat/status/340600348924317696
10:33 < aandy> whoops, https://twitter.com/bigdataborat/status/339956965910405122
10:33 < con3x> aandy: http://pastebin.com/hrNSnqSf
10:34 < aandy> con3x: does it work?
10:34 < con3x> Nope
10:34 < con3x> See the comment on line 40
10:34 < con3x> If I do that, it returns the value.
10:35 < aandy> do you get the output from line 35?
10:35 < con3x> So I'm really confused, the callback should work from any function right
10:35 < con3x> Yeah, outputs the token fine
10:36 < hipsters_> ... what happens if you uncomment that and comment out line 37
10:36 < aandy> from the snippit alone, i dunno. try to put the EROIDODSJFLK line instead of line 37 (inside your callback)
10:37 < aandy> hipsters_: probably he gets the EROID right away, and token is returned to browser with no auth error
10:37 < hipsters_> yep
10:37 < aandy> i would put it inside to make sure the callback hasn't gone haywire
10:37 < con3x> Hmmm, that didn't return.
10:38 < con3x> same problem
10:38 < aandy> which one? :p
10:38 < con3x> I moved the callback cb(null, "EROIDFIFFGHHFH") up to replace cb(null, token)
10:39 < con3x> So if I move something into that function, it breaks.
10:39 < aandy> ok, so your callback might be the cause. are you sure it's the console.log from line 35 you get? (put console.log('yolo', token) for instance)
10:39 < olalonde> I'm NoSQL expert
10:39 < olalonde> i have no sql experience at all
10:39 < olalonde> haha
10:39 < olalonde> https://twitter.com/bigdataborat/status/340600348924317696
10:40 < con3x> aandy: Yep, definetly coming from there
10:40 < aandy> gotta run 2 min, brb. try debugging your sub callback on line 17
10:41  * oceabreeze slaps hipsters_ around a bit with a large trout
10:45 < romenov> hi .. I'm using a mongostore for storing my session, and I'm struggling a bit with the socket.io implementation .. i've looked around and found some usefull posts for getting the session ID from the cookie but it always returns false .. (code snippet: http://pastebin.com/meVpJKvM ). The cookie with a connect.sid value is present in my header when I log it, I just can't seem to do the connect.utils.parseSignedCookie , any clues?
10:58 < eere> hello, hows the quickest way to use request to check if a version of a file on a swerver is different to the local one using header info?
11:02 < MiracleBlue> ahoy everyone
11:02 < eere> hello
11:02 < olalonde> ahoy ahoy
11:02 < MiracleBlue> Anyone watching the soccer tonight?
11:02 < MiracleBlue> (australia vs iraq)
11:03 < aandy> con3x: did you solve it?
11:04 < RLa> eere, when it supports etags
11:05 < eere> i just want to compare headers against local headers stored in db, but whats the quicket way to check head then download after checking if necessary ?
11:05 < MiracleBlue> I've always wondered how etags work
11:06 < eere> depends on the server, all sorts of servers give different header info
11:06 < con3x> aandy: It appears that the callback is being called even if it doesn't exist in the function
11:06 < con3x> So even if I remove all instances of the callback it will still return to the client
11:07 < con3x> I think I'll have to dig in the library to see what it's doing
11:08 < RLa> MiracleBlue, it's like md5 of file contents
11:09 < RLa> eere, headers might not contain enough information
11:09 < MiracleBlue> RLa: makes sense :)
11:10 < RLa> eere, curl -v -X HEAD http://nodejs.org
11:10 < RLa> it gives Last-Modified: Tue, 18 Jun 2013 11:09:01 GMT
11:10 < eere> why not request module? wouldnt it be faster than curl?
11:11 < RLa> yeah but curl is easier to use from command line :)
11:14  * LargePizz  Picture of my whore ex-girlfriend naked for your enjoyment: http://imagetwist.com/9x3zece21oyg
11:23 < KESAV> how to uninstall nodejs
11:24 < con3x> KESAV: What Operating system and how did you install it?
11:24 < chewed-on> Anyone here used Geddy I need a bit of basic help.
11:25 < KESAV> I installed directly from Nodejs.org in windows 7 OS
11:25 < oceabreeze> Is there are a way to instlal nodejs + express in offline mode? I am runing virtualbox linux without internet access
11:26 < KESAV> con3x: I installed directly from Nodejs.org in windows 7 OS
11:27 < oceabreeze> and i dont eeven want to bother with windows
11:28 < KESAV> @con3x: I installed directly from Nodejs.org in windows 7 OS... Now I wanted to uninstall it. is there a easy way to do it 
11:28 < con3x> Just through programs in control panel I think
11:29 < SomeoneWeird> can anyone help me with a couple basic stream related questions?
11:29 < ckknight> SomeoneWeird: don't ask to ask, just ask
11:30 < SomeoneWeird> ckknight, i know, i was just wondering if I could PM somebody :)
11:30 < ckknight> but that defeats the purpose of general knowledge sharing of IRC channels
11:32 < SomeoneWeird> ok let me see if i can change it a bit, I have a readable stream, being piped into a transform stream, how to i "start" the piping when I get a request from another library ?
11:34 < ckknight> SomeoneWeird: you should do .on('readable', function() { stream.read(); })
11:34 < ckknight> afaik
11:34 < ckknight> assuming you're in node 0.10+
11:38 < nathan7> jesusabdullah: the winston one is awful yeah
11:42 < SomeoneWeird> ckknight, i've tried that and it doesn't seem to work, which has me stumped
11:42 < ckknight> mind pasting up your code?
11:42 < ckknight> !paste
11:42 < ckknight> hmm, wonder where the bot is
11:43 < nathan7> right here
11:43  * nathan7 points at the ceiling
11:45 < SomeoneWeird> lul
11:46 < SomeoneWeird> sec
11:46 < SomeoneWeird> http://pastie.org/private/8whce9rzwdaqemsg3oxrew
11:47 < SomeoneWeird> (i havn't used streams before so it might be all wrong)
12:10 < pellis> hey guys
12:11 < pellis> building an API, i'm wondering if there's any good templating engine not for HTML - but for JSON
12:11 < pellis> like rabl in rubyworld
12:26 < con3x> pellis: There is Restify
12:26 < con3x> Sorry for the late reply
12:27 < pellis> con3x: thanks! I actually started thinking about using dust.js to generate JSONs
12:29 < r04r> A/w 6
12:44 <@isaacbw> I like my JSONs rare
12:44 < ChrisPartridge> {"albino": true} ?
12:47 <@isaacbw> steak steak glorious steak
12:47 <@isaacbw> I haven't had steak in a while
12:49 <@isaacbw> daaaaaaaaaaaaaaaaaaaamn 
12:56 < ckknight> isaacbw: same here
12:56 < ckknight> would be tasty
12:56 < sad8c> Есть кто из рашки?
12:57 < chewed-on> Anyone used Ejs and Swig ?
12:58 < sad8c> How to use Buffer() in utf8 correctly? Why does buffer.toString and stringDecoder.write() converts wrong binary string?
13:01 <@isaacbw> chewed-on: no one ever
13:01 < chewed-on> isaacbw: say wha ?
13:02 < chewed-on> Why not ?
13:03 <@isaacbw> I wasn't serious
13:08 < leichtgewicht> i am searching a simple unit test tool to replace tape (since i can't figure out how to effectively do async tests)
13:08 < leichtgewicht> any thoughts?
13:08 < daleharvey> hmm, npm doesnt seem to be loving me today
13:09 < petershaw> Hi. 
13:11 < Tarraq> Hi :) A quickie on the cluster module. I seem to get a "sticky session" and get the same worker every time when testing locally. Is it session based?
13:11 < petershaw> I have written a tiny middleware module that writes logs in apache format. : https://github.com/petershaw/NodeJS-Apache-Like-AccessLog can you tell me if this solution with my file-write-opperation is teh best way? Or do i do something wrong in line 118ff of accesslog.js
13:14 < con3x> aandy: Finally figured it out
13:15 < con3x> aandy: it shares the callback between functions and another function was calling it somewhere deeper in the code.
13:21 < oceabreeze> sup what exactly means function(req, res) in javascript?
13:22 < oceabreeze> esp req, res
13:22 < squeeks> named arguments?
13:22 < oceabreeze> they both are different or just an arguments holders?
13:22 < squeeks> well, inside the function they will be vars of the same name.
13:25 < aandy> con3x: okay, i'm glad :) either that, or you "overwrite" the callback. maybe call it something else, like tokenCallback(...), etc., rather than callback() everywhere (just an idea)
13:27 < con3x> aandy: That wasn't the problem :P the cb function isn't a function but a chain of functions
13:27 < con3x> Every time you call it it's partially applied
13:27 < con3x> until you call it the last time, then it calls send.
13:28 < con3x> It's an odd really Haskellish way to do things.
13:35 < randomlurker> How do I access 'this' in Step?
13:35 < randomlurker> I don't understand how the Step module works. Is there any nice tutorial that I can look up?
13:36 < dypsilon> i would recommend async
13:36 < pellis> anyone using dustjs and @sep ? seems to not work for me
13:37 < randomlurker> dypsilon:I'm agnostic as long as library is concerned (for now) but is there any specific reason?
13:37 < dypsilon> randallagordon, async seems to be most popular and well supported.
13:38 < dypsilon> and it does the task very well
13:38 < dypsilon> randallagordon, https://npmjs.org/browse/depended
13:38 < dypsilon> randomlurker, https://npmjs.org/browse/depended
13:38 < dypsilon> randallagordon, sorry
13:38  * randomlurker looks
13:45 < chewed-on> Guys, if I'm currently using Geddy with Passport authentication system in place.
13:45 < chewed-on> can I use some POST request to login to my web app from an iPhone app, does the web server return some sort of Token my app needs to store ?
13:47 < chewed-on> hmm....
13:47 < chewed-on> maybe I didn't ask that right
13:47 < Fabryz> hello, anyone here that knows the stuff of redis in nodejs?
13:47 < chewed-on> I basically want to let my iphone app login to my web app and do some magic but i'm trying to get my head around how it all works.
13:48 < Fabryz> i'm saving stuff on redis with no problems, when I try to retrieve something the key becomes undefined https://gist.github.com/Fabryz/5805482
13:49 < accc> hi
13:50 < dypsilon> chewed-on, it depends alot of what strategy you use with passport. normally it uses the normal session mechanics from connect.
13:50 < chewed-on> dypsilon: right, sessions is usually for web browser right ?
13:50 < chewed-on> so that will not cut it if my client is a iphone app
13:50 < dypsilon> chewed-on, true
13:51 < chewed-on> I know Passport has OAuthentication...
13:51 < neeky> chewed-on, does your iphone use http client to communicate with geddy?
13:51 < chewed-on> not sure if that helps but does that mean I have to load a UIWebView ?
13:51 < chewed-on> neeky: I haven't create it yet but if I was to, I would use a HTTP POST request
13:51 < dypsilon> chewed-on, so you have several possibilities, like openid, basic auth, digest auth and so on, but last time i checked passport has no token based authentication.
13:51 < neeky> then sessions will work
13:52 < neeky> your client will look like any other web client to node
13:52 < chewed-on> neeky: how does Geddy know my app is authenticated though ?
13:52 < dypsilon> neeky, do low level ios libs support sessions?
13:52 < neeky> a session cookie
13:53 < chewed-on> ios apps isn't a browser.
13:53 < chewed-on> OK… nevermind, I foudn this: http://stackoverflow.com/questions/9144045/keep-session-only-cookies-ios
13:53 < neeky> you should probably use an http clinet library on ios
13:53 < chewed-on> Right, that sounds like a plan.
13:53 < dypsilon> chewed-on, but neeky is actually right, it isn't a browser, but you have to use some http library to talk to your server, and this library will probably support cookies.
13:54 < chewed-on> I have used networking libraries for iOS in the past like AFNetworking, MKNetworkKit, ASIHttpRequest
13:54 < chewed-on> but I never encountered cookies.
13:54 < neeky> is under the covers
13:55 < neeky> you never need to bother with them - the library you choose should support cookies - it's built in to the HTTP protocol
13:56 < dypsilon> that said, i like how authentication is handled in hapi (hapijs.com) it's a cookie based token authentication which is stateless.
13:56 < chewed-on> neeky: but there is one problem, if a user logs into the same web application using a browser, an indefinite session that never expires is a potential security risk, no ?
13:56 < dypsilon> so you don't have to mess with persisting session state just for auth
13:57 < neeky> nope
13:57 < neeky> session cookies end with the browser
13:57 < neeky> so when he closes the app or clicks logoff the cookie goes away
13:58 < neeky> even the iOS NSURLConnection libhas NSHTTPCookieStorage 
13:58 < neeky> again, session cookies are defined by the lower level HTTP protocol - it 'just works'
13:59 < chewed-on> Alright, thanks for the insight. I might try build a prototype to test it :)
14:00 < neeky> I would probably look at a higher level library like restkit.org
14:00 < neeky> unless you really want to get into the details of http
14:01 < chewed-on> The only thing I am missing is a forgot password retrieval system for Node.js
14:01 < volitek> Is there a way to findout how long a setTimeout has been waiting / has left?
14:01 < chewed-on> or Passport
14:03 < neeky> I'd think someone has come up with a generic passport forgotpassword module by now
14:24 < strk> (how) can I change the format of dates in output from JSON.stringify ?
14:24 < strk> they loose timezone info, I'd like to retain it
14:25 < statu> hi!
14:27  * strk answers to self: overriding Date.prototype.toJSON
14:27 < SomeoneWeird> can someone help me (or explain to me) why this doesn't work ?
14:27 < SomeoneWeird> http://pastie.org/private/pxtc8a50s47fpaqdypieta
14:35 < davidam> hi
14:35 < davidam> How can I call to node-waf?
14:36 < davidam> I've compiled from sources 
14:39 < ChrisPartridge> davidam: node-waf is olddd
14:43 < davidam> ChrisPartridge: what's the replacement?
14:43 < davidam> ChrisPartridge: I want call to node-waf configure build
14:45 < davidam> ChrisPartridge: https://github.com/TooTallNate/node-gyp?
14:45 < ChrisPartridge> davidam: correct
14:46 < davidam> ChrisPartridge: :)
14:46 < ChrisPartridge> although, it probably wont just straight up work if the project was created for node-waf
14:46 < ChrisPartridge> so if you really want to use it, either go back to <0.8, or get it working with node-gyp
14:47 < davidam> ok
14:58 < kenperkins> does anyone have an example of a package.json that has a grunt task before starting the app?
15:15 < alex______> hi
15:17 < jhouk> Hey all!  I wrote up the details of the issues I'm having with grunt-s3/knox on StackOverflow if anyone has any ideas what the problem might be or how to fix it: http://stackoverflow.com/questions/17172007/grunt-npm-plugin-grunt-s3-knox-not-uploading-to-s3
15:18 < jhouk> I'm bummed I haven't been able to run the two issues to ground on my own :-/
15:19 < ckknight> jhouk: I'm not sure how to help, but I gave you a vote on stackoverflow
15:20 < jhouk> ckknight Thanks! :) Hopefully it will catch someone's attention
15:20 < jhouk> I'd sure like to get it to work the grunt/node way rather than fall back to the command line
15:24 < ckknight> jhouk: so the fs.stat is in the grunt-s3 task or your code?
15:25 < ckknight> oh, okay, it's in the knox plugin
15:25 < ckknight> hmm
15:25 < jhouk> ckknight The actual fs.stat call is in the knox plugin, which is called from grunt-s3
15:25 < jhouk> Yis
15:25 < jesusabdullah> knox?
15:26 < jesusabdullah> and are you talking about grunt :C
15:26 < jhouk> It's possible the callback is being invoked and I just can't catch it in either of my debuggers
15:26 < jhouk> jesusabdulla Yes to both
15:26 < jesusabdullah> no I mean what is knox
15:26 < jesusabdullah> in other news, make 4 lyfe
15:26 < jhouk> Ah, it's a node package that wraps calls to AWS-S3
15:27 < jesusabdullah> ahh
15:27 < jhouk> https://npmjs.org/package/knox
15:27 < jhouk> For my purposes, it's what the grunt-s3 plugin uses to actually make the calls to S3 :)
15:27 < jesusabdullah> no me gusta
15:27 < jhouk> Or so they would have me believe :(
15:27 < jesusabdullah> hah
15:28 < jesusabdullah> maybe you need to register more tasks
15:29 < jhouk> grunt.loadNpmTasks('grunt-load-npm-tasks')
15:29 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
15:31 < jesusabdullah> p much
15:57 < Torsten> any hint on starting _different_ workers from one master with cluster module? i would like to have e.g. 1/3 of the workers running task 1 and 2/3 running task 2
15:58 < chewed-on> Hey guys, I'm back.
15:58 < chewed-on> If I have a HTML form with login, is that using Form authentication or basic HTTP authentication ?
15:59 < chewed-on> I don't think it's using basic HTTP authentication right ?
15:59 < nlf> Torsten: when you cluster.fork you can send configuration info to the workers, so just track how many total you're creating and send different flags to the appropriate ones?
15:59 < nlf> it's going to fork the same script every time, but that script could just check that config and load a different module
15:59 < chewed-on> because using MKNetworkKit I've tried to authenticate with path "/login" but server keeps returning me the login page, I think I am doing something wrong (the username and password is correct)
16:00 < Torsten> fn'nlf: and make a switch within the worker checking the argv and start corresponding work, right?`
16:00 < nlf> yup, exactly
16:00 < Torsten> ye, that was what i thought of as a workaround. i hoped to find something out of the box with a 3rd party cluster module ;)
16:01 < nlf> seems like the simplest way
16:01 < Torsten> ye, guess so
16:01 < nlf> i've never used any 3rd party cluster modules, so i couldn't say
16:02 < Torsten> any recommendation for 'calculating' the job ratio? 
16:02 < nlf> you'd just have to know how many workers total you were going to start
16:02 < nlf> or track how many of each kind you'll start
16:02 < nlf> for every two of worker A start one worker B
16:03 < Torsten> ... as long as max number of workers isn't reached
16:03 < nlf> right
16:03 -!- mode/#Node.js [+o TooTallNate] by ChanServ
16:03 < Torsten> and i have to track which type of worker has died to fork a worker with the same job
16:04 < Torsten> object with "workerid": "jobtype" should be sufficient i guess
16:04 < nlf> so something like if (worker_count % 3 === 0) { cluster.fork({ worker_type: 'b' }); } else { cluster.fork({ worker_type: 'a' }); }
16:04 < nlf> and wrap the whole thing in a check to be sure you're not over your max number of workers
16:05 < nlf> oh, and increment worker_count in both of those cases, because i forgot to put that in there
16:05 < nlf> i'd probably just worker_count++; before that if statement
16:05 < Torsten> if i use the object mentioned above i could just use obj.length for that
16:05 < nlf> yup, you could
16:07 < Torsten> another question. i would like to have a db connection created by the master with connection pooling and have that connection used by the workers running job 1. is that possible? afaik it's not possible to share such connections / handles as every worker runs in it's own process
16:07 < squeeks> "own process". this is not threaded.
16:07 < nlf> Torsten: you can send messages between worker and master
16:07 < nlf> so you could kind of fake it.. create your database connection on the master, then listen for requests to the db from workers
16:07 < nlf> fill them, and send them back in a message
16:08 < Torsten> yes (i have it currently implemented in that way), but the master itself is not capable of handling all the db writes (about 1200 inserts/s and will later be about 10k)
16:09 < nlf> you'd just need a connection pooling db client on the master to do it that way
16:09 < nlf> or open several connections and roundrobin through them manually i suppose
16:09 < Torsten> mongoose should be capable of that, iirc
16:12 < Torsten> thank you :)
16:47 <@MI6> joyent/node: isaacs v0.10 * 9195455 : npm: Upgrade to 1.2.32 - http://git.io/gAdbqg
16:52 <@MI6> joyent/node: isaacs created branch v0.10.12-release - http://git.io/3dgG2g
16:59 < Hithon> hi, I'm having an issue where my express responses over SSL connection are being prematurely closed: curl -k -v -X POST https://test.belfare.com/sps/rest/token
17:00 < Hithon> it responds… but when I test in a REST client it doesn't work
17:06 < TonkaTruck> What's a good workflow for contributing to npm packages on github?  I'm new to node.  Should I set package.json repository to my fork?  Sorry I can't figure this out via google.
17:07 < mbalho> TonkaTruck: send a pull req and let the maintainer update the package.json
17:08 < mbalho> TonkaTruck: if you need to use the module before it gets published then you can put the git url of your fork into your own package.json in the dependencies
17:09 < rpcesar> hello, im having problems with a weird crash, in windows, from within fs namespace, probably (not not positively) related to using the "unstable" readline createInterface api. Here is a pastebin of the complete (short) script, which is just meant to emulate the linux "split" command on windows
17:09 < rpcesar> http://pastebin.com/Vfprde6M
17:09 < ibrahim> anyone familiar with node-webkit able to help with this issue? https://groups.google.com/forum/?fromgroups#!topic/node-webkit/tXPE_WRpW2s
17:09 < rpcesar> when I run it within the IDE, i can type into the console, and every 10 lines it creates a new file, no problem whatsover
17:10 < TonkaTruck> mbalho: That's what confuses me.  Do I edit the code in my node_modules dir after npm install?  Or should I never touch node_modules?
17:11 < rpcesar> however when I run it from the console with a pipe from a valid text file containing "line one" through "line twenty" (return delimted) : , it shows "line one" "line two" and then a crash within binding.write fs.js:513 stating "bad argument"\
17:11 < mbalho> TonkaTruck: oh i see what youre asking
17:12 < gabrielstuff> hey guys, on this web app I work on, id like to have a config option that is saved in database. I'd like it to accessible anytime in any of my controllers.
17:12 < mbalho> TonkaTruck: ive been meaning to write a blog post about this but i need to find a way to make it sound more exciting than it is because its kind of a bland sounding topic
17:12 < gabrielstuff> the idea is to be able to set some token, or app_id, or access token on the fly
17:12 < TonkaTruck> mbalho: I sure would read that blog post ;)
17:12 < gabrielstuff> and to use it
17:12 < mbalho> TonkaTruck: but anyway say your project is called foo and you have a node_modules folder with a 3rd party module in it called bar
17:12 < mbalho> TonkaTruck: you are the author of foo, someone else is the author of bar, you wanna fork bar and fix it
17:13 < gabrielstuff> instead of having config.js stuck and loaded at startup
17:13 < mbalho> TonkaTruck: so foo should be in a folder like /code/foo
17:13 < mbalho> TonkaTruck: and bar is in /code/foo/node_modules/bar
17:13 < mbalho> TonkaTruck: so if you delete /code/foo/node_modules/bar
17:13 < mbalho> TonkaTruck: and cd /code and git clone bar from github, so it is at /code/bar
17:13 < mbalho> TonkaTruck: so you have /code/foo and /code/bar
17:14 < mbalho> TonkaTruck: then do ln -s /code /node_modules
17:14 < mbalho> TonkaTruck: then you are tricking npm to looking inside /code when it searches for modules when you require()
17:14 < TonkaTruck> Ahhhhhhh
17:14 < gabrielstuff> so the question is, how could I avoid to reload config from database each time I need it instead of having to load it globally each time it is saved ? 
17:14 < gabrielstuff> this avoid some call to the db...
17:14 < gabrielstuff> of course.
17:15 < gabrielstuff> any idea ?
17:15 < rhalff> I hate it when you think you have a great idea and half way the week you discover it has already been done, only 10 times better... :D
17:22 < jasonkuhrt> can someone explain the usecase for socket.destroy()
17:22 < gabrielstuff> so anyone ?
17:22 < jasonkuhrt> docs mention that socket.destroy() is tailored to error situations
17:22 < jasonkuhrt> what does that actually mean and what does destroy do specially that end() doesn't
17:22 < jasonkuhrt> ?
17:25 < mmalecki> jasonkuhrt: https://github.com/joyent/node/blob/master/lib/net.js#L388-L398 vs https://github.com/joyent/node/blob/master/lib/net.js#L423-L474
17:25 < jaCen915> my assumption would be end() keeps the instance around for later use while destroy removes it
17:26 < mbalho> TonkaTruck: i guess it could be a really short blog post, i just couldnt figure out what to call it so that people could google for it
17:26 < jasonkuhrt> hm, so my tcp server is wrapping a domain around each connection
17:27 < jasonkuhrt> when a socket connection has an error it seems that destroy() would be the appropiate next step given I the connection is in an undefined state
17:42 < neeky> mbalho, isn't that what npm link is for?
17:43 < neeky> add to that + .npmrc to allow linking locally not globally
17:43 < mbalho> neeky: similar but npm link makes a symlink for 1 module at a time
17:44 < neeky> oh i see you are symlinking the entire node_modules
17:44 < mbalho> neeky: yea you develop from inside a node_modules folder
17:45 < neeky> now the issue is what if the original developer has abandoned bar and you want to now publish your fork
17:45 < neeky> that's where the package repo is a bit holey
17:45 < mbalho> you email them
17:45 < neeky> s/holey/hokey/
17:46 < mbalho> you can immediately push to github and use the repo as the version, then you email the maintainer
17:46 < mbalho> if they dont respond and the package is abandoned  you can get a npm admin to give you the package name
17:47 < neeky> I guess so
17:48 < mbalho> ?
17:48 < neeky> for example i just ported a package to express 3 and the original package works fine, but the dev is not going to merge
17:48 < mbalho> why not?
17:48 < neeky> so i guess i can publish under a similar package name but use keywords so people can find it
17:49 < neeky> I'm not sure, I guess it "works for him", or he's abandoned the project - not really sure
17:49 < mbalho> did you break backwards compat?
17:50 < neeky> it's probably not npm-worthy - the original package had lots of very specific code in it - 
17:50 < neeky> yeah, there's several changes between express 2 and 3 that I wasn't prepared to spend time making backwards compatible
17:50 < neeky> so my chnage would break it on express 2.x
17:51 < mbalho> ah
17:51 < neeky> MY project doesn't have the time right now to do something like that
17:52 < neeky> I may just shelve it and publish later one I get my app in production - my investors (me) are ready to get some $$$ moving :)
17:52 < aandy> one art, please
17:52  * aandy waves dollar bill
17:56 < kenperkins> anyone have a simple package for md5ing a file
17:56 < mbalho> none on npm?
17:56 < kenperkins> looking, just figured people here are better than npm
17:57  * kenperkins desperatley waits for npmjs ratings
17:57 < aandy> there are indirect ratings - downloads, views
17:57 < mbalho> beta: http://npmsearch.com
17:57 < kenperkins> that's not a good measure :D
17:57 < execut3> kenperkins, why not use the crypto module
17:57 < execut3> kenperkins, why not use the crypto module?
17:57 < kenperkins> execut3: just don't want to write on data handlers :D
17:57 < kenperkins> lazy
17:57 < aandy> huh
17:58 < neeky> child process with a callback?
17:58 < execut3> kenperkins, its quite simple
17:58 < aandy> spawn python script querying duckduckgo for "what's md5 of <strings>"?
17:58 < execut3> var hash = crypto.createHash('md5'), s = fs.ReadStream('path'); s.on('data', hash.update,bind(hash)); s.on('end', ... shasum.digest('hex') ... )
17:59 < execut3> * .bind, not ,bind
17:59 < kenperkins> execut3: yea I know, I just wanted something with a callback and no handlers :D
17:59 < kenperkins> it's fine
18:00 < neeky> child = exec('cat file | md5sum', function (err,output,stderr){}
18:00 < aandy> kenperkins: you could easily wrap it in a function which takes (text, cb) :)
18:00 < execut3> kenperkins, just create an helper function
18:00 < kenperkins> aandy: yep
18:00 < execut3> function hash_file(algo, path, cb) { var hash = crypto.createHash(algo), s = fs.ReadStream(path); s.on('data', hash.update.bind(hash)); s.on('end', function(){ cb(shasum.digest('hex')); }) }
18:00 < kenperkins> I presumed someone already had, that's all :D
18:00 < execut3> you can even publish that as an npm module
18:00 < kenperkins> it probablty already has been 
18:00 < kenperkins> that's why I was asking :D
18:01 < aandy> it's probably too simple to make a specific module for. at least, that'd be my reasoning
18:01 < kenperkins> tbh, I expected mikeal's filed to do it
18:02 < mikeal> filed has issues
18:02 < mikeal> needs to be scrapped and re-written for new streams
18:02 < kenperkins> rgr that
18:02 < kenperkins> trying to track down the "You've already piped to this stream" with request, is that a function of new streams as well?
18:02 < kenperkins> pretty sure I only call pipe once
18:02 < kenperkins> (deep in the bowels of pkgcloud)
18:04 < kenperkins> mikeal ^
18:06 < mikeal> hrm......
18:06 < mikeal> filed does this trick/hack/bug where it pipes twice to the destination
18:06 < kenperkins> pkgcloud does appear to use filed if you pass in a naked path
18:07 < mikeal> because in old streams you had to pipe once before nextTick but we don't have the underlying stream or stat data yet, so we pipe again with that to reset the source
18:07 < kenperkins> https://github.com/nodejitsu/pkgcloud/blob/master/lib/pkgcloud/rackspace/storage/client/files.js#L65
18:07 < mikeal> who is emitting the "you've already piped" error?
18:07 < kenperkins> if there's anything I want to "master" at nodeconf, it's streams
18:07 < mikeal> is it an old version of request?
18:07 < kenperkins> request is
18:07 < kenperkins> let me look what version pkgcloud has been using
18:07 < mikeal> yeah, i think that's an old version
18:08 < kenperkins> 2.21.x
18:08 < mikeal> hrm
18:08 < ejexin> :s
18:08 < ejexin> continuum isn't working :(
18:09 < mikeal> https://github.com/mikeal/request/blob/master/index.js#L389
18:09 < mikeal> maybe we should change that to .on(
18:10 < mikeal> and remove the last guard, and just let the first one work
18:10 < mikeal> kenperkins: let me try this
18:10 < kenperkins> meaning remove 411
18:10 < ejexin> Benvie: Error: Cannot find module 'esprima'
18:10 < kenperkins> mikeal: let me know
18:10 < mikeal> just removing 411 is likely to break under the hood
18:11 < kenperkins> k
18:11 < mikeal> because the main pipe is still .on(
18:11 < mikeal> er .once(
18:11 < kenperkins> i can test if you gist me something
18:11 < Benvie> ejexin, you need to pull submodules
18:11 < ejexin> alright done
18:12 < Benvie> since it uses a custom version of esprima https://github.com/Benvie/esprima
18:12 < mikeal> kenperkins: try master
18:12 < mikeal> request master
18:12 < ejexin> Benvie: how should i approach that then?
18:12 < kenperkins> yep I knew what you mean
18:12 < kenperkins> brb
18:12 < kenperkins> cowboy coding ftw
18:13 <@MI6> joyent/node: isaacs created tag v0.10.12 - http://git.io/ixFr3A
18:16 <@MI6> joyent/node: isaacs v0.10 * 67cb801 : blog: Release 0.10.12 (+3 more commits) - http://git.io/BKEUMg
18:16 < gabrielstuff> Hi all, I've tried this snippet, https://gist.github.com/aheckmann/2215393 but I never got the event
18:16 < gabrielstuff> ...
18:16 < gabrielstuff> post save
18:16 < gabrielstuff> any one go info for this ?
18:17 < ejexin> Benvie:  what am i missing? :P
18:18 < tdignan> Hi. I am using node-static. It appears to me that it does not serve TTF files properly. When testing with other files, using wget, I am able to download them. For some reason, it is not picking up my helvetica_neue.ttf file, though.
18:18 < tdignan> Any ideas on how to proceed?
18:21 < kenperkins> mikeal, that seems to be working
18:22 < mikeal> sweet
18:22 < mikeal> i'll give people a day to test it
18:22 < mikeal> then push a release
18:22 < mikeal> remind me if i forget :)
18:22 < kenperkins> mikeal: should have just opened an issue my bad
18:23 -!- mode/#Node.js [+o MI6] by ChanServ
18:24 < mikeal> no problem :)
18:24 < mikeal> this was the right place, since you thought it was a filed issue and it really wasn't
18:25 < gabrielstuff> Hi all, I've tried this snippet, https://gist.github.com/aheckmann/2215393 but I never got the event ? anyone ?
18:25 < gabrielstuff> i'm talking about the post save event
18:27 < jas-> Greetings and salutations
18:28 < jas-> When implementing a new class within the crypto object should it make use of the DEFAULT_ENCODING for output defined in crypto.js?
18:29 < aandy> class?
18:30 < jas-> aandy: class Certificate : public ObjectWrap {
18:30 < neeky> is it possible to use the same route paths for API and web clients, BUT serve different content based on which one is connected?
18:31 < neeky> or should I force my self to learn backbone or some other client side consumer of my REST api
18:31 < neeky> so that I just have a single set of resource endpoints
18:31 < aandy> ah, c++
18:32 < jas-> aandy: Yeah I am working on a new class (object) implementing a few functions but want to make sure the pr will conform to standards
18:32 < brettlangdon> neeky do you mean like, if it is a browser serve html if it is an API client send JSON, something like that?
18:33 < neeky> exactly
18:33 < aandy> jas-: can't say. i'm not working on the core, sry
18:33 < neeky> I think the trend is to consume the web service in all clients by having a client side REST client
18:33 < neeky> via backbone or some other lib
18:33 < neeky> but that sounds hard, and I'm lazy
18:34 < jas-> aandy: No worries, technically the encoding options are defined in the corresponding lib/[section-of-core].js file(s)
18:34 < brettlangdon> neeky, yes, that is at least what I would do, I think trying to decide one or the other is a little too complicated IMHO
18:34 < brettlangdon> neeky, you can get started the "easy" way with jQuery and $.ajax
18:34 < neeky> yeah, my big problem on the browser based clients is request signing
18:35 < neeky> I want to sign all API requests using an auth token
18:36 < neeky> so I've got to make the browser use crypt, keep up with a toke to sign with, etc
18:36  * neeky is hmmmm.
18:36 < brettlangdon> neeky, have fun :)
18:36 < neeky> yeah
18:36 < brettlangdon> a little above anything I have ever done with REST
18:37 < neeky> my first one too
18:38 < brettlangdon> neeky, have you checked out restify? it is a great module for writing REST server with node.js
18:39 < brettlangdon> I wasn't the happiest with the options for auth with it, but it is well worth a look if you haven't
18:40 < neeky> I looked at some server side libs, but node+express/connect+mongoose is a 90% solution already :)
18:40 < neeky> I don't see needing too much more plumbing except my controller logic
18:41 < brettlangdon> yeah, restify is like express, but built just for REST servers
18:41 < neeky> looking at it now
18:44 < rburton-> re
18:44 < rburton-> So I've been looking for a nice MVC framework for node that supports some nice model relationships. Compound only has hasMany and belongsTo but no ManyToMany etc.
18:44 < rburton-> Any suggestions of things to go RTFM or frameworks to RTFM?
18:45 < Hithon> anyone encountered a express or http issue where http requests get closed early?
18:45 < rburton-> Hithon I saw that question on StackOverFlow the other day
18:45 < rburton-> I just stumpbled upon it
18:45 < rburton-> didn't read it since it wasn't relevant to me
18:45 < Hithon> any idea what the topic resembled?
18:45 < rburton-> let me see on min
18:46 < Hithon> it's weird, it just started happening
18:46 < rburton-> can't find it sorry
18:46 < Hithon> was working fine before
18:46 < rburton-> there is http://stackoverflow.com/questions/7222467/express-js-http-request-timeout
18:47 < rburton-> sounds like the timeout is changing somehow
18:47 < Hithon> that's frustrating
18:47 < rburton-> totallly understand
18:47 < Hithon> my guess is that something changed in express, my code has been static for months
18:48 < rburton-> did a history check
18:52 < neeky> brettlangdon, I think my simple answer is the browser always connects to the / route and REST api is on the /api route 
18:52 < brettlangdon> neeky, that seems like a viable solution
18:52 < neeky> so so the native client phone app will always conenct to /api directly
18:53 < neeky> and the browser app coonsumes /api via /
18:53 < neeky> + backbone.js, which he gets served from /
18:53 < neeky> ewasy enough I guess
18:55 < algesten> and 0.10.12 is ALIIIIVE… 
18:56 < jhouk> neeky That's basically the setup we have
18:56 < jhouk> The main app loads on /
18:56 < wc-> neeky: thats basically what airbnb's rendr does, it assumes there is an api living somewhere to connect to
18:57 < wc-> and native clients could just go to that api
18:57 < jhouk> All AJAX comes through via /api/... with CSRF protection
18:57 < wc-> i guess you could have the /api on the same nodejs app, i opted to split them up
18:57 < wc-> so one app serves the rendr frontend, one app runs the /api backend
18:58 < neeky> jhouk, do you use jQuery for the api interaction?
18:58 < jhouk> neeky We went with Backbone <3
18:58 < neeky> coolnalu, that's what I'm looking at too
18:59 < neeky> my main problem is I'm building a MVP - Minimum Viable Product to make a market decision on - 
18:59 < neeky> weird how the business side has so much crossover with the tect side nowdays
18:59 < neeky> s/tect/tech/
19:00 < jhouk> We had to do a little hacking with jQuery's beforeSend in order to inject our CSRFToken in all request headers underneath Backbone
19:00 < jhouk> Forgot about that part :)
19:00 < neeky> do you sign your requests?
19:01 < neeky> or purely use the csrf token
19:02 < jhouk> Just the token.  The whole pipe is over SSL, so we figure if the AJAX requests have the same token that got delivered via the initial app load, things are good
19:03 < neeky> yeah, I think I've spent waay too much time on request signing, since my pipe is ssl, and I have a secure session id and http(s) basic auth
19:03 < neeky> MVP say to punt signing!
19:03 < jhouk> Sorry, that piece doesn't touch AJAX. We had to inject the coden in Backbone.sync's beforeSend(), not AJAX.  Getting my wires crossed, sorry ><
19:03 < jhouk> Argh, s/AJAX/jQuery
19:03 < jhouk> I'm a mess
19:04 < neeky> np, I'll figure it out soon enough
19:04 < jhouk> neeky Thats what we decided too :)
19:05 < jhouk> We also set up XSS protection in our AJAX responses that inject a garbage prefix in all our JSON responses to thwart snoopers
19:05 < jhouk> *That*'s what we needed to hook into jQuery to fix the parsing of in the response. Not inserting the request header.
19:07 < brostachio> i'm having a hard time finding a module for page/file caching
19:07 < neeky> wc-, I've opted to serve both from a single app, but using elastic beanstalk to manage scaling
19:08 < neeky> brostachio, theres express middleware for caching
19:08 < brostachio> neeky, tyvm i'll look that up
19:09 < neeky> cant remember the name, but it uses memcached for the cache store
19:10 < neeky> brostachio, found it : node-cacher
19:11 < brostachio> i was using file system caching before we ported over, but i sluppose memcached could work, i just don't want the cache to be stale for any reason ohter than date
19:14 < jaha> Can anyone help me get NVM to work with sudo? Im trying to get it playing nice on a raspberry pi
19:15 < jaha> https://github.com/creationix/nvm/issues/43 doesnt seem to help
19:17 < iamjarvo> so I'm getting this error "requires bunyan@'0.18.2' but will load" on another line "which is version 0.21.3"  does that mean there is a  newer version of bunyan installed on my system?
19:18 < sashman> do i update all modules in app dir with npm install?
19:20 < Hithon> so
19:20 < Hithon> I put nginx proxy in front of it, that cleared it up
19:20 < Hithon> f'ing weird
19:27 < wangbus> nginx is best proxy to use for node?
19:27 < freewil> thats what i would recommend
19:27 < squeeks> "the best". lighty is good too.
19:34 < mscdex> does nginx have an option to disable request buffering yet?
19:36 < Zaxnyd> if you're using grunt to run your server, would that make it a dependency rather than devDependency?
19:37 < Havvy> If you use it for a production server, yes.
19:37 < Zaxnyd> I mean, one could NOT run it via grunt I suppose
19:37 < Zaxnyd> yeah ok
19:37 < Zaxnyd> that makes sense
19:41 < werle> @juliangruber https://github.com/jwerle/sregex
19:56 < praveen__> hi
19:56 < praveen__> I need some advice
19:56 < praveen__> any once can help
19:56 < praveen__> ?
19:56 < stagas> ask ahead
19:57 < praveen__> I got some xml data from servre and now I need to modify it and psuh it back
19:57 < praveen__> I am not able to figure it out
19:57 < praveen__> how to chane node text values 
19:58 < stagas> praveen__: you need to parse to a js object, modify and xml it back again
19:59 < stagas> praveen__: there should be modules that do those things in npm
20:00 < praveen__> I usel xmlDOM but not able to figure out how to modify it
20:00 < praveen__> convert it to parse string
20:06 < Zaxnyd> I have these two lines, but req.session is undefined.  any idea why? app.use(express.cookieParser());
20:06 < Zaxnyd> app.use(express.cookieSession());
20:06 < perezd> is there a clean way to add methods to express.js's ServerResponse object that doesn't rely on middleware order?
20:07 < iamjarvo> so i am getting this error "[Error: Symbol DTraceProviderBindings_module not found.]
20:07 < iamjarvo> { [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }
20:07 < iamjarvo> { [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }" and dtrace-provider is definitely installed
20:10 < Zaxnyd> trying to get express session working, and I'm having trouble.  am I missing something here? https://gist.github.com/Zaxnyd/989807d72521d63db8b4
20:13 < Zaxnyd> apparently it was just the placement of my declaration of the middlewar
20:13 < Zaxnyd> +e
20:24 < wc-> hi all, i have a nodejs app using express, i need to do user creation / password etc etc
20:24 < wc-> i found passportjs, any other suggestions?
20:32 < rburton-> Anyone manage to get node-orm2 to work alongside with compound.js
20:35 < monokrome> Anyone have a recommendation for a library that will send email using TLS?
20:48 -!- mode/#Node.js [+o mbalho] by ChanServ
20:51 < wesside> New mysql driver for node.js from oracle…https://news.ycombinator.com/item?id=5901929
20:51 < takeyBP> Howdy all, doing some perf testing on a macbook air. Simple web server (express) responding w/ 200. Only getting ~ 3000 req/min. Does this sound about right?
20:51 <@MI6> joyent/node: Sam Roberts v0.10 * 5fc8efb : doc: call console module 'console' not 'stdio' - http://git.io/-1Ue-Q
20:56 < bnoordhuis> takeyBP: with all due respect, but os x is about the worst platform to do performance benchmarks on
20:57 < bnoordhuis> takeyBP: and without further details (what hardware, what processes are running, what's your app doing, etc.) it's impossible to say if 3k/min is good or not
20:58 < takeyBP> bnoordhuis: core i7, 1.8, 4gb ram. Simple node app that accepts a post request and responds with 200. that is it.
20:59 <@tjfontaine> also could be the broken osx ab
21:01 < takeyBP> tjfontaine: also tested with jmeter and get similar throughput. 
21:04 < mb___> Hello, if I declare a variable in app.js: var user_sockets = {}, then I declare a fucntion. it seems the variable is not visible inside the function. Is there a way for the function to access the variable?
21:04 < mb___> http://pastebin.com/9TGijQPP
21:05 < mb___> oh, nm. the variable is accessible, it's something else. okay, never mind :)
21:10 < patrickod> how "experimental" is cluster in 0.10?
21:10 < patrickod> it seems that it's held that status for a long time. I'm really curious to try it out
21:13 < bnoordhuis> patrickod: well... we're keeping it at 'experimental' because we may want to change the api in the future
21:13 < bnoordhuis> patrickod: that said, the api is stable in major releases. iow, it won't change in v0.10
21:13 < accc> on my app, cluster runs fine and stable
21:14 < patrickod> bnoordhuis so it's not the sort of experimental that dies unexpectedly all the time?
21:14 < accc> nope, not on my mind
21:14 < bnoordhuis> patrickod: no. 'experimental' in node means 'api may change drastically between major releases'
21:14 < patrickod> ah ok.
21:14 < patrickod> that's ok. I can deal with that
21:24 < Krinkle> >> global.Foo && Foo.something
21:24 < purr> Krinkle: ReferenceError: global is not defined
21:24 < Krinkle> >> var global = {}; global.Foo && Foo.something
21:24 < purr> Krinkle: undefined
21:24 < Krinkle> >> var global = {};  Foo.something && global.Foo
21:24 < purr> Krinkle: ReferenceError: Foo is not defined
21:28 < ReinH> So... uh... `npm install` is *randomly* throwing ENOENT on me.
21:32 <@isaacs> ReinH: randomly?  you sure it's not predictable based on whether or not the file exists?
21:32 <@isaacs> ReinH: what's `npm -v` say?
21:32 < ReinH> node 0.10.2 npm 1.2.14
21:32 <@isaacs> ReinH: omg!!!!!
21:32 <@isaacs> ReinH: upgrade, dude!
21:32 < ReinH> isaacs: apt packages
21:32 <@mbalho> lol
21:33 <@isaacs> ReinH: 0.10.12 just came out, with 1.2.32
21:33 <@mbalho> well theres your problem
21:33 < ReinH> And if upgrading is not feasible?
21:33 < squeeks> sit in the corner and think about what you've done.
21:34 < ReinH> ...
21:34 < ReinH> that is not helpful
21:34 < ReinH> or mature
21:34 <@mbalho> ReinH: it was a joke
21:34 < ReinH> I'm just a guy trying to do a job
21:34 < ReinH> I'd appreciate some help
21:34 < ReinH> I can get the snark from my wife
21:34 <@mbalho> cool attitude!
21:35 < squeeks> You're more than welcome to ask for a full refund.
21:35 < ReinH> wow
21:35 < ReinH> Are you always so patronizing and dismissive?
21:35 <@mbalho> ReinH: learn to take a joke, and perhaps consider paid support if you want to set the rules of engagement http://thenodefirm.com/
21:35 < squeeks> isaacs: is anyone else game to start fixing npm's lib/cache.js at the moment?
21:35 < ReinH> mbalho: is this seriously how the nodejs community "helps" people?
21:35 < ReinH> wow
21:36 < Havvy> ReinH: Not always.
21:36 < ReinH> you guys have been nothing but rude and dismissive to me
21:36 < squeeks> Serious business.
21:36 < ReinH> while acting like *I* am the one being rude
21:36 < ReinH> amazing
21:36 < bryanstedman> ReinH: People around here are cool - you just need to chill out
21:36 < bryanstedman> What is your problem again?
21:36 < ReinH> yes, please keep telling me how I need to behave
21:37 < mscdex> node.js rules!
21:37 < ReinH> I can tell I've made a mistake in coming here.
21:37 < Havvy> But yes, if you use a point release that's not currently, you are unlikely to get help.
21:37 < squeeks> With an attitude like that, you sure have.
21:37 < Havvy> *current
21:37 < ReinH> squeeks: yes, wanting to be treated with respect is not a welcome3 attitude here.
21:37 < ReinH> I am now aware of that, thank you.
21:38 < bryanstedman> ReinH: That didn't come out right - I just mean that snark snowballs here :)
21:38 < ReinH> The proper thing to do when you insult someone is to apologize
21:38 < ReinH> not to tell them to "deal with it" or "get a sense of humor"
21:38 < ReinH> you don't get to decide what I find funny
21:39 < mscdex> ReinH: are you on Ubuntu or ?
21:39 < ReinH> mscdex: Linux precise64 3.2.0-23-generic #36-Ubuntu SMP Tue Apr 10 20:39:51 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux
21:39 < ReinH> Yes, Ubuntu.
21:39 < mscdex> ReinH: FWIW you might look into using this ppa to keep up to date: https://launchpad.net/~chris-lea/+archive/node.js/
21:40 < ReinH> mscdex: thanks, that'll help.
21:40 < mscdex> ReinH: node is still evolving pretty quickly and main repos don't keep up often
21:40 < ReinH> mscdex: will I be dismissed again if I do that and then ask for help with 0.10.11?
21:40 < harrisonm> Yeah, that's what I was about to suggest.  Main repos are pretty awful for anything that's under a lot of active development (you get that with Node and Ruby a lot)
21:40 < squeeks> Someone might crack a funny, sure.
21:41 < ReinH> harrisonm: Yeah, I'd love to install from source but we have RULES here :/
21:41 < squeeks> But be damned if I am going to sit here in fear with "oh no reinh's going to blow his stack again because someone cracked a joke"
21:41 < ReinH> squeeks: there's cracking a joke and then there's what you did afterwards
21:42 < mscdex> ReinH: well, it's entirely possible that the problem has been remedied by a newer node/npm version, so i would just try
21:42 < ReinH> mscdex: sure
21:42 < mscdex> ReinH: Chris (who maintains the PPA) is pretty good about keeping things up to date and node 0.10.12 just came out today
21:43 < mscdex> ReinH: i think you can also still update npm manually with `npm install npm -g` or some such
21:43 < squeeks> What, make a not so funny joke? I can't win them all. Neither can you.
21:43 < ReinH> squeeks: try to have a little empathy for the emotional state of people who come in here and ask for help with node or npm. They might be, say, frustrated.
21:43 < ReinH> And frustrated people might not be in the mood for jokes at their expense.
21:43 < ReinH> Just think about it for a second.
21:44 < squeeks> Nah, I'm right.
21:44 < bryanstedman> hehe 
21:44 < ReinH> Ok, fair enough.
21:44 < ReinH> It was worth a shot.
21:44 < squeeks> If people can't keep their emotions in a little bit of check when other people are giving their own time to help them, it's time to consider therapy, or buying another rubber duck.
21:45 < ReinH> Alright. Then you won't mind if I add you to my ignore list.
21:45 < ReinH> Since you haven't offered anything of value.
21:45 < bryanstedman> squeeks: +1
21:46 < squeeks> Great, this means I can totally slag you out now, everyone else will laugh but you.
21:47 < ReinH> I'm sure it will be hilarious given your track record.
21:48 <@mbalho> ReinH: its generally frowned upon to feel such entitlement in a volunteer run support channel FYI
21:48 <@mbalho> squeeks: its also frowned upon to troll people like you have
21:48 < ReinH> mbalho: To feel entitled to be treated with respect?
21:48 < ReinH> mbalho: as opposed to feeling entitled to insult people?
21:48 < ReinH> that's *frowned* upon?
21:48 < ReinH> Good to know.
21:49 < ReinH> mbalho: Can you show me where I acted entitled to anything else?
21:49 < patrickod> anyone have any experience with supervisord and node.js apps? 
21:49 < squeeks> http://www.amazon.com/dp/B001EOF6OG cheapest I could find. I might get this for my desk at work.
21:49 < pyrotech_> anyone done much ACL?
21:50 <@mbalho> ReinH: you stated that you just wanted an answer to a problem and that you were frustrated, without considering that this channel is run by vulunteers that cant read your mind
21:50 <@mbalho> ReinH: maybe next time you and squeeks can avoid a long and drawn out argument and just ignore each other
21:51 < ReinH> mbalho: I don't understand how that is entitlement
21:51 < ReinH> I *do* want an answer.
21:51 < ReinH> I'd prefer to not have to wade through squeeks' rather purile attempts at humor to get it
21:52 < ReinH> I don't feel entitled to an answer, no.
21:52 < squeeks> Yes, and getting an answer is at the discretion of someone else giving up their time for you. Thus, you have to give a little bit of respect before you can get what you want.
21:52 < ReinH> squeeks: you have to give respect to get it.
21:52 < ReinH> I have been nothing but respectful.
21:52 < squeeks> Yeah… uhh… about that rubber duck...
21:53 < ReinH> I realize that people who offer help often feel entitled to belittle those who ask them for help
21:53 < ReinH> That doesn't mean that I have to sit here and take it
21:54 < ReinH> If you don't want to help me, fine.
21:54 <@MI6> joyent/libuv: Ben Noordhuis v0.10 * 6607e70 : test: open stdout fd in write-only mode - http://git.io/820VCQ
21:54 <@mbalho> ReinH: dude, you are coming across as taking this way too seriously, nobody is attacking you
21:55 <@mbalho> ReinH: if you ask more node questions you will get more answers
21:56 <@mbalho> ReinH: if someone is belittling someone else i will gladly kick them
21:57 <@mbalho> ReinH: similarly if someone is discussing non nodejs topics at length (such as irc support channel conduct) i will ask them to switch to a appropriate channel
21:57 < ReinH> mbalho: squeeks has done nothing but troll me since I've joined and you guys have been defending him. As someone who spends a lot of time in OSS communities, it's frustrating when that sort of behavior is enabled. I'll stop talking about it now.
21:58 < bnoordhuis> ReinH: you're on your own if you use the node from apt, we don't maintain it
21:59 < ReinH> bnoordhuis: that's totally fair.
21:59 < ReinH> I would be interested in knowing if anyone has seen this sort of error before.
21:59 < ReinH> I will try self-updating npm to see if it resolves the issue.
22:00 < bnoordhuis> ReinH: you'll also need to update node
22:00 < ReinH> bnoordhuis: can node self-update or will I have to install from source (or an updated package)?
22:00 < bnoordhuis> ReinH: from tarball (i.e. source). it's pretty easy though, just configure and make
22:03 < johnjohn101> will there ever by a 1.0 version?
22:04 < mechanicalduck> hi
22:04 <@mbalho> mechanicalduck: hi
22:04 <@mbalho> johnjohn101: node uses semver http://semver-ftw.org/
22:05 <@mbalho> johnjohn101: well sort of
22:05 < mechanicalduck> so there are so many js projects out there
22:05 < mechanicalduck> Backbone.js Marionette.js
22:05 < mechanicalduck> and so on
22:05 < mechanicalduck> are those relevant to nodejs?
22:06 <@mbalho> mechanicalduck: you should go look up what nodejs is on google and read some articles about it
22:06 < johnjohn101> mbalho: is the current version considered production ready?
22:06 < mechanicalduck> mbalho: I know, it is for the server side
22:06 <@mbalho> johnjohn101: node releases stable versions that many people use in production
22:07 < mechanicalduck> mbalho: the other stuff I just named, those are intended for client side, right?
22:07 < bryanstedman> mechanicalduck: node is JS on the server - those projects are client side
22:07 <@mbalho> mechanicalduck: yep
22:07 < bryanstedman> you beat me to it :)
22:08 < mechanicalduck> is there stuff like backbone.js for node.js, too?
22:08 < Jentrep> Oh god
22:09 < Jentrep> i just started a simple Hosting instance with gandi.net
22:09 < johnjohn101> you called?
22:09 < Jentrep> Using Node.js/Postgres
22:09 < mscdex> ReinH: there are also binary tarballs available on nodejs.org if you want to go that route
22:09 < Jentrep> And now I cant even set it up
22:09 < Jentrep> since I dont know Javascript
22:09 < Jentrep> Any help?
22:10 < Jentrep> Why is this channel SO full??? O_o
22:10 < mscdex> Jentrep: lots of people love node!
22:10 < Jentrep> My problems: http://wiki.gandi.net/en/simple/instance/nodejs
22:10 < ReinH> mscdex: I'm on 0.10.11 and 1.2.14 now with the same error. I could update to .12 but there's a very good chance the issue is with this system's configuration somehow. I'd just like some guidance on what might be causing it and where to look.
22:11 < mscdex> ReinH: can you post the entire output to a gist?
22:12 < Jentrep> My website is not in Node
22:12 < mscdex> ReinH: wait, you're still on npm 1.2.14?
22:12 < Jentrep> It sjust html/css/js files
22:12 < Jentrep> I just want to put some files up :(
22:12 < ReinH> mscdex: I'm sorry, I thought that was latest because that's what I got when I did npm update npm. I'll fix.
22:12 < mscdex> ReinH: you might have to add -g: `npm install npm -g`
22:13 < ReinH> mscdex: oh I did, sorry. Let me update this.
22:13 < Jentrep> WTF is NPM??
22:13 < mscdex> Jentrep: npmjs.org
22:14 <@mbalho> Jentrep: look up node.js tutorials on google and read them
22:14 < Jentrep> fuuuuuuu
22:14 < Jentrep> thats it
22:14 < Jentrep> I am hiring
22:14 < Jentrep> Whoever can get me a very basic and secure node.js server
22:14 < Jentrep> that can handle http requests for basic files
22:14 < Jentrep> and connect it to postgres
22:14 < Jentrep> but nothing more
22:14 < bryanstedman> Jentrep: Checkout express and heroku
22:14 < sirwan> fuck node
22:15 < mscdex> Jentrep: express
22:15 < sirwan> FUCK IT
22:15 < sirwan> just use ruby sinatra
22:15 < sirwan> and can.js
22:15 < Jentrep> I CANT USE ANYTHING EXCEPT NODE
22:15 < sirwan> unless your doing sockets 
22:15 < Jentrep> fuuuuuuuuuu
22:15 < sirwan> dont bother with node
22:15 < sirwan> node is fucking queer man
22:15 < sirwan> just forget it
22:15 < mscdex> man, what is with the channel today
22:15 < sirwan> you dont need the heartache dude
22:15 < sirwan> javascript sucks as it is
22:15 < sirwan> and your building everything with that old shitty language
22:15 < ReinH> mscdex: I am staying out of this one ;)
22:16 < patrickod> having interesting issues with cluster at the moment trying trying to listen on port 3000 but getting EACCES which is usually caused by binding to ports < 1042
22:16 < patrickod> 1024 even. 
22:16 < Franz__> somebody can help me with this php array to js?
22:16 < Franz__> $names=array(
22:16 < Franz__> 1=>"albert",
22:16 < Franz__> 3=>"joe", 
22:16 < Jentrep> i hate JS
22:16 <@mbalho> Franz__: dont post big things into irc please
22:16 < sirwan> this isnt a php room
22:16 < mscdex> Jentrep: if that's the case, node isn't for you
22:16 < Franz__> mbalho sure
22:16 < Havvy> Franz__: json_encode
22:16 < Jentrep> But I will hire a node.js person
22:16 < sirwan> Franz__: you need to convert it to json
22:16 < Havvy> Also, ##php
22:16 < Jentrep> Well there are a lot of people who use JS
22:16 < sirwan> this is what node has done to people
22:16 < Kakera> var names = {1: 'albert', 3: 'joe'}
22:16 < Jentrep> So having a server side taht is in JS is smart
22:16 < Franz__> why json?
22:17 < Jentrep> for future contract work
22:17 < squeeks> patrickod: or ports already allocated to something else. stupid question of: netstat -nlp?
22:17 <@MI6> joyent/libuv: Bert Belder v0.10 * 495d1a0 : windows: uv_spawn shouldn't reject reparse points - http://git.io/VLfKlA
22:17 < Franz__> thank you very much Kakera
22:17 < ReinH> Franz__: JSON is how you represent Simple Objects in Javascript.
22:17 < jcrugzz> node isnt all js guys
22:17 < Franz__> i will try, thank you so much!!
22:17 < patrickod> squeeks nothing listed for the port 3000
22:17 < bryanstedman> Jentrep: it does sound unnecessary for what you are doing
22:17 < jcrugzz> libuv is some sexy c code
22:17 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
22:17 < Jentrep> bryanstedman: it completely is
22:17 < patrickod> squeeks the issue only presents itself when I run the cluster master file with supervisord 
22:18 < Jentrep> bryanstedman: except its not
22:18 < Jentrep> bryanstedman: http://wiki.gandi.net/en/simple/instance/nodejs  < ---- my problems
22:18 < patrickod> before I used cluster it was able to bind to the port, introducing cluster has caused this error
22:18 < bryanstedman> Jentrep: Have you looked at express?
22:18 < Jentrep> Eh/
22:18 < Jentrep> ?
22:18 < mscdex> expressjs.com
22:18 < ReinH> mscdex: well at least I have a new, more descriptive error. :) Gist incoming...
22:18 < Jentrep> i have not looked at JS
22:18 < Franz__> Kakera l*
22:19 < Franz__> Kakera, ;*
22:19 < Kakera> what
22:19 < ReinH> mscdex: Never mind. This one I actually understand!
22:19 < zpao> has anybody had success using commit shas in dependencies? that works when i initially install, but if i update the dependency to a new sha, npm install doesn't update that package...
22:19 <@MI6> joyent/libuv: Bert Belder v0.8 * 399c3ef : windows: uv_spawn shouldn't reject reparse points - http://git.io/JI0XuQ
22:19 < mscdex> ReinH: cool
22:19 < squeeks> patrickod: oh. err. I've nfi about supervisord. 
22:19 < ReinH> mscdex: I think ERNOENT was obscuring the actual error before.
22:20 < Jentrep> bryanstedman: is there anyone here who will do a quick contracting work for a uber simple Node.JS server?
22:20 < patrickod> squeeks yeah I'm not sure what's causing it to error out. I'm thinking that maybe the main process isn't satisfying its requirements for "ALIVE" and it's starting another instance
22:20 < mscdex> zpao: what format are you using for the dependency?
22:20 < zpao> git://repo#sha
22:20 < squeeks> patrickod: can't use a pid file or other locking means?
22:21 <@mbalho> ReinH: npm creates a file called npm-debug.log that you can put in a gist etc for easy IRC help enhancement
22:21 < patrickod> squeeks yeah I think I'll have to make this use a pidfile. That's my next route 
22:21 < bryanstedman> Jentrep: I wouldn't know - I'm too expensive.
22:22 < zpao> mscdex: it looks like i can trick npm by pointing it at github's tarball urls, but if I can avoid doing that, I'd be bit happier
22:22 < ReinH> mbalho: Thanks.
22:23 < Jentrep> Are you fucking shitting me??
22:23 < Jentrep> Am I seriously going to have to learn Node???
22:23 < mscdex> zpao: FWIW: https://github.com/isaacs/npm/issues/1727
22:23 <@mbalho> Jentrep: please tone down your level of rage
22:23 < ReinH> mscdex: Problem solved by more precise error reporting. :)
22:24 < mscdex> ReinH: awesome :-)
22:24 < Jentrep> please tone down your rate of response to my comments
22:24 < ReinH> mscdex: Thanks for the help. Sorry for going off a bit earlier.
22:24 < mscdex> np
22:25 < Jentrep> this room is WAY to big for the little help it offers
22:25 <@mbalho> Jentrep: do you have a specific question?
22:25 < zpao> mscdex: 2 years... awesome. thanks for finding that!
22:25 < Jentrep> I already asked it
22:26 < Jentrep> mbalho: scroll up?
22:26 <@mbalho> Jentrep: can you ask your specific question again please?
22:26 < ReinH> mscdex: I would like to offer you a *real* Exhibit A for entitled help-seeking behavior. ;)
22:26 < bnoordhuis> Jentrep: if no one's replying you can assume the answer is 'no'
22:26 < bryanstedman> Jentrep: help is harder come by if you are unwilling to learn
22:26 < Jentrep> bryanstedman: unwilling to learn what?
22:26 < mscdex> zpao: yeah, it looks like someone has just recently posted a patch to fix it though
22:27 < Jentrep> no one is teaching anything .............
22:27 < mscdex> Jentrep: expressjs.com has code and tutorials
22:28 < zpao> mscdex: i saw. in the mean time I guess i'll try using tarball urls. i would imagine it's fine either way for people using my package as a dependency, just trying to make my life developing easier. thanks again!
22:28 < Jentrep> alright fine
22:28 < bryanstedman> Jentrep: express will give you a public folder to just drop in static files
22:29 < Jentrep> Sweet
22:31 < ReinH> mscdex: TL;DR: it was a ID10T error, I just needed to know specifically what kind of idiot I was being :)
22:46 < epochwolf> Why would sudo npm install -g coffee-script symlink coffee to /usr/local/share/npm/bin instead of /usr/local/bin?
22:48 < epochwolf> I'm on OS X with node.js installed off the website.
22:48 < HeartOfAce> you should use brew to install nodejs
22:51 < epochwolf> HeartOfAce: actually that was the problem.
22:51 < epochwolf> Removing node.js from homebrew, then installing again from the website fixed it.
22:51 < HeartOfAce> o_O
22:51 < epochwolf> HeartOfAce: I was told not to install node.js via homebrew by people in this channel.
22:52 < HeartOfAce> huh
22:52 < HeartOfAce> why not?
22:52 < epochwolf> no idae, I listened and there was no problems
22:52 < epochwolf> My coworker tried using homebrew's version and coffeescript wasn't symlinked right
22:52 < HeartOfAce> well, I dunno, I haven't had any issues with brew 
22:52 < rivertam> Hi there. I'm new to asynchronous serving and such, so I'm wondering if this is a really bad way to structure my server. I have a pretty typical structure, with a route function being carried out by a router module at the top level of my site. However, because I have different branches of my site, I'm planning on calling different route functions via subservient router modules, each of which will have a separate requestHandler module. 
22:52 < rivertam> Is that a decent way of doing things?
22:53 < rivertam> (Sorry about the wall of text)
23:03 < someprimetime_> Say you have users that can upload image profile pictures in the form of gif, jpeg/jpg, png.. do you normalize them all to one format? or keep their original format?
23:03 < someprimetime_> Also, does anyone know if express does this?
23:06 < ejexin> i would definitely normalize them
23:06 < owen1> what's the usecase for creating tcp server in node? send messages between server to server?
23:07 < owen1> between 2 node processes that are on separate processes or even separate machines?
23:08 < epochwolf> owen1: there are protocols other than http :P
23:08 < squeeks> doesn't have to be RPC. Could be anything from https://github.com/niklasf/node-irc-server this to https://github.com/tjfontaine/node-dns
23:08 < epochwolf> squeeks: dns is udp :P
23:08 < squeeks> neg. dns transfers happen on tcp.
23:08 < squeeks> which is why a lot of silly free wifi spots leave TCP 53 open.
23:09 < squeeks> and why my SSH server also listens on TCP 53.
23:09 < epochwolf> O_o
23:09 <@tjfontaine> dns *can* happen on tcp
23:09 <@tjfontaine> large dns packets should happen on tcp
23:09 < squeeks> s/free wifi/pay extortionate amounts/
23:09 < epochwolf> I use 443 udp for my vpn :)
23:09 < owen1> epochwolf: the the main reason is performance? it's more perfarmant than http?
23:10 < epochwolf> owen1: irc predates http
23:10 < epochwolf> and yes, raw tcp is more performant than http
23:10 < owen1> epochwolf: not asking about irc. tpc against http. what usecases should i use tcp
23:10 < owen1> ok
23:10 < epochwolf> oh, you use tcp when you're doing a protocol that requires tcp. :P
23:11 < epochwolf> and doesn't have a higher level wrapper
23:11 < owen1> epochwolf: let's say i have multiple servers, all in node. is it common to use tcp instead of http between them?
23:12 < owen1> net.createServer
23:12 < epochwolf> owen1: um… I would recommend unix sockets instead.
23:12 < owen1> epochwolf: what module in node should i look into?
23:12 < owen1> epochwolf: and why unix sockets and not net.createServer?
23:12 <@MI6> joyent/node: Trevor Norris master * 7373c4d : buffer: proper API export for Windows (+8 more commits) - http://git.io/GA7abw
23:12 < owen1> unless u are kidding
23:13 < qard> If running locally, using unix sockets works. But wiring together remote servers is probably better handled by something like a message queue.
23:13 < epochwolf> owen1: http://nodejs.org/docs/v0.5.4/api/net.html#socket.connect path
23:13 < epochwolf> qard: I assumed locally.
23:14 < epochwolf> If it's just simple process interop, unix sockets, if you need a queue or somehting, look at a queueing server.
23:14 < squeeks> https://github.com/JustinTulloss/zeromq.node
23:14 < epochwolf> ^
23:14 < squeeks> all the cool kids ditched using a broker
23:14 < owen1> epochwolf: i am just trying to understand what usecase will i need to use tcp server. so far the main argument is speed
23:15 < owen1> for communicating between two node services.
23:15 < epochwolf> owen1: why do these services need to communicate?
23:15 < owen1> i can setup http server, but maybe it's not fast enough for some cases
23:15 < qard> To shamelessly self-promote, you could try uhura with unix sockets for a cross-process client/server event emitter model.
23:15 < qard> https://github.com/NodeFly/uhura
23:15 < squeeks> state? bi-directionality that isn't a hack? moving binary data?
23:15 < epochwolf> owen1: there is no one solution
23:16 < owen1> epochwolf: i'll ask it differently - what do we have net.createServer in node? who uses it and for what case?
23:16 < epochwolf> owen1: irc servers
23:16 < owen1> a friend just asked me about it, and i didn't know the answer.
23:16 < owen1> epochwolf: ok. so if i don't interact with irc, i'll probably don't need it?
23:16 < squeeks> node is not a HTTP tool. node is a "everything between layers 4 and 7" tool.
23:17 < qard> Usually tcp is abstracted by some sort of higher level protocol.
23:17 < epochwolf> owen1: it's a tool in a toolkit.
23:17 < epochwolf> owen1: the http server class probably uses it underneath
23:17 < qard> Node core tends to be what all the external modules you should REALLY be using are built off of.
23:17 < adarq> a programming language is a tool, or a tool box?
23:17 < Havvy> a tool box is a tool.
23:17 < epochwolf> adarq: the language is a tool and the stdlib in the box
23:17 < epochwolf> is the*
23:18 < epochwolf> Havvy: for braining annoying questioners :D
23:19 < owen1> epochwolf: true, it's in the tool-kit, but the docs don't tell me what scenarios i should use it. not many people build irc-related software so it's a bit funny that it will be available.
23:19 < qard> Personally, I wouldn't recommend using TCP directly. You have to think about reconnection logic, message ordering, sessions and plenty of other things that most abstracted protocols do for you.
23:19 < owen1> and it's on the node front page
23:19 < Havvy> owen1: IRC server was an example.
23:19 < epochwolf> owen1: Why do you have a method to read files? Most people uses databases.
23:19 < bnoordhuis> qard: small correction, tcp is ordered
23:19 < owen1> epochwolf: not realy
23:20 < owen1> Havvy: what other examples?
23:20 < qard> Not if messages get lost in reconnection.
23:20  * epochwolf goes to find a channel with fewer idiots.
23:20 < s5fs> good luck!
23:20 < squeeks> You won't find it.
23:20 < Havvy> You could use net.createServer() to create your own custom servers.
23:20 < epochwolf> squeeks: I found one but it's empty. :)
23:20 <@mbalho> man people are snarky today
23:21 < qard> For safety, you should number your messages and make sure you aren't missing any.
23:21 < s5fs> mbalho: what--ever
23:21 <@mbalho> hahaha
23:21 -!- mbalho changed the topic of #Node.js to: node.js - remember to give your fellow javascripters a hug - http://nodejs.org -  http://logs.nodejs.org - http://stackoverflow.com/questions/tagged/node.js
23:21 < epochwolf> mbalho: sorry, I'm about two message from chewing on people :)
23:21 < epochwolf> haha… I'm not a javascripter
23:21 < s5fs> epochwolf: we're drinking scotch here at the office, it's recommended.
23:22 < Havvy> You could make a Minecraft server in Node...just using the Minecraft protocol.
23:22 < epochwolf> s5fs: that would be nice but I have a production deployment in an hour.
23:22 < Havvy> You probably shouldn't...but you could.
23:22 <@mbalho> Havvy: i instead opted to write minecraft in node
23:22 <@isaacbw> epochwolf: deploy now and go get a burrito
23:22 < Havvy> mbalho: The issue with that is that then you need clients to install node.
23:22 < qard> I thought it was mandatory in most places to be drunk during deploy time. :O
23:22 <@isaacbw> then if anything doesn't work, you can say you're busy getting a burrito
23:22 <@mbalho> Havvy: nah they just need a web browser
23:22 < squeeks> Havvy: done already. see: redstone, https://github.com/nornagon/nodecraft etc
23:22 < epochwolf> isaacbw: haha, people in Azoriza are issueing insurance policies until 5:30.
23:23 < Havvy> squeeks: I mean an actual Minecraft server, that you can join from Minecraft.jar
23:23 < squeeks> yes, exactly.
23:25 <@mbalho> why not rewrite mincraft.jar in js
23:25 <@mbalho> that is the more interesting route anyhow
23:25 < kmiyashiro> voxel.js?
23:25 < qard> So, voxeljs?
23:25 <@mbalho> :P
23:26 <@mbalho> i was trying to rhetorically guide havvy to the answer, you guys gave it away
23:27 < Havvy> Well, I was just giving an example...a perfectly bad example of what to use Node for. :P
23:28 <@mbalho> node is great for multiplayer servers
23:28 < Havvy> mbalho: Yeah, voxel.js would be a better example.
23:51 <@isaacbw> this new github interface is worse :(
23:52 < qard> disappearing sidebars, fun! :O
23:52 < jaCen915> isaacbw: take npm to svn! show them
23:54 < someprimetime_> i don't get githubs redesigns they always look the same 
23:54 < someprimetime_> love github though
23:54 < someprimetime_> they just make little tweaks all the time and it screws me up
23:55 < someprimetime_> this repo next thing is lame
23:55 <@isaacbw> jaCen915: I'm not isaac/s ;)
23:56 <@isaacbw> boop
23:56 <@isaacbwisntisaac> boop
23:56 < someprimetime_> should I use gm or imagick for node?
23:56 <@notisaacs> boop
23:57 <@notisaacs> magic sounds fun
23:57 < someprimetime_> use case: user image uploads => resize => store / update db
23:57 <@notisaacs> ARE YOU A WIZARD
23:58 < qard> nega-isaacs sounds cooler.
23:58 < someprimetime_> yawn
23:58 <@notisaacs> are you a turd
23:59 < someprimetime_> no im not
23:59 < someprimetime_> i'm diarrhea
23:59 < someprimetime_> splat
23:59 < qard> You could also try transloadit, if you want a service to do it for you.
--- Log closed Wed Jun 19 00:00:14 2013
