--- Log opened Sat Jan 12 00:00:06 2013
00:00 < mscdex> Nexxy, \o/
00:01 <@isaacs> new committer! sblom https://groups.google.com/d/msg/nodejs/IhjO3n5ybLg/Uwl0Nztu9f0J
00:04 <@mbalho> isaacs: I KNOW THA TGUY
00:04 <@mbalho> isaacs: he does awesome stuff with puzzles and used to work at a startup in portland
00:07 <@Nexxy> somebody said portland
00:07 <@Nexxy> oh
00:11 < livinded> I need to get up to mt hood this season
00:11 < livinded> I miss portland
00:11 <@Nexxy> it's better than ever
00:11 < CoverSlide> i like sun thanks
00:12 <@Nexxy> there's plenty of sun
00:12 < livinded> been stuck in the office for the past two weeks banging my head against our app trying to scale it
00:12 < livinded> hopefully getting up to the slopes tomorrow
00:12 < CoverSlide> good think apps are abscract and not concrete
00:13 <@Nexxy> but node.js is the webscale secret sauce
00:13 < livinded> my long term solution is moving to node and streaming the data over websockets
00:13 <@Nexxy> to where?
00:13 < livinded> the client
00:13 <@Nexxy> well yes, but what kind?
00:13 < livinded> oh browser
00:14 < livinded> one of our recent clients just has a SHITLOAD more data than everyone else and the analytics just dies because the time it takes to load the stats into memory in the rails app is longer than the timeout
00:15 < CoverSlide> can't you increase the timeout?
00:15 < livinded> I've reduced load time by a factor of 8 and I'm still about 6 seconds too slow
00:15 < livinded> CoverSlide: not on heroku
00:15 < CoverSlide> ahh
00:15 < livinded> I'm changing our serialization method to use Marshal rather than YAML which I'm hoping will load a bit faster
00:16 < livinded> then I get to start building a solution that wont fall over
00:18 < blazes816> livinded: msgpack ?
00:18 < livinded> blazes816: blazes816 it's not the size of the data in transfer that's the problem. It's the time it takes to load it into ruby objects
00:19 < blazes816> wait, isn't this the node chan?  anyways, I believe msgpack is faster at (de)serializing so it may be worth looking into
00:19 < blazes816> also I may be wrong
00:19 < livinded> I'm going to just convert it all to json when I switch over to node and store it in redis but Ruby can't load complex JSON objects
00:19 < blazes816> gotcha
00:20 < Deathspike> I'm looking for a library that allows me to do jQuery statements on the server. I tried cheerio, which is initially looking good, but doesn't match the API at all. Any suggestions?
00:21 < CoverSlide> tobi does it
00:21 < CoverSlide> but it's slower, and uses JSDOM, and there are some inconsistencies with jQuery anyway
00:21 < CoverSlide> and it's not as maintained
00:22 < CoverSlide> most people have moved on from JSDOM and either use cheerio for scraping or phantomjs for browser testing
00:22 < CoverSlide> the jquery api is overrated anyway, it's worth it to learn cheerio's api if you want scraping
00:23 < Deathspike> CloverSlide: The thing that bugs me the most is that you can't chain anything. $('something').parent().contents() <- will go wrong because parent does not return a cheerio object, but a string with the parent content.
00:24 < Deathspike> I don't mind learning a new syntax, hell, I'll take xpath any time as well, but seems like a lot of people are so focused on jQuery that it seemed the most relevent choice I could find.
00:35 <@isaacs> mbalho: sblom used to work at a startup in portland?
00:35 <@mbalho> isaacs: yea hes a total hipster that guy
00:35 <@isaacs> waau
00:35 <@mbalho> isaacs: which makes sense since all node programmers are hipsters
00:35 <@isaacs> true that
00:35 <@isaacs> javascripsters
00:35 <@mbalho> isaacs: but go find his posts on puzzles they are awesome
00:38 <@isaacs> neat
00:38 <@isaacs> http://scott.blomqui.st/category/puzzles/
01:02 < Pro> Right
01:02 < Pro> Real quick question
01:03 < Pro> why (have they, rly??) nobody written an IRC clone in node.js
01:04 < segomos> Pro: a client or a server?
01:04 < Pro> Server
01:04 < Pro> seems obvious to have www.irc.org/#node.js
01:05 < segomos> something like this one? https://github.com/alexyoung/ircd.js
01:05 < livinded> writing an ircd kinda sucks
01:05 < Pro> Nah
01:05 < segomos> or was there some other googles i should do 
01:06 < Pro> Looks good
01:06 < livinded> Pro: ever written code to handle keeping servers in sync and negotiate authority?
01:06 < segomos> writing ircd does suck
01:06 < segomos> writing an^
01:06 < livinded> and all the little nuances that an ircd requires
01:06 < Pro> I wrote a fully functional AI bot in vb6 about 10 years ago
01:07 < livinded> I've written code for ircds, bots, plugins and it's not fun
01:07 < Pro> that  count?
01:07 < segomos> i wrote a self replicating and producing robot/3d printer in assembler when i was 5
01:07 < CoverSlide> there is an ircd in node
01:07 < Pro> I WROTE THE INTERNET
01:07 < segomos> my robot created the internet
01:08 < Pro> I farted ddos and everyone decided to copy me
01:08 < segomos> i eat farts
01:08 < Pro> Well, I'm fucked.
01:09 < segomos> now that the one up battle is out of the way, it would be cool to have irc.nodejs 
01:10 < Pro> I wanted to probe popularity
01:10 < Pro> reddit.com is huge
01:10 < Pro> but its slow time...forums
01:10 < Pro> why is there no realtime alternative?!
01:10 < segomos> i tried to reddit, i don't get it
01:10 < segomos> i tried playing minecraft too, i don't get the appeal
01:11 < Pro> do you get porn?
01:11 < livinded> it's for non-productive people to have something to do
01:11 < segomos> yea i understand why people would watch porn
01:12 < segomos> i did when i was deployed and away from my wife ~3 yrs
01:12 < segomos> why do you want realtime reddit?
01:13 < livinded> because as soon as you add realtime stuff gets cooler
01:13 < segomos> you want other people's bogus self promoting shit thrown at you milliseconds faster than hitting f5?
01:13 < JohnMcLear> http://etherpad.org
01:13 < JohnMcLear> etherpad is basically a wrapper around an easysync collaborative editing library
01:13 < JohnMcLear> also their is share.js
01:14 < JohnMcLear> which is an operational transform library (afaik)
01:14 < JohnMcLear> btw that was aimed at Pro
01:14 < segomos> why do i need to download an online editor?
01:14 < JohnMcLear> you don't, but it shows online really-realtime chat does exist
01:15 < Pro> hrm
01:15 < Pro> I need something more advanced
01:15 < Pro> something....
01:15 < Pro> furturistic
01:15  * JohnMcLear quirks an eyebrow
01:15  * Pro yup
01:16 < JohnMcLear> At this point I leave this conversation.  Good luck.
01:18 < Pro> random google search brought me here
01:18 < Pro> freenode.net
01:18 < Pro> right?
01:19 < mscdex> freenode.js
01:19 < abuck> hey all, was wondering which IDE you guys are using ? Was wondering if any of you guys working with VJET ?
01:20 < segomos> abuck: vim
01:20 < Zelest> +1
01:20 < abuck> but vim doesn't have any debugger, intelliscence, etc, isn't ? might not be the fastest way to develop....
01:20 < acoll> sublime text 2
01:21 < CoverSlide> you can debug from the command line
01:21 < CoverSlide> intellisence doesn't speed your productivity much
01:22 < abuck> it's a great tool when you don't know the difference functions within a class, ect...well, this is what I found.
01:22 < segomos> i've never missed intellisense, even when i didn't know the language
01:23 < abuck> got it
01:23 < segomos> plus i think it's hard to do with JS
01:23 < Pro> !whois
01:23 < CoverSlide> that's why microsoft made typescript
01:23 < segomos> give the multitude of ways you can define functions or assign them to classes or even the way arguments can be handled in functions
01:24 < abuck> but what do people use appart of vim ? 
01:24 < CoverSlide> sublime text has auto completion made from guesses of things you've already typed
01:24 < segomos> sublime text is a close 2nd to vim
01:24 < CoverSlide> and in practice it's actually pretty useful
01:24 < abuck> funny, I ended up here: http://sublim.ca/ haha ! 
01:25 < CoverSlide> web storm is a full blown IDE, that tries to be smarter, but it's slow, and in the end, its autocompletion isn't much better than sublime's
01:25 < segomos> cloud9 is another IDE i've heard mixed things about
01:26 < CoverSlide> cloud9 is nice, but it isn't free unless you keep it on github
01:26 < segomos> JohnMcLear: from Jackson, MI?
01:27 < rezyn> huhu
01:27 <@isaacs> mbalho: sblom confirms that you and he are acquainted.
01:28 < rezyn> =pro
01:29 < rezyn> Goodbype publlic Ip pro
01:30 < vicapow> any recommendations on places to find node work?
01:30 < rezyn> Porn
01:32 < Rezyn> I feel I accidently missed a link about IRC node.js?
01:33 < Rezyn> someone copy paste a few lines up
01:33 < segomos> https://www.youtube.com/watch?v=dQw4w9WgXcQ
01:34 < Rezyn> few more lines up segomos
01:34 < acidjazz> i notice jade rips out blank lines in the html output.. any way to avoid that?
01:34 < segomos> yea it's way up there
01:35 < vicapow> segomos: nice link. that's exactly what i was looking for
01:35 < vicapow> segomos: everyone should have a look
01:35 < segomos> lol
03:15 < acidjazz> hilarious
03:15 < acidjazz> i got jade and stylus routing through php
03:15 < acidjazz> running em cli
03:15 < acidjazz> lol https://gist.github.com/4515806
03:24  * Queops says bye
03:38 < samholmes> startssl.com's SSL certs aren't very good. The whole site isn't too good.
03:38 < samholmes> What SSL certificate agent/provider would be recommended
03:38 < samholmes> ?
03:39 <@Nexxy> rapidssl
03:43 < samholmes> why is a wildcard ssl 4 times the amount of a regular ssl?
03:44 <@Nexxy> samholmes, because corporate greed
03:44 <@Nexxy> wildcards are totally worth it
03:45 <@Nexxy> particularly with a nice 'apps' domain
03:55 < samholmes> Nexxy: Ever heard of comodo's ssl certs?
03:55 <@Nexxy> ya
03:56 <@Nexxy> samholmes, they were hacked not too long ago
03:56 < samholmes> Nexxy: So they're no good
03:57 <@Nexxy> idk they're pretty big
03:57 < samholmes> Why does this site show that rapidssl is cheaper than 199 bucks? http://www.cheapssls.com/wildcard-sslcertificates.html
03:57 <@Nexxy> sometimes things just get hacked :P
03:58 <@Nexxy> samholmes, that's probably showing the cheapest price based on multiple year certs
03:58 < acidjazz> www.enom.com is a good source for ssls
03:58 < acidjazz> they route all of those companys
03:58 < acidjazz> it difers on if you want a wildcard
03:58 < acidjazz> etc
03:58 < acidjazz> comodo is fine so is rapid
03:58 < acidjazz> ive used em all
04:00 < mscdex> enomnomnom
04:01 < phonebook_> is there a way to prevent require("http").get("", ...) from redirecting you?
04:02 < mscdex> i don't think the built-in http module follows redirects
04:11 < phonebook_> mscdex, yeshh. got it. thx. was only using www. instead of http://
05:03 < coti> hi there, does any of you know a shopping cart build on node ? free or not
05:15 < Sly> coti: `npm search payment` pops up a few choices.
05:20 < coti> thank you
05:58 < gistya> Hey using express.js, my server works, everything works. But I need to parse a cookie inside socket.io, so in my socket.js route, I require express. Later I do express.utils.parseSignedCookie(myCookie,mySecret) and it fails saying, "TypeError: Cannot call method 'parseSignedCookie' of undefined". Why?
05:59 < SomeoneWeird> you sure it exposes that method ?
06:00 < gistya> Well supposedly all the connect methods are exposed through express
06:00 < gistya> Riiight?
06:00 < SomeoneWeird> dunno
06:00 < gistya> How would I check?
06:00 < gistya> I mean if a method is in exports it should be exposed should it not?
06:00 < SomeoneWeird> read the sauce luke
06:01 < gistya> I did qq
06:01 < gistya> I only come to the IRC when all else fails ... well 
06:01 < gistya> back to the drawing board I guess
06:01 < SomeoneWeird> ask in #express.js
06:01 < gistya> Ghost town
06:01 <@Nexxy> gistya, usually it helps to post code with your question
06:01 <@Nexxy> and wait around for a bit
06:02 <@mbalho> it also helps to expect immediate answers
06:02 <@Nexxy> particularly when you're asking @ 22:00 PST on a friday
06:02 <@mbalho> 22:00 node standard time
06:02 <@Nexxy> lol!
06:02 <@mbalho> (aka oaklands time zone aka pst)
06:02 < gistya> Every nerd was at the Warriors game?
06:03 < Nuck> Nerds don't watch football, they watch hobo fights.
06:03 < gistya> It's basketball
06:03 < Nuck> That's what I said.
06:03 < gistya> Hehe 
06:03 < gistya> I'll put some code up sec
06:04 < SomeoneWeird> have you tried express().utils ?
06:04 < SomeoneWeird> (just spitballing here)
06:10 < gistya> I'll try that
06:10 < gistya> Here is my app.js for inspection: http://pastebin.com/1X86Vawd
06:18 < ijse> hi, there
06:18 < mscdex> yo
06:18 < gistya> ok and this is the part that I'm having issues with: http://pastebin.com/Buy70mjg
06:21 < gistya> So to summarize: using express.js, my server works, everything works. But I need to parse a cookie inside socket.io, so in my socket.js route, I require express. Later I do express.utils.parseSignedCookie(myCookie,mySecret) and it fails saying, "TypeError: Cannot call method 'parseSignedCookie' of undefined". Main app.js:  http://pastebin.com/1X86Vawd and routes/socket.js http://pastebin.com/Buy70mjg ... thoughts? I'm very new
06:21 < gistya>  to node so I feel like I must be misunderstanding something fundamental here
06:34 < segomos> gistya: check out http://stackoverflow.com/questions/11680997/socket-io-parse-connect-2-4-1-signed-session-cookie
06:35 < segomos> check out how he is using parseSignedCookie (comes from connect)
06:38 < mscdex> hooray for pipelining reads!
06:38 < mscdex> :-D
06:38 < segomos> :)
06:39 < mscdex> sftp downloads so fast with them
06:40 < gistya> That looks very nice thank you segomos. 
06:43 < gistya> Yeah still a bit fuzzy here on how exactly Express is set up. Some are telling me that express has all of connect in it directly but obviously that's not the case, as evidenced in that stackoverflow question you linked to. I'm also a bit fuzzy on how to make variables available across modules... exporting things seems to be funky. Still just wrapping my head around it, coming from Objective C this seems like the wild west
06:44 < segomos> gistya: a lot of ways to do that
06:45 < segomos> express sits on top of connect so it does have everything connect has, just not in a classical 'inheritance' type way
06:45 < gistya> That's where I was getting confused, people were telling me if you could do connect.utils.xyz that you should therefore be able to do express.utils.xyz... but it ain't like that.
06:55 < standoo> why is it bad practice to spawn multiple nodejs proceesses?
06:55 <@mbalho> its bad practice to make generalized statements :)
06:56 < gistya> Kind of learning all of the aspects at once, since I'm new to Node, new to JavaScript, new to web development, new to Express, new to Socket.io, new to Angular.js, and new to Jade. Haha. It's starting to make sense though.  All of my practices are bad now. Ugh
06:56 <@mbalho> gistya: instead of learning all the frameworks you should try something with just node and some small modules
06:56 < segomos>  gistya: what's your experience in obj-c?
06:58 < gistya> I am an iOS app developer
06:58 < gistya> I also have done a lot in Linden Scripting Language which is event based so it was easier to understand how event-based would work.
06:58 < GreenDog> i'm sorry
06:58 < gistya> Haha
06:59 < gistya> Yeah It's garbage I know
07:00 < GreenDog> i should try socket.io again
07:01 < GreenDog> but the projects appears to be near death and i've had so many problems with it when giving it any sort of traffic above a few users connected.
07:03 < gistya> Well, I guess I'll find out if it's any better now once this thing goes live. I doubt I'll have heavy traffic on it though.
07:03 < GreenDog> then yer fine
07:03 <@Nexxy> I really like sockjs and shoe, personally
07:03 < segomos> what kind of problems did you have with load?
07:03 < gistya> I'm not even sure I need socket.io for what we're doing, I guess just that it pushes updates which is cool
07:04 < GreenDog> kernel panics
07:04 < GreenDog> what's shoe?
07:04 < gistya> kernel panics? Sure it wasn't a bad DIMM? 
07:04 <@mbalho> i use websocket-stream and ws
07:04 <@Nexxy> https://github.com/substack/shoe
07:04 <@mbalho> cause i dont care about fallbacks :D
07:04 < GreenDog> yup, tried it on multiple servers
07:04 <@Nexxy> lol
07:04 < gistya> Ouch
07:04 < gistya> I'll look into those .. I suppose they're all alternatives to socket.io?
07:05 <@Nexxy> pretty much
07:05 <@Nexxy> sockjs also does 'emulation' (fallbacks)
07:05 <@Nexxy> similar to io
07:05 < gistya> What does that mean?
07:05 < gistya> (Sorry new)
07:05 <@Nexxy> if real websocks aren't available
07:05 <@Nexxy> it will try things like long polling
07:06 < GreenDog> OK, i totally don't get the point of shoe
07:06 < segomos> sockjs looks kind of cool
07:06 <@Nexxy> GreenDog, to make sockjs more like node streams
07:06 < GreenDog> the good thing about sockjs is that marek is actually active in the google group
07:07 < GreenDog> majek
07:07 < segomos> i may reimplement my partial page refreshing system with sockjs
07:08 <@Nexxy> I bet you will like it
07:09 < gistya> Shoe sounds interesting. 
07:10 < segomos> i like substack's graphics
07:10 < gistya> just don't try googling "shoe"
07:11 < substack> I like streams.
07:11 <@Nexxy> it seems like a mutual thing
07:11 <@Nexxy> you and streams
07:12 < segomos> it is mutual from at least one side
07:12 < substack> I even use them in browser code
07:12 < substack> I like pretending I'm still in node
07:12 < gistya> So if I"m understanding it right, a stream just sends binary data that on the client gets turned back into the web content, JSON objects, scripts, etc.?
07:13 <@Nexxy> a stream just sends data over time
07:13 < gistya> Right
07:13 <@Nexxy> you could use them for that I suppose
07:13 < gistya> So Shoe is just a way of streaming, alternative to socket.io. How would you say that they differ?
07:14 <@Nexxy> shoe is doing it right
07:14 <@Nexxy> socket.io is not
07:14 <@Nexxy> basically
07:14 < segomos> does shoe fallback?
07:14 <@Nexxy> sockjs does
07:14 <@Nexxy> which shoe uses
07:16 < gistya> Maybe I should look at converting my app to socks.js and shoe before I'm too deep into development with socket.io.
07:17 < gistya> Since I'm new anyway to all this, might as well learn it right the first time.
07:17 <@Nexxy> gistya, keep in mind this is just my opinion
07:17 <@Nexxy> but I would support that
07:17 <@Nexxy> particularly if you don't have too much invested in io
07:18 < pradeep> hi
07:18 < pradeep> can i call require method in some other context
07:18 < pradeep> like require({},'express')
07:19 < pradeep> sorry
07:19 < pradeep> require.call({},'express')
07:20 < pradeep> is there anyone to help ?
07:20 < gistya> I'll look into it Nexxy
07:20 <@Nexxy> gistya, :)
07:21 < segomos> there any interest for anyone in a system that renders page partials and updates the client side appropriately (only the corresponding area in a page) using something like socketio or sockjs?
07:26 < pradeep_> why is require.call({test:'hello'},'express')        do not change context of express module
07:28 < segomos> pradeep_: what are you trying to achieve?
07:28 < SomeoneWeird> pradeep_, try .apply
07:29 < pradeep_> <segomos> i want to load any module in context given by me ,  so it will create sandbox for that module
07:29 < SomeoneWeird> then use the vm module
07:29 < segomos> way better question to ask
07:29 < SomeoneWeird> yeah
07:31 < pradeep_> i actully developing framework on top of express for multiple apps in one host and port, so i want to load javascript module of each App in its express context
07:32 < gistya> So turtles all the way down is going to mean when every last thing is in javascript right?
07:32 < pradeep_> apply is also not working
07:35 < pradeep_> @segomos hello
07:36 < pradeep_> SomeoneWeird> hello
07:36 < SomeoneWeird> maybe you should start with something easier
07:36 < segomos> pradeep_: i think you're saying context but meaning something else
07:38 < pradeep_>  SomeoneWeird , <segomos> :  i just want to pass object while requireing any javascript module so i can get same object using this keyword
07:39 < segomos> pradeep_: you can't pass it as an argument?
07:40 < pradeep_> <segomos> SomeoneWeird : but it works with any other javascript function (call, apply ) 
07:40 < segomos> that's neat
07:42 < pradeep_>  <segomos> SomeoneWeird : if i use vm module then i did not get module return by require method
07:42 < segomos> https://gist.github.com/4516597
07:43 < SomeoneWeird> huh
07:44 < segomos> checkout the gist pradeep_ 
07:44 < gistya> simple question. how do you unescape something in node
07:44 < gistya> surely you don't need a module for this?
07:44 < segomos> gistya: unescape()
07:45 < gistya> lol ok
07:45 < SomeoneWeird> unescape...?
07:45 < SomeoneWeird> yeah
07:49 < pradeep__> SomeoneWeird , <segomos> : suppose i do have 4 apps in my framework , then i create 5 express server 1 for routing and listening on 3000 port and other 4 is for apps , and i provide automatic routing for all apps ,and i want to load apps all javacript in its express context so user can use this keyword to point its express app
07:50 < RLa> i just think you make it too complex
07:51 < RLa> you just need vhosts?
07:52 < pradeep_> i use vhost, but i only help pass requset to appropriate app, but i cannot help with loading same apps javascript in its express context
07:54 < pradeep_> RLa , <SomeoneWeir> , <segomos> : let me give you my app link, wait
07:55 < RLa> actually that makes sense
07:55 < RLa> having one app do proxy based on vhost
08:04 < pradeep_> RLa , <SomeoneWeir> , <segomos> : https://github.com/pradeep-mishra/Multiple-Application-Express
08:05 < pradeep_>  RLa , <SomeoneWeir> , <segomos> :  look at line no 357 in app.js 
08:06 < segomos> had to share this mailbox intake with someone: http://sacramento.craigslist.org/cto/3508702995.html
08:13 < pradeep_> RLa , <SomeoneWeir> , <segomos> : hey any help 
08:18 < RLa> hm, haven't done something like that
08:18 < pradeep_> <RLa> : how to achive what i want to ?
08:18 < RLa> segomos, i would drive it :)
08:19 < RLa> i have no idea
08:19 < segomos> RLa: it's a cool project but the mailbox intake had me laughing.  not that i haven't put weird stuff on jets to make the electronics work : - )
08:20 < RLa> i have seen guys trying to use leaf blower as turbo so that's not very suprising :)
08:22 < TehShrike1> dominictarr has sexy curly hair
08:23 <@mbalho> TehShrike1: why do you keep making ad hominem comments about node.js community members in the irc channel
08:23 < TehShrike1> mbalho: because this video channel http://vimeo.com/mikeal
08:23 <@mbalho> oh right
08:23 <@mbalho> mikeal: LOOK WHAT YOUVE DONE
08:24 <@mbalho> the internet is supposed to be anonymous!
08:26 < TehShrike> I've quite been enjoying the videos
08:27 < TehShrike> Listening to programmers talk makes me happy
08:27 < TehShrike> And also, some of them have sexy hair
09:25 < TehShrike> COME BACK TOMORROW FOR MORE "INAPPROPRIATE THOUGHTS ABOUT OTHER PROGRAMMERS BY TEHSHRIKE"
09:36 < thealphanerd> good day all
09:37 < thealphanerd> so does anyone know a way to get a socket set up without having to declare the servers IP on the client side?
09:40 < emilsedgh> thealphanerd: you dont need to define it at all
09:40 < thealphanerd> well I've only done it with socket.io
09:40 < thealphanerd> http://socket.io/
09:41 < thealphanerd> client side example here… you have to specify the ip of the socket
09:42 < emilsedgh> for socket.io, no you dont. io.connect() could get only port number or no argument at all
09:42 < thealphanerd> and it will still connect with the server?
09:43 < wmage> thealphanerd: you have to deal with same origin policy
09:43 < thealphanerd> orgin policy?
09:43 < wmage> maybe this is not your problem, but it's described here http://stackoverflow.com/questions/6770490/socket-io-basic-example-not-working
09:50 < squeakytoy> if i have created a node.js webserver/website - where can I host it for cheaply?
09:50 < squeakytoy> anyone can recommend a hoster?
09:53 < wmage> squeakytoy: if you only want to play with it, you could use the free plan on Herokuy
10:10 < squeakytoy> wmage, i dont mind paying a small monthly fee, as long as i get some decent uptime ;)
11:18 < jhsto> I'm piping a webpage, but it lazy loads some data after the page has been loaded which wont be shown on the page. Any idea how to capture those requests too?
11:20 < geNAZt> how do the data get requested ?
11:25 < jhsto> geNAZt, it seems to add canvas element to create a button using JS, but I have no idea why it wouldnt work on my page
11:25 < geNAZt> you pipe the whole webpage trough a nodejs server ? like a proxy ?
11:28 < Virunga> If i have a package with a package i made present only on github as dependence, must i handle this manually or there's a way to let do this to npm? (the download from github and installation)
11:29 < geNAZt> npm can download git repos
11:29 < geNAZt> try it out :D
11:29 < nathan7> Virunga: user/repo
11:30 < Virunga> I know and i did it. I'd like to know if i can specify the dependence inside the package.json of the first package, and npm will do the rest, in some was
11:30 < Virunga> way
11:31 < nathan7> Hm?
11:32 < Virunga> Ok, maybe i found the right doc, sorry. 
11:32 < nathan7> You can just specifiy a dep as "dependencies": { "something" : "virunga/something" }
11:32 < nathan7> or as "dependencies": { "something" : "git://github.com/virunga/something.git" }
11:32 < jhsto> geNAZt, yea that was the point
11:32 < Virunga> nathan7: ok, that's what i'd like, thank you :)
12:04 < squeakytoy> if i would want to create a professional website with node.js - from scratch. What module should I be using?
12:04 < squeakytoy> (ive heard about Connect and Express)
12:05 < andu> squeakytoy, i've build something of a template with express
12:05 < SomeoneWeird> express
12:05 < SomeoneWeird> and ejs/jade
12:05 < geNAZt> expressjs, swig 
12:05 < SomeoneWeird> and css and js :)
12:05 < andu> squeakytoy, https://github.com/fluentart/arrow/blob/master/index.js   have a look
12:05 < geNAZt> and jugglingdb
12:08 < squeakytoy> andu, thats a lot of example code?
12:09 < squeakytoy> so express is the most standard module for a webserver?
12:09 < geNAZt> express is not a webserver
12:09 < squeakytoy> oh ok
12:09 < geNAZt> it helps you out with some functions like cookie parsing, sessions, templates, routing
12:10 < squeakytoy> oh, so its ontop of the http-module?
12:10 < andu> well its not example code... but atleast its not hundreds of files
12:10 < geNAZt> get and post element parsing
12:10 < geNAZt> yep its ontop of the http module
12:11 < SomeoneWeird> geNAZt, express IS a webserver...
12:11 < geNAZt> lol
12:11 < geNAZt> no
12:11 < SomeoneWeird> why isn't it then?
12:11 < andu> squeakytoy, http://expressjs.com/api.html   theres a short one
12:11 < geNAZt> it has no connection handling code
12:11 < squeakytoy> so, from what I undestand its http->connect->express ?
12:11 < geNAZt> so it doesnt handle it and argues with sockets
12:11 < geNAZt> squeakytoy: right
12:11 < SomeoneWeird> well, yeah
12:13 < geNAZt> swig is one of the most powerful and fastest templates for nodejs
12:13 < geNAZt> and jugglingdb is an orm that can handle much database server ( like mysql, mongodb, redis )
12:13 < squeakytoy> i have a feeling thats common in node.js-community, that it is usually: 'a <- b <- c <- d', until someone rewrites everything and its only 'e'
12:14 < geNAZt> well, it is better to extend some software ( library ) then write everything new
12:15 < squeakytoy> unless d is a total mess and rewriting can optimize everything
12:15 < squeakytoy> (which is normally the cause)
12:15 < geNAZt> yes
12:15 < geNAZt> but http -> connect -> express is very common and insane fast
12:15 < squeakytoy> concerning swig, I have been using mustache for javascript - but i will look into the pros
12:15 < geNAZt> and you can extend it easy
12:15 < andu> well, writing new is the only way I learn how it actually works
12:15 < andu> ;)
12:15 < squeakytoy> and jugglingdb, i am thinking of trying nstore
12:16 < geNAZt> if you dont have a persisting database it is ok
12:17 < andu> geNAZt, swig looks nice
12:17 < squeakytoy> nstore isnt persistent?
12:17 < geNAZt> if you come from symfony ( php )
12:17 < squeakytoy> i thought it saved data in files
12:17 < SomeoneWeird> ejs is betta
12:17 < geNAZt> it is 
12:17 < geNAZt> ejs is bullshit
12:17 < geNAZt> its slow and doesnt cache and shit
12:18 < andu> squeakytoy, why not use an []  with JSON stringify/parse for file storage?
12:18 < geNAZt> it depends on what you need a database for
12:20 < squeakytoy> one last thing, i also read that it can be annoying to restart your app each time you implement something, and read there is something called "nodemon" <-- nodemon is a good tool to use?
12:21 < nathan7> I use node-supervisor
12:21 < squeakytoy> have you done a comparison and then took node-supervisor?
12:21 < nathan7> Not quite
12:21 < geNAZt> nodev ? https://github.com/ericvicenti/nodev
12:21 < SomeoneWeird> forever
12:22 < squeakytoy> so, node-supervisor, nodemon, nodev and forever? hm
12:22 < geNAZt> no forever is only for keeping an programm running
12:22 < SomeoneWeird> and probably lots more
12:22 < geNAZt> if it exits via error
12:22 < geNAZt> or so
12:22 < SomeoneWeird> forever can monitor files, too
12:23 < squeakytoy> which "restart" solution is most popular?
12:23 < geNAZt> if you would like to develop nodev should be the best
12:23 < geNAZt> cause it also starts a node inspector instance where you can debug the application
12:24 < squeakytoy> okay, thanks :-)
12:24 < squeakytoy> i think i have all the tools i need to start a project
12:26 < nathan7> geNAZt: that sounds cool
12:27 < geNAZt> it is very helpful if you develop a application with remote server
13:42 < Deevian> mhm, gathering some opinions, are node mvc frameworks mature enough to be used in production?
13:42 < isaacbw> sure
13:42 < isaacbw> if you pick a mature one
13:43 < Deevian> such as what?
13:44 < isaacbw> I wouldn't know
13:45 < Deevian> ah
14:04 < jsmonkey> I am going to rebuild a web scraper I made in Ruby to Javascript using Node. I am thinking express framework for a nice rest api interface to the app along with a small graphical UI with socket.io to tell when the scraper is done etc. Is phantomjs best for scraping or what other is there? Can phantomjs post to auth and such on websites?
14:05 < SomeoneWeird> pretty sure it can
14:06 < phrearch> hey
14:06 < jsmonkey> how about using DOMjs to make an "dom" and search with jquery on it? just get the html
14:06 < phrearch> does npm link only work when the package is already in npm repo?
14:06 < SomeoneWeird> nope
14:07 < phrearch> i get an 'invalid version' error when trying to link 
14:07 < SomeoneWeird> check the version string in package.json
14:07 < SomeoneWeird> it has to be X.X.X
14:10 < phrearch> SomeoneWeird: Thanks! that was it. i had 0.8, 0.8.0 works :)
14:29 < saddsdf> can i has kudos
14:30 < GreenDog> that's an odd question
14:42 < phrearch> whats the most common naming convention for npm, when creating a project with several modules?
14:42 < phrearch> like myfooproject.mybarmodule ?
14:42 < SomeoneWeird> dunno, probably project-module ?
14:44 < phrearch> hm, most use - indeed
14:48 < isaacbw> phrearch, ideally each module would be self contained and needn't be considered a part of a larger project
14:48 < isaacbw> so it can have a name of its own
14:50 < phrearch> isaacbw: im not sure if this is the right way to do stuff, but i would like to create an npm module for each modular part in a cms project im working on
14:50 < phrearch> like https://github.com/l3m0n?tab=repositories
14:50 < phrearch> ideally, the 'core' functionality loads all other modules or something like that
14:51 < isaacbw> that could work
14:51 < phrearch> i want it to work a bit like django's project system
14:51 < phrearch> ok good :)
14:52 < isaacbw> you can pretty much do whatever you want though
14:52 < phrearch> thats why i love nodejs :D
14:52 < phrearch> it just works (TM)
14:52 < isaacbw> heh
14:53 < isaacbw> unit testing is a beautiful thing
14:54 < phrearch> what library is used mostly for unit testing? mocha?
14:55 < SomeoneWeird> phrearch, mocha nodeunit and vows are the most popular i think
14:56 < phrearch> for doc generation i started using yuidoc, but its not that easy as sphinx for python
14:56 < phrearch> yuidocjs that is
14:56 < phrearch> not really sure how docco works
14:57 < phrearch> it seems to work differently than traditional doc generators
14:58 < squeakytoy> frikken hell, i have tried to do an oauth request to twitter now, but always getting failed authentication
14:58 < squeakytoy> its frikken frustrating now getting more details
14:58 < squeakytoy> not*
14:59 < phrearch> any other doc generators besides jsdoc, yuidoc and docco?
15:03 < geNAZt> what session storage do you use for connect ?
15:07 < smagch> connect-redis
15:10 < geNAZt> i have a mysql database, can i use this ?
15:12 < smagch> store session in redis.
15:12 < SomeoneWeird> lol mysql
15:12 < geNAZt> yes mysql and ?
15:13 < smagch> You can store sessions in mysql.
15:13 < phrearch> hm, i want to develop some module on top of the core library, which defines most of the dependencies. is there a way i can install the dependencies from a not-yet-published npm library?
15:15 < geNAZt> you can install it from github
15:15 < geNAZt> or from a folder
15:15 < SomeoneWeird> phrearch, cd into the dir and run npm install ?
15:16 < smagch> you can specify gziped tarball url
15:17 < smagch> This one uses tarball url https://github.com/SlexAxton/messageformat.js/blob/v0.1.4/package.json
15:17 < phrearch> SomeoneWeird: ehm, i have l3m0n-example which depends on l3m0n-core. i installed it now, with npm link l3m0n-core from l3m0n-example
15:18 < squeakytoy> anyone done oauth against twitter with headers?
15:18 < SomeoneWeird> squeakytoy, use passport or easyauth
15:18 < squeakytoy> its 10 lines of code, and i have checked these headers 1 billion time, but twitter is responsding bad authentication
15:19 < SomeoneWeird> ua?
15:19 < squeakytoy> ua?
15:20 < SomeoneWeird> useragent
15:20 < squeakytoy> none in headers
15:20 < SomeoneWeird> might need to add one, then
15:21  * squeakytoy shakes the head
15:23 < squeakytoy> can anyone just look at this code and see any obvious http.request errors? http://pastebin.com/3K6yvFRs
15:25 < geNAZt> found the error
15:25 < geNAZt> :D
15:25 < juboba> I'm using socket.io for creating a chat system for my website. I have a notification space in my web with the actual connected people. My problem is that every time one user navigates in the web or reloads the page, his icon goes offline and then online when the connection gets established again, so a new handshake is made.
15:25 < squeakytoy> really?
15:25 < geNAZt> yep :D
15:25 < juboba> Is it possible to save temporarily the session say for 10 seconds to wait and see if the user is reconnecting and after that (if no response) delete de session and mark him as offline?
15:25 < juboba> Is it possible to save temporarily the session say for 10 seconds to wait and see if the user is reconnecting and after that (if no response) delete de session and mark him as offline?
15:26 < geNAZt> http!!!s!!! <------
15:26 < squeakytoy> geNAZt, is it a newbie mistake?
15:26 < geNAZt> var request = http.get( options
15:26 < geNAZt> what the difference ?
15:26 < geNAZt> http://nodejs.org/api/https.html#https_https_get_options_callback
15:26 < geNAZt> and the port of https is not 80 its 443
15:27 < squeakytoy> geNAZt, but my code is purely http
15:27 < geNAZt> if the curl options work, curl requests a https connection
15:27 < geNAZt> in node you are trying to establish a http connection
15:27 < squeakytoy> yea, the curl does a https
15:27 < geNAZt> and if twitter says only ssl, then you have to https
15:28 < juboba> any ideas?
15:29 < SomeoneWeird> juboba, sure, setInterval, check for a ping, if not purge
15:29 < juboba> SomeoneWeird: how
15:29 < juboba> ?
15:30 < SomeoneWeird> i would explain but i'm literally about to goto bed
15:30 < SomeoneWeird> sorry
15:30 < juboba> ohh
15:30 < juboba> :(
15:30 < juboba> any examples online? couldn't find any
15:30 < squeakytoy> geNAZt, now i am getting SSL errors
15:31 < SomeoneWeird> http://stackoverflow.com/questions/4432271/node-js-and-socket-io-how-to-reconnect-as-soon-as-disconnect-happens
15:31 < juboba> thanks SomeoneWeird
15:31 < squeakytoy> geNAZt, but its okay. Screw twitter, for not implementing a better error solution
15:34 < geNAZt> most api solutations have a lack of error handling :(
15:35 < squeakytoy> its okay, i have bought a gun online and i will visit the twitter office tomorrow
15:36 < SomeoneWeird> lol
15:36 < geNAZt> thats fine :D
15:47 < kessler> hoi :) anyone working with node-redis ran into *hget* command returning just OK instead of the value on high load ?
16:01 < squeakytoy> a quick question, I have installed a module using -g (globally) so it downloaded to C:\Users\Christoffer\AppData\Roaming\npm\node_modules\XXX, but when i do: require("XXX") it still cant find the module. How do I solve this? telling node its actually downloaded globally?
16:13 < ezekielnoob> hi
16:14 < juboba> hey ezekielnoob
16:14 < ezekielnoob> i was here not very long time ago asking about video streaming features/capabilities of node.js
16:15 < ezekielnoob> is there any module for html5 video playback and server streaming?
16:17 < jcrugzz> squeakytoy: if this is for a project you are working on you don't want to manage the dependencies globally. Installing globally is usually best for modules that are run as command line utilities
16:28 < wllmtrng> Anyone a github user here?
16:29 < Sly> wllmtrng: A lot of people are.
16:30 < geNAZt> yep github user here
16:31 < wllmtrng> hey quick question: how do I find a list of followers on github?
16:31 < wllmtrng> just trying to be polite, it's early here in california
16:32 < geNAZt> you have a repo link ?
16:32 < geNAZt> if you want to know your account followers then: https://github.com/<username>
16:33 < wllmtrng> Oops, let me rephrase the question: I've followed a bunch of people and I want to see a list of the people I've followed
16:33 < wllmtrng> OH
16:33 < wllmtrng> I SEE IT
16:33 < wllmtrng> ok
16:33 < geNAZt> https://github.com/<username>/following
16:38 < Ziggy`> Two questions, I'm on Windows 7; 1) How do I update node and npm? 2) How do I make global packages available to be run from command line?
16:42 < Ziggy`> Anyone? :P
16:43 < chakrit> ?
16:43 < geNAZt> you can download the msi installer for node
16:43 < geNAZt> it updates the node version
16:44 < isaacbw> you're just causing trouble for yourself trying to use node on windows though
16:44 < Ziggy`> Okay, so basically I just check with node -v, if there's a new version available I'll get the msi installer.
16:44 < Cronoh> node has worked fine on my windows :p
16:44 < geNAZt> Ziggy`: right
16:45 < geNAZt> node also works fine on my win7 64bit 
16:45 < Ziggy`> Okay, next off then. How do I make packages that are installed globally be able to run via command line?
16:45 < Ziggy`> Do I need to add a path to the modules?
16:45 < geNAZt> no
16:45 < geNAZt> https://npmjs.org/doc/link.html
16:46 < Ziggy`> Ah, sweet!
16:46 < Ziggy`> So I just run npm install -g package-name, then do npm link package-name
16:47 < Ziggy`> Or no, I need to cd into the directory for the package?
16:47 < geNAZt> no
16:47 < geNAZt> you only need the first two steps
16:48 < Ziggy`> geNAZt: The first step I need to do every time a package is globally installed or simply only the first time?
16:49 < geNAZt> only for the first time
16:49 < geNAZt> everytime you want to add a global to a local project only link it
16:49 < Ziggy`> Okay, thanks!
16:50 < Ziggy`> Sweet, i'll try it out.
16:51 < isaacbw> man, I would go insane trying to do any development at all without my arch repos
16:51 < isaacbw> and that windows console...
16:51 < geNAZt> whats wrong with the windows console oO
16:51 < Ziggy`> isaacbw: What are you running on?
16:52 < isaacbw> archlinux
16:52 < isaacbw> I keep windows around on my desktop and do literally nothing on it but play games
16:52 < Cronoh> but whats wrong with windows console?
16:52 < isaacbw> it just makes me feel dirty
16:52 < Cronoh> so nothing
16:52 < Cronoh> kk
16:52 < geNAZt> :D:D
16:53 < Ziggy`> isaacs: I used to only run on linux distros, 
16:53 < Ziggy`> isaacs: However today I need either a windows or mac platform for some things I do, related to work and so on.
16:54 < isaacbw> if you can make it work without going crazy, kudos to you
16:54 <@isaacs> Ziggy`: ok...
16:54 <@isaacs> Ziggy`: so what?
16:54 < isaacbw> thou art stonger than I
16:54 < Ziggy`> At times I wish I wasn't running on windows, but that's how it is.
16:54 < Ziggy`> @isaacs: Sorry, that was meant for isaacbw
16:54 <@isaacs> oh, maybe you @-ed me instead of isaacbw 
16:54 <@isaacs> gotcha :)
16:54  * isaacs is no longer confused :)
16:55 < Ziggy`> Hehe, sorry 'bout that.
16:56 < trevnorris> isaacs: I think you mentioned v0.10 will be release in a few weeks?
16:58 <@isaacs> trevnorris: that's the plan, yes
16:59 < trevnorris> isaacs: cool. with the buffer floating ops PR I have in, it makes those operations almost 2x's faster than the other (u)int ops.
17:00 <@isaacs> nice
17:00 < trevnorris> isaacs: currently working on a patch for that and will try to have it in before v0.10 is released
17:00 <@isaacs> trevnorris: thanks, that's exactly the kind of thing we should be working on now.
17:01 < trevnorris> np. spending mindless hours tweeking parameters for optimal performance is a specialty. ;-)
17:01 < denysonique> isaacs: do you maybe know the name of the IRC logger used in this channel?
17:02 <@isaacs> denysonique: there are a few, actually
17:02 <@isaacs> denysonique: technically, I'm one of them.  http://static.izs.me/irclogs/node.js/
17:02 <@isaacs> denysonique: the one mentioned in teh /topic is slurp 
17:03 <@isaacs> denysonique: there are probably a few more.
17:03 < denysonique> isaacs: Slurp is written in node. Thanks, thats what I was looking for.
17:04 <@isaacs> yep
17:04 <@isaacs> slurp: hello
17:04 <@isaacs> oh, it's a quiet bot :)
17:05 <@isaacs> ircretary: logs
17:05 <@isaacs> ircretary: hello
17:05 < ircretary> isaacs: Hello :)
17:05 <@isaacs> ircretary: logs
17:05 <@isaacs> hmm.... guess taht's broken
17:05 <@isaacs> denysonique: ircretary keeps a lot of info about the channel, but not "logs" per se
17:05 <@isaacs> ircretary: where is denysonique?
17:05 < ircretary> isaacs: denysonique was last seen at 2013-01-12T17:01:09.185Z, in #Node.js saying isaacs: Slurp is written in node. Thanks, thats what I was looking for.
17:06 <@isaacs> ircretary: when did you last see piscisaureus_?
17:06 < ircretary> isaacs: piscisaureus_ was last seen at 2013-01-11T23:57:27.250Z, quit: Quit: ~ Trillian Astra - www.trillian.im ~ #libuv
17:06 <@isaacs> ircretary: when did you last see piscisaureus?
17:06 < ircretary> isaacs: piscisaureus was last seen at 2013-01-07T17:02:27.654Z, quit: Ping timeout: 248 seconds #libuv
17:06 <@isaacs> etc.
17:06 <@isaacs> so she keeps a big hash of the last event for each username
17:07 < Ziggy`> Okay, this doesn't really make sense, on Windows 7 I ran npm link package-name, this is the output -> http://pastie.org/private/2pvv5jgl4mhr7utjr3wb8a, and when I look now in the node_modules directory it seems it removed the whole contents.
17:08 < Ziggy`> Sorry, I ran npm link inside the package folder I meant.
17:10 <@isaacs> Ziggy`: that's odd.  i think there's special code in there specifically to handle EBUSY
17:11 < brainss> ircretary: what does bomb do?
17:11 < ircretary> brainss: what was last seen at 2011-09-12T11:30:09.531Z, joining #Node.js
17:11 < brainss> oh, i see
17:11 < Ziggy`> I'm running npm 1.1.69 / node v.0.8.16
17:11 < brainss> ircretary: bomb the hill
17:11 <@isaacs> Ziggy`: can you delete C:\Users\Ziggy\AppData\Roaming\npm\node_modules\bbb manually?
17:11 < ircretary> brainss: Sorry, that requires admin access.
17:11 <@isaacs> ircretary: bomb brainss 
17:11 < ircretary> isaacs: Arming the charges...
17:11 < brainss> oh no
17:12 < brainss> lol
17:12 <@isaacs> :)
17:12 <@isaacs> ircretary: bomb #node.js
17:12 < Ziggy`> isaacs: Yep,
17:12 < ircretary> isaacs: Arming the charges...
17:12 < ircretary> :(){:|:&};: #BOOM
17:12 <@isaacs> Ziggy`: does it work then?
17:12 <@isaacs> Ziggy`: the code to avoid EBUSY just backs off repeatedly by like 100ms each time, until finally giving up
17:13 <@isaacs> Ziggy`: there's apparently really no other way to handle that
17:13 < Ziggy`> isaacs: I see, I think I'm misunderstanding the npm link command as well.
17:14 < Ziggy`> isaacs: I thought I should run npm install -g package-name, then do a link on the package installed globally to be able to run it anywhere from the command line.
17:14 <@isaacs> Ziggy`: so, you can do that.  but then you do `npm link package-name` in your pacakge
17:14 <@isaacs> Ziggy`: it'll implicitly do the global install for you if it's not there already
17:14 < Ziggy`> I see.
17:14 < Ziggy`> Okay, that makes sense.
17:15 < Ziggy`> I'll remember that, thanks for the info.
17:15 <@isaacs> Ziggy`: `npm link` (with no args) will symlink $cwd to the global space
17:15 <@isaacs> Ziggy`: `npm link ../foo` will symlink ../foo to the global space, and then from global foo into local foo
17:15 <@isaacs> Ziggy`: like `cd ../foo; npm link; cd -; npm link foo`
17:16 < Ziggy`> Okay, but I'm still not understanding then when I should actually run npm link without any arguments?
17:16 <@isaacs> Ziggy`: if you want to link the current working dir program into the global space.
17:16 <@isaacs> Ziggy`: ie, for some other project to link to it
17:17 <@isaacs> Ziggy`: or to run its bins globally without having to re-install each time
17:17 <@isaacs> Ziggy`: for example, i link npm, so that i can make changes, and just run `npm` and run my changed code
17:17 <@isaacs> Ziggy`: i also link minimatch so that glob can use it, without having to reinstall each time.
17:17 <@isaacs> (that is, glob depends on minimatch)
17:18 <@isaacs> another approach, though it's somewhat kludgey, is just to develop in one bigass node_modules folder that has all your junk in it
17:18 < Ziggy`> So I need to run npm link in every project I create to be able to run the bins?
17:18 <@isaacs> the problem there is that `npm ls` doesn't help you find issues, and `npm install` can be kind of odd if you don't have a node_modules or package.json in the current folder yet
17:18 <@isaacs> Ziggy`: either link or `npm install -g`
17:19 < Ziggy`> Okay, but I tried that, doing npm install -g package-name, and then run any bin and that simply output me with that the bin didn't exist.
17:20 < Ziggy`> I'm guessing because it didn't put it in the path.
17:21 < Ziggy`> It seems in examples it works perfectly for mac or linux users, but in my case running on Windows 7 it does not.
17:22 <@isaacs> Ziggy`: what is `echo %PATH%`
17:23 <@isaacs> Ziggy`: and have you restarted your cmd shell since installing node/npm?
17:24 < Ziggy`> Okay, I tried again installing a package, I do echo %PATH% and now it shows the the path to the node_modules directory within C:\Users\Ziggy\AppData\Roaming\npm, I restarted the cmd and voilah I can run the bin.
17:24 < Ziggy`> I must've been doing something wrong.
17:24 < Ziggy`> isaacs: Thanks for the tips.
17:24 < isaacbw> can anyone name a good module for structured message communication over stdio?
17:25 <@isaacs> isaacbw: require('child_process').fork
17:25 <@isaacs> isaacbw: then you can do child.send(message) and child.on('message', function(msg){})
17:25 < isaacbw> :O
17:25 <@isaacs> isaacbw: in the child, you can do process.send(message) and process.on('message', function(msg){})
17:25 < Ziggy`> isaacs: Now I get why it seems to work.
17:26 < isaacbw> awesome, thanks!
17:26 < Ziggy`> isaacs: IN my project folder I have a node_modules directory, within there is the .bin/ folder.
17:26 <@isaacs> isaacbw: additionally!  since 0.8, you can do spawn(process.execPath, ['__filename'], {stdio:[anything, as long, as one is, 'ipc', you get ipc]})
17:26 <@isaacs> Ziggy`: yes
17:26 <@isaacs> Ziggy`: that's why `npm test` can run your test runner even if it's only installed locally
17:27 <@isaacs> Ziggy`: because `npm test` runs the script with ./node_modules/.bin/ as the first item in the PATH
17:27 < Ziggy`> isaacs: It makes sense now.
17:27 < Ziggy`> Thanks again
17:27 <@isaacs> isaacbw: though it looks like you'er sending actual objects, they're just getting json serialized, so don't send anything circular or overlylarge.
17:33 < tippenein> I'm having problems connecting to my mongo db in my express app
17:39 < tippenein> http://hastebin.com/sihajecuno.coffee
17:40 < Iszak> that doesn't look like coffeescript.
17:40 < geNAZt> Iszak: http://hastebin.com/sihajecuno.js better ? 
17:41 < Iszak> that is very cool, interchangeable extensions that result in different highlighting.
17:42 < tippenein> it must default to coffee
17:43 < geNAZt> tippenein: what error do you get ?
17:44 < tippenein> when I load any page that uses db it's just 'ReferenceError: db is not defined'
17:44 < geNAZt> var db = module.exports.db 
17:45 < geNAZt> you think the module scope is shared between all modules ?
17:45 < tippenein> *assumed*
17:45 < geNAZt> nope
17:45 < geNAZt> its not so
17:45 < geNAZt> you must inject the db object into the module
17:48 < geNAZt> http://hastebin.com/surodaqava.js
17:48 < geNAZt> something like that
17:49 < geNAZt> of couse delete the var db = ....
17:51 < tippenein> geNAZt: is there a reason you got rid of require('db/conn') in app.js?
17:52 < tippenein> n/m i see it
18:01 < Iszak> you should use a service locator...
18:05 < cxreg> isaacs: any feedback about that domain stack PR?
18:07 < Deathspike> Can anyone help me with a cheerio issue? I have this markup, <div><span>x</span>b</div>, and want to select the text node containing 'b'. In jQuery, I can do $('div').contents() to access both span and the text node, but in cheerio this does not exist. What is an alternative?
18:10 < tippenein> Iszak: me?
18:11 < Iszak> tippenein yeah because imagine once you have like 3 dependencies that are initialized in the app.js? you need to pass 3 args to your routes - or pass a service locator.
18:12 < tippenein> I'm trying to find a better way to do the routes in general
18:13 < tippenein> most of the routes are straight to template anyway and the routes.js file will expand to ridiculous size quickly
18:13 < andu> cant it be made procedural/fractal or automated in some other way?
18:13 < Iszak> tippenein that's why you have service layers/models.
18:24 <@isaacs> cxreg: haven't looked at it
18:24 <@isaacs> cxreg: but it's on my list
18:24 < cxreg> ok cool thanks
18:36 < Deathspike> Is there a way to create a 'class' that is callable as function but also with a prototype extension?
18:45 < isaacbw> how would you expect that to behave Deathspike 
18:56 < jhsto> does anyone know an easy solution for routing different directories to different node instances?
18:57 < isaacbw> jhsto, can you elaborate 
18:58 < isaacbw> what do you mean by directory
18:58 < tjholowaychuk> isaacbw formidable's tests fail for 0.9.x
18:58 < tjholowaychuk> so i guess some issue with the BC layer
18:58 < isaacbw> *isaacs
18:58 < tjholowaychuk> everything else in Connect is fine
18:58 < jhsto> I'm running multiple node instances on my VPS, which one runs on / and I would like run a different instance on /example
18:59 < jhsto> And I've noticed the formidable fail too.
18:59 < isaacbw> as in, myurl.com/example?
18:59 < jhsto> That's right.
19:00 < Deathspike> jhsto: I think you can use vhost middleware and express app instances on that.
19:00 < Deathspike> Or whatever you want to pass control to.
19:00 < jhsto> But for code maintenance I wouldn't like to run it all on one app
19:00 < isaacbw> https://github.com/visionmedia/express/blob/master/examples/vhost/index.js
19:00 < jhsto> isaacbw, thanks
19:01 < jhsto> I wonder why I've missed this feature on express.
19:03 < isaacbw> jhsto, it's a feature of connect, so it wouldn't show up in the express docs
19:05 < jhsto> isaacbw, oh i did not know that, but thanks again
19:09 <@isaacs> tjholowaychuk: thanks!  i'll look into the formidable issues.
19:10 < tjholowaychuk> isaacbw looking into the express socket hangup, seems like some bad state in my code or node's http client, if I run that single test directly it's fine but if it's run along with the others it fails
19:10 < tjholowaychuk> then it should be good to go
19:10 < Darsain> might there be a problem with high maxBuffer (~100MB) in child_process.exec ?
19:12 <@isaacs> Darsain: if you've got the memory for it, then it's fine
19:12 <@isaacs> tjholowaychuk: btw, i'm not isaacbw i'm isaacs
19:12 < tjholowaychuk> shit, a bunch of superagent tests timeout
19:13 < tjholowaychuk> oh shit
19:13 < tjholowaychuk> hahaha
19:13 <@isaacs> tjholowaychuk: so, there is an edge case that unfortunately is unavoidable.
19:13 <@isaacs> tjholowaychuk: if you never do stream.on('data') and you never do stream.resume(), then it'll never reach the 'end' event
19:13 <@isaacs> tjholowaychuk: because we dont' lose data any more.
19:13 <@isaacs> tjholowaychuk: so, you can probably fix the test timeouts by doing stream.resume() somewhere
19:14 <@isaacs> tjholowaychuk: so that teh data flows out
19:15 < tjholowaychuk> k i'll try that
19:15 <@isaacs> tjholowaychuk: this is usually only an issue with tests, because you often do foo.on('end', asserts) without caring what the data is, so yo unever add adata listener
19:15 < tjholowaychuk> is there a flag we can use for checking which "mode" the stream is in? seems like migrating these may be a little bit hellish
19:15 < tjholowaychuk> trying to handle both kinds
19:15 <@isaacs> tjholowaychuk: not at the moment, but it could be added.
19:16 <@isaacs> tjholowaychuk: or, at least, nothing that doesn't leak implementation details.
19:16 < TooTallNate> a flag seems like a good idea
19:16 < TooTallNate> stream.flowing
19:18 <@isaacs> TooTallNate: there actually is stream._readableState.flowing
19:18 <@isaacs> but it's set to true when piped as well as old-mode
19:18 < TooTallNate> oh right
19:22 < bingomanatee> Good morning node
19:23 < bingomanatee> I have an NPM question. What is the standard for documenting what a particular nom release features? Is there an update log format ?
19:25 < TooTallNate> nom nom nom
19:29 < fb55> a question to all regular node committers: is there any way to not get frustrated by the years it takes to switch branches?
19:39 < fb55> https://github.com/joyent/node/pull/4578 - could this get merged quick, please? it annoys me every time i'm using the repl. /cc isaacs TooTallNate
19:42 < TooTallNate> fb55: nice stuff
19:42 < Virunga> Would be fantastic have the history between sessions, in the repl.
19:44 < TooTallNate> Virunga: there's .load and .save commands for that
19:46 < Virunga> TooTallNate: oh, i forgot them :P. Thank you
19:50 < q88qlsd> Hello, when building a c++ extension to node/v8, is there a best-practices type guide to namespace/variable scope, more specificaly, does a global in the module become a global in node/v8?
19:54 < TooTallNate> q88qlsd: i typically put my addon stuff in an anonymous namespace
19:55 < TooTallNate> q88qlsd: and no, a symbol exported in your addon does not become a global in node/v8… you must export the property in your addon's init() function
19:55 < q88qlsd> ok cool
19:56 < q88qlsd> that makes things easyer
19:57 < joshthecoder> hugware. I like that idea. :) (see topic)
19:58 < chakrit> is there a way to find out currently running node version from inside a module?
19:59 < joshthecoder> chakrit: process.version ?
20:00 < segomos> process.versions.node
20:02 < chakrit> joshthecoder/segomos: thanks!
20:04 < Tixz> <input {{#user.username}}value="{{.}}"{{/user.username}}>
20:04 < Tixz> using mustache I'd like to set the value attribute if a certain value is define. I've tried this:
20:05 < Tixz> Yeah, that ^, but it doesn't work. How should I work around this?
20:10 < bingomanatee> is there an official way of documenting your version changes in nom / package.json
20:15 < MI6> joyent/node: Felix Böhm master * 9bce5e8 : repl: make built-in modules available by default  Closes #3564. Closes #4 - http://git.io/fXvLwQ
20:17 < TooTallNate> fb55: ^^
20:17 < MI6> joyent/node: Nathan Rajlich master * bac537b : repl: fix lint - http://git.io/rsDoOA
20:30 < Fodi69> where can I find a list of multi-database ORM projects?
20:30 < segomos> npm
20:30 < Fodi69> yes, but I want to compare them
20:30 < Fodi69> or would be better if anyone already compared them
20:31 < Deathspike> Fodi69: I just know of Sequelize and mongoose. :P
20:31 < Fodi69> mongoose is not multi-database
20:35 < segomos> what databases are you looking for?
20:36 < Fodi69> currently I'm using mongodb, but I want to know the possibilites
20:36 < Fodi69> sql based databases would be nice
20:37 < Fodi69> like for example Zend_DB does in PHP
20:39 < chakrit> there's node-any-db but it's not an orm per se
20:41 < that4chanwolf> I'm a little confused on returns with callbacks. I can't seem to get any of it to work.
20:42 < that4chanwolf> http://pastebin.com/jx8wKmDZ Like in this silly parser thing I'm writing, I can't figure it out, and I feel stupid.
20:42 < that4chanwolf> Can I get a little bit of help?
20:42 < carlmro> that4chanwolf: I'll take a look
20:44 < Tixz> that4chanwolf: the callback might be async so you can't return it as such
20:45 < Tixz> on another note, if pickle.load's callback follows the standard node.js signature the first argument might be an error message and the second argument be the value of the pickle.load
20:46 < that4chanwolf> I checked, and console.log(unpickled) gave me the object I needed
20:46 < Tixz> that4chanwolf: I suspect you're trying to do something which is async, but you're stuck in a sync mindset :) You might have to look into promises to get around what you're doing
20:47 < Tixz> that4chanwolf: Alright, but you're return statement is inside the scope of your callback so it won't be return like your json will
20:47 < Tixz> but as I said, the way to work with this is to use promises
20:48 < that4chanwolf> Alright, I'll look into it more
20:51 <@Nexxy> that4chanwolf, don't use promises
20:51 <@Nexxy> you will have a better experiencing learning callbacks
20:51 <@Nexxy> Tixz, is just confused
20:52 <@Nexxy> that4chanwolf, rather than return, you will want to execute the callback function with the data
20:53 < Tixz> Nexxy: Yes you are right
20:53 <@Nexxy> that4chanwolf, it's hard to give you an example with the code you pasted though, needs moar context
20:54 < that4chanwolf> Alright, I can try that...
20:54 < Tixz> Nexxy: But I still prefer promises over callbacks
20:55 < that4chanwolf> I just always hated getting into callback spaghetti. 
20:55 <@Nexxy> Tixz, you're just stuck in a sync mindset ;P
20:56 <@Nexxy> that4chanwolf, you should check out callbackhell.com
20:56 < Tixz> Nexxy: Maybe you're right
20:56 <@Nexxy> name your functions
20:56 <@Nexxy> break functionality into parts
20:56 <@Nexxy> Tixz, SPOILER: I'm always right!
20:56 <@Nexxy> (except for when I'm wrong)
20:56 < segomos> 80% of the time, all the time
20:56 < Tixz> Nexxy: I did say maybe
20:57 <@Nexxy> definitely
20:57 <@Nexxy> "Write small modules that each do one thing, and assemble them into other modules that do a bigger thing. You can't get into callback hell if you don't go there."
20:58 <@Nexxy> also good advice
20:58 <@Nexxy> from our dear leader
21:00 < Deathspike> that4chanwolf: If you have a bunch of things that can run in parallel, the async lib makes life easier. If not, then it just something to get used to.
21:02 < epicowl> hello, I am messing around with node + coffee script for the first time, I build projects with python/django inside a virtualenv using buildout... do I need to install node inside the virtualenv?
21:04 < jack150> hiyo
21:05 < jack150> so I fooled around with node, read some tutorials and created (that's almost obligatory) a tiny simple chat-server. now:
21:06 < jack150> I can't wrap my head around this: how do I embed this chat-server in my website (website and chatserver are hosted on different servers)
21:07 <@Nexxy> IFRAMES!
21:07 < jack150> yeah, I just wanted to ask that, are iframes my only option?
21:08 < jack150> i always thought iframes were bad, never actually used them ;)
21:09 <@Nexxy> they are
21:09 <@Nexxy> "iframes considered harmful"
21:09 < jack150> ok
21:09 < jack150> that's a shame
21:10 <@Nexxy> but lots of bad things are still useful
21:10 < Industrial> Does anyone have experience with browserify --watch? I can't get it to pick up changes generated by compilers like CoffeeScript or LiveScript. I have two watching scripts running, one compiling public/js/app.ls into public/js/app.js and one for browserify changing public/js/app.js and all it's requires in there to public/js/bundle.js. But it's not doing anything while watching when app.js gets written by
21:10 < Industrial> livescript.
21:10 < that4chanwolf> Writing code considered harmful
21:11 < jack150> ok, iframes then, well that solved it, thanks :)
21:12 < jack150> and the chatscript will only accept a fixed ip to avoid others embedding it
21:13 < Industrial> I would implement the chat server as a service listening on a port, and use the website as a client to that service, server side, relaying stuff between the client side and the chat service.
21:15 < carlmro> that4chanwolf: A naive solution to your problem: http://pastebin.com/jx8wKmDZ
21:15 < carlmro> oops wrong gist:
21:15 < carlmro> https://gist.github.com/4520495
21:16 < Industrial> I guess I could make my own watch script ..
21:24 < jack150> Industrial: I'm sorry, I don't really understand
21:24 < jack150> the relaying stuff
21:29 < jack150> do you mean sockets? like described in here: http://roguejs.com/2011-08-08/node-js-socket-io-php/
21:34 < jack150> I think I found what I was looking for: DNode https://github.com/bergie/dnode-php
21:35 < jack150> thanks Industrial for pointing me in another direction
21:42 < tippenein> http://hastebin.com/quqegesabe.js  <--  anyone tell me the problem here? seems simple enough to loop through each, but..
21:45 < that4chanwolf> tippenein: 
21:45 < that4chanwolf> You're trying to load
21:45 < bensheldon> @tippenein: "for in" loops through keys, not values
21:46 < that4chanwolf> './controller/' + the index number
21:46 < that4chanwolf> I think
21:46 < tippenein> ah, gotcha
21:46 < carlmro> that4chanwolf: Did you find a solution to the gist you posted?
21:47 < that4chanwolf> Yes, I did
21:48 < carlmro> how did you solve it?
21:49 < that4chanwolf> Instead of trying to return the data itself, I chose to return a callback and pass the object to the callback. Didn't know why I didn't think to do that in the first place.
21:51 < carlmro> Very well. 
22:20 < jcrugzz> what do you guys use to manage multiple node versions? for testing out unstable versions etc
22:38 < jesusabdullah> Nexxy: "I am absolutely terrified of smart people who aren't depressed" how come?
22:40 < bensheldon> jcrugzz: I use nodeenv (https://github.com/ekalinin/nodeenv) in conjunction with virtualenv
22:48 < cxreg> hm, i should add support for that to smartcd
22:48 < cxreg> bensheldon++
22:51 < jesusabdullah> I don't always do node versioning, but when I do I usually use isaac's thing for it
22:51 < jesusabdullah> That said, I think next time I will use mmalecki's "give" project
22:52 < cxreg> which is isaac's thing?
22:53 < jesusabdullah> I forget, it's in his repos
22:54 < jesusabdullah> https://github.com/isaacs/nave rembered
22:54 < jesusabdullah> https://github.com/mmalecki/give
22:54 < jesusabdullah> is the other
22:55 < cxreg> hm, there's also https://github.com/visionmedia/n
22:55 < jcrugzz> jesusabdullah: I should have checked his github ha. but thanks for the recommendation bensheldon
22:56 < jcrugzz> and the give project probably needs an update
22:56 < jcrugzz> but it could also be that it doesn't work with my tmux setup since it is spawning a child terminal of sorts
22:57 < jcrugzz> cxreg: tried it, needs an update. 
22:57 < jcrugzz> thanks jesusabdullah
22:58 < denysonique> Hi
22:58 < denysonique> err
22:58 < jesusabdullah> Nexxy: FINE
23:02 < cxreg> jcrugzz: https://github.com/cxreg/smartcd/ is what i was referring to, you can trigger these kinds of tools per-directory
23:03 < denysonique> I have a general async js question.
23:03 < denysonique> example in CoffeeScript: https://gist.github.com/1ea10032eccd575b431d
23:03 < denysonique> example in JavaScript: https://gist.github.com/4d1cf59ecb78b71095f9
23:03 < denysonique> Its a basic callback iteration over a models hash.
23:03 < denysonique> Question: When I use `cb` the value of `k` everytime is different accordingly with the itereted over hash: `models`.
23:03 < denysonique> When I use `cb2` as the callback to the async function called `sync` the value of `k` remains lets say 'm1' and does not get "updated" everytime tis called/each iteration.
23:04 < denysonique> I seem to have solved the problem by implementing `cb` instead of the original `cb2` but I still do not understand this behavior.
23:08 < othiym23> cxreg: I didn't notice that mranney wasn't maintaining node-redis anymore, so now I have to find somebody new to bug ;)
23:09 < othiym23> cxreg: if you find a moment, leave me a fuller explanation on the PR of what you think the bug is wrt leaving the domain, because I'm not sure why a domain propagation in a library call should have to know about entering and exiting domains explicitly
23:10 < othiym23> cxreg: not saying you're wrong, just that if there is an issue, it probably implicates domains themselves as well as my code, which is trying to be the simplest possible solution to the problem
23:11 < cxreg> othiym23: the reason is that domains themselves typically exit when the callback exits, but if it throws, the catching mechanism needs to exit
23:12 < cxreg> most of the time that's the uncaughtException handler, which does so.  but you are catching with try/catch
23:12 < cxreg> there *are* core issues with the domain stack as you noted in my node PR :)
23:13 < cxreg> the alternative would be to have the domains bind() include a try/catch
23:14 < cxreg> that's maybe not a bad idea but it's pretty different from the way it works now
23:14 < jesusabdullah> so who *is* maintaining node-redis?
23:14 < jesusabdullah> it seems like a fairly important library!
23:14 < cxreg> nobody.  mranney is "looking" for a new maintainer but ... right now there's nobody
23:14 < jesusabdullah> weak
23:15 < cxreg> https://github.com/mranney/node_redis/issues/358
23:15 < cxreg> i'm willing to co-maintain but i dont have the time to do it solo
23:15 < jesusabdullah> I feel that
23:15 < AAA_awright> What part of it needs maintnence?
23:16 < cxreg> it's complicated and has a lot of bugs.  a lot of pending PRs
23:16 < AAA_awright> Eh true
23:16 < AAA_awright> So just use one of the forks then?
23:16 < cxreg> i will be using my own until it's resolved
23:16 < AAA_awright> I mean, great thing about Git is it doesn't care whose repository you're using
23:17 < cxreg> npm doesnt use git though
23:17 < cxreg> the real issue is the npm db
23:17 < AAA_awright> Don't use npm?
23:24 < othiym23> aw man, I would totally offer to co-maintain node-redis if I were actually using Redis as anything other than a potential source of performance metrics
23:26 < othiym23> cxreg: the original version of my patch didn't explicitly trap events and put them on the domain, but that process.nextTick(function () { throw err }) caused the world to explode, and the current conditional logic is there to fix that
23:26 < othiym23> it is, in point of fact, a gross workaround, because I wasn't able to identify at the time why the domain handler was no longer catching the error appropriately
23:27 < cxreg> i suspect it's complicated by the stack bugs i was working on
23:27 < othiym23> intuitively, the domain should have been propagated through process.nextTick and just grabbed and re-emitted the exception
23:27 < othiym23> you're probably right
23:28 < othiym23> I almost made a note to that effect on your PR, but I wasn't able to figure out how to express it in a way that made sense
23:28 < othiym23> it's just a suspicion, I guess
23:28 < cxreg> the whole thing gives me a headache half the time
23:28 < cxreg> lol
23:28 < othiym23> trying to debug this stuff with node-inspector is really hard
23:29 < cxreg> i did ok with "node debug" and a bunch of print statements in the core
23:29 < othiym23> I need to spend some time with my SmartOS vm and DTrace, I think
23:29 < cxreg> huh, is that freebsd based?
23:30 < othiym23> no, it's Illumos / OpenSolaris
23:30 < cxreg> ah
23:30 < othiym23> so it has all the DTrace & mdb goodies
23:30 < othiym23> ustack / jstack helpers, etc
23:31 < othiym23> in any case, that error-trapping shim in the node-redis PR shouldn't be necessary and is a wart
23:31 < othiym23> if your patches to node can make that go away, I will LGTM it sooo hard
23:34 < othiym23> cxreg: have you seen https://github.com/joyent/node/issues/4570 ?
23:34 < cxreg> heh.  i'm planning to review it again next week
23:34 < othiym23> I was going to dig into that this weekend if nobody beat me to it
23:34 < cxreg> hmm
23:35 < othiym23> it also feels related to me
23:36 < reuf> when node.js dumps core data
23:36 < reuf> where do I look for the dumpred core
23:36 < reuf> ?
23:36 < reuf> when it brakes, i want to see the logs
23:36 < cxreg> othiym23: wait a second, i'm not reproing that
23:36 < cxreg> it prints OK and exits
23:37 < othiym23> reuf: depends on your OS and how you have it set up to deal with cores
23:37 < reuf> im on ubuntu
23:37 <@Nexxy> jesusabdullah, lol
23:37 < reuf> i didnt make any setup for the cores
23:37 < reuf> is there some default location
23:37 < othiym23> cxreg: what version of Node?
23:37 < othiym23> reuf: google "ulimit core linux"
23:38 <@Nexxy> jesusabdullah, intelligent non-depressed people are hiding something
23:38 < Sly> NEXXY :O
23:38 <@Nexxy> SLY :O
23:38 <@Nexxy> AFK tho, yo gabba gabba is on
23:38 < jesusabdullah> wut
23:39 < reuf> othiym23: thanks, i found some nice stuff
23:39 <@Nexxy> jesusabdullah, http://yogabbagabba.com/
23:43 < sahlhoff> http://docutils.sourceforge.net/docs/user/rst/quickstart.html rst docs
23:44 < cxreg> othiym23: in the tip of 0.8 it catches just fine
23:44 < jesusabdullah> rst :C
23:44 < cxreg> i just built v0.8.18-pre
23:47 < aandy> on which OS?
23:48 < cxreg> i tried on 3 differet linux machines
23:53 < cxreg> othiym23: you're able to repro the issue?
23:54 < othiym23> cxreg: hmm... add a comment to the issue, then, maybe bmeck was running against 0.9
23:54 < othiym23> cxreg: I haven't even had that much time this week :/
23:55 < cxreg> ill try master
--- Log closed Sun Jan 13 00:00:12 2013
