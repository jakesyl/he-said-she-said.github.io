--- Log opened Sun Mar 31 00:00:21 2013
--- Day changed Sun Mar 31 2013
00:00 < niggler> rking i was thinking about how to time matlab code (which you do with tic and toc)
00:00 < niggler> and clearly someone thought about it already
00:00 < rking> (I was referring to your statement that there are people who care about futures/etc and they don't get things done)
00:00 < niggler> rking: http://www.mathworks.com/help/matlab/ref/tic.html
00:00 < rking> Yeah, no, that part I like.  I was talking about the previous conversation. =)
00:01 < niggler> rking there's something to be said about "conceptual beauty" but oftentimes that isn't the fastest or the easiest or the conceptually simplest way
00:02 < rking> niggler: Certainly. But if a person doesn't even know the alternatives, how can they decide what is simplest/fastest/easiest?
00:02 < niggler> are you familiar with the robertson seymour theorem rking 
00:02 < cirwin> simpler for devs => less cost
00:02 < niggler> this is an example of "getting shit done" even though for all intents and purposes its a monstrosity
00:02 < cirwin> but it's a layer of abstraction thing
00:04 < Raynos> Promises are a mind mess
00:04 < Raynos> A stream is a linked list of promises
00:04 < Raynos> Promise<Promise<Promise<...>>>>
00:05 < cirwin> but you can construct them in your own time
00:05 < cirwin> whereas streams with callbacks have to be done up-front
00:05 < rking> niggler: niggler I'm not sure about this theorem's relevance to the convo. It's new to me, yes. =)
00:06 < Raynos> the only problem with promises is that they seem to have corrupted the entire frontend js community
00:06 < niggler> oh rking in terms of the proof, its basically a set of high-level theorems followed by brute forcing a ton of cases
00:06 < Raynos> niggler: I 100% agree though
00:06 < Raynos> I spend all my time thinkign very hard about promises, futures, behaviours, signals & events
00:06 < Raynos> And I never get shit done
00:06 < cirwin> Raynos:  :)
00:06 < cirwin> I imagine the stuff you do get done is awesome though
00:07 < rking> Raynos: What do you mean re: frontend corruption?
00:07 < Raynos> btw
00:07 < Raynos> rking: promises are going to land in the DOM
00:07 < Raynos> unless we through a ragestorm on twitter
00:07 < cirwin> in the DOM? or just javascript
00:07 < Raynos> the DOM
00:07 < rking> Interesting. If you could sell me on the rage I'd be very impressed (since I don't get any of this.)
00:07 < Raynos> they shouldnt land in javascript
00:07 < Raynos> that would be funny
00:07 < niggler> take coffeescript
00:07 < niggler> should coffee script replace JS?
00:08 < cirwin> clearly not
00:08 < Raynos> I think niggler script should replace JS
00:08 < tjfontaine> "take coffeescript, .. no seriously please take coffeescript"
00:08 < niggler> I'm working on that Raynos :)
00:08 < niggler> lol tjfontaine 
00:08 < tjfontaine> such an old, and yet good, joke
00:10 < niggler> rking id summarize by saying that for all its warts, callbacks are conceptually easy to deal with and explain
00:11 < cirwin> easier to explain certainly seems true
00:11 < cirwin> easier to deal with is a matter of what you're trying to solve — it gets fiddlier faster with callbacks
00:11 < niggler> and lets not forget that callbacks also show up in other languages like C
00:12 < Raynos> the funny thing about callbacks vs promises
00:12 < Raynos> is that you need callbacks do to promises
00:12 < cirwin> yeah, promises just provide a nicer API for callbacks
00:12 < niggler> nicer is questionable
00:12 < niggler> it provides "an" API for callbacks
00:13 < cirwin> what's not to like about it?
00:14 < cirwin> apart from additional complexity… :p
00:14 < Raynos> is it promises day or something?
00:14 < cirwin> yup
00:14 < Raynos> Promises are just a fucking OO higher order function over callbacks
00:14 < cirwin> I came here jsut to troll this channel about promises :)
00:14 < Raynos> l2functional and you dont need promises
00:19 <@mbalho> bros, calm it
00:20 < niggler> how do you know that cirwin isn't female mbalho ?
00:22 <@mbalho> how do you know everyone in this channel is not of the same mother and father as me?
00:22 < rking> LOL
01:03 < samholmes> Gah, freenode is always dead on the weekends..
01:03 < jeffstieler> samholmes: if you'd like i can ask my noob question before exhausting my google-fu :)
01:04 < samholmes> jeffstieler: how noob?
01:05 < jeffstieler> samholmes: you tell me - i'm trying to gzip a string, with a compression level of 9, so i don't think i can use the default provided in the zlib.deflate() method
01:06 < jeffstieler> samholmes: but it seems that the zlib.createGzip() method yields a stream object
01:16 < mscdex> jeffstieler: you can probably rip out the function used by the zlib module: https://github.com/joyent/node/blob/v0.10/lib/zlib.js#L138-L169
01:17 < jeffstieler> mscdex: thanks!
01:20 < jeffstieler> argh, why not take an options object as an argument?
01:21 < Industrial> Anyone doing ecommerce with nodejs? it just comes down to client side these days?
01:21 < Industrial> except I guess registration/payment
01:33 < xk_id> anybody has experience making express + socket.io work by using apache reverse proxying?
01:34 < clunkychicken> xk_id, never successfully, ended up just using nginx
01:34 < mscdex> xk_id: that sounds very, very painful
01:34 < xk_id> shit...
01:34 < Andy-> ^^
01:34 < xk_id> unfortunately I'm on somebody else's server, and they're using apache.
01:34 < xk_id> and would prefer me to do the same
01:36 < clunkychicken> questionable then
01:40 < howdynihao> do you guys actually ever check your github feed
01:40 < niggler> howdynihao email is far easier than github
01:41 < howdynihao> i never use it, i was wondering if other people do
01:43 < howdynihao> saturday night, im sitting here compiling node, weeee
01:48 < RLa> xk_id, can't you bypass apache for socket.io?
01:49 < xk_id> RLa: well first of all apache needs to reverse proxy to the internal port where express is listening. 
01:49 < xk_id> That happens, however, requesting the stylesheets fails
01:49 < RLa> i think it depends which port you use for socket.io
01:50 < RLa> you can use same port as other express traffic or some other one
01:50 < xk_id> because while the express app is in var/www/app, apache tries to serve var/www/stylesheets (instead of var/www/app/stylesheets)
01:50 < xk_id> I use the same port as for express. 
01:50 < RLa> oh, you still need to figure that out
01:51 < RLa> i actually have no idea how you can do that with apache
01:51 < xk_id> okay
02:03 < OliverJAsh> i have a script that makes a bunch of HTTP requests all at once (anything from ~10-300 requests) and whilst the script is running, my CPU runs at 100%. is that normal?
02:03 < OliverJAsh> most of the time the script is just waiting for a response.
02:05 < RLa> sure it's waiting for response not parsing html?
02:05 < RLa> you should profile it
02:29 < OliverJAsh> RLa: it could be parsing html that makes it run so slow. i currently run the response through jsdom. does that add a lot of overhead?
02:30 < OliverJAsh> RLa: is node-profile the best way to profile a node app?
02:31 < dested> i got a node.js job offer finally 
02:31 < dested> recruiter in phoenix said there were a total of 3 other people whos resume had nodejs in it
02:31 < dested> moral of the story, put that shit in your resume!!
02:31 < OliverJAsh> haha
02:32 < dested> said they were willing to pay a premium for it. i was pretty floored 
02:32 < dested> a position that paid a bit over 100k
02:34 < OliverJAsh> jesus
02:35 < OliverJAsh> congrats dested, you're a rich man!
02:35 < dested> lol for the record im not gonna take it 
02:35 < dested> im a .net junkie and although im becoming a javascript zealot, its hard for me to leave my favorite language for my second 
02:35 < dested> the number is the same as what i make on the .net side
02:35 < dested> just saying, that shit is really happening in the industry 
02:36 < dested> and it being on my resume got me a call 
02:36 < RLa> OliverJAsh, seems to be a good starting point
02:36 < chapel> dested: Ive been doing node.js professionally for 2 years, its great
02:37 < chapel> looking for a  new job though now
02:37 < dested> crazy
02:37 < BombStrike> there is a fair share of big names using node.js successfully nowaday, so it makes sense that some companies are looking at it seriously
02:37 < chapel> yeah
02:37  * JohnMcLear can't believe we're still having this debate
02:38 < chapel> a lot of companies are searching hard for experiences node.js devs, its not easy I guess
02:38 < chapel> experienced
02:38 < dested> yeah
02:38 < dested> if you live near phoenix, i can forward it along :-)
02:38 < chapel> nope, in spokane, wa :P
02:38 < chapel> I am looking for remote work
02:39 < JohnMcLear> top tip, irc is the wrong place to look
02:39 < chapel> heh JohnMcLear well I wouldn't say its a bad place to get a job
02:39 < jkim> depends on the type of work
02:39 < chapel> just a bad place to look
02:39 < chapel> a friend of mine got a job because of node.js and being on irc
02:40 < jkim> I know of companies where every single employee uses irc
02:40 < chapel> I got a job by being on irc and knowing node.js
02:40 < dested> haha pretty sweet
02:40 < chapel> but, both situations we weren't looking (at least not on irc)
02:40 < jkim> true, they wouldn't likely advertise on irc
02:41 < chapel> but there are a lot of people that hire directly or are connected to the people that hire
02:41 < chapel> so being active in the community is a good way to expose yourself
02:41 < jkim> yep
02:41 < chapel> but thats not specific to irc
02:42 < zdoc> what are companies in need of node engineers looking for as far as experience goes? or does it mainly just depend on the specific need of the company?
02:42 < RLa> i wish there were more part-time/remote positions with node.js work
02:43 < chapel> zdoc: well, I haven't hired anyone so I don't know specifics
02:43 < chapel> RLa: market yourself as a node.js consultant
02:43 < zdoc> understandable. Just asking in general
02:44 < jkim> these days language is less important as the ability to solve a problem and learn it fast
02:44 < jkim> most of the jobs I've gotten have been for languages I didn't know yet
02:45 < jkim> because after a while, picking up new ones isn't really that different. these days people don't say as much that they are a XYZ programmer as much as just a programmer
02:45 < BombStrike> yeah once you know several languages, you can pick up a new once pretty fast given that the structure is similar
02:45 < jkim> yep, the first one of a family of languages is usually a bit tricky
02:46 < chapel> jkim: yeah thats very true
02:46 < chapel> but most companies seem to focus on specific challenges they are trying to solve
02:46 < chapel> so the tech they use or want to use is what they hire for
02:46 < chapel> instead of general quality engineers that can grow into that position
02:47 < RLa> jkim, depends, for a longer project it surely does not matter, but shorter jobs are like "we need to fix bug X" you better have language/tech knowledge they need
02:47 < jkim> and they can also inherit stuff written in a particular language that they now need to either support or rewrite
02:47 < dukedave> I'm on day one with Node, should I be using async? :)
02:48 < jkim> RLa: or the ability to pick it up double quick. like with PHP, Perl, Ruby, and Python, pretty similar
02:48 < dukedave> (a nine month old video mentioned it, but I wondered if there was a more popular alternative)
02:48 < howdynihao> there needs to be a popular job site, where its the other way around
02:49 < howdynihao> companies search for you, instead of you search for companies
02:49 < chapel> jkim: even though I've been using node.js for a long time now, early on I was learning spades about all kinds of things unrelated to node.js just due to the things that needed to be done
02:49 < jkim> yep
02:49 < chapel> howdynihao: companies are searching, they pay so much money to recruiters and sites/companies to find quality devs
02:50 < jkim> and like right now, I am picking up node.js because I am starting at a place which has some things written in it
02:53 < chapel> jkim: are you new to node then?
02:54 < jkim> yep, just starting to look into it
02:54 < chapel> dukedave: async is nice, though I learned to do it without a library and understand why its nice, but thats a personal choice
02:54 < chapel> jkim: cool
02:54 < dukedave> chapel, okay thanks, so long as there isn't a *must have* alternative which has come aloong
02:55 < chapel> dukedave: I really think your best bet is to look at the code directly, how often it is updated (or at least issues fixed) and if you like the api it exposes
02:57 < dukedave> Ah, excellent: http://nodetoolbox.com/categories
03:18 < SrPx> Hello. I'm getting this error when I try to enter raw mode on MacVim: Assertion failed: (!!(events & UV__IO_READ) ^ !!(events & UV__IO_WRITE)), function uv__stream_io, file ../deps/uv/src/unix/stream.c, line 732.
03:18 < SrPx> The error doesn't happen on OSX's normal terminal.
03:18 < SrPx> How can I ignore that assert?
03:20 < Voting> Hi, folks. What version of socket.io should I be using for a very new application? I just downloaded socket.io-1.0.zip. Is that stable? 
03:33 < Voting> <script src="/socket.io/socket.io.js"></script> is working fine on my machine and on no other computers. I'm not sure why it would work. Where would my node.js instance be serving the socket.io client side FROM anyway?
03:36 < owen1> how to install leveldb on a mac? i get Error: SHA1 mismatch with brew.
03:45 < d_d_d> may be `brew install leveled` ?
03:46 < owen1> d_d_d: leveldb. that's what i tried
03:47 < d_d_d> yes, you are. i mean leveldb
03:48 < crabtree> how new is leveldb?
03:49 < owen1> crabtree: 2 years old maybe
03:50 < crabtree> weired
03:50 < crabtree> wtf
03:50 < crabtree> weird*
03:50 < crabtree> never heard of it lol
03:54 < crabtree> grampajoe: i got the ticket!
03:54  * grampajoe dances, falls down, etc.
03:54 < owen1> crabtree: http://nodeup.com/fortyone
03:55 < crabtree> owen1: ?
03:55 < owen1> crabtree: u said u never heard about leveldb so i sent u the recent nodeup podcast
03:56 < crabtree> ah
03:56 < crabtree> anybody wanna vs me in online node tetris? :D
04:00 < s5fs> crabtree: yeah!
04:00 < crabtree> http://orkis.skdev.me/play
04:00 < crabtree> gogog
04:03 < crabtree> :D
04:03 < s5fs> crabtree: controls are confusing haha
04:03 < crabtree> you can use spacebar
04:03 < crabtree> for insta drop
04:03 < s5fs> i'd rather rotate with keys lower
04:03 < s5fs> yeah, i kept dropping when i meant to rotate
04:03 < crabtree> ohh
04:03 < s5fs> can't drop with down arrow/
04:03 < s5fs> ?
04:03 < crabtree> it does
04:03 < crabtree> just not instant drop
04:03 < s5fs> ah, didn't try
04:03 < crabtree> it just speeds up the  drop
04:03 < s5fs> oh gotcha
04:03 < s5fs> the darkness was confusing too haha
04:04 < crabtree> yeah you get special attacks for combos
04:04 < s5fs> lets go again
04:04 < crabtree> kk i'm there :P
04:04 < s5fs> fight!
04:09 < s5fs> nicely done!
04:09 < crabtree> haha good work
04:09 < crabtree> click ready!
04:09 < crabtree> quick
04:09 < crabtree> good good
04:11 < crabtree> gg
04:11 < s5fs> wewt!
04:11 < crabtree> :)
04:11 < s5fs> okay i'm gunna code some more haha
04:11 < s5fs> that's pretty sweet man, you write it? i love tetris!
04:11 < crabtree> alright :P
04:11 < crabtree> na i didn't
04:11 < crabtree> i wish
04:11 < crabtree> i want to write something similar though
04:12 < crabtree> i love the idea
04:12 < s5fs> i may have to write one, looks like a blast
04:12 < s5fs> i'll put it at the end of my to-do list haha
04:12 < crabtree> yeah :D
04:27 < alpharender> Hi. I am first time user, mostly following the rabbit hole from another js project that is using node … I'm tying to npm install deps, I believe to have gone through the install steps but I get 'could not read dependancies' ? I am on Mac OSX https://gist.github.com/tightwork/5279533  . thanks
04:34 < owen1> how to get a hold of slides/videos from different node conferences? currently i manualy look in http://lanyrd.com/topics/nodejs/coverage/ and do a search on twitter for #recent-node-conf and use command+f 'slides' and 'video'. is there a better way?
04:48 < owen1> i want to read/watch any of the node.js dublin videos/slides - http://www.nodejsdublin.com/ anyone?
04:49 < owen1> creationix: https://github.com/creationix/dublin-talk - is there a video of this talk? if not, what's the theme/agenda?
04:50 < zdoc> is there a way to throw an error event in an https GET request so the on('error') handler catches it?
05:21 < ningu> hey, anyone have any suggestions for node modules to manage abuse or just throttle the number of requests a user may initiate per second?
05:21 < ningu> I'm looking for something that can do that in a somewhat intelligent way so as to allow legitimate requests
05:24 < howdynihao> i know of one
05:24 < howdynihao> it's written by this guy named ningu
05:24 < ningu> uh huh
05:29 <@mbalho> crabtree: check this out http://voxel-creator.jit.su/4742170
06:23 < KOunit> What is the advantage of using xmpp server lib on node over an original async chat implemented in node? (I'm really amateur)
06:31 < sinclair|work> http://pastebin.com/bNTRfiNg <-- good or bad?
06:42 < sinclair|work> its very nodejs like, but in C#
07:04 < lethalduck> Has anybody had any problems upgrading successfully from 0.8.22 to 0.10.2?
07:09 < owen1> how to install leveldb on a mac? i get 'Error: SHA1 mismatch' with brew. also, how to install it on debian?
07:09 < kam187-rMBP> hey guys, i upgraded to 0.10.2 and now after about an hour or so it goes into 100% cpu :/
07:10 < kam187-rMBP> i specifically updated because of this isseu https://github.com/joyent/node/issues/5004
07:11 < kam187-rMBP> i guess i could manually apply the patch to an older version, but has anyone else seen this 0.10.2 ?
07:23 < kam187-rMBP> lethalduck: do you use 0.8.22 with ssl by any chance?
07:23 < kam187-rMBP> (anyone here use node with ssl) - I'm trying to find any stable build (without that error)
07:27 < lethalduck> kam187-rMBP: in this case the problem was BKAC. Sorry.
07:28 < kam187-rMBP> yeah i was just wondering if you normally ran SSL on your 0.8.22 version
07:28 < kam187-rMBP> because if you did for a while without problems i might just roll back to that for now
07:28 < lethalduck> no
07:28 < kam187-rMBP> ahh ok
07:29 < lethalduck> The channel seems very quite today.
07:29 < kam187-rMBP> i guess it's easter
07:30 < sinclair|work> anyone ? http://pastebin.com/0m0qp0WJ
08:02 < owen1> how do u guys deal with multiple functions of a db module? put them in db.js and exporting multiple functions or create a db folder and inside multiple files that each expose 1 function?
08:07 < akoenig> owen1: From my point of view: It depends on the complexity of your functions. If the functions are isolated regarding their use-case: separate.
08:08 < akoenig> A good example of this separation is the NPM client. https://github.com/isaacs/npm/tree/master/lib
08:09 < owen1> akoenig: right now all the function share dbConnection variable. if i separate them to individual files all i have to do is pass this var to each module. not a big deal.
08:09 < owen1> i like having 1 function per file. i also like having only 1 test per file.
08:13 < akoenig> own1: One opportunity could be to establish the connection in an "index.js" file, require all the other modules also in this file and pass the connection object to the required module. Then write a "factory function" which returns the respective module, like: exports.get = function (type) { return modules[type]; }
08:15 < akoenig> Sorry for misspelling your name, owen1 :)
08:15 < owen1> akoenig: it's ok. i am still thinking of the factory stuff.
08:15 < owen1> what's in modules[type] ?
08:15 < akoenig> owen1: Shall I put up a gist in order to visualize this?
08:16 < owen1> akoenig: sure!
08:16 < akoenig> owen1: Sure, give me a sec.
08:16 < owen1> i get the index.js and the fact that i establish the db connection there.
08:17 < owen1> factory sounds enterprisy (:
08:19 < eddyb> so, who here would like to be able to do: await fileContents = fs.readFile(fileName, 'utf8'); ?
08:20 < eddyb> or this: https://github.com/google/traceur-compiler/issues/19#issuecomment-15672671
08:21 < akoenig> owen1: It is not really a factory function, but, yeah :) 
08:22 < akoenig> owen1: Something like this: https://gist.github.com/akoenig/5279959
08:22 < eddyb> so, uhm, you have a hot loop
08:22 < eddyb> just stick await process.nextTick(); in there and it won't block
08:23 < eddyb> I guess Sunday morning was a bad idea for checking out reactions
08:24 < owen1> akoenig: looking..
08:24 < akoenig> owen1: Sure, take your time :)
08:25 < akoenig> owen1: I hope this is useful.
08:27 < kam187-rMBP> hey guys, do any of you use node with SSL?  I'm having a 100% cpu issue with 0.10.2, and an identified pug with 0.10.0.  I'm looking for any build that someone has used for a while and can say is stable with SSL :)
08:28 < kam187-rMBP> *bug not pug hahah
08:29 < owen1> akoenig: what is module in line 20?
08:30 < akoenig> owen1: Oh snap, it's a typo. Fixed it.
08:30 < eddyb> random thought. so cluster uses processes, right? what if it were using threads?
08:31 < eddyb> it would seem doable to reimplement cluster with threads-a-gogo
08:33 < owen1> akoenig: is that how u use it?  dbFunction = require('./index.js').get; dbFunction('addDevice')({ ..bla...})
08:34 < akoenig> owen1: I would use it like this: var dbstuff = require("./path/to/the/folder/"); var yourDbModule = dbstuff.get("YOUR_MODULE");
08:35 < akoenig> owen1: You don't have to define the index.js in an explicit way. Node searches for the index.js if you "require a path".
08:37 < owen1> so u assume that index.js is inside /path/to/the/folder ?
08:37 < owen1> akoenig: ^
08:38 < akoenig> owen1: Yes.
08:38 < owen1> akoenig: but what if there are more files there?
08:39 < owen1> akoenig: don't u think it's better to do module.exports = function(type) { return modules[type] }; 
08:41 < akoenig> owen1: What do you mean with if there are more files? Do you think of files that are no modules?
08:41 < owen1> also, why do we need the immediately invoked function (line 4 - 27)?
08:41 < akoenig> owen1: Yes, you can do that, but then you have to do something like: dbstuff("your_module");
08:42 < owen1> require(<path to folder>) - what if inside folder i have all kind of files. how does node knows what file to require?
08:43 < akoenig> owen1: You mean the require statement in the loop, right?
08:43 < owen1> no
08:43 < owen1> dbstuff = require("./path/to/the/folder/")
08:44 < owen1> do u assume that index.js is the only file inside folder?
08:44 < akoenig> owen1: No, you have the index.js and on the same level all your separated modules.
08:45 < akoenig> owen1: something like: index.js, module1.js, module2.js ...
08:45 < owen1> oh. i thought of db/module1 etc.
08:45 < owen1> let me look at your code again
08:46 < akoenig> owen1: right, then you have to require the db module like this: var dbstuff = require("./path/to/db"); and then you can access the other modules with: var module1 = dbstuff.get("module1");
08:47 < akoenig> owen1: or dbstuff.get("module2"); and so on.
08:47 < owen1> yeah. got it.
08:49 < owen1> what about the IIF that start at line 4. commonjs make sure our vars don't touch the global namespace, so i don't think we need it.
08:49 < owen1> (a function that will create scope)
08:51 < akoenig> owen1: Yes, you're right. It is not necessary.
08:53 < owen1> i actually learned more stuff from your gist. never used path.sep and path.extname
08:53 < owen1> now i'll start using them.
08:53 < akoenig> owen1: I'm happy to hear that.
08:53 < owen1> at least the extname. i guess the sep is for compatability with win?
08:53 < owen1> yeah. just looked that up
08:54 < akoenig> owen1: right, but you could also use something like this: path.join(__dirname, file)
08:54 < akoenig> owen1: It's more elegant.
08:55 < akoenig> owen1: Updated it.
08:55 < owen1> nice!
08:55 < owen1> btw, require(folder name) will look for index.js?
08:56 < akoenig> owen1: right.
08:56 < owen1> i think it's a good practice to always use __dirname. i got bitten when not using it.
08:56 < akoenig> owen1: But you have to add the trailing slash.
09:44 < pats_Toms> hi, How really update globall package using npm?
09:45 < RLa> update with -g switch does not work?
09:46 < pats_Toms> works
09:46 < pats_Toms> thanks
09:46 < RLa> no problem
10:33 < owen1> i am reading about substack's http request module - https://github.com/substack/hyperquest.  it seems like both node and mikeal's request module are slow in some situations. anyone else uses hyperques?
10:34 < owen1> hyperquest
11:04 < El_Angelo> is there any buffering in streamreader?
11:28 < zenetik> mscdex: ping
11:28 < zenetik> mscdex: i understood my previous mistake regarding win scroll 
11:29 < zenetik> mscdex: now got a problem with HOME and END keys, it seem's i have to setEscDelay, but no luck :(
11:52 < howdynihao> yawn
12:04 < whadar> I've created a super easy p2p download for node 0.10 installation on windows for Google Chrome - http://www.sharefest.me/ewIDd would be happy to hear how it works for you guys
12:09 < howdynihao> that seems a lot harder to me
12:18 < howdynihao> oh my goodness mcgriddles
13:19 < Meh> I'm trying to setup a https server, using an authorized certificate. However, I keep getting a "PEM routines:PEM_read_bio:no start line" error, when starting up the server. Exactly what needs to go in the certificate .pem file, and the key .pem file?
13:20 < Meh> As I see it, I have a private key, a regular certificate file, and an intermediate certificate file. I tried combinding the latter, as cert, and using the private as key. I guess this was a no-go. :P
13:28 < mucker> I'm using passport-facebook. For some reason, the page is getting redirected to /auth/facebook/callback?code=... than / my facebook site_url = http://localhost:8081/auth/facebook/callback
13:37 < turneralex> hey all. quick question in regards to exec(). I'm trying to run "git init --bare" through exec, and I'm finding that it's not completing the command, the directory is just left with hooks dir, nothing else. Any tricks?
13:39 < turneralex> I'm just running exec(git init bare);
13:46 < [Fudge]> ok
13:46 < [Fudge]> I saw a tweet for something here
13:46 < [Fudge]> oh, nevermind
14:19 < NuZZ> turneralex, got permissions and assuming linux?
14:21 < turneralex> NuZZ: yessir, it's kicking off the command, just not completing it
14:21 < NuZZ> http://www.dzone.com/snippets/execute-unix-command-nodejs
14:21 < NuZZ> so ur doing that?
14:21 < turneralex> exactly
14:21 < NuZZ> can you do other commands?
14:22 < niggler> turneralex whats happening
14:22 < turneralex> think i need to do this:http://davidwalsh.name/sync-exec
14:23 < NuZZ> just supply a callback ?
14:23 < niggler> he probably wants it in context
14:23 < NuZZ> im assuming it emitting an error and ur just not seeing it
14:23 < niggler> there;s also execSync
14:23 < turneralex> potentially
14:23 < turneralex> I'm running like 40 execs
14:23 < niggler> turneralex exec takes a callback
14:23 < turneralex> and think the script is too fast for them
14:23 < niggler> turneralex can you put up the code?
14:24 < turneralex> need someway to track them
14:24 < turneralex> surte
14:24 < NuZZ> just pastebin it
14:24 < niggler> hastebin
14:25 < NuZZ> holy crap that is delicious niggler
14:25 < niggler> paste bin is too bloated
14:26 < turneralex> that IS delicious
14:26 < turneralex> http://www.hastebin.com/fucoqemeni.tex
14:27 < NuZZ> all dem seperate commands
14:27 < turneralex> yaa
14:27 < turneralex> nogood?
14:28 < niggler> first turneralex you should be using mkdir -p
14:28 < niggler> not that they don't exist
14:28 < NuZZ> with the nginx write you could do it with one write()
14:28 < NuZZ> i assume
14:28 < NuZZ> but uh, the exec calls need a callback
14:29 < niggler> they don't need a callback
14:29 < niggler> but you can't see the error without it
14:29 < turneralex> exactly
14:29 < turneralex> though for example
14:29 < niggler> turneralex for each of those exec commands, add a callback
14:29 < niggler> and make them just print stderr
14:29 < NuZZ> exec('ls', function() { exec() } )
14:29 < turneralex> I'll run "git init --bare"
14:29 < turneralex> and it'll create the hooks dir
14:29 < niggler> oh wait
14:29 < turneralex> with 2 files inside it
14:29 < niggler> you are execing a cd
14:29 < turneralex> though none of the others
14:29 < niggler> that doesn't work
14:30 < niggler> because the current directory of the process won't change
14:30 < turneralex> so it's like git init is starting and being stopped shortly after execution 
14:30 < niggler> turneralex try this:
14:30 < niggler> on your shell
14:30 < niggler> run bash
14:30 < niggler> mkdir foo && cd foo
14:30 < niggler> then exit the inner bash
14:30 < niggler> notice how, even though the inner shell was in foo, the outer shell won't be
14:31 < turneralex> yeah understand
14:31 < niggler> that's because the current working directory of the inner process didn't change the working directory of the outer process
14:31 < niggler> so you either need cd && git
14:31 < niggler> OR
14:31 < turneralex> though what i'm trying to achieve with that appears to be working (with the CD)
14:31 < niggler> use os chdir
14:31 < niggler> *process.chdir
14:31 < turneralex> it would appear that it is 'cd'ing' into /root/webgits/..../prod.git 
14:31 < turneralex> and then running git init --bare
14:32 < turneralex> it's just not completing git init --bare 
14:32 < niggler> that git init --bare is run in the current directory
14:32 < niggler> not in the one you are changing to
14:32 < niggler> if you want to change directories, use process.chdir
14:32 < turneralex> doesn't appear that way
14:32 < turneralex> not on my ubuntu 12.04 machine anyways
14:33 < turneralex> will use process.chdir though
14:33 < NuZZ> regardless, throw a callback onto the problematic exec() and console.log() the (error, stdout, stderr)
14:33 < turneralex> future proof
14:33 < niggler> turneralex simple example: 
14:33 < turneralex> I'm currently thinking of some sort of child process manager like asyncblock
14:33 < niggler> turneralex http://hastebin.com/qehadekevo.js
14:34 < niggler> what does that tell you?
14:34 < niggler> (also turneralex  you can put it all in a shell script)
14:34 < turneralex> yeah, i totally could :/
14:34 < turneralex> but node is so much cooler
14:34 < turneralex> root@web-01:~# node test.js 
14:35 < turneralex> root@web-01:~# 
14:35 < turneralex> niggler: case and point.
14:36 < niggler> err turneralex you do remember that a leading slash is interpreted as an irc command
14:36 < turneralex> haha, didn't even notice, returned my home dir twice
14:39  * niggler pets turneralex 
14:39 < niggler> so you need to use process.chdir
14:39 < turneralex> noted :)
14:40 < niggler> every other language will have the same problem because the mechanism is to run in a separate process
14:40 < turneralex> also, thoughts, feelings on asyncblock?
14:40 < niggler> this isn't a nodejs deficiency
14:40 < niggler> I've used node-sync and it works pretty well
14:41 < niggler> both leverage node-fibers
14:41 < turneralex> so just callbacks/
14:41 < turneralex> ?
14:41 < turneralex> ah shit
14:41 < turneralex> sorry half asleep here
14:41 < turneralex> and the link between cd not working the subsequent commands not working just hit me
14:41 < turneralex> haha
14:42  * niggler pets turneralex 
14:42 < turneralex> haha
14:42 < turneralex> I'm off to bed
14:43 < turneralex> thanks for the chat guys
15:07 < yawnt> luruke: ?
15:22 < NuZZ> http://www.youtube.com/youtube?feature=inp-yo-jke
15:22 < NuZZ> i loled
15:22 < NuZZ> its that time of year guys :)
15:57 < kam187-rMBP> hey guys, i'm receiving this with node + sockets.io  "warn: error raised: Error: accept EMFILE"
15:57 < kam187-rMBP> ulimit shows unlimited
15:57 < kam187-rMBP> http://pastebin.com/3k0TPrRB
15:57 < kam187-rMBP> the limits on my node process
15:58 < kam187-rMBP> i'm counting sockets and currently it's hovering at 300 (which is normal considering the number of clients)
15:58 < niggler> kam187-rMBP"Max open files            1024                 4096                 files     "
15:58 < kam187-rMBP> ok i figured it might be that, that makes sense because i could approach that easily
16:05 < aMoniker> does require() obey process.chdir() ? It doesn't seem to
16:06 < kam187-rMBP> niggler: ok i think that's fixed it :)
16:07 < kam187-rMBP> I assume socket.io will automatcially kill the socket if there's no heartbeat etc
16:08 < kam187-rMBP> i mean since i only handle incoming connections and service them, there's no real way i could be holding sockrts open is there if the client disapears?
16:10 < aMoniker> When I use process.chdir(), that doesn't update process.mainModule... is there a way to update process.mainModule?
16:10 < tjfontaine> what are you actually trying to achieve?
16:11 < aMoniker> tjfontaine: me?
16:11 < tjfontaine> yes
16:12 < aMoniker> I'm trying to run a node script via cron, so I'd like to set my working directory to where my site is, not where the cron files are.
16:13 < tjfontaine> */5 * * * * node -e "require('/path/to/site').cron()"
16:14 < aMoniker> the script is in cron.daily
16:14 < aMoniker> I don't want to add another entry for it
16:15 < tjfontaine> the concept is the same, instead of having separate files for cron, put the cron logic in the site and then require('/path/to/site/cron')
16:16 < aMoniker> ok, I like that idea since it's easier to keep everything in my repo
16:16 < aMoniker> but for the sake of curiosity, is there a way to do that in a running node script?
16:39 < NuZZ> i believe you can send commands to node while running... just google it imo
16:40 < webdesserts> are there any good alternatives to express out there right now?
16:43 < webdesserts> and if you're looking for production debugging techniques (while your app is running) Nodeup 21 has some good insight.
16:54 < TheAceOfHearts> webdesserts: any specific nodeup episodes you'd suggest listening to? I haven't heard any yet, but I've been meaning to
16:58 < lbod> does linguist take into account older commits that have since been deleted? i have a respository which is JS but it still flags the language as php even though those files have been deleted, will rebasing sort that out?
16:58 < webdesserts> TheAceOfHearts: 19, 21, 24, 25, and 40 were all good listens for me.
17:00 < lbod> sorry :-O thats a github question
17:00 < webdesserts> The most recent one introduced LevelDB and was also very interesting to me.
17:00 < TheAceOfHearts> cool ty ty! 
17:11 < aMoniker> Is it not a good idea to use fs.readFileSync?
17:11 < TheJH> aMoniker, it depends on the context
17:11 < aMoniker> TheJH: in a model constructor
17:12 < TheJH> aMoniker, as a rule of thumb: it's fine if it only happens during your app's startup phase, but it's a bad idea if it happens during normal execution
17:12 < aMoniker> TheJH: would be on every page request
17:13 < TheJH> aMoniker, then it's not a good idea
17:14 < TheJH> aMoniker, while readFileSync runs and waits for the disk, your program can't do anything else
17:14 < aMoniker> TheJH: I know
17:15 < TheJH> aMoniker, then you also know that using this function will probably have a negative impact on your application's performance
17:15 < TheJH> and negative impact on performance is bad
17:15 < aMoniker> If I cache the result, it would only happen once per pageload every time I restart the server
17:15 < TheJH> that sounds reasonable
17:16 < TheJH> of course, it also means that you can't change that file without restarting the server, but if that's not a problem, your idea sounds good
17:17 < aMoniker> well, I can change it
17:18 < aMoniker> the change just wouldn't be reflected
17:18 < aMoniker> I could cache in redis if I wanted to invalidate without restarting
17:18 < Vendethiel> Hi - I'd like to know how I can point to folder packages from my package.json ? I'm currently `npm link`ing but that seems a bit bad
17:18 < aMoniker> but I'm using forever -w anyway
17:19 < niggler> Vendethiel for dev or production?
17:19 < Vendethiel> prod
17:19 < Vendethiel> niggler*: prod
17:20 < spobat> everytime I want to say node I actually say "nude," and the word  "node" doesn't want to come to my mind t_t
17:20 < niggler> Vendethiel why not add your local thing to a git repo and have the production machine use the git endpoint
17:20 < Vendethiel> mainly because of names
17:20 < niggler> Vendethiel like https://github.com/Niggler/voc/blob/master/package.json#L12
17:21 < Vendethiel> and because it's a pain to maintain etc
17:21 < Vendethiel> sometimes they're app specific
17:23 < Sorella> Don't `process.stdin` inherits from Stream.Readable? Using `process.stdin.read()` gives a `#<ReadStream> has no method 'read'` error.
17:34 < Sorella> Nevermind, I just had node 0.8 and 0.10 installed at the same time, and the file was being executed by the previous version.
17:56 < booyaa> what's everyone's favourite node version manager? nvm, nave?
17:57 < AAA_awright> Um, Git?
17:57 < niggler> AAA_awright running multiple versions of node
17:58 < AAA_awright> You need a program to do that? I just install them
17:58 < niggler> booyaa have you tried 'n'?
17:58 < AAA_awright> I mean, I build from source so it's not a problem
17:58 < booyaa> nope, bet that'll be fun to google for ;)
17:58 < niggler> booyaa: https://github.com/visionmedia/n
17:58 < booyaa> AAA_awright: near all the version managers do this 
17:58 < booyaa> cheers
17:58 < niggler> AAA_awright you are still missing the problem
17:58 < AAA_awright> What's the problem?
17:58 < niggler> i want to test on 3 different versions of node
17:59 < AAA_awright> I want another version of Node.js installed, I install it
18:02 < Victt> Good evening. http://paste2.org/p/3451209  I am too newbie in it. My goal is to send some text. The first part is node,js part and director route library. The second is browser code. I do not see as words in browser console neither in terminal 
18:03 < JamesMGreene> isaacs: rimraf keeps giving me ENOTEMPTY. Thoughts? o_O
18:04 < Sorella> AAA_awright, sure, you can also manually maintain all your programs in 30 different nodes in your network. Doesn't mean it's an efficient use of your time, though.
18:04 < JamesMGreene> isaacs: (Windows 7 MinGW, if it matters)
18:05 < JamesMGreene> isaacs: The dir is always empty when I look AFTER the Node process ends, so it must successfully delete the kids, but it never successfully deletes the folder. However, if I readdirSync on the dir in question AT the time of the exception, then it does show 1 file in it
18:07 < AAA_awright> Sorella: Same solution for any other task that requires replicating across multiple systems
18:07 < MI6> joyent/libuv: Ben Noordhuis v0.10 * ec24bfa : include: update uv_backend_fd() documentation  uv_run_once() is no more,  - http://git.io/TKW1qw
18:07 < booyaa> niggler: n's great, was worried it would break homebrew but they appear to be playing nice. wahay got 0.8/10/11 
18:07 < JamesMGreene> isaacs: version 2.1.4
18:08 < kam187-rMBP> hey guys
18:09 < kam187-rMBP> after a while node and socket.js goes to 100% cpu.  I logged an errror with the nfile ulimit and increased that, but this time it didn't error, it just stopped accepting connections
18:09 < kam187-rMBP> i restarted node (its production :/) and checked netstat -an | wc -l and there's 1400 connections… my nproc is at 1024
18:09 < kam187-rMBP> do i need to increase that too?
18:11 < Sorella> AAA_awright, either you still don't see the point or you're trolling or I don't get your reply.
18:12 < AAA_awright> Sorella: Well I hope you don't manage 30 systems by hand, you have some sort of system to replicate and propogate your efforts
18:12 < AAA_awright> I don't see how Node.js is special in this regard
18:12 < Sorella> AAA_awright, ah, yeah, so you just don't get the point :3
18:13 < AAA_awright> What's the point?
18:13 < AAA_awright> My point is if I need another Node.js version, I install it
18:13 < AAA_awright> Poof, done
18:13 < AAA_awright> Now I have two Node.js versions to choose from
18:13 < Sorella> AAA_awright, that there's no need to manage things manually yourself "git clone && ./configure && make && make install --prefix ..." if you can have a tool to do it for you.
18:14  * Sorella is lazy
18:14 < Sorella> Oh, yeah, I forgot symlinking too
18:14 < AAA_awright> Is that so disproportionately hard that you need a special tool for Node.js, but all other aspects of system administration are easy enough to do by hand times 30 systems?
18:15 < AAA_awright> If you need a Node.js specific tool then you're probably doing something wrong
18:15 < Sorella> AAA_awright, uh... you are aware that was a hypothetical situation meant to show an extreme case, are you not?
18:15 < AAA_awright> So you're allowed to use hypotheticals but I'm not?
18:16 < AAA_awright> If you need to setup 30 systems very similarly, how do you normally do that?
18:16 < AAA_awright> And why can't the same process be used for Node.js?
18:17 < AAA_awright> Why a Node.js specific tool?
18:17 < jarek> AAA_awright: that's simple, you just create another Linux distro :P
18:17 < Sorella> AAA_awright, Puppet?
18:17 < AAA_awright> Like that, I was thinking of a standard package manager though
18:17 < Sorella> AAA_awright, it's not managing 30 systems similarly in this case, though. It's managing multiple versions of a single application in a single box.
18:17 < Sorella> And having something like update-alternatives.
18:22 < Sorella> If I want to do something after Stream A has been fully piped onto Stream B, which event do I have to listen to? `finished` doesn't seem to fire, even though Node's documentation says that `pipe` will call `end()` on the write stream after fully piping unless you pass `{ end: false }` as option.
18:26 < nathan7> Sorella: finished?
18:26 < nathan7> Sorella: there's an 'end' event
18:27 < nathan7> Sorella: but no 'finished' event that I know of
18:27 < Sorella> nathan7, http://nodejs.org/api/stream.html#stream_event_finish
18:28 < nathan7> Sorella: hm
18:28 < nathan7> Sorella: was unaware of that
18:28 < nathan7> Sorella: is that an 0.10 thing?
18:29 < Sorella> I can listen to the `end` event on the Readable stream, but I don't think that means the writable stream has written stuff because of buffering(?)
18:29 < Sorella> Yeah, 0.10
18:31 < Vendethiel> is there any way with npm to install from a folder from package.json ? Else I need a build step that will npm install lib/abc etc
18:36 < Sorella> Vendethiel, like npm link?
18:36 < Vendethiel> Sorella: like npm install a/b : "from package.json ? Else I need a build step that will npm install lib/abc etc"
18:36 < Vendethiel> i don't check my node_modules
18:36 < Vendethiel> in my github repository
18:38 < Sorella> Vendethiel, hm, I'm still not sure what you mean. `npm install` will install all dependencies you have in your package.json, `npm link` will put the package at the current directory in the /lib folders. `npm link foo` will install something you've previously linked.
18:38 < Vendethiel> Sorella: npm install lib/foo will install lib/foo from lib/foo/package.json's name
18:38 < Vendethiel> I'd like to do that from package.json*
18:40 < duko> hi everyone. I'm using jsuglify in a project and now I see that there is jsuglify2 and another parser called esprima
18:40 < duko> has anyone here looked at these?
18:41 < duko> should I update to use uglifyjs to uglifyjs2? is esprima the new favorite tool for parsing?
18:42 < Sorella> nathan7, ah, okay, `finish` works fine. I was just overlooking the fact that I was using process.stdout, and `end` is not called for that.
18:42 < nathan7> Sorella: aha
18:42 < nathan7> duko: esprima is fucking awesome
18:42 < basiliothecat> Vendethiel: if you're about to link some shared package that's just in your local fs, then i used to have script in the dependent's package package.json that makes a symlink - far from ideal, but i haven't found any better option
18:43 < Vendethiel> basiliothecat: yes I have a build step too currently ^^
18:43 < Sorella> duko, there's also acorn, which is simpler, smaller and possibly prettier to work with
18:43 < basiliothecat> npm link is basically the same thing and witout hosting the common package in git/npm rep there doesn't seem to be any other way
18:45 < Sorella> Also, I don't think anyone likes working with uglify. I could be wrong, but haven't heard good stuff about it =/
18:45 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:45 < Vendethiel> basiliothecat: yes yes I'm currently using npm link for my dev
18:48 < basiliothecat> Vendethiel: if making a private npm rep is worht the hassle in your case - that'll make things quite nice, but in mine - to share 1 package from 2 apps - chose to go with  links
18:48 < basiliothecat> s/worht/worth
18:48 < Vendethiel> basiliothecat: I have 6 folders in my lib/ so not worth it
18:49 < Vendethiel> I love to separate things in little components
18:49 < basiliothecat> Vendethiel: well, then i don't know of a better way to do it. In case you'll find one - let me know :)
18:49 < Vendethiel> for sure, for sure. package.json accepting, say, folders as version would solve the problem I think
18:50 < basiliothecat> Vendethiel: yeah, same thing - and i had to go with fewer seperate packages because of the troubles linking them
18:57 < rihnapstor> using stylus preprocessor to complite .styl files  to css. stylus version 0.30.0 and i get stderr when trying to compile a file with stylus imports. the stylus file cannot find other stylus files when used with @import syntax .
19:07 < nathan7> rihnapstor: @import "x";
19:07 < nathan7> rihnapstor: not @import "x.styl";
19:13 < rihnapstor> nathan7: yes its @import "X"
19:14 < xk_id> for the love of god, has anybody managed to reverse proxy apache2 to socket.io?
19:14 <@Nexxy> that sounds painful
19:15 < polotek> xk_id: why would you want to do that?
19:15 < xk_id> polotek: it's not my server
19:15 < polotek> you wouldn't be able to use web sockets
19:15 < xk_id> Nexxy: I'm numbed.
19:15 <@Nexxy> then it's also not your problem! \o/
19:15 < polotek> you'll have to configure socket.io to only use long-polling
19:16 < xk_id> polotek: have done so. problem is of a different nature..
19:16 < xk_id> polotek: the problem is with '<script src ='socket.io/socket.io.js'>
19:16 < polotek> mmm, then you'll probably have to be more specific. I think there's also a #socketio channel
19:16 < xk_id> it 404's
19:17 < xk_id> #socketio is empty
19:17 < polotek> that's pretty lame
19:17 <@Nexxy> ableist!
19:17 < xk_id> lol
19:18 < polotek> sorry. that's pretty negro
19:18 < polotek> I can use that one cause I own it
19:18 < xk_id> x_x
19:18 <@Nexxy> ahahaha
19:18 <@Nexxy> +1
19:22 < xk_id> this completely sums up my problem, none seems to have ever found a solution. http://stackoverflow.com/questions/12424707/socket-io-with-apache
19:24 < Aria> xk_id: at 4, there's no mention of /what/ error
19:25 < xk_id> that's because he copy/pasted socket.io.js to a new location. which I don't think makes a terrible lot of sense. 
19:25 < Aria> Also, Apache is very request-response oriented. It's not really good with streaming, unending requests like socket.io, and certainly not websockets.
19:26 < xk_id> that might perhaps be true, but atm I am constrained to work with it. 
19:26 < Aria> So what's the actual error you have?
19:26 < Aria> "it doesn't work" doesn't give much to go on.
19:27 < xk_id> Aria: sorry, I posted a few minutes earlier. 
19:27 < xk_id> <script src='socket.io/socket.io.js'> 404's
19:28 < xk_id> If I copy/paste socket.io.js to /public (I am using express), it gets resolved, but then I get "The requested URL /socket.io/1/ was not found on this server"
19:28 < Aria> Ah. So the socket.io handler isn't responding, neither with its client library nor the actual channel.
19:28 < Aria> And connecting directly to the backend /does/ work?
19:29 < xk_id> the backend operates on an internal point, which is why I need to reverse proxy to it. 
19:29 < xk_id> *internal port
19:29 < Aria> So that's an "I don't know"?
19:29 < xk_id> I've tested it internally, and it does work. 
19:30 < Aria> Tested how? Connecting to that same daemon?
19:30 < xk_id> connecting to the port on which express is running
19:31 < reskp_> hi, is there some else as already have :
19:31 < reskp_> Local Npm module "grunt-contrib-copy" not found
19:32 < reskp_> grunt-contrib-copy is installed globally and localy --'
19:38 < Sorella> I still wonder why Grunt people didn't just use `require()` to load tasks. It's stupid to have `loadNpmTasks` and `loadXTasks`.
19:38 < Sorella> When require does exactly that.
19:40 < Aria> Yeah. Mrr.
19:43 < Sorella> I mean, `require('tasks')(grunt)`, declare your dependencies in the package.json for your task, npm install and you're all set. But some people apparently think to come with clever solutions for problems that are already solved in a simple way.
19:43 < wiherek> hi
19:46 < geoous> when i creata a server is necessary have a res.end('something')?
19:47 < Aria> An http server? If you want to send the end of the request, then yes.
19:49 < xk_id> great.. okay, I don't know why, but now the 'socket.io.js' loads. However, I get a "The requested URL /socket.io/1/" error when it tries to connect to the server. 
20:00 < Voting> OK, I CLEARLY installed or configured socket.io badly. My application is only accessible on my computer. The page says: <script src="/socket.io/socket.io.js"></script> remote machines get the error msg xxx in the console window. "failed to load resource" http://localhost...?=9823749837
20:01 < kam187-rMBP> any of u guys run node under heavy load?
20:01 < Voting> OK, I CLEARLY installed or configured socket.io badly. My application is only accessible on my computer. The page says: <script src="/socket.io/socket.io.js"></script> remote machines get the error msg "failed to load resource" http://localhost...?=9823749837 in the console window. 
20:02 < Aria> Voting: What 'failed to load resource' ? What response from the server? (if you're using chrome, look on the network tab in the web inspector)
20:03 < Voting> Aria: it is failing to load socket.io.js. 
20:03 < Aria> What kind of failing?
20:04 < Voting> Aria: unless I'm on the local machine.
20:04 < Aria> Server responded 404? 500? Didn't respond? Connection refused?
20:04 < niggler> Voting are you hosting using a node app?
20:04 < Voting> Aria - one sec... I'll look
20:04 < Voting> niggler: yes, my node is configured wrong I think so it is not serving up the .js file.
20:05 < niggler> are you listening?
20:06 < niggler> Voting you have some code?
20:06 < Voting> niggler and Aria - I'll post some code now... 
20:07 < xk_id> Does "The requested URL /socket.io/1/ was not found on this server" ring a bell to anyone?
20:07 < Aria> xk_id: Yes, but the causes are various. (Are you hitting the right server? Is the server responding for that URL right?)
20:08 < Voting> Aria: I'm not clear where to look in Chrom to see more details about what network. The browser on the remote machine is looking for the code n its local hard drive.
20:08 < Aria> Voting: Local hard drive, or via a local http server?
20:08 < xk_id> Aria: anything in relation specifically to socket.io and reverse proxying through apache?
20:10 < Voting> Well, the instruction for socket.io say that the index.html should have   <script src="/socket.io/socket.io.js"></script> so why NOT look on local host, Aria? 
20:10 < Aria> xk_id: Those same quesions.
20:10 < Aria> Voting: Well, that's a URL relative to the host.
20:10 < Aria> Voting: So if you're loading index.html from localhost, that's where it'll look.
20:11 < Aria> (socket.io always expects an HTTP server-- there's no point in running it direct to disk via file:/// urls)
20:11 < xk_id> hahah Voting our problems are extremely similar. 
20:11 < xk_id> Voting: would u mind briefing me regarding your problem? I've done a bit of progress recently.
20:15 < Voting> Aria niggler http://hastebin.com/fawuqowogu.php <- Am I missing a "use app" line to tell the web server where to server the socket.io code from?
20:16 < Aria> Voting: Not sure, but perhaps. I can't remember how socket.io integrates.
20:16 < Voting> xk_id: Socket.io is working fine in chrom and ff on my local machine where I"m programming but not on anyone remote who I try to serve it to. (Thanks Aria niggler ) 
20:17 < xk_id> Voting: can they access the html?
20:17 < Voting> Aria: This is JUST about getting the code into the client, nothing complex, I don't think. 
20:17 < Voting> xk_id: yes, the get the page but they also get an error: 
20:17 < Aria> Voting: Yeah, I'm saying I know node and http well, but don't use socket.io, so I don't know how it's supposed to integrate, especially with express.
20:21 < wiherek> what do you guys use for cucumber-like behavioral tests?
20:21 < xk_id> Voting: ?
20:21 < Voting> xk_id: yes?
20:21 < xk_id> I've been deep down into trying to make socket.io work externally the past few days. 
20:21 < xk_id> You haven't told me the error the external clients get. 
20:21 < Voting> xk_id: wow
20:23 < Voting> xk_id Aria niggler - the error is: Failed to load resource :  http://localhost:8888/socket.io/1/?t=45345345435 
20:23 < xk_id> Voting: okay, so your external client is trying to access localhost:8888. That doesn't make sense, since you want it to access your server. 
20:24 < xk_id> what does your io.connect() say?
20:24 < xk_id> client-side
20:24 < Voting> xk_id: yes
20:24 < Voting> xk_id: what do you mean?
20:24 < xk_id> did you put something in the brackets? for io.connect()
20:25 < Aria> Ah, so yeah, you want to use your server's name
20:26 < Voting> Aria niggler xk_id - so it is finding the code but it isn't connecting? 
20:26 < Voting> Aria niggler xk_id I had it in my head that it wasn't finding the .js file!
20:27 < xk_id> Voting: no, it finds the .js files, because it figures it needs to create a socket to /1/?...
20:27 < xk_id> that instruction is inside socket.io/socket.io.js
20:28 < Voting> Aria niggler xk_id So my client side code is saying : var socket = io.connect('http://localhost:8888');
20:28 < Voting> What SHOULD It say?
20:28 < xk_id> hehehe
20:28 < niggler> ws://
20:28 < Aria> You'll have to tell us.
20:28 < xk_id> so you are instructing your client to connect to its own localhost ;)
20:28 < Aria> What's your server name and port?
20:28 < Voting> port is 8888 
20:28 < xk_id> it shoudl say io.connect(); because it figures everything out itself :)
20:29 < Voting> but the client I'd rather default that to wherever  you GOT the html from
20:29 < Voting> can I do that?
20:29 < xk_id> yup. io.connect() does that. nothing inside brackets
20:29 < Voting> let me try that...
20:29 < xk_id> otherwise (an unnecessarily), you should have had io.connect(http://yourwebsiteuri);
20:30 < xk_id> *and
20:31 < Voting> Aria niggler xk_id - had to run to the little boys room... now I can test...
20:36 < Qbix1> heyg uys
20:36 < Qbix1> when is Node.js 1.0 coming out?
20:40 < Voting> Aria niggler xk_id  - wow, thanks, folks! People have long accused me of making things more complex than they needed to be... this is just an esp. funny example! Why I had local host in there I'll never know... and why I would not have noticed that that made no sense is also kind of funny...
20:40 < Voting> Aria niggler xk_id  thanks all of you!
20:41 < xk_id> Voting: you had it there because that's how the http://socket.io looks like :) it's a common mistake, if you look on stackoverflow. there' a couple of questions that made this mistake.
20:42 < xk_id> Voting: that aside, it's also not entirely clear why the examples on http://socket.io have something inside the brackets anyway; since io.connect() can figure everything out itself if you just leave the brackets empty. 
20:42 < xk_id> so don't beat yourself too hard ;)
20:42 < Voting> xk_id: I suppose if you WANT to do your s.io stuff on another port? 
20:42 < Voting> or to another server? 
20:43 < xk_id> hmmm yes. good point. 
20:45 < Voting> Aria niggler xk_id - know a good java socket.io implementation you trust?
20:45 < Aria> Is there one?
20:45 < Aria> I don't use anything java, so no idea from me.
20:45 < xk_id> Nope, sorry. 
20:45 < Aria> But socket.io is entirely a proprietary protocol. Not complicated, but ...
20:47 < Voting> Aria niggler xk_id  - when I use socket.io I don't see the commications in the networking tab of chrome... can I set it up so that I DO see that stuff in there? 
20:47 < xk_id> Voting: is server-side not enough?
20:47 < Aria> I don't know about the websocket protocol.
20:47 < Aria> If you force it to long polling, you should see it
20:47 < Voting> xk_id: yes, a java server side that really works and is very well tested would be WONDERFUL.
20:48 < xk_id> what about express?
20:48 < xk_id> how are you serving the webpages atm?
20:48 < Voting> xk_id: are you talking to me? I'm confused. Express is a node.js framework, right?
20:48 < xk_id> yup
20:49 < Voting> xk_id: I have a project where the server will be in ruby and java
20:49 < xk_id> if you use express, socket.io will debug in your server console all the communications. 
20:49 < Voting> xk_id: how do I get to the express console? 
20:50 < xk_id> 'node express_app.js'
20:50 < zenetik> mscdex: ping
20:51 < Voting> xk_id: not following... 
20:52 < xk_id> Voting: if you create an express app that uses socket.io, you will get debug information in your server console.
20:53 < xk_id> but I'm not sure exactly what you mean by seeing the communications. 
20:53 < Voting> xk_id: oh, yes... lots of text all over the place... not a nice UI like I get when I'm doing POST from the browser in chrome.
20:53 < xk_id> ohhh...
20:55 < Voting> xk_id: don't get me wrong, I LOVE programming using socket.io. 
20:56 < ttdevelop> hi
20:57 < jrdn> anyone know the steps to secure a REST api with an oauth provider?
20:57 < chapel> jrdn: what version of oauth?
20:57 < jrdn> i can use passport to authenticate a user to FB, but the final redirect url would take him to the REST endpoint which isn't right.. i feel like i'm missing something
20:57 < jrdn> 2.0
20:58 < chapel> well, oauth provider is much different
20:58 < chapel> are you wanting to use a 3rd party oauth?
20:58 < chapel> or us your own oauth provider?
20:58 < jrdn> eventually both
20:59 < jrdn> but right now, for the simplicity.....
20:59 < Voting> xk_id: want to PM for a sec?
20:59 < chapel> okay, well, I wrote a production api and custom oauthv1 provider a year ago
20:59 < Voting> xk_id: I can't have enough debugging tools. I'm just the kind of person who needs tool support!
20:59 < chapel> as far as using a 3rd party oauth provider, trying to think about that
20:59 < xk_id> Voting: sure, but I'm not sure if I can help much more :)
20:59 < jrdn> I want users to "signup" with FB (etc) which would grant them an access token to use for subsequent requests
21:00 < jrdn> so i suppose it is both an oauth client and server
21:00 < chapel> so you would use your own access tokens separate?
21:00 < Voting> xk_id: not much more I need! I'm a VERY grateful geek!
21:00 < jrdn> chapel, yeah
21:00 < chapel> but the sign up for api access is through facebook for instance
21:00 < chapel> well in that case, its simple
21:00 < xk_id> lol okay
21:00 < jrdn> chapel, well i'm open to suggestions, but that's the only way i can think of it
21:00 < chapel> have a few webpages for handling auth with facebook and signup
21:01 < chapel> and then users would use the token you generate to link to their account
21:01 < chapel> depends on the way users would use it
21:01 < chapel> is it something they use directly, or would they be using it for other users?
21:01 < chapel> e.g. a dev making a tool that interfaces with your api
21:02 < jrdn> Okay, so my understanding is that I create separate pages for logging in users? (outside of my rest app)
21:03 < chapel> the point of oauth is to allow a 3rd party to have access to certain info of a user that would actually be signing in to your api
21:03 < chapel> but it sounds like you just want to use facebook to authenticate developers for your api
21:03 < chapel> which in that case, it is not related to the api, and is no different than having them enter an email and password to sign up
21:04 < jrdn> hmm so confusing!
21:04 < jrdn> ;p
21:04 < chapel> jrdn: what are people using your api for?
21:04 < jrdn> non-developers
21:05 < jrdn> the public
21:05 < chapel> not what people, but what are they using it for?
21:06 < someprimetime> i'm trying to combine two collections (one is comments, one is a collection of likes for a comment)
21:06 < someprimetime> it works fine when my collections are stringified e.g. : http://jsfiddle.net/someprimetime/gLQmZ/
21:06 < someprimetime> but on the server, it's not doing anything http://jsfiddle.net/someprimetime/gLQmZ/1/
21:06 < jrdn> The REST api will power mobile apps and the "desktop" version just like any site
21:06 < someprimetime> I tried to JSON.stringify(comments) and commentLikes
21:07 < someprimetime> and even tried to .toJSON() on the commentLikes _.id
21:07 < chapel> jrdn: do you have a site up? or more info
21:07 < chapel> jrdn: for context, I wrote the api for https://geekli.st
21:08 < jrdn> nope, just prototyping stuff / learning more about oauth
21:08 < xk_id> omfg is working
21:08 < jrdn> chapel, let me look
21:08 < chapel> so the usecase is that people could write apps to interface with the data on geeklist, and have users auth to give access to their information
21:08 < chapel> so that is the usecase for oauth
21:10 < jrdn> yeah, exactly
21:10 < chapel> well someprimetime the second example isn't correct javascript so it won't work
21:10 < chapel> jrdn: in that case you will need to do oauth yourself
21:11 < jrdn> I'm just thinking too hipster-like.  Yours goes through the same process I can achieve right now.. but I was thinking more along the lines of hitting https://geekli.st and it being something like a backbone app, and the fb login would never move the user away from https://geekli.st
21:11 < someprimetime> chapel: yeah, the first one i manually went in and added strings around the date and _id fields
21:11 < someprimetime> but that's how the collections are returned from the db
21:11 < chapel> jrdn: its hard to say exactly, if you want to pm me more details I can maybe help a bit with the concepts
21:12 < jrdn> It's easter, don't wanna waste your time! :P
21:12 < chapel> someprimetime: you copied those from the console (2nd one) ?
21:12 < someprimetime> chapel: yes
21:12 < chapel> jrdn: no worries, not busy, Im on irc chatting listening to a podcast :P
21:12 < jrdn> I'm going to go grab food though.   Perhaps we can talk later.  Thanks! :P
21:12 < chapel> someprimetime: yeah, the console output isn't json or js output, but a pretty printed version
21:12 < chapel> jrdn: hit me up, I'll respond if Im around (always connected)
21:13 < chapel> someprimetime: so the problem is that it doesn't work in jsfiddle?
21:13 < chapel> or the example isn't working on the server?
21:13 < someprimetime> chapel: not working on the server
21:13 < chapel> okay
21:13 < someprimetime> newCommentObj doesn't have commentLikes within it
21:13 < chapel> well, one thing to realize
21:13 < someprimetime> but it does in the first jsfiddle example and the only thing that is different is that the collections are stringified (which i manually did)
21:14 < chapel> mongodb ids are objectids
21:14 < chapel> it is a binary format
21:14 < chapel> and not a string
21:14 < someprimetime> ohhhh
21:14 < someprimetime> that's probably why
21:14 < chapel> so you would need to use doc._id.toString()
21:14 < someprimetime> so I should just convert them to a string
21:14 < someprimetime> oh nice ok thank you let me try that out
21:14 < chapel> it should automatically do that, but it depends on underscores groupby
21:15 < chapel> when you do something[doc._id] it should toString that, but I'd have to test to confirm
21:15 < nathan7> chapel: MemberExpressions perform a ToString, yes
21:16 < nathan7> (to be precise, [[Get]] performs a ToString iirc)
21:16 < chapel> nathan7: yeah, its only when dealing with the objectid directly with comparisons or variables do you have to convert it to a string manually
21:19 < chapel> someprimetime: _.groupBy looks like it could work, but not sure if it works right with objectids
21:19 < chapel> I would test the object it outputs to make sure it is correct
21:19 < someprimetime> chapel: yeah for some reason this just isn't combining them even after converting the comment._id explicitly toString
21:20 < chapel> something like this might work var likes = _.groupBy(commentLikes, function(like) { return like.comment_id.toString() })
21:21 < chapel> someprimetime: I normally just forEach through an array of documents and manually create the object groupBy would be creating, but that looks like a decent enough tool
21:22 < someprimetime> chapel: hm yeah i may just revert to that since I can't figure this out
21:22 < someprimetime> bbiaf
21:22 < someprimetime> thanks for the help
21:23 < chapel> np
21:35 < paulfryzel> hey all, through tools/test.py -- is there a way to only run a specific test?
21:53 < kam187-rMBP> anyone use node inspector?
23:56 < deoxxa> i want to visit the US - are there any interesting conferences happening around the middle of the year?
23:57 < deoxxa> if i can work in a conference or two, i'll end up getting part of my trip paid for :>
23:58 < lethalduck> This one looks good: http://www.bondageexpodallas.com/
23:59 < deoxxa> hrm, that one might end up having to come out of my personal budget
23:59 < someprimetime> yeah i'm going to bondage expo
23:59 < deoxxa> suppose i should have specified :P
23:59 < someprimetime> the technology in some of those fuck machines are top notch
--- Log closed Mon Apr 01 00:00:05 2013
