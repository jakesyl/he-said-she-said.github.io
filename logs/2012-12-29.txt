--- Log opened Sat Dec 29 00:00:45 2012
00:02 < tnorris> this slide made me laugh: http://eoftedal.github.com/WebRebels2012/presentation/#47
00:02 < tnorris> anyone using eval like that in node shouldn't be coding.
00:03 < chovy> i made the dailyjs list today -- booya
00:03 < tnorris> chovy: link
00:06 < chovy> tnorris: dailyjs.com
00:06 < chovy> node-startup
00:06 < tnorris> cool
00:06 < chovy> http://dailyjs.com/2012/12/28/campjs-euh-node-startup/
00:07 < supermeat> good work anthony
00:07 < chovy> thanks
00:08 < heyyy> i'm writing a node module, but it could also work in the browser... i'm having trouble understanding how to structure it without having 2 files for each case
00:09 < heyyy> and also being able to test it via mocha, and test individual functions via exports.func ?
00:09 < chovy> heyyy: i wrote a blog post on mocha
00:10 < heyyy> i dont have any trouble using mocha, i'm trying to structure my code to be 1 file for node & browser, and continue to test with mocha
00:11 < chovy> i see
00:11 < heyyy> because right now i have a lot of exports.func's in my file, mainly so i can test each function individually
00:11 < chovy> so what is the problem?
00:11 < heyyy> how is that file going to work in a browser?
00:12 < heyyy> if i take away all the exports and write it like a regular js file for the browser, i can't test the individual functions
00:12 < heyyy> well i guess i could make the whole thing into an object
00:13 < chovy> i have not done node+browser code yet
00:13 < chovy> requirejs maybe? not sure what that is for, but I think it might solve this problem.
00:35 -!- mode/#Node.js [+o ryah] by ChanServ
00:51 < astropirate> has anyone had the "pleasure" of writing a SOAP client on node?
00:51 < chovy> ol
00:51 < chovy> l
00:52 < chovy> i didn't think people used soap anymore
00:52 < astropirate> java .net developers would beg to differ
00:52 < astropirate> so would microsoft and enterprises
00:53 < astropirate> but they are jerks
00:54 < astropirate> I hate this shit
00:58 <@Nexxy> astropirate, I have
00:58 <@Nexxy> I used regex. not kidding :)
00:58 <@Nexxy> chovy, soap is still pretty relevant
00:58 < astropirate> o_O!
00:59 <@Nexxy> one sec, it's still on gist
00:59 <@Nexxy> astropirate, https://gist.github.com/1927990
01:00 <@konobi> xslt to convert to/from json<->xml
01:00 <@Nexxy> I am still recovering from my time with xslt
01:00 < reuf> hello all - what is a good module for working with informix db?
01:01 <@konobi> http://www.bramstein.com/projects/xsltjson/
01:02 < astropirate> damn, i might have to turn down a client :(
01:02 <@Nexxy> astropirate, with that lulzworthy snippet you just pass the blob of XML as the first parameter, and which tag you want to pick up as the second 
01:03 < jrajav> Probably the greatest snippet I've seen all day
01:03 < astropirate> Nexxy, hmmm
01:04 < astropirate> i got that
01:04 < astropirate> this is quite a big/complex project
01:06 <@konobi> thank goodness my clients are all unix shops
01:07 < astropirate> you lucky lucky lucky guy
01:07 < astropirate> Nexxy, was https://github.com/milewise/node-soap not around when you got started?
01:08 <@Nexxy> it was but it doesn't work without a wsdl 
01:08 <@Nexxy> or didn't
01:08 < astropirate> ahh
01:08 < astropirate> ok
01:45 < matbee> Question, yolos! In socket.io, is there an event for when a client disconnects -- or there's an error with communicating with the server?
01:45 < matbee> I want to make the client connect to a new server when failing to connect to a specific one..
01:46 < matbee> socket.on disconnect doesn't seem to exist
01:51 <@konobi> ullo matbee 
01:55 < matbee> damn you router
01:55 < matbee> i figured it out, i spelled disconnect wrong o_O
02:03 < andrewaclt> Is it best to stick with jade or try something like handlebars?
02:09 < __yh> when people name their functions var _x = func... is that a thing? like a private function convention
02:09 < __yh> like did i miss the memo on that
02:12 < chovy> andrewaclt: i use ejs, but i wish i had tried handlebars
02:12 <@Nexxy> __yh, it's usually just to remind the programmer that it's a function you don't want to call directly
02:12 < chovy> ejs is nice because it's flexible enough to write some really gawdawful template code
02:13 < __yh> ah ok
02:13 < chovy> i don't know if handlebars allows for helper functions
02:13 < chovy> that's one thing I think i would need.
02:13 <@Nexxy> templates are so over
02:13 <@Nexxy> over
02:13 < chovy> we just use heredocs at work
02:13 < __yh> do node authors program with the idea of private functions? (not exposing/exporting them)
02:14 <@Nexxy> __yh, I think that depends on the authors
02:14 < __yh> or is the convention, every piece of your module be exposed
02:14 < __yh> ah ok
02:14 <@Nexxy> I usually try to only export 1 function
02:14 <@Nexxy> I know a lot of others follow that as well
02:14 < chovy> Nexxy: nice to see the industry finally come around on templates
02:14 <@Nexxy> chovy, I'm the industry?!
02:15 < chovy> i think your sentiment is shared amongst the industry
02:16 < __yh> Nexxy: well actually what i mean is, even if you are say having 1 export
02:17 < __yh> some people seem to also expose 'private' functions through their 1 export
02:17 < __yh> that is functions that don't seem to serve any purpose to a developer other than to monkey patch
02:18 < __yh> rather than say to hide it
02:18 < __yh> like function Blah() { var private = function() {}}
02:19 < __yh> where if i exported Blah, you wouldn't be able to know there's a private function in there programmatically
02:19 < __yh> what's the node way ? should expose private regardless?
02:20 < chovy> i have a helper function like pluralize()
02:20 < chovy> that i expose with an ejs helper
02:20 < chovy> don't know if that's possible with handlebars
02:20 < __yh> pretty sure you can write helper functions in handlebars
02:21 < __yh> it's Handlebars.registerHelper() or something
02:22 < vrlogrs> hey guys ..
02:22 < vrlogrs> im in search of some knowledge :)
02:22 < vrlogrs> here's the simplified scenario .. 
02:23 < vrlogrs> i have a game server, written in Node.Js .. i am using setTimeout to determine when a player has run out of time ..
02:23 < jrajav> Oh my god someone is actually using setTimeout in a way that makes the name make sense
02:23 < vrlogrs> what i seem to have run into is the setTimeout returning well before the time it's actually supposed to return ..
02:24 < __yh> read the api doc
02:24 < __yh> settimeout isn't accurate
02:24 < vrlogrs> damit
02:24 < __yh> it's approximate
02:24 < vrlogrs> i was afraid of that ..
02:24 < __yh> just use a timestamp
02:24 < vrlogrs> but, i thought at the very least, the timeout would use it as a Minimum
02:24 < __yh> and check if a user has run out of time in your main loop or something
02:24 < vrlogrs> that is, it may be late, but not early
02:24 < __yh> by comparing time stamp
02:25 < vrlogrs> yes __yh but how often do i check?
02:26 < __yh> well is the game a javascript game? or you have a game server and the game client is somewhere else?
02:26 < jrajav> process.nextTick()
02:26 < vrlogrs> __yh: game server and game client
02:26 < vrlogrs> but the timer is on the server
02:26 < vrlogrs> jrajav: whats that?
02:27 < jrajav> http://nodejs.org/api/process.html#process_process_nexttick_callback
02:27 < jrajav> It's while(true) but it doesn't eat babies.
02:27 < vrlogrs> jrajav: any guarantees on this ?
02:27 < __yh> so the game server has to tell the game client that the game ended??
02:27 < jrajav> On the babies? Well, no.
02:27 < vrlogrs> yes __yh
02:27 < vrlogrs> i mean the timeout jrajav
02:27 < __yh> vrlogrs: that's weird
02:28 < jrajav> I'm confused. What kind of "guarantee" would you expect?
02:28 < vrlogrs> that it wont timeout before it's supposed to
02:28 < vrlogrs> at least
02:28 < __yh> it wont if you're using timestamps...
02:28 < jrajav> The idea is that you would check this against timestamps
02:28 < jrajav> And not use setTimeout at all
02:28 < __yh> you just have to check it somewhere often
02:29 < vrlogrs> right .. but, is there a range in which it could fail ..
02:29 < vrlogrs> maybe off by 2 seconds or something like that?
02:29 < vrlogrs> or, no guarantees
02:29 < jrajav> No
02:29 < jrajav> You can get system time in milliseconds
02:29 < vrlogrs> ok
02:29 < jrajav> You could get even more granular time for durations, too, but not with Date
02:29 < jrajav> Milliseconds should be fine for your purposes
02:29 < __yh> there's no way a timestamp comparison can be wrong
02:30 < vrlogrs> right
02:30 < vrlogrs> ok, what i was asking before is .
02:30 < vrlogrs> the setTimeout can finish before OR after the actual time?
02:30 < vrlogrs> or can it only be late?
02:31 < __yh> both
02:31 < __yh> i think
02:31 < vrlogrs> ok .. 
02:31 < jrajav> I was under the impression that it would always be later if anything
02:32 < vrlogrs> thats what i thought jrajav
02:33 < __yh> well if you aren't afraid of it going over
02:33 < __yh> and you don't want to stop using setTimeout
02:33 < mmwwww> Hey folks, what continuous deployment system do you folks like to use with node? (not a hosted service)
02:33 < vrlogrs> but, i seem to be getting early timeouts ..
02:33 < __yh> you can just stick a check for timestamp in setTimeout to make sure it's not early
02:34 < vrlogrs> unless im not diagnosing my bug correctly
02:34 < __yh> and if it is early, set another timeout for the difference of the timestamps
02:34 < vrlogrs> right
02:34 < vrlogrs> so, instead of timeout, i can use process.nexttick(fn() { }, 1000) ? 
02:35 < jrajav> process.nextTick doesn't take a numeric argument like that
02:35 < vrlogrs> and it would be "more efficient"
02:35 < jrajav> As the name implies it queues up a callback for the NEXT TICK
02:35 < vrlogrs> oh .. thats not what i want though
02:35 < vrlogrs> that'll slow down the server
02:35 < jrajav> Your event loop will be called several thousands of times per second
02:35 <@konobi> mmwwww: depends a lot on your architecture
02:36 < jrajav> vrlogrs: I doubt doing a single Date.now() and a branch will significantly affect anything
02:36 < jrajav> I could be wrong
02:37 < arnorhs> fwiw.. nextTick doesn't accept a time delay param
02:37 < arnorhs> i could also be wrong
02:37 < jrajav> I already said that :P
02:37 < arnorhs> h, ok, nm :)
02:37 < arnorhs> be louder next time
02:38 < vrlogrs> ok ..
02:38 < vrlogrs> i guess ill just check timestamps then
02:38 < vrlogrs> thanks guys for the help
02:38 < vrlogrs> appreciate it
02:40 <@konobi> ircretary: when was mscdex last here?
02:40 < ircretary> konobi: mscdex was last seen at 2012-12-20T19:45:15.109Z, quit: Quit: Leaving #Node.js
02:41 < matbee> sup konobi
02:43 < syskaw> Hi it's my first time running node.js I try to run this script : http://www.oampo.co.uk/2011/01/exporting-video-from-webgl/ in relation with my webgl apps which url is http://localhost/clip/index.html
02:43 < syskaw> but i don't know how to do 
02:49 <@konobi> matbee: not much, yerself?
02:53 < mmwwww> konobi: sure the continuous deploy depends on the architecture, was just wondering what toolsets and configs you and the other people here like to use:)
02:56 <@konobi> mmwwww: i've heard of some folks using capistrano
02:56 < mmwwww> konobi: oooh I didn't even think of that
02:57 <@konobi> i know there's a couple of others, but never used them myself
03:06 < mmwwww> Do any of you like or dislike nave for installing node?
03:07 < substack> I've been using nave for a while
03:07 < substack> works well
03:08 < tjfontaine> I'm kinda partial to give
03:10 < tjfontaine> I added this to my local today so I don't have to watch node-gyp redownload headers https://github.com/mmalecki/give/issues/2
03:10 < tjfontaine> won't help much with commit-ish installs
03:14 < drudge> nave is nice for binary installs
03:15 < mmwwww> Hum, I guess this is the reason hosted commit deploy services are expensive... it's hard to get right
03:18 <@konobi> mmwwww: nodejitsu?
03:19 < mmwwww> konobi: their OSS stuff?
03:19 < drudge> remember when nodejitsu was free, good times
03:21 <@konobi> it's pretty cheap... $3 p/m
03:22 < mmwwww> konobi: oh their hosted thing? Yeah but I need to use my domain and I need to use my ssl cert on it, and they charge $50 per month for that. So I can't afford it. So I'm trying to set up a £5/pm vps and host all the pieces myself
03:26 <@konobi> yeah, commit-ish deploys are a lot trickier than they seem
03:53 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
04:29 < astropirate> Helllllloooo
04:29 < astropirate> is there a competing protocol to IRC?
04:29 < jcrew> HAI2u
04:29 <@konobi> silc
04:29 < jcrew> would you consider jamber or xmpp ?
04:29 < astropirate> i'm just wondering
04:29 < astropirate> not really need it for a project
04:30 < astropirate> i wondering which is the most efficient on bandwidth
04:30 < astropirate> i guess it doesnt get simpler
04:30 < jcrew> irc is pretty simple
04:31 < jcrew> silc would be good if it needs to be secure
04:32 < astropirate> isn't there sirc
04:32 < astropirate> or ircs or somethign like that, 
04:32 < jcrew> it doesn't sound as smooth as silc though
04:33 <@konobi> silc
04:33 <@konobi> it's a secure irc protocol
04:33 <@konobi> so a little different, but kinda similar, iirc
04:34 < astropirate> hmmm
04:34 < astropirate> i ran across one that was compatable with irc
04:35 < astropirate> between the server and the client the connection was encrypted
04:35 < astropirate> but not everyone connected to the server had to be encrypted
04:35 < jmordica> hello, anyone have any apps for dynect DNS api?
04:35 < jcrew> astropirate: like a man in the middle type thing?
04:37 < Aria> "Efficient on bandwidth", but what trade-offs are you willing to make?
04:37 < Aria> How does it have to scale? 
04:37 < Aria> That's the real question.
04:37 < jcrew> webscale
04:38 < jcrew> webscale + html5
04:39 < Aria> MongoDB is webscale.
04:39 < jcrew> can it interface with css3?
04:41 < st_luke> helloi am having a problem with my css4 app 
04:41 < jcrew> don't use ie
04:41  * astropirate says  "one does not simply use node once"
04:45 < Aria> jcrew: It can interface with all the CSS.
04:52 <@mbalho>         _|\ _/|_,
04:52 <@mbalho>       ,((\\``-\\\\_
04:52 <@mbalho>     ,(())      `))\
04:52 <@mbalho>   ,(()))       ^_ \
04:52 <@mbalho>  ((())'   |        \
04:52 <@mbalho>  )))))     >.__     \
04:52 <@mbalho>  ((('     /    `-. ..|
04:52 <@mbalho>          /        `-`'
04:52 < jcrew> nice
04:56 <@mbalho> that horse just started using node
04:56 <@mbalho> that is why it is so happy
04:56 < blob4000> sup guys
04:56 <@mbalho> chillin
04:57 < Sly> mbalho: mmm....
04:57 < Sly> More ascii art
04:57 < Sly> 90s flashbacks
04:57 <@mbalho> we're on irc this whole thing is a 90s flashback
04:57 < Sly> True story, but ascii art is a flashback for more than just IRC.
04:58 < Sly> At least BBS was still alive in the 90s.
04:58 < Sly> SINCE AOL
04:58 < Sly> My mom would still have to use dialup at her house. They don't have DSL or cable down her road. For anyone.
04:58 < Sly> lulz
05:10 < isaacbw> so how can I properly change the scope inside a dom event? I have a bidirectional binding between the property 'target' and a property on the parent scope. I'm changing target via $apply, but it doesn't affect the bound parent property
05:10 < isaacbw> even when I call $digest
05:11 < isaacbw> oops
05:12 < blob4000> no answer 
05:13 < blob4000> no answer in #git, but i'm wondering if anyone knows how to have a local git repo and a github repo only differ by one file (say a config file that you don't want to be the same - containing details you don't want public)
05:15 < freewil> blob4000, the best way to do that is have a config.example.js
05:15 < freewil> with default values
05:15 < freewil> then add config.js to .gitignore
05:16 < freewil> so when you clone the repo, you copy config.example.js -> config.js
05:16 < freewil> and set the values for your environment
05:16 < freewil> and then the values wont get committed
05:16 < jcrew> if you already uploaded the file to git, add it to your gitignore and then do:
05:16 < jcrew> git rm --cached <filename>
05:16 < jcrew> it will remove it from the repo but not your system
05:17 < blob4000> thanks!
05:25 < blob4000> jcrew: is there any way to automate the 'copy config.example.js -> config.js' while the user clones the repo?
05:26 < jcrew> blob4000: why not just copy it and commit it to the repo?
05:57 < jcrew> anyone experienced problems with net.createConnection & 'ab'  on windows with high concurrency testing?  i'm getting 'Error: read UNKNOWN' and can't find much about it except maybe the connection is closing uncleanly
05:58 <@konobi> TCP_WAIT mayb
05:58 < jcrew> konobi: suggesting something like in the docs for server.listen() where it tries to redo the request?
06:07 < ViciousPlant> I'm trying to use this https://gist.github.com/2945235, but emacs complains "Symbol's function definition is void: typecase" when startup 
06:08 < ViciousPlant> I wonder why typecase is void, anyone have an idea? Thanks
06:08 < ViciousPlant> sorry wrong channel
06:34 < jcrew> konobi: got it going with async - thank you
06:38 < sku11knight> hey guys, can someone explain to me what the bayeux protocol is? I'm an idiot so if we could keep it simple and a 3 syllable word max that'd be awesome.
06:45 <@isaacs> so weird.  just stumbled across some packages that contained nothing but a package.json, but the package.json had a bunch of linkedin API result data in it
06:53 <@mbalho> lol
07:16 < narsic> any body, can i use TLS to connect a wcf webservice? (server need a p12 certificate and i convert them to pem)
07:27 < matbee> how could I make socket.io not use the global window.io namespace?
07:27 < matbee> o_O
08:05 < astropirate> if you use null instead of undefined
08:05 < astropirate> fuck you
08:06 < jcrew> i use tabs
08:06  * astropirate slaps jcrew 
08:07 < lincoln_> Anyone have any thoughts on how to get the google chart svg data using node?  I plugged the first sample from https://developers.google.com/chart/interactive/docs/gallery/linechart directly into jsdom.env, but no joy.
08:14 < mistertwig> i also use tabs
08:14 < mistertwig> tabs are superior
08:14 < mistertwig> in every way
08:15 < mistertwig> i even wrote a 600 page book on why tabs are better
08:16  * astropirate slaps mistertwig with a giant trout
08:16 < astropirate> ohh dear
08:16 < mistertwig> NO astropirate
08:16 < mistertwig> you're wrong
08:16 < astropirate> this is not good
08:16 < astropirate> big flaw in expreeessss
08:16 < astropirate> :(
08:16 < mistertwig> what's wrong with express?!
08:16 < astropirate> there is a security flaw
08:16 < mistertwig> uh oh
08:17 < mistertwig> with what
08:17 < astropirate> i'll talk to the author
08:17 < mistertwig> how can i abuse it?!
08:17 < astropirate> first
08:17 < mistertwig> jk
08:17 < mistertwig> but still
08:17 < mistertwig> i'd like to know to see if it's preventable in my app
08:17 < astropirate> you are most likely fine
08:18 < mistertwig> what does it relate to
08:18 < astropirate> express
08:18 < mistertwig> yeah but what in express
08:18 < astropirate> the code
08:18 < astropirate> :p
08:18 < mistertwig> >: (
08:19 < astropirate> mistertwig, do you use node at work?
08:19 < mistertwig> nope
08:20 < astropirate> ohh
08:20 < astropirate> ok
08:20  * astropirate slaps hipertracker 
08:20 < astropirate> woops
08:20  * astropirate slaps hipsterslapfight 
08:43 < bas> Hi
08:45 < bas> can i use node.js or building a mvc based type of app?
08:45 < astropirate> sure
08:46 < bas> i.e., i want to make REST calls to a web server and render pages from the data got in return
08:47 < bas> does node.js provides a mvc type of framework?
08:47 <@Nexxy> no
08:47 <@Nexxy> but the community has provided about a bazillion of them
08:47 < bas> i have started to check out node.js, so many questions might be little stupid 
08:47 < bas> which are those @nexxy
08:47 < bas> or a quality one?
08:48 <@Nexxy> I think the more popular ones are express, geddy
08:48 <@Nexxy> maybe you would like meteor as well
08:48 < bas> ok
08:49 < bas> how scalable are they for large concurrent users
08:50 < arnorhs> bas: do you have large concurrent users?
08:52 < bas> yes at least 3000 to 10000 users might use it since it will be a assessment engine accessed from multiple devices
08:53 < bas> that is the concurrent users
08:53 < bas> overall number of users might be even larger
08:54 < astropirate> do people still use geddy?
08:55 < zomg> bas: I can get 2000 on a cheap VPS so you should have no problems
08:56 < bas> which mvc framework r u using?
08:56 < bas> @zomg
08:57 < Cronoh> probably node?
08:57 < Cronoh> none*
08:57 < arnorhs> bas: if you're just starting, I would recommend Express, simply because there's just more stuff that's been written and asked about it
08:57 < Cronoh> express isn't an 'mvc framework' is it ?
08:57 < arnorhs> or not using a framework (depending on what you plan on doing)
08:57 < zomg> bas: this was with socket.io actually, with data being sent to all users almost all the time
08:57 < arnorhs> Cronoh: fair enough :)
08:58 < zomg> so probably more cpu intensive than just serving pages
08:58 < Cronoh> i dont think there are ANY mvc framework for node unless u go to something like meteor is the only one ive seen, node is a server, it doesnt even use the view part of a framework?
08:59 < zomg> Express is more like something you can use to roll your own mvc =)
08:59 < zomg> I think
08:59 < Cronoh> i mean express is a framework, bas just made it clear to say 'mvd framework' every time
08:59 < Cronoh> mvc*
09:00 < bas> ok
09:01 < Cronoh> zomg: How large of VPS you use with 2k users? And did you find that to be your max without delays or feel it could handle more?
09:01 < zomg> It was starting to lag a little with that many concurrently sending and receiving data
09:02 < zomg> Linode 512 is the one I was using http://www.linode.com/
09:02 < zomg> the specs are on the bottom of the page
09:02 < zomg> well, more like in the middle
09:02 < Cronoh> cool, thanks for the info - i just got a vps at rackspace that is 512, not sure what i could handle with it
09:03 < Cronoh> im not sure that my rackspace server include any bandwidth now.. i need to go see
09:03 < astropirate> these guys are insane
09:03 < astropirate> appfog
09:04 < astropirate> 2gb ram for free, thats like 20-30$ in a vps
09:04 < astropirate> i guess you do lose control
09:04 < jden> Cronoh: in the server context, the view part of mvc is the templating engine (more or less). Express absolutely supports that as a first-class concept with res.render()
09:04 < astropirate> but i like free ;D
09:05 < Cronoh> jden: hmm alright thanks for the info
09:06 < Cronoh> rackspace is pretty cheap, i think $16 for a 512ram server on the cloud, and its hourly too so you can shut it off, $16 if u leave it on for a full month
09:06 < bas> i am reading about express, looks good
09:06 < bas> so far... :-)
09:09 < RLa> bas, there's also a specialized chat channel for #express
09:10 < zomg> Oh rackspace = cheap now?
09:10 < zomg> It used to be like one of the more expensive options :P
09:11 < Cronoh> lol
09:11 < Cronoh> yeah well its very competitive 
09:11 < Cronoh> i am a new customer there so i cannot say what they were in the past, but my current server is 512 ram on the cloud it costs me 0.022 per hour to run it
09:12 < zomg> I wonder how much traffic that includes
09:12 < narsic> hi, i need connect to doman.com/external/account/service.svc with TLS but i got the error http://dpaste.org/0sBej/ , any idea?
09:13 < gavin_huang> is there an easy way to write to a file path with missing directories automatically created?
09:13 < Cronoh> weird
09:13 <@Nexxy> gavin_huang, mkdirp
09:13 < zomg> Cronoh: looks like that's still more expensive than linode with 200 gigs of traffic.. calculator says 52 bucks
09:14 < Cronoh> where is the bandwidth prices
09:14 < zomg> with linode you get 4 CPUs instead of one too (though just one is priority)
09:14 < zomg> http://www.rackspace.com/cloud/public/servers/pricing/
09:14 < zomg> there's a calculator on that page
09:14 < narsic> Nexxy: do you have idea, about ^?
09:14 < gavin_huang> Nexxy, so I still need to test if the file's parent directory exists or not?
09:15 < Cronoh> ah yes the bandwidth costs ya, that makes linode a pretty good deal
09:16 < thealphanerd> anyone from the bay area in here?
09:16 < dabbers> Testing
09:16 < gavin_huang> I heard ppl say fs.createWriteStream() will automatically create missing directories, but it didn't work when I tested it.
09:16 < thealphanerd> looking for things to do in sf tomorrow
09:16 < thealphanerd> sorry I know it is off topic
09:16 <@Nexxy> narsic, you're connecting to an invalid host
09:16 < dabbers> I was wondering if there's a localAddress option for tls sockets?
09:17 < dabbers> I don't see it in documentation 
09:17 < dabbers> I suppose I should have tried it before asking...
09:17 < dabbers> brb...
09:17 < narsic> Nexxy: ?? i know i must use hostname without path, but server need, can i set path in options?
09:18 <@Nexxy> narsic, yes
09:18 <@Nexxy> what do you have as the hostname?
09:20 < narsic> Nexxy: sample: domain.com my hostname and external/account/service.svc path
09:20 <@Nexxy> that should work
09:21 < narsic> Nexxy: but TLS http://nodejs.org/api/tls.html don't have any option for path
09:21 < dabbers> narsic:  as I just found out, tls options don't seem to repeat options for socket 
09:21 < dabbers> *net
09:22 < dabbers> As I found out, localAddress works for tls as well. Take care guys :)
09:22 < narsic> dabbers: and meand TLS not work for remote host!!!?
09:23 < dabbers> no idea what idea you're trying to relay, sorry
09:23 < dabbers> oh narsic  are you trying to do a website?
09:24 < narsic> dabbers: you say TLS can't connect to remote host?
09:24 < dabbers> no, I was trying to bind to a certain IP address locally before connecting.
09:24 < dabbers> so it'd show the connection from another IP
09:25 < dabbers> anyway, back to code pushing before the deadline, bye guys :P
09:26 < narsic> dabbers: sorry, but i can't underestand what you say, but i want to attach certifiction to request and i just found TLS for that
09:29 < jden> thealphanerd: hella
09:30 < thealphanerd> hella what??? :D
09:30 < zomg> hella = stove
09:30 < jden> hella bay area? hella off topic?
09:31 < jden> zomg: huh? o_O
09:33 < zomg> lol
09:33  * thealphanerd sigh
09:33 < zomg> hella is stove in finnish
09:33 < thealphanerd> I'll keep it on top
09:33 < thealphanerd> is there a function in node.js to find a sometjhing fun to do in sf tomorrow?
09:34 < thealphanerd> var help = function() {console.log("Please"};
09:34 < thealphanerd> :P
09:36 < jden> require('http').request('http://funcheapsf.com', function(e, res) { res.pipe(process.stdout); })
09:57 < rodr1go> Good morning, I have an app utilizing php, node.js, socket.io for long pooling, I need to figure how to get records from a database such as mysql in real time, I've read about  the node-mysql but as I am new to all this I have no idea how should I get records each time one is inserted, any help would be appreciated
10:05 < rodr1go> just found something which might be my reply, generic-pool
10:08 < jcrew> rodr1go: what do you meant get records each time one is inserted?
10:11 < rodr1go> jcrew: I meant each time the database has a new record or being updated, the node.js would somehow be listening for that table and then emit the result via socket.io to clients about the new record
10:11 < yarco> why nodejs has 2 times people than those in ##php and ##c?
10:11 < jcrew> vbscript is taking over
10:11 < zomg> yarco: because there are more hipsters than Real Programmers
10:11 < zomg> *cough*
10:12 < dz0ny> rodrigo just emit event at the same time you write to database
10:13 < jcrew> rodr1go: what dz0ny said - that pool module isn't going to do what you think it does
10:15 < rodr1go> dz0ny: I thought I could have something like real time, if a client is on a page he could get real time events from database records, something to avoid the old technic about every min update records :/ but I think this will do https://github.com/coopernurse/node-pool 
10:15 < jcrew> rodr1go: node-pool is to limit concurrency on something - the example just happens to show mysql
10:16 < rodr1go> hmm
10:16 < jcrew> your best bet is to handle mysql writes and emit to socket about new data in a function
10:16 < jcrew> so you know it always happens
10:17 < rodr1go> I guess I have to stick with that for now
10:18 < rodr1go> thanks for the help
10:52 < calum_> How flexible is the licensing for node (including v8)? I want to develop a raspberry pi based product with node but that would mean distributing node with each item? any ideas on where I would stand
10:52 < calum_> ?
10:53 < andu> cainus, https://github.com/joyent/node/blob/master/LICENSE
10:59 < andu> hmm... interesting. Why isn't Ryan Dahl in the licence as original author? did he sell node to joyent? I though he joined joyent after initial release
11:04 < calum_> Cheers I will have a read
11:56 < Guest38572> hey guys , has anyone specifically worked on libuv library ?
12:22 < izz_> hey guys, trying to install older version (<0.7) with homebrew, which fails immediately without any error message really
12:22 < izz_> only this: http://pastebin.com/xv3V6Y4y
12:22 < izz_> any ideas?
12:36 < aandy> izz_: maybe try a more verbose option: compile from source (using the steps outlined with =>
12:41 < izz_> aandy: thanks, solved it, --verbose revealed "--env=std required"
12:46 < aandy> :)
13:08 < Kneferilis> hello
13:09 < Kneferilis> where do I install npm?
13:09 < meckanism> Kneferilis: which operating system are you running ?
13:09 < Kneferilis> Windows 7 64bit
13:10 < Shinster> doesn't npm come with the node installer on windows
13:10 < meckanism> it does
13:10 < meckanism> just get it here Kneferilis http://nodejs.org/dist/v0.8.16/x64/node-v0.8.16-x64.msi
13:11 < Kneferilis> well, do I have to manually add node.js to my path?
13:11 < meckanism> you dont
13:11 < meckanism> it does it for you
13:11 < meckanism> also npm is added 
13:11 < Kneferilis> I try to run npm from command line, but it is not found
13:12 < meckanism> i'm assuming you installed the .msi mentioned above ?
13:12 < Kneferilis> I already installed nodej.s
13:12 < Kneferilis> yes
13:12 < andu> Kneferilis, close cmd and reopen it
13:12 < andu> so it reloads :)
13:14 < Kneferilis> andu:  thanks, but I did that
13:14 < andu> weird
13:14 < meckanism> Kneferilis: does "node -v" work ?
13:16 < Kneferilis> meckanism: no, it doesn't
13:16 < Kneferilis> I only have C:\Users\user\AppData\Roaming\npm\ in my path
13:16 < meckanism> if you installed the .msi that path is wrong
13:16 < meckanism> should be C:\Program Files\nodejs\
13:16 < meckanism> assuming you did not alter the install path
13:17 < Kneferilis> well, I think it got confused, because I have the greek windows
13:17 < Cronoh> why would u have the greek windows
13:17 < Cronoh> ;)
13:17 < meckanism> language shouldn't matter
13:17 < meckanism> check if your node is instaled @ C:\Program Files\nodejs
13:18 < meckanism> if so, just change the path to that
13:18 < Kneferilis> yes, thanks
13:18 < Kneferilis> I did that, now node works
13:18 < meckanism> npm.cmd lives in that directory so it should work for both node / npm cmd's
13:21 < Kakera> what's the usual approach when you need to add and delete some items to/from a database, then do a query?
13:21 < Kakera> here's my approach http://privatepaste.com/6fcc593db0
13:22 < Kneferilis> I just installed icedcoffeescript
13:22 < Kneferilis> how do I run its compiler?
13:22 < Kneferilis> coffee in cmd doesn't work
13:23 < meckanism> did you install the module globally ? ( -g )
13:24 < meckanism> and i think the cmd is "iced" not "coffee"
13:52 < Kneferilis> anyone know how I compile a coffeescript cake file?
13:52 < Kneferilis> I tried cake Cakefile and cake is not found
13:52 < SomeoneWeird> the cake is a lie
14:18 < mAritz> Kneferilis: do you have coffeescript installed globally?
15:11 < geNAZt> hi 
15:11 < geNAZt> is there a benchmark for expressjs compatible template engines ?
16:18 < nyxynyx> Sorry for the question: At this point in time, should I go for Derby or Meteor?
16:19 < abrkn> i'm getting a lot of this https://gist.github.com/4407836
16:19 < abrkn> which is "Error: no open connections" from mongodb
16:19 < abrkn> shouldn't it reconnect by itself?
16:21 < lhk_> hi
16:21 < lhk_> i would like to use typescript with nodejs but I can't find a working definitions file
16:21 < lhk_> the typescript channel is rather empty but maybe one of you can help me ?
16:21 < lhk_> this one does not compile:
16:22 < lhk_> https://github.com/borisyankov/DefinitelyTyped/tree/master/node
16:37 < MI6> joyent/node: Ben Noordhuis v0.8 * a7cc530 : deps: upgrade libuv to 4997738 - http://git.io/p_wGFQ
17:00 < nC-r> hey all
17:07 < magistr> Hi to all
17:07 < magistr> where is rpm packages of node.js?
17:08 < nC-r> www.npmjs.com , magistr
17:14 < jrajav> nC-r: I'm not sure that's quite what he meant.
17:15 < jrajav> magistr: Do you not know how to search for packages in your distro?
17:15 < jrajav> magistr: It's probably called 'nodejs'
17:16 < nC-r> misread your question magistr, try www.nodejs.org 's package section
17:16 < nC-r> lol thats what happens w/o coffee jrajav
17:17 < jrajav> without.. coffee?
17:17 < jrajav> What is this concept
17:17 < nC-r> A really bad one! Let me fix that...
17:17 < shihan> i have a dumb question, if your a module of someones application, is there a way of finding the root path of the application itself?
17:19 < mAritz> skihan: Is that a typo and you meant "you're a module"? In that case: I don't think anyone in this channel is a module of someones application.
17:20 < shihan> lol, yeah, lets go with typo... i mean if your writing a module
17:21 < jrajav> shihan: 1) Why would you need that
17:21 < jrajav> shihan: 2) If you really do need it, perhaps you should accept that path as an argument
17:22 < mAritz> require.main.filename
17:23 < mAritz> if i'm reading the docs correctly (really hard to read because of all the letters and words and such)
17:26 < draginx> Quick question about asyncronous.. will line 12/13 execute before line 15? https://gist.github.com/be301beff03da657602e
17:26 < draginx> or would I need to wrap everything in a async.waterfall/serial type of thing?
17:27 < mAritz> draginx: what do you think?
17:27 < draginx> the latter
17:28 < mAritz> why?
17:28 < draginx> well may be not actually
17:28 < draginx> essentially.. everything is asyncrnous except when your code isn't <-- thats how node works right? :p
17:28 < mAritz> uhm... i guess that's how everything works?!
17:28 < draginx> mAritz: sort of. u cant really do async in php? :)
17:28 < mAritz> fs.readFileSync is that async or sync?
17:28 < draginx> obv sync
17:29 < mAritz> draginx: you can, it's just not made for it and thus really arcane.
17:29 < mAritz> so, that only leaves jade.compile and jadetemplate. do these functions take callbacks as arguments?
17:29 < draginx> now my next question is.. if this is in a functin/wrapper thats async.. would only this part be considered blocking or would this block the entire script?
17:29 < draginx> idk tbh
17:29 < mAritz> well, what does the jade code or documentation say?
17:30 < draginx> idk but that's irrelevant to what im asking atm
17:30 < mAritz> ok, so you want me to ignore your original question?
17:30 < draginx> https://github.com/visionmedia/jade/blob/master/lib/compiler.js#L74 doesnt seem so
17:31 < mAritz> regarding your "next question": blocking != processing
17:31 < draginx> Ah
17:31 < mAritz> so, i guess compile is not async
17:31 < draginx> so therefore, I should wrap it in an async process
17:31 < mAritz> wait, what?
17:32 < mAritz> that leads me to my next question: what on earth are you using async.parallel for there? it does nothing :D
17:35 < draginx> right thats what originally led me ot this question :P
17:35 < mAritz> read this: http://book.mixu.net/ch7.html
17:36 < mAritz> maybe that'll help your understanding of async and sync
17:36 < mAritz> or maybe it'll confuse you even more
17:37 < draginx> :P
17:37 < mAritz> basically as far as i can see there is nothing in your entire gist that is async
17:37 < mAritz> and it doesn't need to be either. however i don't know what req.app.mandrill is...
17:39 < mAritz> https://gist.github.com/18f6b47c35071471aaa3 this should be the same without the unneccessary stuff
17:40 < mAritz> ok, so i assume req.app.mandrill is node-mandrill? in that case that is async
17:40 < draginx> mAritz: yup
17:41 < draginx> ok so that gist that you have there.. is blocking yeah?
17:41 < draginx> witht he exception of node-mandrill
17:42 < shihan> mAritz, oh i c, yeah ok that looks like the ticket... jrajav, well ultimatley im writing an snmp trap responder and the user can supply a js to handle the trap and was trying to deal with if they give a relative path to the file
17:42 < mAritz> draginx: https://gist.github.com/c0162a5ad11695a2edde that's now using async.parallel properly with mandrill callbacks
17:43 < mAritz> (however indentation is fucked up and i don't know what _callback is
17:43 < jrajav> shihan: If this is a module that's going to be require'd, it will have the same working dir as the code using it
17:44 < draginx> mAritz: now for performance.. would I want to do .. async.waterfall([jade1 template, jade2 template, then async.parallel the mandrill requests] ?
17:44 < draginx> or is that not really necessary
17:44 < mAritz> jrajav: the cwd is not the same as the directory where the file resides in that is being executed by node
17:45 < mAritz> the cwd is where the shell currently is when the node process is called (or smth like that)
17:45 < jrajav> That wasn't my point. I'm saying that if the calling code uses a relative path, and knows that it should work from cwd, it will work in the require'd code too
17:45 < jrajav> Whether the path does indeed resolve is that code's responsibility
17:51 < shihan> jrajav, not from what i've seen so far... if a js does a require("./path/to/file"); its relative to the js thats doing the require, not the root path of the applicaiton if you know what i mean.... or am i mistaken?
17:51 < motaro> Can I store JSON directly with 'Sequelize' or is there a better solution for working with JSON?
17:52 < draginx> motaro: #sequelizejs but you have to stringify :)
17:53 < jrajav> shihan: Oh, sorry, I misunderstood your original question. I didn't think you were using require
17:53 < draginx> motaro: i think a reason being is.. DBs handle data types very differently.. like what is {hello: 1, world: 2} in MySQL? In pgsql it might be a hstore, text, or multi-array, none of these are supported in MySQL
17:53 < jrajav> shihan: Yes, that's correct
17:53 < jrajav> shihan: You can easily make it relative to the current dir though
17:54 < draginx> ^ with the exception of text :P
17:54 < motaro> I'm actually looking for a plausible solution for working with data without having to convert to much objects, if it can be an embeddable solution I think is better.
17:54 < draginx> motaro: I agree, but you'll need to go into #sequelizejs for that
17:55 < motaro> ok cool
17:55 < jrajav> shihan: Just do path.resolve on a relative path to resolve it with respect to the cwd
17:55 < jrajav> shihan: It will return an absolute path
17:58 < shihan> jrajav, im not sure thats what im after though... the current dir might be outside the application isnt it?
17:58 < jrajav> Well yes
17:59 < jrajav> It might actually be better to just accept a callback
17:59 < jrajav> And let the calling code require something for that if it wants to
18:00 < shihan> well, that is currently an option, but the way i've structured it you can also pass a bunch of textual config cause you could have a large number of reponders for a single action... so if a user said a responder was "./resp.js" for eg, it'd be relative to their "main" js file or at least... if you get what i mean
18:01 < Kneferilis> hello, I have this script and I want to add error handling: http://paste2.org/p/2665600 can you help?
18:10 < isaacbw> if I have a file open with an append flag, I just need to write with an offset of zero, right?
18:11 < isaacbw> I mean, position
18:11 < jrajav> shihan: Sounds like you really want an event emitter
18:19 < bnoordhuis> isaacbw: yes
18:19 < bnoordhuis> isaacbw: you can skip the offset altogether
18:20 < bnoordhuis> isaacbw: sorry, i lie - set offset to -1
18:21 < isaacbw> cool, thanks
18:24 < Kneferilis> hello
18:24 < Kneferilis> I have this: http://paste2.org/p/2665671 but I can't put it exceptions properly, for exec
18:27 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
18:49 < MI6> joyent/node: isaacs master * 1c2910d : test-message: Add setTimeout and nextTick message tests (+2 more commits) - http://git.io/E01jdA
18:56 < motka> cool thing would be an IRC Server & Client to be written with Node.js :)
18:58 < shihan> iirc there already are
19:01 <@mbalho> i dont think there are any well maintained/executed web clients yet
19:22 < MI6> joyent/node: lukebayes master * ae1b0ca : assert: improve support for new execution contexts  More detailed informa - http://git.io/UoAo7g
19:37 < eddyb> https://github.com/joyent/node/blob/master/lib/console.js#L78 why is this not using the high-resolution timer?
19:39 < chrisevans1001> hi. i wonder if anyone can point me in the right direction. i am hoping to use node.js for a android/ios app that i have developed to allow very basic multiplayer. i don't believe i can use socket.io as i can't use the client in my code. therefore im using a regular socket to connect. my worry is, looking at others code, there appears to be things that i dont fully understand such as buffers. 
19:39 < chrisevans1001> so is there a library that already does or can i just not worry about it and use simple socket.on connection, close and data?
19:43 < elliottcable> When I .pause() input on stdin, I can no longer receive ^C in the terminal (SIGINT handler)
19:43 < isaacbw> buffers aren't that hard chrisevans1001, just read through the docs
19:43 < elliottcable> which is rather obvious, yes; but does anybody know a way I can work around that?
19:43 < elliottcable> I'd like input frozen until the program is ready for it, but I *would* like to handle ^C specifically
19:44 < isaacbw> you could pipe stdin to another stream and pause that one
19:44 < isaacbw> and have a special case for SIGINT
19:45 < isaacbw> or just fill up a buffer yourself
19:45 < elliottcable> ooooooo
19:45 < elliottcable> that's an excellent idea
19:45 < elliottcable> how could I special-case SIGINT?
19:46 < elliottcable> hm.
19:46 < shihan> couldn't you use process.on and listen for a signal event?
19:46 < elliottcable> shihan ⑊ I'm using readline, and it seems to consume that, so I never get it off of process.on
19:46 < elliottcable> only rl.on
19:46 < elliottcable> here's my code:
19:46 < elliottcable> (it does both process. and readline. for good measure)
19:46 < isaacbw> can't you pause rl but not stdin?
19:47 < elliottcable> https://github.com/elliottcable/muPaws.js/blob/8975872e602dc9e6793e397d698eb94b163ddb2f/µPaws.js#L695-L754
19:47 < shihan> oh, readline, fair enough
19:47 < isaacbw> I'm not sure if rl will still consume stdin or not
19:47 < isaacbw> when paused
19:47 < elliottcable> yeah, I'm using readline.pause()
19:47 < elliottcable> (line #712)
19:47 < elliottcable> but the sigint handler (registered on #743 and #744) never gets called
19:48 < isaacbw> oh, rl pauses stdin itself when you pause rl
19:49 < isaacbw> I guess the passthrough stream is your best bet
19:49 < isaacbw> or just make the buffer
19:49 < elliottcable> there's something that streams from one stream to a new stream *already*, right?
19:49 < elliottcable> sorry, I don't use streams much.
19:49 < elliottcable> s/much/at all/
19:49 < isaacbw> readable-stream has a class called PassThrough
19:50 < elliottcable> felixge's one?
19:50 < isaacbw> I don't know if it buffers input while paused or just ignores it
19:50 < elliottcable> 2 years old? *pokes around*
19:50 < draginx> tjfontaine: is there a way to clear imagick buffers/a manual way of cleaning memory usage?
19:50 < isaacbw> no, isaccs
19:51 < isaacbw> *isaacs
19:51 < isaacbw> it's called 'readable-stream'
19:51 < elliottcable> oh, wait, different isaac
19:51 < elliottcable> I thought I was talking to him the entire time. Hi! I'm Elliott! ;)
19:51 < isaacbw> :P
19:51 < isaacbw> hey!
19:51 < tjfontaine> draginx: hm you mean 
19:51 < draginx> tjfontaine: well looking at ur README it says theres a potential for memory leakage
19:52 < draginx> so I was seeing if there was a manual way of cleaning this up
19:52 < draginx> or may be id just have to restart the process once every like.. 500,000 images or so :P
19:52 < tjfontaine> draginx: well let me know if you experience a leak, and I'll try and track it down
19:52 < draginx> will do :)
19:52 < tjfontaine> draginx: I'm not aware of any imagemagick leaks, but there is a certain amount of caching that will be done that may be able to be released
19:53 < elliottcable> isaacbw ⑊ reading up on isaacs's “readable-stream” now.
19:53 < draginx> tjfontaine: ah I see, and how would I clear /flush the cache?
19:54 < tjfontaine> draginx: don't know that at the moment, looking into it
19:54 < tjfontaine> draginx: according to the docs, if it grows too large they do the right thing and spawn it out to disk
19:55 < draginx> ah i see awesome! :)
19:55 < draginx> thanks
19:55 < __yh> whats up playaZ
19:55 < isaacbw> ##javascript is so pedantic
19:55 < tjfontaine> draginx: I'll continue reading the docs on this, but I would suggest using it like there's nothing wrong until you find out that there is
19:55 < isaacbw> man
19:56 < draginx> right
19:56 < draginx> agreed! thanks man
19:56 < elliottcable> isaacbw ⑊ is it?
19:56 < __yh> whats the best way to test against older versions of node?
19:57 < isaacbw> it is
19:57 < __yh> is there like a ruby's rvm tool for node to install older versions or is there another way?
19:57 < tjfontaine> __yh: there's nave, nvm, and give to name a few
20:12  * sk8ball is looking for a project to contribute to... anyone in need of a developer/designer?
20:13 < __yh> indent 2 or 4, tab or space?
20:14 < __yh> whats the node convention
20:14 < Soarez> i say 2 space
20:14 < AviMarcus> sk8ball, I think they all are
20:15 < AviMarcus> usually sk8ball ... you start with a project you like or need, and fix/add stuff to it :)
20:18 < __yh> what doc tool is that where people comment with @param @api @@return ?
20:20 < __yh> oh apparently it comes from java
20:27 < astropirate> what commandline tool do you guys use to make http request?
20:27 < astropirate> curl?
20:27 < geNAZt> yes
20:28 < geNAZt> or if u want to have a full webbrowser lynx
20:35 < motka> widiwys / wiciwys
20:36 < motka> is there an MVC solution for Node.js?
20:36 < isaacbw> a few
20:37 < isaacbw> geddy, tower
20:37 < isaacbw> google is your friend
20:37 < motka> isaacbw, ain't no more.. he tricked me a few times :P
20:38 < geNAZt> https://github.com/visionmedia/express/tree/master/examples/mvc
20:39 < Virunga> Hi, could you tell me what does this row do? https://github.com/martynsmith/node-irc/blob/master/lib/irc.js#L541
20:39 < astropirate> I haven't seen any strong model layers for node.js
20:41 < geNAZt> Virunga: it binds the this context into the EventEmitter instance
20:43 < Virunga> geNAZt: does also execute the EventEmitter function?
20:47 < geNAZt> yes
20:48 < Virunga> i mean, i know that function is also executed but, in the repl i created a constructor A and then wrote require('events').EventEmitter(A)
20:48 < Virunga> And A isn't changed
20:48 < Virunga> its prototype is the same 
20:48 < geNAZt> no it doesnt change A
20:48 < geNAZt> http://odetocode.com/blogs/scott/archive/2007/07/05/function-apply-and-function-call-in-javascript.aspx
20:49 < Virunga> god, i forgot to write call
20:50 < Virunga> xD i'm learning 
20:50 < Virunga> geNAZt: i'll read that article, thank you for your support.
20:51 < geNAZt> no problem :D
21:10 < lhk_> hi
21:10 < lhk_> is anyone here using typescript ?
21:10 < lhk_> i would be really glad, if you could help me
21:11 < lhk_> I can't find a definitions file for node that is compiling
21:11 < lhk_> posted this on SO, too:
21:11 < lhk_> http://stackoverflow.com/questions/14083427/using-nodejs-with-typescript
21:15 < isaacbw> I'm not super familiar with http: if I send everything in one http response, will it come out the other side in one piece, or it there a possibility that it will e split up, i.e. multiple on('data') fires if I'm using a node client
21:17 <@mbalho> isaacbw: http is on top of tcp which has the possibility of chunking up across multiple 'data' chunks
21:17 <@mbalho> isaacbw: you should make your code expect multiple data chunks by using things like http://npmjs.org/package/concat-stream
21:17 < isaacbw> okay, I suspected that. Basically what I want to do is have a streaming keep-alive connection over which I send a new json object when its model changes on the server. I guess I could use newlines to indicate a new object, but is there a more traditional way to do that?
21:18 < isaacbw> oh, thanks for linking that mbalho 
21:18 <@mbalho> there is a spec called server sent events (SSE) that is basically that, or you can use a streaming json parser like require('JSONStream')
21:18 < isaacbw> I had been doing it manually, but using a module would probably be better
21:18 < isaacbw> awesome :) thanks for all this
21:24 < Kakera> I must say the streaming interface of crypto makes your code a bit more verbose. https://gist.github.com/4409445 vs https://gist.github.com/4409449
21:27 < isaacbw> so event-stream is still query-based, only it's the browser doing the querying?
21:28 < Bonuspunk> has anyone a simple duplex stream example for 0.9? something like prefixing all outgoing chunks with '->' and incoming '<-'
21:28 < Kakera> I don't suppose you can chain methods like cipher.end(data).read() ?
21:29 < isaacbw> Bonuspunk, you could use readable-stream's Transform class
21:38 < isaacbw> boogaloo
22:03 < __yh> how do i solve -> try (code that throws errors) catch(err) { catch error but continuing with code though }
22:04 < arnorhs> __yh: what do you mean solve?
22:04 < __yh> that is i want to throw errors but decide whether or not to stop the code throwing errors
22:04 < __yh> (not all errors are fatal)
22:05 < arnorhs> errors that are not fatal shouldn't really be throwing exceptions
22:05 < __yh> yea that was just an example
22:06 < __yh> so i wrote my own error
22:06 < arnorhs> anyways.. if you only wrap the code that can throw the exception in a try-catch block, you should be able to continue pretty smoothly
22:07 < __yh> oh wait nice
22:07 < __yh> i got it
22:07 < arnorhs> great
22:09 < __yh> also
22:10 < __yh> better way to check regexp than? (typeof r == 'object' && (new RegExp).constructor === r.constructor) ? 
22:12 < emkei> Hello which tdd enviroment should I choose for node.js currently looking into mocha
22:14 < arnorhs> __yh: I think you can just compare the constructor with the RegExp object itself
22:14 < arnorhs> i could be wrong.. 
22:16 < isaacbw> util.isRegExp
22:17 < isaacbw> oy, he left
22:19 < arnorhs> ah.. didn't know about .isRegExp
22:19 < arnorhs> isaacs: at least you helped me :)
22:23 < isaacbw> I'm not isaacs :P
22:24 < isaacbw> I should probably change my nick
22:24 < isaacbw> this is getting confusing
22:25 <@konobi> especially cos your name is bob
22:25 <@konobi> =0P
22:25 < isaacbw> wut
22:26 < arnorhs> isaacbw: goddamn autocomplete
22:27 < arnorhs> i've always found it weird how colloquy will autocomplete alphabetically and not by recency of posting a message
22:27 < arnorhs> i need to switch IRC clients
22:27 < isaacbw> yea, xchat does that too
22:27 < isaacbw> I'm making one right now, you should wait for it ;)
22:27 < arnorhs> hah, sounds good
22:28 < arnorhs> now you know what my feature request will be :)
22:28 < isaacbw> I've already written it down
22:29 < gluxon> arnorhs: Shouldn't be too hard to make your own IRC Client in Node.js and wxNode :D
22:29 < isaacbw> the IRC protocol is actually really fun because it's so simple
22:32 < arnorhs> gluxon: i'll use isaacbw's when it's done
22:32 < gluxon> isaacbw: is writing a Node.js IRC Client?
22:32 < isaacbw> I sure am
22:32 < isaacbw> it's really cool actually, but I don't want to say why until I get a bit more done
22:34 < gluxon> isaacbw: When you release it to public, let me know. I'd love to help out with it.
22:34 < isaacbw> awesome! thanks
22:34 < arnorhs> isaacbw: yeah, same here.. though i'll probably mostly be helpful on the UI front if anything
22:34 < matbee> Anyone know of a way to make socket.io-client use a new namespace other than "window.io"?
22:35 < matbee> ...relatively easily
22:35 < gluxon> isaacbw: What GUI framework are you using?
22:35 < isaacbw> that's the secret part
22:35 < isaacbw> seriously, you'll understand why
22:35 < isaacbw> >.>
22:36 < gluxon> Fine :'(
22:36 < isaacbw> not that it's a secret, just that I want to have more done before I'm ready to announce it
22:36 < isaacbw> you guys will be the first to know C:
22:36 < arnorhs> great
22:40 < kenperkins> is it bad practice to require a script to run as sudo?
22:40 < gluxon> kenperkins: Depends on what it does.
22:41 < geNAZt> sudo in which users context ?
22:43 < kenperkins> root. although I think I can fix that :P
22:44 < geNAZt> its not "bad" running a  webserver requires the root privileges to bind to ports > 1024
22:44 < geNAZt> but if u parse data, access disks, eval script and so on u should not do that in root context
22:44 < kenperkins> it's not for an app, just an admin script
22:44 < kenperkins> i.e. short lived
22:46 < geNAZt> "short" lived :D
22:47 < shihan> actually, you dont really need root to bind ports < 1024 on linux
22:48 < geNAZt> y if the port is greater then 1024 then not
22:48 < shihan> no, you can bind below 1024 without being root... though doing it with node could be a little hazardous to your health
22:49 < matbee> Can I slap whoever is writing Learnboost for writing it so weirdly? :)
22:49 < matbee> er socketio
22:49 < matbee> })('undefined' != typeof io ? io : module.exports, this);
22:49 < matbee> FFFF!
22:50 < Cronoh> whats wrong with that
22:51 <@isaacs> isaacbw: there's room for more than one isaac in node :)
22:51 < isaacbw> :D
22:51 <@isaacs> isaacbw: where are you from?
22:52 < isaacbw> nyc
22:52 <@isaacs> growing up my name was always very unique, but lately i've noticed that apparently it was a very popular name for boys born about 4-5 years ago
22:52 <@isaacs> i hear "ISAAC! PUT THAT DOWN!" in supermarkets a lot
22:52 <@isaacs> freaks me the fuck out
22:52 < isaacbw> I've noticed that too
22:52 < gluxon> isaacs: Not because of you...
22:52 < isaacbw> it's jarring
22:52 <@isaacs> yeah!~
22:53 < isaacbw> I'm like, "why are you yelling at me!?"
22:53 < isaacbw> :,(
22:53 <@isaacs> even when there's a character named isaac on tv, every time they say his name, i think "THE TV PEOPLE ARE TALKING TO ME!"
22:53 < isaacbw> :P
22:53 < mistertwig> hey isaacs
22:53 < mistertwig> glad you fixed that XSS :P
22:53 < mistertwig> sorry for reporting in wrong repo, niggler sent me to it
22:53 <@isaacs> i bet people named matt and brian get over that a lot earlier in life
22:53 <@isaacs> mistertwig: np
22:53 < zomg> it's going to be confusing if you talk to isaacs now... are you talking to isaacs or the isaacs? ;)
22:54 <@isaacs> mistertwig: thanks for reporting.  i think we need a more general module to do that kind of stuff.
22:54 <@isaacs> mistertwig: i'll probably write something for that soon
22:54 < mistertwig> yeah
22:54 <@isaacs> zomg: well, there's still only one isaacs.  isaacbw is different.
22:54 < mistertwig> i was surprised that was there tbh :P
22:54 < zomg> isaacs: I meant as in plural for isaac :D
22:55 <@isaacs> zomg: oh, i see.
23:10 < matbee> Any ideas how to move socket.io to a new global property, window.io isn't happening for this one project :P
23:10 < matbee> It's written so--- weirdly.
23:10 < matbee> socket.io-client
23:13 < mscdex> node.js rules!
23:14  * astropirate slaps mscdex 
23:16 <@konobi> mscdex: lo
23:31 < emkei> hello guys I'm curiuos do you use TDD while doing node.js programs?
23:35 < MI6> joyent/node: isaacs master * 7550e31 : benchmark: Make flamegraphs a bit more useful (+6 more commits) - http://git.io/etWwkg
23:54 < TehShrike> emkei: some people do
23:56 < emkei> TehShrike: can you recommend package, currently looking at mocha
23:56 < emkei> looks quite good
23:57 < matbee> Anyone know why -- if websockets are safe from XSS XOR restrictions, why can't I connect to a server on a different domain than the socket.io script?
23:57 < TehShrike> emkei: I don't use a testing library myself
23:58 < TehShrike> isaacs: is this yours? http://testanything.org/
23:58 <@isaacs> TehShrike: no, that predates node-tap
23:58 <@isaacs> TehShrike: that's the original perl thing
23:58 < emkei> TehShrike: thanks for honest answer :)
23:59 < emkei> thought it would be more widelly adapted as node.js is so easy to develop :)
--- Log closed Sun Dec 30 00:00:51 2012
