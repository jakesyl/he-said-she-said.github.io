--- Log opened Mon Sep 03 00:00:11 2012
00:00 < livinded> I was gonna fly but it was going to be expensive to bring a tent, sleeping bag, etc. on the plane so I'm driving up tomorrow
00:00 < Sly> Yeah, but it's not like a bus full of people are going to park and wait for you. lol.
00:00 < livinded> was hoping to leave my car in the city and not have to drive it out to the camp
00:01 < Sly> Yeah, flying is expensive. Not like I would know, since I'm deathly afraid of planes and have never and will never get on one.
00:01 < Sly> Oh, well then Joyent's parking situation isn't the issue. You need to figure out where you're going to leave your car at, and find out if they charge anything.
00:02 < livinded> well, I was hoping to leave it at joyent
00:02 < Sly> Oh.
00:02 < livinded> don't know what their parking situation is like there
00:02 < Sly> Me either.
00:02 < fatAgnes> nodejs
00:02 < Sly> Oh. You're going to Joyent and then going to a camp.
00:02 < Sly> I'm up to speed, now.
00:02 < Sly> I didn't know anything was going on.
00:02 < livinded> Sly: that's what I want to do
00:02 < fatAgnes> is node multithreaded?
00:02 < livinded> there's a bus that leave from Joyent to go to the camp
00:03 < livinded> fatAgnes: there is no threading in the language if that's what you mean
00:03 < Sly> If you can't park at Joyent, just find a parking lot that is close by..
00:03 < rovar> fatAgnes,  yes and no. 
00:03 < Sly> Like a store or something.
00:03 < Sly> Just put something white in the window, so it looks like a disabled car..
00:03 < Sly> Problem solved.
00:03 < livinded> Sly: that's what I'm considering doing, just depends on how expensive it is
00:03 < fatAgnes> sucks
00:04 < Sly> Just saying, that's a pretty simple way to get out of having to think about it too much.
00:04 < livinded> fatAgnes: why?
00:04 < rovar> fatAgnes,  your node scripts run in a context that can only ever be executed by a single thread at once. 
00:04 < fatAgnes> how you do lengthy background jobs?
00:04 < Sly> Async=
00:04 < rovar> fatAgnes, however, you can spawn tasks in separate threads
00:04 < livinded> callbacks spawn new threads
00:04 < rovar> livinded, how do you mean? 
00:04 < livinded> underneath
00:05 < livinded> when a callback is executed doesn't it spawn off a new thread and continue on
00:05 < rovar> some asynchronous calls to otherwise synchronous activities do. but in general, that doesn't happen. 
00:05 < rovar> most everything is just scheduled in libUv
00:05 < fatAgnes> not answering my question
00:05 < livinded> it's all bound to 1 core so only one thread of the process executes at once, eg. no real threading, but callbacks all the async code is scheudled in different threads
00:05 < Sly> Most everything, like callbacks, are handled in nextTick() in the same thread.
00:05 < fatAgnes> i want to do a background job = "generally that doesnt happen"   wtf?
00:06 < fatAgnes> aah ok
00:06 < Sly> fatAgnes, what do you mean you want to do a "background" job?
00:06 < Sly> You want to run something in the background?
00:06 < Sly> node script.js &
00:06 < fatAgnes> uuuh
00:06 < Sly> I mean, you have to be more specific.
00:06 < fatAgnes> so multiprocess
00:07 < rovar> fatAgnes,     it looks like of like this:    uploadLargeFile(filePath, function(result) {  console.log("file uploaded " + result ) } ); 
00:07 < fatAgnes> aaaah
00:07 < fatAgnes> ok
00:07 < rovar> so uploadLargeFile returns immediately
00:07 < fatAgnes> and while the file is loading, the script freezes?
00:07 < rovar> not at all
00:07 < Sly> No. It doesn't freeze. It freezes if you call synchronous functions that block the code with while() or something of that nature.
00:08 < Sly> Say if you were to do uploadLargeFile('file')
00:08 < fatAgnes> cool
00:08 < Sly> And then have a while() in that, then it would freeze.
00:08 < rovar> it continues right past uploadLargeFile immediately..  under the hood,  it passes its own callback to  the socket handler to be notified when the socket is writable. 
00:08 < Sly> But if you do what rovar is suggesting..
00:08 < Sly> And then have a function that looks like: function uploadLargeFile(file, fn) { /*handle the file*/ fn(); }
00:08 < fatAgnes> cant  I use the same principle for code,..., lengthy computation job, and when i finnish i call "callback function"/handler whatevr
00:09 < fatAgnes> I guess i have to write C code or something to accomplish this
00:09 < rovar> in that callback.. it calls the function to write the socket, and passes yet another callback,  in that callback, it actually writes to the socket
00:09 < fatAgnes> rovar, yeah yeah, chaining
00:09 < rovar> passing yet another callback :)
00:09 < fatAgnes> not what i want
00:09 < rovar> what do you want?
00:09 < Sly> fatAgnes, it sounds like you may want to look into child_process. It allows you to fork into child processes.
00:10 < rovar> if you want your code to pretend to do that, you can cover up the asynchronous callback chaining by using fibers
00:10 < Sly> http://nodejs.org/api/child_process.html
00:10 < rovar> or  threads-a-gogo
00:10 < rovar> will let you spawn a function in a separate thread
00:10 < rovar> but i really don't know why anyone would want to.. unless what they're calling is necessarily synchronous 
00:12 < fatAgnes> rovar,..., off tangent, and not rational, but ok..., sly thatnks for answering question
00:12  * Sly tips hat.
00:14 < rovar> fatAgnes, not off tangent at all,  threads-a-gogo does exactly that, only it spawns a thread, instead of forking a child process, which is considerably more efficient 
00:14 < fatAgnes> threads a go go
00:14 < fatAgnes> is a node js lib?
00:15 < rovar> yes
00:15 < rovar> https://github.com/xk/node-threads-a-gogo
00:16 < fatAgnes> cool, will look into it
00:17 < livinded> is it really that much more efficient? COW with fork makes forking a pretty efficient task
00:17 < chilts> fatAgnes: as in the Amiga graphics chip? :)
00:17 < fatAgnes> hey grandpa, is that you?
00:17 < fatAgnes> lolz
00:18 < Domenic_> livinded: It's worth learning the differences between processes and threads. They are very different levels of efficiency.
00:18 < livinded> Domenic_: I know the difference
00:18 < Domenic_> mm ok, must have misunderstood your question then
00:18 < fatAgnes> threads need overhead too, ppl can fuck this up
00:19 < fatAgnes> fork is safer
00:19 < livinded> but is it THAT much more efficient and worth dealing with managing race conditions, etc.
00:19 < Domenic_> my point was that knowing the difference between threads and processes gives you an idea of exactly how much more efficient threads are.
00:19 < rovar> livinded, it's not only the cost of spawing the process but also the IPC to get the talkbacks has latency and overhead as well. 
00:20 < livinded> Domenic_: I understand the difference, but with COW a child process wont do the very expensive operations until the process image has to vary from the parent
00:21 < Domenic_> livinded: ok. You keep asking questions like "is it THAT much more efficient," so it is unclear how much you know.
00:22 < rovar> this is true,  modern fork/vfork does very little in the way of duplicating the current process. 
00:22 < livinded> unless the children need to talk to eachother or the parent a lot I'd rather just fork in most instances. It's easier to write the code well and you're not going to get that more performance
00:22 < rovar> meh
00:23 < rovar> a concurrency model where the children don't talk to the parent is the only type that I'll support :) 
00:23 < rovar> and you might as well just spawn a thread :) 
00:23 < pringlescan|dryw> rovar, that's the concurrency module that helped me survive my childhood in a broken home
00:23 < rovar> the only time i'd recommend otherwise is for data isolation for security or crash protection.. 
00:24 < pringlescan|dryw> *model
00:24 < rovar> pringlescan|dryw,  hahaha
00:24 < pringlescan> has anyone taken a job in california and moved from the east coast?
00:26 < blazes816> pringlescan: I just moved to SF from Kansas
00:26 < blazes816> not the east coast, but half way there
00:27 < pringlescan> what's it like for a straight guy there?
00:27 < blazes816> haha
00:27 < blazes816> great
00:27 < blazes816> there are plenty of women and they're mostly available
00:27 < livinded> anyone happen to be in LA and going up to node summer camp?
00:28 < pringlescan> someone in #linux just bitched me out for adding a status to my nick, I thought that's just what you did, ooops.
00:28 < rovar> pringlescan,  I took a job in NYC and moved from the west coast :)
00:28 < pringlescan> blazes816, thanks you seem to know what I wanted to know.
00:28 < pringlescan> rovar, I already know I love NYC. I'm trying to be adventurous.
00:28 < livinded> pringlescan: you can't go wrong with the west coast
00:29 < livinded> if you don't like it here, there's probably something wrong with you
00:29 < pringlescan> I think cost of living is roughly comparable in NYC and SF
00:29 < blazes816> being from the midwest it's super weird, but if you're used to NYC i'm sure you'll be fine
00:30 < rovar> livinded, 2nded.  I'd rather live on the west coast than NYC
00:30 < pringlescan> rovar, have you ridden the subway? It's filled with girls that look like models.
00:30 < rovar> pringlescan,  yea, they're a about the same both in the city and the suburbs. 
00:30 < livinded> never been to NYC but there's nowhere I'd rather live than the west coast
00:30 < livinded> plenty of awesome places to visit, but this is home
00:30 < rovar> pringlescan, for 6 years
00:31 < pringlescan> I guess it'd get old
00:31 < rovar> pringlescan, it's the only upside of the subway :P
00:31 < livinded> wish we had a good subway here
00:31 < livinded> one thing that SF has on LA
00:32 < pringlescan> I'd be bringing a car anyway, damned thing isn't paid off.
00:32 < livinded> pringlescan: you're better off taking the subway anyway
00:32 < livinded> parking isn't fun in SF
00:32 < pringlescan> agreed, but if you have parking on your street it's not that big of a deal to move it to the other side 2-3 times a week if you're paying for it anyway
00:33 < blazes816> I sold my car after being here in SF a week
00:33 < blazes816> i have parking at my apt, but pretty much nowhere with parking to go to
00:33 < pringlescan> that bad?
00:34 < blazes816> yep
00:34 < pringlescan> I have 6k left on my car. I guess if I got a job out there that wouldn't be an issue. Pay should be adjusted with COL. Doesn't help I'm 7 credits away from my degree, but the tech field doesn't seem to care about those.
00:34 < Domenic_> Personally if coming from NYC I'd move to Tokyo... only city in the world I've seen that compares.
00:34 < blazes816> nope.  i dropped out of school to move out here
00:35 < blazes816> with ~10 credits left
00:35 < blazes816> so i've got all the debt, none of the paper
00:35  * marktraceur starts a flame war
00:35 < pringlescan> what was your degree ijn?
00:35 < blazes816> CS
00:35 < marktraceur> I'm looking for a good web framework, suggestions? :)
00:35 < livinded> I've got 3 credits left on mine
00:35 < pringlescan> I ended up going for business because I'll pick up a book and teach myself anything I want… not sure if that looks as good, but I've been programming since I was 10, and I'm 23 now and I have projects/milestones that count for something I guess
00:36 < blazes816> marktraceur: I like express.js.  a lot of people prefer Geddy
00:36 < livinded> failed my thesis class last semester because I never went and trying to come up with an excuse to not drop out
00:36 < nmartin> would it be appropriate to use node.js to build a web based app to do admin functions on the server it's running on?  
00:37 < marktraceur> blazes816: I'll look at both, I'd also welcome pokes in either direction or explanations of differences if you have the time :)
00:37 < blazes816> pringlescan: my employer found my online profile, called me, found out i'd been programming since i was 10, and made me an offer that day.
00:37 < blazes816> the degree is mega overrated
00:37 < blazes816> at least right now, in the valley
00:37 < pringlescan> my college won't let me test out of a E.R.P course that basically covers some SAP and Microsoft Office and light GIS. I minored in GIS and transferred a class taught by a 20 year veteran of SAP (college was 2.5 miles from HQ in the USA)
00:37 < pringlescan> and that's a pre-req for my other last 6 classes
00:37 < blazes816> marktraceur: you coming from another language/framework that you like?
00:37 < marktraceur> blazes816: Well, I've used node in the past for web, but I sort of just threw it together, didn't use a framework. I used Flask in Python and liked it.
00:38 < pringlescan> i'm just sick of it, I honestly learned VERY LITTLE, but I did go for business and it's all common sense
00:38 < blazes816> if you have the skills, you will pay the bills
00:38 < livinded> pringlescan: I switched from CS to Philosophy as a senior because I was bored
00:38 < blazes816> pringlescan: that's exactly why I left.  I couldn't stand getting 0 education.  they just started a "pseudo code OOP" class to try and refresh their CS curriculum
00:38 < nmartin> i need to write a web based management app to administer a SAN that's running corosync, pacemaker, drbd, and tgtd
00:38 < rovar> I do agree that college should be for exploring things that would be to prohibitive to otherwise study..  business and particle physics, for instance.. 
00:39 < blazes816> marktraceur: if you like flask I'd try express.js
00:39 < blazes816> geddy is more django like
00:39 < marktraceur> Hm
00:39 < marktraceur> Yeah, didn't like Django
00:39 < pringlescan> does my resume look ok? or should I try to make it less technical, i tried to flesh it out, i have a bunch of stuff I haven't added, but it's mostly because I'm hired to do things of questionable legality
00:39 < marktraceur> Seems too....unwieldy
00:39 < nmartin> and i have a few options: php+smarty, rails (too haevy i think) node.js, or cgi (ugh)
00:39 < pringlescan> http://www.jeffreymealo.com/
00:39 < nmartin> or something else 
00:40 < blazes816> haha pringlescan: i had that same problem.  most of my freelance work was building porn sites when I was 15 so i don't like to mention it
00:41 < marktraceur> blazes816: Thanks for the help, I'll try 'er out
00:41 < blazes816> good luck
00:41 < livinded> blazes816: must have found shady clients. None of the people I worked for in porn would let me work until I was 18
00:41 < livinded> some of the best clients I dealt with though
00:42 < blazes816> livinded: exactly why it keep in on the DL.  luckily people over the net don't tend to even consider minors using computers
00:42 < blazes816> definitely
00:42 < blazes816> when they realize you only want cash, never payments in dvds
00:42 < blazes816> pringlescan: looks pretty good but I'd moved the prof skills above work experience
00:42 < livinded> they were just really easy to work with. Never like crazy demands or anything, payments always on time, and never had any serious issues
00:42 < livinded> and the money was always good
00:43 < blazes816> also maybe relay it out so it's all above the fold
00:43 < pringlescan> i need to update them I try to be really honest and only put shit i'm very comfortable with rather than things I'm "familiar" with
00:43 < rovar> you might want to take a couple payments in DVDs as a minor,  so if they ever do stiff you, you can threaten to turn them in for exposing to a minor, etc.. 
00:43 < rovar> ;)
00:43 < pringlescan> blazes, I'm thinking the ribbons should be collapsible so you see all the sections and can pick them?
00:43 < blazes816> pringlescan: the biggest surprise to me during this transition is how much the "experts" don't know compared with what you think they do
00:43 < blazes816> that'd be sweet too 
00:44 < blazes816> rovar: I like the way you think
00:44 < pringlescan> I don't comment on previous employers, but they were somewhat surprised with how much I knew, which was flattering and disconcerting considering how much experience they had.
00:48 < blazes816> pringlescan: http://i.imgur.com/6f19U.png was the resume i had at the time.  shitty, but concise and to the point which I think helped
00:48 < pringlescan> i need to chop mine up if i have the skills i can get into the details with them, nobody likes to read
00:49 < livinded> honestly, get yourself a linked in, github, personal site (super simple), and go to meetups
00:49 < livinded> I haven't had to turn in a resume or actively hunt out a job in a while
00:49 < livinded> and do a few hackathons
00:49 < pringlescan> yeah, i did that, one the recruiter must have left the company and the other loved the JVM-based languages so much when I said I never learned Java because I don't want to run a VM in a VM in a VM they looked at me funny.
00:49 < livinded> cool shit will kinda just find you
00:50 < pringlescan> when i tried to learn java, they had swing and AWT and the whole ecosystem was awful and everything was slow and bloated
00:50 < livinded> or you'll do your own cool shit and people will want to throw money at you to work on it
00:50 < blazes816> that's the less likely option
00:50 < livinded> blazes816: meh, starting to happen for me
00:51 < pringlescan> i have my own cool shit but i can't release it because it'll be commercially successful and i want to use it to help the world *sigh* it's been a big moral dilemma to just wait and hope nobody thinks of it first and patents it for evil
00:51 < livinded> got a call next week to discuss coming onto a grant request to build out a scoring system for computer security wargames
00:51 < pringlescan> livinded I went to click like on what you just said and realized we were on IRC o_O
00:51 < blazes816> livinded: yeah, it definitely happens, just not nearly as much as you working for somebody else's project
00:52 < livinded> blazes816: just gotta keep doing cool shit and one day it happens
00:52 < pringlescan> http://fbpixel.com/tf/responsive-resume/light-blue/#pro do you guys think this is an improvement over http://jeffreymealo.com
00:54 < livinded> pringlescan: yes, but it's still way to much to point someone to as a resume
00:54 < blazes816> haha @ Johnson Doe
00:54 < pringlescan> http://themeforest.net/item/zwin-responsive-vcard-template/1970657 is this better?
00:54 < pringlescan> my paper resume is pretty good
00:54 < pringlescan> other than the fact it's probably way too long, but i made it very scannable http://jeffreymealo.com/jeffrey-mealo-resume.pdf
00:55 < livinded> like for me personally when I'm looking at potential hires I want no more than a page or so that I can quickly glance at that sums you up then a link to work you've done that I check out (github)
00:56 < pringlescan> I try to play by the rules I was taught in school but the more I think about it, I'm not going to be reviewed by a recruiter, I need to stand out from the crowd by what I do, not a bunch of b/s in a cover letter.
00:56 < blazes816> when I hire people I only look at code.  not necessarily the code itself, but what they've done
00:56 < blazes816> pringlescan: school is wounded
00:56 < livinded> I haven't done a lot of interviewing for candidate review, but that's just how I've gone about it so far
00:57 < blazes816> a bunch of people that couldn't get any better jobs than teaching don't know shit about getting a tech job in today's market
00:57 < livinded> I want to quickly look through some of your code, see how complex it is, what kind of problems you work on, and what you're capable of
00:57 < filleokus> 3
00:57 < filleokus> http://dumpr.info/t/5jf - generates Error: connect EADDRNOTAVAIL, I can't for my life understand why
00:58 < blazes816> for sure; logic skills > experience > education
00:58 < nmartin> you guys mind an on-topic node.js question? i'm evaluating it as a candidate for a project
00:58 < pringlescan> so, what I'm hearing is my name/contact info "Javascript Ninja" tag line, links to github, linked in, quora, etc and a link to a paper resume, bulleted list of skills and a portfolio if I have one
00:59 < livinded> pringlescan: http://www.deadbytes.net that's my personal site currently. I want to redo the copy at this point, but otherwise I'm pretty happy and it's done me well
01:00 < livinded> nmartin: just ask the question
01:01 < nmartin>  livinded , i did , and is flew by too fast in all the resume talk.  here it is again:
01:02 < nmartin> I need to write a web app that interacts with the system its running on to do administration of several apps on the server, like drpd, pacemaker, lvm, etc.  Is there a compelling reason node.js is particularly good or bad for this purpose?
01:02 < rovar> livinded, what uni were you with when you did the CCDC?
01:03 < livinded> rovar: CSUN
01:03 < nmartin> vs something like rails, php, or cgi(ugh)?
01:03 < rovar> nice
01:03 < livinded> did you compete in wrccdc?
01:03 < rovar> livinded,  I have been involved with the CCDC here in the NE,  didn't compete, sponsored it :) 
01:03 < nmartin> basically, I've built a pretty rocking SAN, but need a web based admin app for it
01:04 < rovar> it's a great competition,  I was participating as a white badge
01:04 < livinded> ah. I'll be red teaming next year most likely. I'm far from a blue teamer but it was my school's first time competing so I thought I'd help out
01:04 < nmartin> it will need to call lost of local apps on the server, parse some files, etc
01:04 < pringlescan> nmartin, check if Perl has the modules you need to control those things, otherwise node isn't a bad way to do it
01:04 < livinded> I can do defence, I just don't like it
01:04 < rovar> nice..  i'm more of a blue teamer by trade.  I am a software infrastructure guy
01:04 < rovar> used to be.. now I just yell at them :)
01:04 < nmartin> I'm 2000% more proficient in js than Perl, so that's my last resort
01:05 < livinded> I like to break stuff, but I also happen to be pretty good at designing pretty solid systems
01:05 < pringlescan> yeah, but if perl has modules that do everything you need, i'm sure you'll manage, just for god sakes, if you value your eyesight and sanity DON'T LOOK AT YOUR CODE ever again
01:05 < livinded> wrccdc is actually who I'm going to be involved with in regard to the scoring system
01:05 < rovar> livinded, you can't design solid systems unless you're fairly proficient at breaking them :)
01:05 < pringlescan> what's it called when you like to take mountains of unstructured data and rape and pillage all the structured data out of it when other people say "you can't do that, that won't work"
01:05 < nmartin> pringlescan: thats the problem, coming back t a perl app i wrote 6 months ago is like learning to walk all over again
01:06 < livinded> hopefully next season they'll be using a system that's based on the one I built for DEFCON this year
01:06 < rovar> nice
01:06 < livinded> and partially node powered
01:06 < pringlescan> nmartin, that's why I don't code in Perl anymore, it's so easy to do something that you don't need to think, then because you didn't think of the solution, you can't recognize it and suffer from TCSS
01:06 < pringlescan> (Toxic Code Shock Syndrome)
01:06 < rovar> I work with the guy who ran CTF at DC for like 8 years
01:06 < pringlescan> a programmer gets it when he keeps perl code in his repo for too long, it turns toxic
01:06 < livinded> rovar: from kenshoto?
01:07 < livinded> or ghetto hackers
01:07 < nmartin> so, if i want to learn node.js, would this NOT be a good application?
01:07 < rovar> livinded, kenshoto
01:08 < pringlescan> nmartin, check out NPMJS.org and see if there are modules for what you need to do
01:08 < pringlescan> it's easy enough to use node.js to make a web based interface if you drink the JS koolaid
01:08 < livinded> rovar: ah cool. They're some SMART people. Two of the guys from Simple were members
01:09 < pringlescan> interacting with all the things you just mentioned would mean you're familiar with the terminal applications and holding those applications hands to automate tasks, i suggested perl because you can bet there are modules to drive any of those terminal apps, i'd suggest porting them to node, but sometimes it's easier to just write them from scratch
01:09 < nmartin> i see
01:09 < rovar> livinded, nice, that seems like a sweet product.. 
01:10 < livinded> https://www.google.com/search?q=askew&oq=askew&aqs=chrome.0.57j60l3j62l2.745&sugexp=chrome,mod=16&sourceid=chrome&ie=UTF-8
01:10 < livinded> lol, google
01:11 < nmartin> since 90% of what the user needs to admin is being controlled by Pacemaker resources, I mainly need to interact with its admin tools, cibadmin and crm
01:11 < nmartin> then there are a few other functions, editing IP addresses, etc
01:11 < pringlescan> livinded, that made me dizzy
01:11 < pringlescan> i looked for substacks, shoe module and google sent the directions for the nearest payless shoe source to my android phone
01:11 < rovar> nmartin, isn't that what openshift does?
01:12 < rovar> nmartin,  I do think that your best bet for making an admin screen is  node + restify + angular
01:12 < rovar> :) 
01:12 < livinded> you like angular?
01:13 < livinded> I haven't gotten a chance to use it yet but I've been more interested in rolling my own system
01:13 < rovar> yea.. i think its overkill for a lot of stuff, but they absolutely nailed the abstractions..
01:13 < rovar> if you're going to make a full-fledged online application,  i don't think its possible to do better than angular. 
01:13 < livinded> the soundcloud writeup was awesome and gave me a lot of ideas
01:14 < rovar> goodfilms did a good one too
01:14 < livinded> got a link?
01:14 < rovar> http://goodfil.ms/blog/posts/2012/08/13/angularjs-and-the-goodfilms-mobile-site-part-1/
01:14 < pringlescan> wow, angular is like when I realized wine was like fancy people beer
01:15 < livinded> pringlescan: blasphemy
01:15 < livinded> you've just never had amazing beer
01:15 < pringlescan> i had raw beer that was actually really decent but i can't drink any other beer unless i'm already drunk
01:15 < rovar> livinded, you do realize that PA is the microbrewery capital of the world :)
01:16  * livinded is a brewer
01:16 < rovar> if you can't find good beer in PA, you can't find god beer :)
01:16 < pringlescan> i found a few I liked, it's just i'm very to the point
01:16 < livinded> almost time to make pumpkin beer
01:16 < pringlescan> if i want to get drunk, i want to get drunk, if I want to get buzzed, I want to get buzzed, what's the best tool for the job
01:16 < rovar> very pragmatic
01:16 < livinded> whiskey
01:16 < rovar> I like to enjoy the journey
01:17 < livinded> whiskey is always the right tool for the job
01:17 < pringlescan> is there a node module named whiskey yet?
01:17 < pringlescan> I want the tagline to say that
01:17 < livinded> let's find out
01:17 < pringlescan> "Whiskey — getting ugly code deployed since 2012"
01:18 < livinded> lol
01:18 < pringlescan> :-( it's a test runner
01:18 < livinded> that should be called beer googles
01:18 < livinded> goggles*
01:18 < pringlescan> it should say <s>rum</s> test runner.
01:21 < pringlescan> so, i had a hell of a time writing my first large node app, it had to run a huge batch job on 170,000 items… and all the trouble I had was due to OSX having the file descriptor limit set to 256 or something ridiculously low.
01:21 < pringlescan> i changed modules like underwear and couldn't figure out whenever i actually spun it up my code broke, it'd always work sequentially
01:22 < rovar> pringlescan, changing topics completely,  is the registry of home improvement contractors public data?
01:23 < pringlescan> I signed an NDA, so unfortunately no.
01:24 < rovar> :)
01:24 < pringlescan> Recently I scrubbed it and ended up doing a sample of 1,000 entries, 5 times, and it was 99.9% actual home improvement contractors.
01:24 < pringlescan> so I was pretty surprised I got it very close to curated quality programmatically
01:25 < pringlescan> the funniest thing is the non contractor entires largely came from what should be the most reliable data sources (i.e. state licensing data)
01:27 < pringlescan> rovar, part of me wants to do it again for another industry and make it a blog series teaching people how to do it, i'd probably get hired if someone kept track of the process involved
01:27 < rovar> pringlescan, maybe you should go into data science :)
01:27 < pringlescan> but I'm not very good at math
01:28 < pringlescan> just logic
01:28 < rovar> there is no difference
01:28 < pringlescan> I really liked GIS though but it just seemed like most of the jobs are boring, but I'll always find a way to figure somethijng out with government data or something I can scrape
01:29 < pringlescan> unless I'm doing something in the "real world" or doing something geometrically the math I learned for a business degree has been somewhat adequate 
01:29 < rovar> sure.. IMO the fun problems in GIS are in pattern recognition and linear algebra
01:29 < pringlescan> the fun part for me is finding 10 data sets to answer your one question in the most accurate way, for the least amount of money
01:29 < rovar> all you need for data science and machine learning is a solid understanding of statistics and linear algebra
01:29 < rovar> basically you just need to have a very good understanding of 1st and 2nd year math :)
01:29 < pringlescan> people will say "but the census doesn't have that data" and I'm like … the hell it doesn't, you combine these 3 things, and you have that
01:30 < rovar> e.g. data science :) 
01:30 < pringlescan> i guess you're right i have fun doing things that most people would want to avoid in terms of data
01:30 < rovar> the fun jobs in that field are not in answering questions, but the ones where you get to think up new questions to ask
01:31 < pringlescan> the most fun I've had programming is compiling data… most of it is hackish one-time use scripts that get the data from point a->b
01:31 < pringlescan> but I don't have much to show for it, i can't tell an employer, i did all this stuff, but ya know, it's in perl, in php, in js, in a batch script, here there, i'd look like a slob but if it's not being re-used why would you document it
01:31 < pringlescan> most of the stuff is one-time use and honestly can't be repurposed without significant human intervention to make sure the reasoning is still sound
01:32 < pringlescan> i can make helper libraries, but often the tasks and data sources differ significantly that it's better to use existing tools to melt the data then go to town on it and make something heuristic and get it as accurate as possible
01:34 < lushious> dude, if you can automate data mining tasks ... it's a gold mine out there
01:34 < pringlescan> have you ever not realized that you were really well-suited for a task until a bunch of people on IRC pointed it out?
01:34 < pringlescan> i started data mining when i was  kid to make the biggest database of cheat codes
01:35 < pringlescan> i didn't even know it was called that
01:35 < lushious> haha thats awesome
01:35 < pringlescan> i started that in 5th grade
01:36 < lushious> if you think about it, data mining is the main principle behind google and facebook
01:36 < pringlescan> so i mean, i have a leg up in the logic behind it, not getting caught, not being obvious, making the data unique
01:36 < lushious> and they monetize off the data that they have
01:36 < pringlescan> well, i want to take it a step farther, i've been learning about lingusitics and NLP, my life goal is to make something that I think can enable anyone in any language to learn anything for free
01:36 < pringlescan> so i've pretty much given up my life to making that happen, i tried to pitch it at tech crunch's philly meet up but NOBODY understood it
01:37 < pringlescan> it's not at a point where investors can even grasp it, but I don't want money to ruin what i want to be used to change the world
01:37 < pringlescan> it has ENORMOUS commercial potential, but once it's out there, it changes everything as far as publishing goes, and will be patented immediately, and ruin everything
01:37 < lushious> are you on about spoken languages?
01:37 < pringlescan> so i just decided to go back to not talking about it, i'm not worried about someone stealing it, someone will come up with it, i'm just hoping that person uses it for good and not evil
01:38 < pringlescan> well, written languages
01:38 < pringlescan> basically, computers can be trained to write concise step-by-step instructions and replace modern universities for most subjects and work around learning disabilities and language barriers.
01:39 < pringlescan> and not computer learning or training like you'd think, it's actually more about taxonomy and semantics in a particular subject area, Carnegie Mellon in my home state is doing alot of work on it, but it's for the DoD and DARPA so, I'd rather my lifes work not be used to send missiles to blow things up, as bad ass as that sounds. 
01:40 < pringlescan> most people don't realize how cool natural language processing is… i.e. turning written words into structured data a computer can work with.
01:41 < perezd> trying to use spawn/stdio to send a process's stdout to a custom stream object…is that still possible/
01:41 < pringlescan> when you think about it our entire history is locked away in written words, if we could make all of that machine processes-able, we could answer so many questions we never even had
01:43 < lushious> word
01:43 < Domenic_> Does threads-a-go-go work on Windows?
01:43 < lushious> i guess most people are too stubburn to think about the past and think more on future technology
01:45 < pringlescan> so how's this for my personal webpage: "My code applies suction to the internet to extract random data and turn it into purposeful data that drives your business. Rinse and repeat."
01:45 < lushious> money makes the world go round right?
01:46 < pringlescan> I turn freely available data into money for your business. I'll watch your wife when you're out of town. Hire me today.
01:47 < pringlescan> Data you pay for often sucks. It relies on somebody whose job it is to make the data good. But since you usually pay for record, that person won't delete data that is probably stale.
01:47 < pringlescan> There objective is to keep the data as big as possible, whereas, you probably need it to be accurate as possible, but nobody in the industry is really going to do that, so you need someone in-house.
01:47 < pringlescan> My last job paid for data, and it was among the worst data I worked with.
01:48 < lushious> porn data?
01:48 < pringlescan> yes, mostly the number of nipples per frame
01:48 < pringlescan> we had to differentiate between male and female nipples
01:49 < lushious> how did that go? tits up?
01:49 < pringlescan> the easiest way to do that was to determine if the scene was in a kitchen, it was then 75% more likely that a female nipple and a sandwich were present in frame
01:49 < pringlescan> lushios, nda, but, tits can bounce any which ways
01:50 < pringlescan> up, down, left, right think of the konami code, and that's what you should expect
01:51 < lushious> lol
01:52 < pringlescan> anyway, i'm trying to become independently wealthy so I can get this technology out to the kids and help them learn, because education is broken and we shouldn't artificially limit people's potential
01:52 < pringlescan> also, if someone isn't very abled, they should be able to pick up new skills if they miscalculated their career path, not suffer the rest of their life
01:53 < lushious> i think education is intentionally broken on purpose
01:53 < pringlescan> it is, but I don't discuss conspiracy theories electronically ;-)
01:54 < freewil> does anyone know if you can upload a private video to vimeo
01:54 < freewil> protected with a password or something
01:54 < lushious> yes you can freewil
01:54 < freewil> awesome thanks
01:54 < lushious> might be a premium feature i think
01:54 < freewil> ah hell
01:54 < lushious> but I have seen it used before
01:54 < pringlescan> http://monetate.com/jobs/#axzz25MotGGyH <— should I work there? the recruiter was very interested and then dropped off the face of the earth, maybe when she let her hair down I was supposed to hit on her or something
01:55 < jtomasrl> why when testing an app connected to mongoDB using "ab -c 1 -n 2 <url>" open more than 204 connections to the mongo server?
01:56 < freewil> yes apparently password protection is a plus 9.95/mo feature
01:56 < Awavi> Hi there, i am a newbie at node.js, I would like to ask for a good tutorial recommendatoon
01:56 < freewil> jtomasrl, you are creating a new connection each time instead of reusing them?
01:57 < Awavi> Any?
01:57 < jtomasrl> freewil, it start and end a connection
01:58 < lushious> https://vimeo.com/plus - annual is only $60 a year
01:58 < lushious> worth it if you constantly use vimeo for uploads
01:58 < freewil> i just need to upload a single video for this one time purpose
01:58 < freewil> i know youtube offers non-listed videos
01:58 < freewil> dont know if you can password-protect?
01:59 < freewil> jtomasrl, whatever library you are using there is probably a way to start a new connection and also a way to reuse connection pooling or reuse connections
02:00 < jtomasrl> freewil, but -c 1 -n 2 shouldnt start 274 connections :S
02:00 < freewil> does your app do a lot of queries?
02:00 < jtomasrl> just one
02:01 < nmartin> pringlescan: the whole "we're with it, we have scooters to ride just like google" is a bit sketchy these days
02:01 < freewil> jtomasrl, not sure strange
02:01 < freewil> what module are you using
02:02 < jtomasrl> freewil im trying pronto-mongodb
02:02 < pringlescan> nmartin, it seems like busy work, let's inject things into a corporations website faster than their team can do it
02:02 < pringlescan> i still don't understand what they do, but it sounds somewhat painful
02:03 < freewil> monetate
02:03 < freewil> they look like a modern marketing/ad agency
02:04 < pringlescan> well, I added the recruiter on linked in and applied using my linked in profile. for a tech company i expect e-mails to be answered, i'm not going to pick up the phone if an e-mail is ignored.
02:04 < freewil> pffft
02:04 < freewil> pick up the phone if you want the job
02:04 < pringlescan> i did twice
02:05 < freewil> oh well fuck em then
02:05 < pringlescan> but after that it seemed superfluous and likely she was on vacation 
02:05 < lushious> freewil maybe trying uploading a small video on vimeo to test if you can password protect?
02:07 < freewil> lushious, i already saw the feature comparison once i signed up
02:07 < freewil> password protection is a 9.95 "plus" membership feature
02:07 < jtomasrl> Im trying to create an API using Node.js shoud i use a framework?
02:07 < lushious> dang buddy
02:08 < lushious> just use a html5 video player on some hosting?
02:08 < Domenic_> jtomasrl: if it's a REST API, then restify is excellent
02:08 < jtomasrl> Domenic_,  and if not a REST API?
02:08 < lushious> you need to show a video to a client?
02:08 < pringlescan> s3 should do well for that
02:08 < Domenic_> jtomasrl: then it depends on what kind of API you're envisioning
02:09 < lushious> depends if the client wants to 'stream' or download ?
02:09 < jtomasrl> Domenic_, i'll try restify since im just starting
02:10 < perezd> hey, I am following along on the child_process.spawn stdio instructions and getting this error: TypeError: Incorrect value for stdio stream: [object Object]
02:10 < Domenic_> jtomasrl: ok! express might also be worth looking at, it's not geared toward APIs specifically, but tons of people use it so it's kind of a base level to work from.
02:10 < perezd> when I send stdio: ['pipe', 'pipe', process.stderr]
02:11 < jtomasrl> Domenic_, does restify has special modules to work with mongoDB?
02:11 < Domenic_> jtomasrl: no, but you can use mongoose or similar for that. Very few Node web frameworks tie themselves to a specific database technology. In general the mantra for node packages is "do one thing and do it well," not "do all the things"
02:12 < jtomasrl> Domenic_, ok ty
02:15 < perezd> is there a way to cleanly overwrite the fd write?
02:15 < perezd> so that I can capture it?
02:25 < nicholasf> anyone here using mysql and the source command (yes, mysql sucks, I know)
02:25 < nicholasf> ?
02:25 < nicholasf> it seems that I can't use the source command (which you use to load a .sql file, typically to import a db, etc.) via node-mysql
02:27 < ccowan> anyone using plv8 in production?
02:29 < ChrisPartridge> ccowan: played around with it, not in production though
02:30 < ccowan> cool
02:34 < spdev> I am using everyauth (oauth2 package) to implement 'sign in with twitter' feature. Its working fine for the most part, but when the user logs in after logging out, the approval page comes up again. Is this correct? I thought approval appears only once.
02:37 < mscdex> nicholasf: why not just load the file in memory, enable multiple statements in your connection config, and then execute the file as the query?
02:38 < nicholasf> mscdex: yeh, that's the next recourse, but the source command *should* work
02:39 < freewil> can anyone recommend an easy way to make a screencast
02:39 < mscdex> nicholasf: i'm pretty sure the source command is a part of the mysql CLI client and not an actual query
02:39 < nicholasf> mscdex: ah thanks
02:39 < nicholasf> mscdex: that makes a lot of sense now
02:40 < freewil> ... on linux
02:41 < ChrisPartridge> spdev: if the user is not logged into twitter, it will ask for approval again
02:42 < spdev> i see. is there a way to skip it? since its not so user friendly to ask for permissions every time. 
02:46 < ChrisPartridge> spdev: You need to ensure the user is logged in to twitter I guess
02:47 < spdev> ok...Confirmed that its not possible to skip authorization after the first time here https://dev.twitter.com/docs/auth/implementing-sign-twitter
02:47 < spdev> i hope that they fix this...not sure if its a oauth2 thing or something specific to twitter
02:47 < pringlescan> I'm going to release my census-based random name generator on github, but for fun, I'm going to include a sample that randomly generates this comic with a different name: http://xkcd.com/302/
02:48 < ChrisPartridge> spdev: it's just the way it works, if they can't confirm the user is *that* twitter user, then it's all going to fall apart
02:55 < spdev> hmm...First time user logs in, approves the app, then logs out of twitter. Now start the oauth flow again, user first logs in. Now don't show the approval page and twitter could have remembered that user granted access to app the first time. I guess twitter does not do that. 
03:01 < shanebo> hey guys i'm trying to fire up a node app locally on port 80 but it's saying the port is in use. problem is I can't find what's running on port 80. Any ideas?
03:01 < TehShrike> What OS?
03:01 < shanebo> os x
03:02 < TehShrike> I think it may need to run as root to get 80
03:02 < shanebo> TehShrike yeah tried that
03:02 < TehShrike> huh, I dunno then, unless something else took it already :-x
03:02 < shanebo> TehShrike I'm getting a: Error: listen EADDRINUSE
03:02 <@konobi> shanebo: netstat -an
03:04 < shanebo> konobi this line tell me something?
03:04 < shanebo> tcp46      0      0  *.80                   *.*                    LISTEN
03:06 < jtomasrl> I've just installed mongodb driver on my node app but I dont know why it creates 4 new connections to the DB with this code https://gist.github.com/3606464
03:07 < ejfox> Hi all, super duper nooby question here. I am working off the node boiler plate. I've got my server.get('/', etc… running properly. However I have a bunch of stuff in my views/ folder that my index.html file depends on. However when the page tries to get them it gets a 404. How would I let the server serve these, without making them server.get routes one-by-one. Again pardon the noobyness
03:08 < shanebo> konobi any idea how to find what's listening on port 80 and kill it?
03:10 < ChrisPartridge> shanebo: try netstat -anp
03:20 < jtomasrl> how many request will perform an apache benchmark with -c 5 -n 100 ?
03:29 < shooyaaa> hello
03:30 < meaglith> Hello
03:31 < ChrisPartridge> jtomasrl: 100 requests
03:33 < jtomasrl> ChrisPartridge: then why im getting more than 250 db connections
03:34 < shooyaaa> maybe you did not close db connections.
03:34 < shooyaaa> lol
03:35 < jtomasrl> i did
03:36 < shooyaaa> your code error can cause connections not close correctly!
03:37 < jtomasrl> Time per request:       16878.877 ms WTF
03:37 < ChrisPartridge> jtomasrl: Using a db library?
03:37 < jtomasrl> ChrisPartridge: yup, mongoDB
03:39 < timeturner> how can I clear chrome's cache or whever it is stored so that it doesn't send the http authentication credentials automatically?
03:39 < timeturner> 'm trying to check with node's connect basicauth
03:40 < ChrisPartridge> jtomasrl: must be something keeping the connections open/blocked
03:41 < jtomasrl> ChrisPartridge: is not really complex what it does, https://gist.github.com/3606595
03:41 < jtomasrl> just find a collection and print it on the console
03:42 < pringlescan> lushios, rovar, http://thispos.com/resume/resume-2012/ something like that?
03:42 < ChrisPartridge> jtomasrl: Are you creating the instance of the connection inside each request?
03:42 < pringlescan> *lushious
03:43 < lushious> yes?
03:43 < jtomasrl> ChrisPartridge: yes
03:43 < jtomasrl> lol
03:43 < pringlescan> see link above? i was going to do that, with a link to gihtub ofcourse
03:44 < lushious> is that your resume ?
03:44 < rovar> pringlescan, that's pretty nice 
03:44 < rovar> i like it
03:44 < pringlescan> $8 template
03:44 < ChrisPartridge> jtomasrl: That may be your issue 
03:44 < pringlescan> lushious, not textually my resume, but I'd like to use this template, it works on mobile
03:44 < rovar> i'd hire you
03:45 < lushious> yes it's obvious its a premade template
03:45 < pringlescan> is the fist part okay?
03:45 < pringlescan> rovar, thanks
03:45 < mscdex> i've always wanted to work at Lorem Ipsum
03:45 < mscdex> :-(
03:45 < lushious> its a responsive template ;)
03:45 < mscdex> responsive = doesn't freeze browser
03:45 < mscdex> :-D
03:46 < pringlescan> I do know how to do that, "A list apart" published a book series on usability, responsive design and a bunch of other awesome things.
03:46 < lushious> btw does anyone know how to determine the location of nodejs by running the node command?
03:46 < pringlescan> they're so short, they're shorter than the summer reading books in 4th grade
03:46 < lushious> i installed node twice but wanna make sure its referencing the right binary
03:47 < pringlescan> lushious, couldn't you look at the version?
03:47 < lushious> hahah its snake oil in written format
03:47 < lushious> yes but if both versions are the same?
03:47 < lushious> I used macports to install it in 1 location, and the node installer to install it in the default path
03:48 < lushious> also, pringlescan, have you seen twitter bootstrap ?
03:48 < pringlescan> yeah, it's much more useful than their core competency
03:49 < lushious> also, pringlescan are you looking for work? hence working on your resume ?
03:49 < LeftWing> lushious: process.execPath ?
03:49 < pringlescan> lushious, yup, spent all summer working on my mom's house so she can sell, i'm ready to get back to business
03:50 < chilts> lushious: wouldn't 'which node' work for you?
03:51 < pringlescan> http://nodejs.org/api/process.html#process_process_execpath
03:51 < lushious> isn't there a command like 'node whichpath' to determine it?
03:52 < jtomasrl> is really PerfectAPI better than Restify? http://c274143.r43.cf1.rackcdn.com/wp-content/uploads/2012/03/out181.png
03:52 < pringlescan> lushious, not in the man page that I could see, but you can definitely just make a whichpath script and do consoel.log(process.execPath);
03:52 < pringlescan> also, i think the first arg variable is always the path to node
03:53 < lushious> ahhh nice, I get it now
03:53 < pringlescan> node -e "console.log(process.execPath);"
03:53 < pringlescan> do I get a cookie?
03:53 < lushious> sorry new to node
03:53 < lushious> you're a genius!
03:54 < pringlescan> NO I'M NOT! That code uses eval() and eval is evvvvilll
03:54 < lushious> lol
03:54 < pringlescan> oh snap, it's even easier than that
03:54 < chilts> erm, who are you talking to?
03:54 < pringlescan> node -e 'process.execPath' -p
03:54 < chilts> I mean, which worked out of those suggestions
03:54 < lushious> searching for ages on how to do it
03:54 < pringlescan> or I guess node -p -e 'process.execPath'
03:55 < lushious> ok so what if i wanted to change the path to another directory?
03:55 < pringlescan> that's not very hard to memorize
03:55 < pringlescan> use the full path or change your path variable in your shell
03:55 < deoxxa> how do i test streams
03:55  * deoxxa :|
03:55 < pringlescan> i usually just pee into the wind and see if it goes straight
03:55 < deoxxa> i always end up with wet shoes when i do that
03:55 < Sly> lushious, you could have also used "which node"
03:56 < Sly> If on Linux.
03:56 < Sly> /late response.
03:56 < pringlescan> Sly, why did I think there is a whereis command
03:56 < chilts> :)
03:56 < Sly> There is.
03:56 < pringlescan> it doesn't work on osx
03:56 < Sly> I have it on Linux.
03:56 < pringlescan> add that to the list of things that don't work on osx
03:56 < Sly> $ whereis node
03:56 < Sly> node: /usr/local/bin/node /usr/local/lib/node
03:57 < pringlescan> rub it in\
03:57 < Sly> <3
03:57 < pringlescan> Sly, does your computer get so hot you don't need condoms?
03:57 < pringlescan> YEAH DIDN'T THINK SO
03:57 < Sly> ROFL
03:57 < lushious> Sly, I'm on mac
03:57 < Sly> lushious, which should still work on OSX.
03:58 < lushious> yeah it works
03:58 < pringlescan> Apple designers: Fans are too loud. We'll just make it so they never run, then when it gets hot, it sounds like an airplane taking off, and we'll shorten the life of the processor, instead of just running the fans at a reasonable volume 100% of the time.
03:58 < lushious> thanks Sly
03:58 < Sly> You're welcome, lushious.
03:58 < lushious> pringlescan, I can relate, had a macbook pro blow up on me
03:58 < pringlescan> Sly, that sounded dirty.
03:58 < pringlescan> can we all switch our nicks to hooker names
03:58 < lushious> Which I reckon was the result of a faulty bearing inside a fan
03:59 < ChrisPartridge> jtomasrl: I thought restify would be quicker than express
03:59 < lushious> so is there a command similar to 'which node' to switch the paths?
03:59 < pringlescan> lushious, you just use the full path to node
04:00 < pringlescan> so if you have /macs/suck/lulz/node1 
04:00 < pringlescan> use that instead of just node
04:00 < lushious> ahhh I see
04:00 < jtomasrl> ChrisPartridge: actually it is with the new version (April) https://gist.github.com/2361848
04:00 < lushious> so no other way to switch it permanently ?
04:00 < pringlescan> yes, by modifying your path variable
04:01 < pringlescan> *enviornment variable
04:01 < pringlescan> but if you wanted to do it permantly you might as well just use the installer package for that version of node
04:01 < pringlescan> given you're on osx
04:02 < lushious> yeah I used the official installer after I installed it via macports (a package manager) but for some reason it's still using the unofficial path
04:02 < pringlescan> lushious, when your system looks for things, it uses the first one it finds
04:03 < pringlescan> since both nodes are in your PATH, it's going to use the first one that was installed
04:03 < lushious> ahh I see, would have thought it would be the other way round, makes sense
04:03 < lushious> is the 'node' command called a symlink ?
04:03 < Sly> Your path shouldn't have anything to do with it, though, since Node installs to /usr/local/bin/
04:03 < Sly> That should always be first in your PATH.
04:04 < Sly> Well, right behind /usr/bin
04:04 < pringlescan> Sly, you're dealing with a bastardized BSD
04:04 < lushious> my node path is '/opt/local/bin/node' because the 'opt' directory is where packages are installed from macports
04:04 < Sly> pringlescan, I've never used OSX.
04:04 < pringlescan> I'm going to guess macports and brew put their path first so you can use virgin unix commands
04:04 < Sly> I refuse to buy or use Apple. Have since before it was cool to do so.
04:04 < pringlescan> instead of the apple supplied ones
04:04 < deoxxa> heh. i have "/Applications/Postgres.app/Contents/MacOS/bin:/Users/conrad/local/bin:/Users/conrad/local/n/current/bin" before /usr/bin in my path :3
04:05 < lushious> well macports excuse is so other libraries etc do not conflict
04:05 < pringlescan> Sly, my old work gave me one, and I kind of like it, but i'll use linux, windows or osx, it doesn't affect my productivity much
04:05 < lushious> Sly, sadly Adobe don't make Photoshop on Linux and I'll be damned if I run a virtual instance of it
04:05 < pringlescan> I ran slackware for 4 years while I was in middle school, which caused both testicles to descend early
04:06 < lushious> lol
04:06 < Sly> lushious, I don't use Photoshop.
04:06 < pringlescan> Photoshop runs better on Wine than it does in Windows.
04:06 < BennyLava> ^ comedian
04:06 < lushious> I mainly work as a front end developer, so hence my petty and basic questions on node etc
04:07 < pringlescan> I kid, I kid. If I had bash in windows, I'd probably still use it. unix-ness is osx only appeal.
04:07 < meaglith> export PATH=/opt/local/bin:/opt/local/sbin:$PATH
04:07 < meaglith> add it to the .profile
04:07 < Sly> Exactly, pringlescan.
04:07 < Sly> That's the only reason I would use OSX over Windows, and I despise Windows.
04:07 < lushious> OSX has the sexiest GUI as well
04:07 < pringlescan> WHICH is a tease. You think you're on a unix machine when you're in the terminal… then you have your file descriptor limit set to 256
04:08 < pringlescan> and can't figure out why in the hell your node app keeps dying when you try to run a large number of task concurrently
04:08 < pringlescan> i honestly almost gave up on node it took so long to figure out it was osx
04:08 < Sly> Don't give up on Node. lol.
04:08 < pringlescan> oh i won't, i love javascript
04:08 < pringlescan> <3
04:09 < Sly> I've forgotten pretty much all of the PHP that I did know.
04:09 < pringlescan> Sly, nobody knows PHP
04:09 < Sly> I used to, a couple of years ago.
04:09 < duc1199> hi guys! is there an automated way to convert EJS templates to Jade?
04:09 < pringlescan> you keep php.net open because even with autocomplete the function names and argument order is atrocious
04:09 < Sly> ^ True story.
04:09 < duc1199> I know how to convert EJS to HAML, but it's not a 100% match to Jade
04:09 < pringlescan> you're like okay… arr_ for one thing array_ for another
04:09 < pringlescan> *scratches head*
04:10 < Sly> After they started adding in lambda functions and shit, I was like.. "Well, fuck. Might as well go with Javascript."
04:10 < Sly> Then I found Node. ;D
04:10 < lushious> gah, finding the bash profile for node is the next mission
04:10 < pringlescan> I found javascript by accident. honestly at my last job, I didn't know what jquery was and treated javascript like poison, knowing the bare minimum to manipulate the dom.
04:11 < pringlescan> once i got my jquery training wheels on and got down and dirty with my own large scripts I was like holy shit, js is the bees knees
04:11 < pringlescan> ditched jquery, let my second set of balls descend and it's been love ever since
04:12 < Sly> lushious, try:  find / 2>/dev/null | grep /node$
04:12 < meaglith> I build a gentoo virtual machine by VMware, it include nodejs 0.8.8, mysql, mongodb, nginx. If you wanna download, please visit: http://kuai.xunlei.com/d/IHSOYUCSEFLJ
04:12 < Sly> Because if your path is what you pasted, I don't see anything that the system didn't set.
04:12 < Sly> I don't know what the equivalent of "whereis" is on OSX.
04:12 < pringlescan> has anyone seen this before? http://www.youtube.com/watch?v=URJeuxI7kHo
04:13 < pringlescan> Sly, which works
04:13 < Sly> Yeah, but which only finds the one that it will execute if you run it..
04:13 < Sly> Not *all* of them.
04:13 < pringlescan> i want all the nodes!
04:13 < lushious> pasted that in now Sly, its searching
04:13 < pringlescan> share with your brother.
04:13 < pringlescan> NO! I WANT ALL THE NODES — slap — *fine* you can have 0.1x
04:14 < Sly> lulz
04:14 < lushious> btw, is ryah, really ryan dahl ?
04:14 < Sly> Yes.
04:14 < lushious> awesome
04:15 < pringlescan> cool guy, i'm just glad i have the best beard in the industry, i can grow it in that place where your mustache connects to the rest, and nobody else can so far
04:16 < Sly> rofl
04:19 < lushious> ok this is what that command has given back:-
04:19 < lushious> /opt/local/bin/node
04:19 < lushious> /opt/local/include/node
04:19 < lushious> /opt/local/lib/node
04:19 < lushious> /usr/local/bin/node
04:19 < lushious> /usr/local/include/node
04:19 < lushious> /usr/local/lib/node
04:21 < Sly> Is /usr/local/bin/node the one you said is a symlink?
04:21 < lushious> 'which node' = /opt/local/bin/node
04:21 < lushious> i want to change it to the other location
04:22 < Sly> Where is the "macports" path in your $PATH?
04:22 < Sly> I didn't see /opt anywhere in it.
04:23 < lushious> what do you mean?
04:24 < Sly> Oh, sorry. That was someone else.
04:24 < Sly> If that /opt/local/bin is in $PATH (echo $PATH) then just delete node out of that bin folder. Don't know how macports works, so it could screw it up.
04:29 < lushious> i tried running this code 'ln -s -i -v /usr/local/bin/node node' but it's not changing it
04:30 < Sly> ??
04:30 < Sly> Do: echo $PATH
04:30 < lushious> I thought that would edit the symlink ?
04:31 < Sly> /usr/local/bin/node isn't a symlink if you used make install.
04:31 < jtomasrl> if i declare var db = mongo.Db('pronto', new mongo.Server('localhost', 27017)); inside my app.js how can i acces the db variable from inside another .js file?
04:31 < lushious> oh
04:34 < lushious> this is what echo $PATH says: /opt/local/bin:/opt/local/sbin:/sw/bin:/sw/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/git/bin:/usr/X11/bin:/Users/lush/.rvm/bin:/usr/X11R6/bin
04:36 < ChrisPartridge> jtomasrl: Not sure if it's the right way, but it works: https://gist.github.com/3606748
04:37 < Sly> lushious, rm -rf /opt/local/bin/node /opt/local/include/node /opt/local/lib/node
04:38 < lushious> lol so it was that easy?
04:38 < ChrisPartridge> jtomasrl: As node will only "load" the module once, the first call to get will instantiate the object, subsequent calls will return the instantiated object
04:38 < lushious> it's worked Sly
04:39 < Sly> Good. :)
04:39 < lushious> Thanks for your time Sly, much appreciated
04:39 < Sly> No problem.
04:39 < jtomasrl> ChrisPartridge: ty
04:39 < lushious> There must be an alternative method to doing it though?
04:39 < lushious> If I wanted to run multiple versions of node ?
04:39 < Sly> Oh, and you also may want to check /opt/local/bin for node_g
04:40 < Sly> If it's there, remove it too.
04:40 < chilts> lushious: I use nvm if I was multiple versions installed
04:40 < chilts> 'n' and 'nave' do similar things to 'nvm' (personal preference)
04:41 < lushious> yeah I was going to use nave
04:41 < Sly> If you wanted to run multiple, you could define PATH before running node.
04:41 < lushious> I still have node-waf in that directory
04:41 < Sly> PATH=/opt/local/bin node
04:41 < Sly> PATH=/usr/local/bin node
04:41 < Sly> If you have anything node still in there, delete it.
04:42 < Sly> It should be in /usr/local/bin if it's still needed.
04:43 < lushious> Ok done, thanks again Sly!
04:43 < Sly> You're welcome.
04:44 < lushious> Is there any preference over nvm rather than nave ?
04:45 < chilts> try them both :)
04:46 < ChrisPartridge> lushious: there's also "n" ;)
04:47 < chilts> mentioned that earlier :)
04:47 < ChrisPartridge> oops
04:48 < chilts> no worries, hard to see in amongst a load of scrollback 
04:48 < chilts> I probably shouldn't have mentioned
04:48 < lushious> heheh
04:54 < lee_> fdssdf
05:06 < timeturner> are there any general async guidelines
05:07 < timeturner> I feel like I have to nest too much within callbacks
05:07 < timeturner> or should I just use an async lib
05:08 < deoxxa> timeturner: http://callbackhell.com/
05:08 < deoxxa> timeturner: https://github.com/caolan/async
05:08 < chilts> learn it by doing callback hell, refactor into small functions to make it easier, then learn one or more of the flow-control libraries :)
05:09 < chilts> it's a good way to go so that you understand exactly what's going on :D
05:09 < deoxxa> ^^ this
05:09 < chilts> heh :)
05:09 < chilts> I should write that up somewhere
05:09 < deoxxa> callbackhellmonologue.com
05:10 < chilts> heh
05:13 < timeturner> yeah
05:14 < timeturner> I think I'm going to get a feel for the callback hell and then slowly start to refactor when I fully grasp the issue
05:19 < TehShrike> Man, what's with marak on Twitter today
05:27 < rev_icon> Man with all the changes to express lately, it's hard to find up to date tutorials.
05:30 < ChrisPartridge> rev_icon: What are you having trouble with?
05:31 < rev_icon> just trying to get my head around how express works.  Working through most tutorials out there right now requires reading what they're trying to do and then translating it over to the way express does it now.  
05:31 < rev_icon> thats what happens when you're on the bleeding edge I guess.   If it was easy, then everyone would be doing it.
05:33 < ChrisPartridge> rev_icon: express is pretty simple, and not *that much* has changed between the versions - if you get stuck on something particular, let me know
05:34 < jgornick> hey guys, i've just updated to the latest node 0.8.8 through homebrew. i noticed that the new formula also installs npm. when i install a package globally, something is not linking properly for me to access bins from the pakcages. it doesn't seem like it's adding the symlinks from /usr/local/bin to where the npm modules bins are being installed.
05:34 < rev_icon> Thanks Chris, much appreciated.
05:49 < Danielss89> Hi
05:50 < Danielss89> I have this code to insert and fetch different rows of data, with several calls. http://ds.gl/fdbf97.png <-- now below i want to send the treatmentData, but as it's async, it will send the treatmentsData before i have populated it from the db..
05:50 < Danielss89> how would i do this correct?
05:53 < ChrisPartridge> Danielss89: Just a suggestion, use paste bin, gist or one of the other code sharing tools instead of screenshots
05:54 < ChrisPartridge> Danielss89: To answer your question, the mysql.query method has a callback, which is where you will want to execute your next query
05:55 < Danielss89> ChrisPartridge: but, lets say i have 5 mysql query calls, then i need each call inside the other right?
05:56 < Danielss89> in the callback?
05:56 < Danielss89> but how can i do it, when i loop over it?
05:57 < Danielss89> ChrisPartridge: http://pastebin.com/XxNJeQ6U
05:57 < Danielss89> there you go ;)
05:57 < ChrisPartridge> Danielss89: There are many different approaches, you could try one of the async libraries - which seem pretty popular
05:57 < ChrisPartridge> you probably want to avoid callback hell :-)
05:58 < Danielss89> ChrisPartridge: but would that be best practice, or is it a design failure by me?
05:58 < freewil> Danielss89, your code in pastebin still would not work because after the for loop your array would be empty still since the callbacks wouldnt have time to be executed yet
05:59 < freewil> take a look at the async module
05:59 < Danielss89> freewil: so what should i do?
05:59 < freewil> do the queries need to all be executed in order, one after another?
05:59 < Danielss89> hmm no, i just need them in the array, not in any order :)
06:00 < freewil> well looks like the insert followed by a select at least would need to be in order
06:01 < freewil> https://github.com/caolan/async#forEach
06:01 < freewil> in the interator function you could do the insert
06:01 < freewil> followed by the select in the callback of the insert
06:01 < freewil> then the callback to forEach will be called after all the queries are done
06:02 < Danielss89> freewil: no, they do not need to be in order either :)
06:02 < Danielss89> i can select everything first, and then insert, or the other way around or how you want it :)
06:03 < Danielss89> i get a list with existing treatments id's. Now i want the data, and i want to associate the treatment with an appointment(both exists so should just be linked, therefore i can select first, if thats easier)
06:04 < Danielss89> freewil: so the problem is just how i get the data into the array, and then send it..
06:36 < deoxxa> streams are fun
06:46 < framlin> Danielss89: you may count the callback-calls for the inserts and if all are called, you may do the selects
06:55 < raweng> how to run synchronous code in nodejs
06:56 < deoxxa> don't
06:57 < tuhoojabotti> ^
06:57 < raweng> what if the every line depends on output from previous line
06:57 < framlin> raweng: what kind of code under what conditions?
06:57 < tuhoojabotti> async library
06:58 < tuhoojabotti> It's nice
06:58 < framlin> raweng: call the next step in the callback of the previous
06:58 < raweng>  in for loop i am doing db operations
06:59 < tuhoojabotti> raweng: See async lib
06:59 < tuhoojabotti> it has for
06:59 < framlin> so do not use a for-loop
06:59 < tuhoojabotti> async forEach
06:59 < framlin> or use a lib like tuhoojabotti writes
06:59 < raweng> will node-sync work fine
06:59 < tuhoojabotti> https://github.com/caolan/async
07:00 < tuhoojabotti> I personally like this lib
07:00 < framlin> i never use such libs ;)
07:00 < raweng> ok will try async
07:06 < rev_icon> I'm evaluating data stores, anyone have recommendations between couchDB, redis, mongoDB, etc etc?
07:07 < kranius> rev_icon: http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis
07:09 < rev_icon> kranius: thanks, checking it out
07:09 < kranius> mongo is nice to get stuff done quickly
07:12 < rev_icon> that was the first one I was looking at, I'm concerned that it has a limit of ~2.5Gb on 32bit systems though.
07:34 < [AD]Turbo> hola
07:37 < nlognbob> Is there any way to tell is a node.js process is "overloaded"?  I guess "overloaded" means the event queue is growing faster than it can be processed.
07:59 < stephank> nlognbob: Well, there's (usually) no blocking or sleeping, so a situation like that will likely spike load. Perhaps you can use that as an indicator?
08:00 < nlognbob> load as in linux load average?
08:01 < stephank> Yes
08:02 < nlognbob> hmmm, process still might be idle 50% of the time, if the DB and other things are the limiting factor.
08:02 < nlognbob> I guess there is no way to directly get the length of the event queue or whatever it is called
08:03 < stephank> How so? The DB is probably async as well. E.g., after sending a query, the process won't idle, it'll get right to the next event.
08:03 < nlognbob> well, what if all things are processed except for thousands of DB requests...
08:04 < nlognbob> I guess maybe you don't call that situation "node being overloaded", more like DB being overloaded
08:04 < stephank> It's still node being overloaded if node can't handle the database requests.
08:06 < nlognbob> I could keep track of the completion status of my tasks.. my node process only does a few different things.  I could get an idea of how many "things in flight" are typical in my app and then artificially load it to see what happens
08:06 < framlin> nlognbob: do you have such a situation or is that only a theoretical brain-game?
08:06 < nlognbob> I'm pre-planning for scaling, so theoretical I guess
08:06 < nlognbob> but I don't want to get a text message at 3am saying the server has crashed....
08:07 < framlin> so I thnk thats a question of db-scaling, not of nodejs
08:08 < framlin> in your situation there a a lot of callbacks wating to be called back
08:08 < framlin> thats all
08:08 < nlognbob> well, many people run multiple node.js 'drones' behind a load balancer.  how do they decide how many?  what happens if there are too few?  slow degradation or something else?
08:08 < framlin> I cannot imagi, that node is crashing, if there are too many "pending" callbacks
08:09 < rev_icon> looking around the web, are there any good nodejs /express / datastore patterns out there for organizing code?  I'm wondering if there are best practices I should be keeping in mind.
08:10 < nlognbob> yeah, I think I can just keep track of how many major operations of mine are "in flight", and if that number seems to be well behaved under load I can be reassured.
08:10 < armetiz> Hi there.
08:10 < armetiz> I have forked a node module. Written in cofeescript.
08:11 < armetiz> I have publish my fork on npm, but when I install the node module throught npm, the cofeescript isn't compile, and the node_module/mymodule/ doesn't contains any js :s
08:11 < armetiz> do you have any clue ?
08:11 < armetiz> The original package.json doesn't contains specific lines..
09:53 < armetiz> hum... I have push modification on github, but there is no change on npmjs package page..
09:53 < armetiz> How can I update it ?
09:56 < armetiz> pok, juste npm publish again 
09:58 < andre> hi there
09:59 < andre> short question: I have noticed, that the video tutorial from the nodejs.org main site is not available on youtoube. Is there another resource, where I can get it?
10:49 < Wizek> Hi
10:52 < astropirate> Wizek, greetings
11:00 < strk> any reason why ``npm install`` would hang with no evident traffic being generated ? (1.0.106)
11:09 < strk> gah, it's hanging while downloading code from git
11:35 < chilts> just released AwsSum v0.10.0 :)
11:37 < kokotron> cool!
11:52 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
12:01 < zina> wow
12:04 < radiodario> https://gist.github.com/982883
12:07 < deedubs> anyone streamed images out of node-canvas into s3(using knox) before using createJPEGStream?
12:13 < darkyen> Good evening
12:14 < radiodario> evening
12:19 < sgimeno> hi, I've a question about node asynchronous calls. When an asynchrous function is called, should the callback run in the next tick or not?
12:20 < Qalqi> hi i am using sequelize for 
12:20 < Qalqi> orm in my app
12:20 < Qalqi> how do i make custom queries in it?
12:21 < Qalqi> i tried sequelize.connectorManager.client.query() but it says that doesnt existt
12:26 < RLa> sgimeno, no, think when async func calls many other async funcs
12:27 < sgimeno> RLa: ok, I see, but could it be called in the same tick?
12:27 < sgimeno> s/could/should
12:27 < RLa> in the same? no, unless it's actually not async
12:28 < RLa> f(cb) { cb() } f(function() {}) <- here it is called in the same tick
12:29 < RLa> because f calls cb directly, not through async functions
12:29 < RLa> but you cant tell if a function is async or not just by looking at its signature
12:30 < sgimeno> RLa: ok thx, I think I'm seeing this behaviour using fs.readdir (maybe I'm wrong)...
12:30 < RLa> it should not matter
12:31 < RLa> if it matters in your code you might be doing something wrong
12:31 < RLa> a place where it matters is when you get stack overflow due to direct calls
12:32 < sgimeno> RLa: i don't know if I understand... it's perfectly possible for an async function like fs.readFile, that the callback is called in the same tick?
12:33 < RLa> probably not since they actually have to do io
12:37 < sgimeno> RLa: ok, that's what I thought, thanks!. I thought I was seeing this behaviour. I'll recheck my code because probably I'm interpreting it all wrong
13:09 < _dave_h_d> hi all does anyone know what this is? Error: ENOENT, open "location to log file"
13:09 < _dave_h_d> basically directory is writable and all
13:31 < pyrotechnick> any noders know if there's any forum software in node?
13:32 < radiodario> like a node-based forum?
13:33 < yawnt> pyrotechnick: there is one
13:33 < yawnt> cant remember the name
13:34 < yawnt> try googling node bb
13:35 < radiodario> https://github.com/roylines/node-bb
13:37 < yawnt> :P
13:42 < CIA-117> libuv: Bert Belder master * r0bbccbc / (src/win/internal.h src/win/tcp.c): windows: remove the UV_HANDLE_SHUT flag - http://git.io/cXC_6w
13:42 < pyrotechnick> there was one called socky
13:42 < pyrotechnick> was that it yawnt?
13:55 < yawnt> cant remember, im sorry
13:56 < gildean> pyrotechnick: why not write your own? doesn't sound like it would be too hard of a job
13:57 < pyrotechnick> we are, i'm just checking around
13:57 < gildean> pyrotechnick: ok, then i might suggest a couple of modules: moment.js and node-bcrypt
13:58 < pyrotechnick> nah pbkdf2 FTW
13:58 < pyrotechnick> but yeah moment's rad use that alot
13:58 < pyrotechnick> with browserify on the client ;)
13:58 < pyrotechnick> beer substack
13:59 < pyrotechnick> no more beerbot :(
13:59 < gildean> i tend to use moment when rendering templates
13:59 < gildean> on the server side that is
14:05 < photofroggy> using expressjs, got the cookieParser enabled, put some log calls in the cookieParser function; everything seems to be parsed in there fine, but in my handler for web requests the cookies are not parsed. Does it make a difference that my handler is in a different module from the stuff that creates the express app?
14:07 < mickhansen> photofroggy, not if the use the same app object, what order are your use calls?
14:24 < vrlogrs> hi guys
14:25 < vrlogrs> im wondering what the major differences are between the websocket and socket.io modules?
14:27 < xat-> socket.io also works on old browsers
14:27 < vrlogrs> xat-: would it be difficult to modify my code to use socket.io ?
14:27 < vrlogrs> i already have a site running with websockets
14:28 < xat-> i dont know your code
14:28 < vrlogrs> http://www.funnode.com
14:29 < vrlogrs> all the games use websockets ..
14:29 < vrlogrs> so far, iOS users havent been able to play
14:29 < vrlogrs> im hoping socket.io will fix that?
14:30 < xat-> just look which browsers are compatible with websockets
14:30 < xat-> but it should work
14:30 < xat-> socket.io is some sort of abstraction layer
14:31 < xat-> if the browser supports websockets, socket.io will use websockets, if not it will flash sockets for example
14:31 < xat-> ans so o
14:31 < xat-> and so on
14:31 < vrlogrs> ok, makes sense
14:31 < vrlogrs> thanks
14:44 < nmartin> if i want to install a package from npm, like express, i go into the root folder of my project and run npm install express, and it creates a folder called node_modules/express in the root of my project. express has its own node modules in its folder, with its dependencies. i then install two packages that both depend on redis.  does each redis dependent package also install its own copy of package redis as a dependency? 
14:47 < RLa> nmartin, if they use same version i think not
14:47 < RLa> nmartin, create also package.json into your project root
14:48 < RLa> and specify your own deps there
14:48 < nmartin> ok
14:49 < RLa> if you install them all at once, it should gather same modules as high in node_modules hierarchy as needed
14:49 < schz> hi everyone, i have a question - i created a chatroom/whiteboard application using nodejs with socket io
14:50 < schz> obviously im not very good at node.js cause the things keeps crashing, the problem is i dont know how to identify the error thats making it crash so i can fix it
14:50 < schz> in my node js app i have this : var io = require('socket.io').listen(app, { log: true });
14:50 < `3rdEden> logging is default, so you don't need to set it to true
14:50 < schz> and when i run it, i run it like this : /usr/local/bin/node /usr/local/web/algebraix/node/algebraix.js 2>&1 >> /var/log/nodejs.log &
14:51 < schz> and yet - in my /var/log/nodejs.log i see the normal logging of the application in work - but when it crashes there is nothing there that details the crash reason
14:51 < schz> any ideas ? 
14:51 < lperrin> do you have an exception or something to give us a hint ?
14:52 < schz> hmm no - thats precisely my problem i dont know what im missing so that the exception gets logged
14:52 < RLa> sure you haven't install uncaught exception handler that just exits?
14:52 < schz> once i have that i can take it from there
14:52 < schz> the last thing in my log when it crashes is this : info: transport end (undefined)
14:52 < schz> debug: set close timeout for client 986765664345291845
14:52 < schz> debug: cleared close timeout for client 986765664345291845
14:52 < schz> debug: cleared heartbeat interval for client 986765664345291845
14:52 < schz> debug: discarding transport
14:53 < schz> nothing out of the ordinary i think
14:53 < schz> ( sorry for the paste )
14:53 < schz> is there a preferred way to run a node js app so that the exceptions get logged somewhere?
14:53 < schz> it just ocurred to me - maybe i should run it in a screen until i get all the bugs...
14:54 < lperrin> schz: are you running that on a remote server ? could it be a sighup issue ?
14:54 < schz> yes im runnning it in a dedicated server
14:54 < schz> im sorry for my ignorance, whats a sighup issue? 
14:55 < lperrin> when you disconnect from a server, all the processes you started get a SIGHUP, a message informing them that the original user has disconnected
14:55 < CIA-117> node: Ben Noordhuis master * rf03c320 / (src/node.cc test/simple/test-cli-eval.js): cli: make -p equivalent to -pe - http://git.io/S_wDTA
14:55 < lperrin> the default behaviour for the process is to exit
14:56 < lperrin> you can prevent that by trying: nohup /usr/local/bin/node /usr/local/web/algebraix/node/algebraix.js 2>&1 >> /var/log/nodejs.log &
14:56 < schz> aaaah
14:56 < schz> this sounds really promising
14:56 < schz> im going to try that, thanks so much lperrin , i appreciate the help
14:56 < lperrin> otherwise, you can catch all process exceptions with http://nodejs.org/api/process.html#process_event_uncaughtexception
15:01 < nmartin> RLa, does my package.json need just my deps, or my deps' deps as well?
15:01 < RLa> no, only yours
15:01 < nmartin> cool
15:09 < defaultro> hey folks, do you install node.js on the apache server or client side?
15:09 < BennyLava> lol
15:09 < gildean> defaultro: your question makes little sense, it depends on the situation
15:10 < gildean> defaultro: nodejs doesn't need apache or really not much anything but itself
15:10 < defaultro> got it so it's client side
15:10 < gildean> it has both http-server and http-client as core-modules
15:10 < defaultro> k
15:11 < gildean> defaultro: no, if you build a server then it's a server, if you build a client then it's a client, if you build a stand-alone app, then it's that etc.
15:11 < defaultro> and why does the website specifically say Chrome's Javascript runtime?
15:11 < gildean> because it's the v8 engine that runs your code
15:11 < gildean> like in a browser, as an eventloop
15:11 < defaultro> ah, I remember now. My officemate showed me a listening daemon and a client
15:12 < defaultro> using websockets
15:12 < defaultro> we can write an app that listens on port 8181
15:12 < gildean> defaultro: see on http://nodejs.org the example on the front page is a http-server
15:13 < gildean> defaultro: yeah, you can do whatever your imagination and javascript skills provide
15:13 < defaultro> saw the examples. That means, I'll have to copy over the node js files to my physical server
15:14 < gildean> defaultro: more emphasis on the imagination, less on the javascript as that's easy to learn
15:14 < defaultro> cool
15:14 < defaultro> currently, I call php via ajax to submit to java
15:14 < defaultro> rest services
15:14 < gildean> defaultro: yeah, you'll need to install nodejs or copy the binary to whereever you're running your app
15:15 < defaultro> can I replace that php with node js approach?
15:15 < gildean> yes, easily
15:15 < defaultro> any cross domain issues?
15:15 < gildean> you'll have to handle that when it comes to it
15:16 < defaultro> k
15:16 < gildean> for example with websockets it's quite easy to determine origin and prevent access etc.
15:16 < defaultro> i'm running yum now to find out if I can install nodes on my centos
15:16 < defaultro> k
15:16 < gildean> i just wrote a stack of servers and a windows-service-agent for remote controlling windows-machines in real time with websockets
15:17 < defaultro> nice!!!
15:17 < CIA-117> libuv: Bert Belder master * r483043b / src/win/error.c : windows: map WSAESHUTDOWN to UV_EPIPE - http://git.io/d_ggOQ
15:17 < defaultro> ah, it's a tar.gz download
15:18 < gildean> all in javascript, all servers and api in node (including front-facing https-proxy)
15:18 < gildean> defaultro: it's not in the repos anywhere?
15:18 < defaultro> no
15:18 < defaultro> mine could be old
15:18 < defaultro> i'm compiling it now
15:18 < gildean> should be quite fast
15:19 < gildean> be sure to install npm as well, i'm not sure if it's included
15:19 < gildean> (node package manager)
15:19 < defaultro> hmmm, no configure script
15:20 < defaultro> i'll download the other gz file
15:20 < gildean> defaultro: https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
15:20 < defaultro> cool
15:21 < mihamina> defaultro: Thank you, Very much
15:21 < defaultro> mihamina, why?
15:22 < mihamina> defaultro: for the link
15:22 < mihamina> I found it interesting
15:22 < mihamina> very interesting
15:22 < defaultro> it's gildean 
15:22 < mihamina> uh...
15:22 < mihamina> yes...
15:23 < mihamina> blind me...
15:23 < gildean> np :)
15:24 < defaultro> gildean, the link is more error proof
15:24 < defaultro> the instructions I mean
15:24 < defaultro> worked like a charm gildean 
15:24 < defaultro> :)
15:24 < defaultro> i got so many errors using  ./configure
15:25 < defaultro> node js and npm now installed :D
15:25 < bid> hi, i have a problem updating nodejs, node -v output is: v0.5.11-pre i try running this script https://gist.github.com/579814 #2 only-git-all-the-way.sh after an hour +- of updating and runnign it termintaed with error 1
15:25 < fatshotty> hello there
15:26 < gildean> bid: are you sure you didn't accidentaly install node and not nodejs?
15:26 < gildean> bid: are you on ubuntu?
15:26 < fatshotty> need help: I've installed the `pi` branch of nodejs on my raspberry. Now i'm using the `vlc` module that has a dependency to `ref` module...
15:26 < fatshotty> unfortunately I have this error while performing `npm install`
15:26 < fatshotty> http://pastie.org/private/woko8mdwnzuh7weowxjng
15:26 < gildean> in the default repos on ubuntu node !== nodejs
15:27 < fatshotty> anybody can help me? :(
15:31 < defaultro> gildean, I'll be back. Node JS is installed. I'll experiment on it later. Thanks a lot!!!! :D
15:33 < gildean> np, have fun
15:35 < bid> gildean: yes ubuntu, no i am not sure now :( is there a different node||nodejs ? 
15:35 < gildean> node is a radioamateur-application
15:36 < gildean> iirc
15:36 < gildean> bid: sudo apt-get purge node && sudo apt-get clean && sudo apt-get update && sudo apt-get install nodejs
15:36 < bid> umm this link is not good? https://gist.github.com/579814 are you sure? 
15:37 < gildean> bid: https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager
15:37 < bid> i will try with sudo, last time i didnt use sudo that's what i looked on git install 
15:38 < bid> with apt-get i mean
15:38 < gildean> you can't use apt without sudo
15:38 < gildean> or maybe you can, but you can't use dpkg without sudo
15:39 < bid> thats fine i have sudo 
16:10 < MrMe05> hey guys, i'm using this module (https://github.com/Zarel/Pokemon-Showdown) and I'm trying to host a server through port 80
16:10 < MrMe05> but whenever i run the server, it gives me ERROR: listen EADDRINUSE
16:10 < Industrial> There are a lot of options for JSON Schema for node (npm search schema|grep json). Is there an obvious most popular project?
16:11 < Industrial> MrMe05: the address is in use.
16:11 < Industrial> (So there's something on port 80 already, try wget 127.0.0.1:80)
16:12 < MrMe05> in my browser or in my command line?
16:17 < MrMe05> So, Industrial, I downloaded wget
16:17 < MrMe05> I tried wget 127.0.0.1:80 in my command line
16:18 < MrMe05> and it says that wget isn't a recognized command
16:18 < gildean> MrMe05: what os are you on?
16:19 < MrMe05> Windows 7 Professional 64-bit
16:19 < gildean> MrMe05: then you prolly have iis running
16:19 < MrMe05> iis?
16:19 < gildean> open a browser and goto http://localhost
16:20 < game16> Hey
16:20 < MrMe05> Chrome says the webpage doesn't exist, Firefox shows me a blank page
16:21 < gildean> MrMe05: also iirc on win7 you need to run the terminal you launch the app/ launcher "as administratorr", having admin-rights is not enough when trying to use port < 1024
16:24 < MrMe05> duhhhh
16:25 < MrMe05> god i love it when the easiest solutions are the stupidest
16:25 < MrMe05> skype was eating up port 80
16:25 < BennyLava> yeahs skype is funny like that
16:27 < gildean> steals your bandwith on port 80, nice
16:27 < shanebo> hey guys i'm baffled. trying to fire up an app on port 80 locally using sudo and i'm getting an "Error: listen EADDRINUSE" error. However I can't figure out what's running on port 80. Firing an app on port 80 worked until I updated to OS X 10.8. Any ideas?
16:27 < maxogden> `ps`
16:30 < gildean> shanebo: does osx have netstat? if so: netstat -tulpn | grep 80
16:31 < game16> Hey
16:31 < game16> What's the correct way to use localStorage?
16:31 < game16> as like, swap space?
16:32 < shanebo> gildean no but sudo lsof -i :80 works
16:32 < shanebo> maxogden thanks. no processes are running on port 80 according to ps
16:36 < shanebo> maxogden, gildean found the issue. Had Chrome running O_o. Quit Chrome and it fired right up. The process appeared to be chat related
16:48 < Jhsto> Does anyone know a way to delay post?
16:48 < Jhsto> I would need to run a function before the post happens, but i cant find a way
16:54 < duc1199_> Hi, does any one know what this Jade error means? TypeError: Cannot read property '1' of undefined
16:55 < grange> it simply means that you are trying to request property 1 of an undefined object
16:55 < grange> could you pastebin the code?
16:58 < bid> hi, it looks like i have 2 nodes installed :( one is when i do this node -v i think it's broken and the other one in this /usr/bin/node -v different version 9the first is 0.5 the second is 0.66) how can i remove 0.5 one and update 0.6 to 0.88?
17:00 < mscdex> bid: `which node`
17:00 < mscdex> it's probably in /usr/local/
17:00 < bid> \/usr/local/bin/node
17:01 < bid> so how i can remove it? it should point to /usr/bin/node 
17:02 < mscdex> bid: you can install over top by extracting one of the binary tarballs into /usr/local or building and installing from source
17:04 < bid> once i will extracr and run it in /usr/local it will override the path? i mean node will point to it? 
17:06 < lushious> had this problem yesterday, you will have to edit your $PATHS variable
17:06 < CIA-116> node: Bert Belder v0.8 * rea1cba6 / src/node.js : windows: don't blow when a signal handler is attached - http://git.io/UOJUNw
17:07 < mscdex> bid: extracting the binary tarball to /usr/local will update the node version you get when invoking `node -v` because it is in your path
17:07 < bid> btw sudo apt-get didn't help me updating node. why? 
17:08 < mscdex> bid: because node still evolves faster than repositories can keep up
17:08 < jsdev> hello, I'm looking for a telecommute nodejs job. Anyone here interested in hiring someone like me ?
17:08 < mscdex> bid: also because some distros keep things stable by not updating
17:09 < bid> thanks
17:10 < bid> jsdev: try odesk.com 
17:10 < jsdev> bid: wouldn't that take a lot of time ?
17:10 < bid> to setup an account? 
17:11 < jsdev> bid: no.. I mean getting the job..
17:11 < bid> it's a freelance website you can publish yourself there and people that are not lurking here can see you as well 
17:11 < etcetera> moin.
17:15 < medley> node noob here
17:15 < medley> had a general question to see if someone might be able to shed some light on
17:15 < pyrotechnick> ask away medly
17:16 < medley> i have a webpage successfully using nodejs and sending updates between different browsers (calendar app)
17:16 < medley> you change the date, etc. it updates on remote screens
17:16 < medley> what if I go into my database and manually change a field, how would I sync that with node js?
17:17 < medley> or is it even possible
17:17 < pyrotechnick> depends what database
17:17 < medley> sql server at the moment
17:17 < medley> mssql
17:17 < pyrotechnick> not sure about sql server specifically but you could always poll it
17:17 < pyrotechnick> can i ask why you want this functionality
17:18 < pyrotechnick> it's sort of an abuse
17:18 < medley> i have other devices that send updates to the database independent of the web interface
17:18 < pyrotechnick> they should still probably route through your application though
17:18 < Sly_> Agreed.
17:18 < pyrotechnick> anyway it's certainly possible
17:18 < medley> so, on my devices that need to issue updates to the datbase, route them through node js?
17:19 < Sly> Indeed.
17:19 < medley> that's kind of what i thought
17:19 < pyrotechnick> i do something similar in redis, it does not provide a changes feed or any other kind of event when you perform operations, besides MONITOR which would be an abuse and quickly fail under load
17:19 < pyrotechnick> medley: yes, that's the best way
17:19 < pyrotechnick> then you can just broadcast to clients as you change the database
17:19 < pyrotechnick> but yeah in redis, i make the change to the database AND publish the change with PUBLISH in redis
17:19 < cnd> hi, I'm having issues installing connect-redis on os x, how do I tell it that sys/time.h is actually in /Applications/Xcode.app/Contents//Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk/usr/include/
17:20 < medley> just wanted to check my logic there
17:20 < cnd> or is there another way
17:20 < medley> thanks pyrotechnick
17:20 < pyrotechnick> you're most welcome
17:20 < pyrotechnick> sly too
17:20 < medley> and sly :)
17:20 < Sly> cnd, you'd have to put it in the build flags.
17:20 < pyrotechnick> btw it does not need to be the same application
17:20 < RLa> maybe use a message server/queue to broadcast info about changes?
17:20 < cnd> Sly: I'm new to npm, how do I add it to the build flags?
17:20 < gildean> i've been using websockets for that
17:21 < Sly> cnd, not exactly sure with that module. Can you link me to the Github repository for it?
17:21 < gildean> when new data arrives, save it to the db and use websockets to change the views on users in real time
17:21 < cnd> Sly: https://github.com/visionmedia/connect-redis
17:22 < Sly> cnd, apparently it's not that module that's doing it. It doesn't even have a build script in it.
17:22 < gildean> data comes in in json so it's easy to use the same object for saving in the db as well as sending as websocket messages
17:22 < cnd> Sly: oh, sorry, I think I understand now that it's trying to build hiredis first
17:22 < gildean> changing json attributes to define what to send and to whom and what to change etc.
17:23 < Sly> cnd, right. It's one of the dependencies causing it.
17:23 < Sly>   "dependencies": { "redis": "*", "debug": "*" },
17:23 < Sly>   "devDependencies": { "connect": "*" },
17:23 < Sly> It's one of those.
17:23 < cnd> Sly, so how do I go from the package name "hiredis" to trying to figure out how to fix this issue?
17:24 < cnd> I've found this: https://npmjs.org/package/hiredis
17:24 < cnd> but I don't see much info that helps
17:25 < Sly> REAL_CFLAGS=$(OPTIMIZATION) -fPIC $(CFLAGS) $(WARNINGS) $(DEBUG) $(ARCH)
17:25 < Sly> REAL_LDFLAGS=$(LDFLAGS) $(ARCH)
17:25 < Sly> You should be able to set CFLAGS and it work.
17:25 < filleokus> http://dumpr.info/t/5jf - generates Error: connect EADDRNOTAVAIL, I can't for my life understand why. Any hints of what the problem can be?
17:25 < Sly> CFLAGS=-I/Applications/Xcode.app/Contents//Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk/usr/include/ npm install <module>
17:25 < Sly> Try that?
17:25 < filleokus> Everything I have read have been about opening sockets, but i'm only sending a get request
17:26 < cnd> ok, so just like using make :)
17:26 < Sly> Hopefully so.
17:26 < Sly> I'm not sure if npm passes env variables.
17:26 < Sly> It should, though.
17:26 < cnd> Sly, yep, it does
17:27 < cnd> though I hit a failure later on :(
17:27 < Sly> That sucks, but at least you got further than before. :)
17:27 < Sly> What was the error you ran into now?
17:28 < cnd> well, now it's not finding stdio.h
17:28 < cnd> which is really odd
17:28 < cnd> how are other people installing node packages on os x?
17:28 < cnd> I can't imagine I'm the only one with this issue
17:28 < Sly> Not a clue. I'm not an OSX user. lol.
17:29 < cnd> Sly: ahh, it worked for a c file, but then failed on a cc file
17:29 < cnd> I just needed to duplicate for CXXFLAGS
17:29 < gildean> filleokus: is the url enough for the http.get method? or did you need some other options as well, i can't remember
17:30 < Sly> Ah. Good deal, cnd.
17:30 < cnd> Sly: thanks for the help!
17:30 < Sly> No problem. :)
17:31 < filleokus> gildean: the documentation says that the string should be sufficient, it's parsed by url.parse()
17:31 < filleokus> ah, there "options can be an object or a string. If options is a string, it is automatically parsed with url.parse()."
17:32 < Sly> filleokus, since when does `http.get()` allow a string for its input?
17:32 < Sly> Wow, I didn't even see that it says that in the docs.
17:32 < Sly> I don't even think `http.get` does parsing in the URLs, because it was declined when I offered a PR for it.
17:33 < filleokus> Hmm, there is an example and everything for it
17:33 < Sly> I know.
17:33 < Sly> That's why I'm looking atm.
17:33 < Sly> exports.get = function(options, cb) {
17:33 < Sly>   var req = exports.request(options, cb);
17:33 < Sly>   req.end();
17:33 < Sly>   return req;
17:33 < Sly> };
17:33 < Sly> Yeah. It's no different than request.
17:33 < Sly> var url = require('url');
17:34 < Sly> http.get(url.parse('http://www.google.com'), function() {})
17:34 < Sly> Try that.
17:34 < Sly> Oh. Nevermind. I see it does have a string check in request.
17:35 < Sly> Hmm..
17:35 < gildean> Sly: does it check if it's a string, or would the string need to be first set as the value of a var?
17:35 < Sly> It checks for the actual string.
17:35 < gildean> or any object for that matter
17:35 < Sly> exports.request = function(options, cb) {
17:35 < Sly>   if (typeof options === 'string') {
17:35 < Sly>     options = url.parse(options);
17:35 < Sly>   }
17:36 < gildean> ok
17:36 < dested> any nodejs debuggers that support source mapping?
17:36 < fatshotty> TooTallNate, thanks for reply to issue, I'll try and let you know ;)
17:38 < zaid2020> is there a checklist of doing things the nodejs way? i'm coming from php/python and tho i'm picking up nodejs fairly easily i am not always sure if i'm doing things the right way
17:39 < Sly> zaid2020, as with any other language.. everyone has their own way of doing things.
17:39 < Sly> Which is the beauty of coding in the first place. ;)
17:39 < filleokus> I'm not sure I'm following all this hardcore node-talk, but it seems to work if i specify the options manually 
17:40 < Sly> filleokus, what version of Node are you using?
17:40 < gildean> zaid2020: imo you just need a basic understanding of javascript
17:40 < zaid2020> i'm mostly concerned that i'll automatically do things in nodejs as i would in another language and at some point lose the benefit of nodes
17:40 < zaid2020> nodejs
17:40 < gildean> zaid2020: like scope is different in js than in php etc.
17:40 < aandy> zaid2020: Understand and embrace callbacks, and you're on your way :)
17:40 < filleokus> Sly: good question, how do i check that?
17:40 < Sly> node -v
17:41 < filleokus> v0.6.10
17:41 < Sly> That's why.
17:41 < Sly> String parsing wasn't in 0.6.
17:41 < Sly> You need to update. Majorly.
17:41 < filleokus> Yeah. I thought I had 0.8 on this machine, sorry
17:41 < filleokus> And thanks :)
17:41 < Sly> lol. It's no problem.
17:43 < zaid2020> anyone gone through nodebeginner.org guide?
17:43 < Sly> No, zaid2020. I didn't even know it existed. lol.
17:43 < zaid2020> ah ok. its helping me out a lot because it tries to explain the philosophy a bit
17:44 < zaid2020> still some things i wish it expanded on more
17:44 < Sly> Such as?
17:44 < zaid2020> "Passing functions is not only a technical consideration. With regard to software design, it's almost philosophical. Just think about it: in our index file, we could have passed the router object into the server, and the server could have called this object's route function."
17:44 < zaid2020> is passing functions a core part of nodejs?
17:44 < Sly> Not really sure what that's about without some context surrounding it.
17:45 < Sly> And yes, it is.. because Node is event based.
17:45 < gildean> zaid2020: it's a core part of javascript
17:45 < Sly> Most events have an EventEmitter attached so they can be used asynchronously.
17:45 < Sly> *Most modules
17:45 < zaid2020> ok. lemme think for a sec. so, passing function versus object
17:45 < zaid2020> nodejs prefers functions
17:45 < gildean> function is a object
17:45 < Sly> ^
17:47 < zaid2020> alright i figured. above explanation in the guide just confused me
17:48 < zaid2020> since it seemed to be emphasizing passing of a function over the entire object
17:48 < gildean> well an object might contain a function, or multiple functions or whatever
17:48 < zaid2020> typically id pass the entire object and let the receiver call any of its function
17:48 < gildean> basically in javascript everything is an object
17:49 < zaid2020> but the guide seems to hint that nodejs prefers passing single function over an object with multiple functions
17:49 < Sly> gildean, mind taking a look at https://github.com/Southern/sandbox and giving your opinion?
17:50 < Sly> And/or suggestions.
17:53 < gildean> Sly: a good idea, can't say much about the code as i don't read cs
17:53 < gildean> but i see how you could use it in some bots etc.
18:02 < zaid2020> so if node is event-based, what are php/python etc.?
18:04 < pyrotechnick> zaid2020: blocking
18:04 < zaid2020> ah right
18:05 < pyrotechnick> for now
18:05 < zaid2020> i'm just trying to see it from different angles so i can make the switch mentally 
18:05 < pyrotechnick> although there's like stackless python
18:05 < pyrotechnick> and evented php and shizznit
18:05 < zaid2020> its easy to just start using node like php/python and build functional apps
18:05 < zaid2020> without getting the benefit
18:07 < aandy> zaid2020: I'd say, in a nutshell, node is event by nature (can be blocking if you really want it to be), whereas python is blocking (can be non-blocking of you really want it to be)
18:08 < zaid2020> got it
18:08 < aandy> So that's also worth considering when you're starting a new project. I.e. you can build something that needs to block in node, but if your project would be a better fit for blocking, then you're going to have a hard time making node work for you
18:08 < aandy> Whereas the opposite is true for non-blocking :)
18:09 < zaid2020> how do you define blocking?
18:09 < pyrotechnick> pausing the process
18:09 < aandy> Things that must run before the next step. "Dependencies" perhabs
18:10 < zaid2020> ok. so one line of code can block the entire script
18:10 < pyrotechnick> yes
18:11 < zaid2020> whereas in node one line of code would block only the callback
18:11 < aandy> If I want the results of a db lookup, but also want to get the template ready, or do other things, while waiting for the db to finish - I'd do it non-blocking. If "other things" needs the db result, it'd be blocking preferred (or you would put it in a callback, but you'd need to nest for every dependency like that)
18:11 < pyrotechnick> the OS is forcsed to schedule other threads until yours is ready to do something
18:11 < zaid2020> rest of the code will process in parallel to the line blocking?
18:11 < ncb000gt> @tootallnate: ping
18:11 < pyrotechnick> zaid2020: yes the "blocking" line executes in a thread pool
18:12 < pyrotechnick> so the parent thread can continue with parallel tasks
18:13 < zaid2020> right. so a chat app example, if insert's taking a few secs, you can code node so whlie insert's going on in parallel it passes to client any new msgs since last refreshes
18:13 < zaid2020> ?
18:14 < pyrotechnick> yes
18:14 < zaid2020> cool
18:14 < zaid2020> thx
18:14 < pyrotechnick> the key being EASILY
18:14 < pyrotechnick> that's entirely possible outside node
18:14 < pyrotechnick> but difficult
18:14 < zaid2020> yeah. you can acheive same in php/python but not by default
18:14 < pyrotechnick> yes you'd need to rewrite any i/o libs
18:14 < pyrotechnick> and their dependencies
18:15 < zaid2020> alright. finally making some headway heh :)
18:15 < pyrotechnick> there's talks by ryah (creator of node, in this channel) himself about this
18:15 < TooTallNate> ncb000gt: pong
18:15 < ncb000gt> :)
18:16 < zaid2020> do you have a link by any chance?
18:16 < pyrotechnick> on the node site i beleive
18:16 < zaid2020> got it, thx
18:16 < pyrotechnick> there's an older one
18:16 < pyrotechnick> two older ones i know of
18:16 < pyrotechnick> but i'd probably start with that one
18:16 < jergason> Anyone know of a good resource to learn about service oriented architectures?
18:16 < jergason> is there a cannonical book or something?
18:17 < Sly> Welcome back, pyrotechnick.
18:17 < Sly> /late response
18:17 < pyrotechnick> i never left
18:17 < Sly> Well, you were afk.
18:17 < ncb000gt> tootallnate: so, i decided to shave the merlin yak (graphicsmagick addon in c++) and I'm trying to include GM in the project and as a dependency to building using gyp. I'd like to know if it is possible to run GraphicsMagic-config (which gives me a number of flags to set) using gyp?
18:17 < pyrotechnick> :)
18:18 < Sly> :P
18:18 < pyrotechnick> did i miss something?
18:18 < pyrotechnick> stupid adium auto-away
18:18 < pyrotechnick> there's no setting
18:18 < TooTallNate> ncb000gt: ya should be possible
18:18 < TooTallNate> ncb000gt: is that a program installed in your $PATH?
18:18 < ncb000gt> TooTallNate: alternatively I could just specify the libs themselves, but they don't appear to be linking correctly (likely my fault).
18:18 < ncb000gt> TooTallNate: no, i'd be calling directly
18:19 < ncb000gt> TooTallNate: `deps/graphicsmagick/magick/GraphicsMagick-config --ldflags`
18:19 < ncb000gt> of sorts
18:20 < aandy> pyrotechnick: Have you checked Settings -> Status? There's both a idle and inactivity setting
18:20 < TooTallNate> ncb000gt: ok so you'll want to do something like https://github.com/polotek/libxmljs/blob/master/binding.gyp#L21-23
18:20 < pyrotechnick> so that's for all protocols?
18:20 < pyrotechnick> and all accounts
18:20 < ncb000gt> Ahhh.
18:20 < ncb000gt> Ok. I'll try that out.
18:21 < pyrotechnick> kinda cool but also annoying you can't override it per-account
18:21 < pyrotechnick> cheers aandy
18:21 < TooTallNate> ncb000gt: you can reference the root of the module directory with <(module_root_dir> I'm pretty sure
18:21 < ncb000gt> yea you can
18:21 < ncb000gt> i already have some other stuff doing that
18:21 < aandy> pyrotechnick: I think it's for all accounts, sadly
18:21 < ncb000gt> ;D
18:21 < TooTallNate> cool
18:21 < pyrotechnick> back to limechat me thinks
18:21 < TooTallNate> ncb000gt: let me know how it goes ;)
18:22 < aandy> I thought we were all on irssi :(
18:22 < pyrotechnick> spend enough time in terminal as it is
18:22 < pyrotechnick> besides this has emoticons :) ^w^ >.<
18:22 < aandy> Hehe
18:23 < pyrotechnick> i can graphically perceive your sadness
18:23 < aandy> :'(
18:23 < pyrotechnick> it appeals to my mirror nuerons
18:23 < pyrotechnick> makes me feel like crying too
18:23 < aandy> I feel naked
18:23 < pyrotechnick> i _am_ naked
18:23 < pyrotechnick> i've been naked for weeks
18:23 < aandy> Well, there goes my lunch
18:23 < Sly> rofl @ naked for weeks
18:26 < ncb000gt> TooTallNate: are there any debug flags to pass for extra output?
18:26 < ncb000gt> just --debug?
18:28 < TooTallNate> ncb000gt: --debug will actually only build a Debug build of the module
18:28 < TooTallNate> ncb000gt: you want --verbose
18:29 < ncb000gt> ahhh
18:29 < ncb000gt> ty
18:29 < TooTallNate> no prob
18:31 < nicolaas> Hi everyone, I'm developing a large node.js application and have a question about code organization
18:31 < nicolaas> This application will be able to have contributed add-ons that will be implemented as node modules installed through npm
18:32 < nicolaas> How/where would you store the main APIs so that these components can easily do something along the lines of "require("authentication-api")"
18:32 < nicolaas> without having to use lots of relative paths
18:32 < nicolaas> would you put the main APIs inside of node_modules as well ?
18:32 < pyrotechnick> i'd use DI to pass them in
18:33 < pyrotechnick> to the plugins
18:33 < pyrotechnick> instead of having the plugins try find what they need
18:33 < pyrotechnick> provide them with what they may need
18:33 < nicolaas> is there a good example of Node.js DI that I can look at online ?
18:34 < pyrotechnick> pm
18:37 < ncb000gt> TooTallNate: still getting undefined symbols
18:37 < ncb000gt> it doesn'
18:38 < ncb000gt> it doesn't look like any of the libraries are being passed as link options to gcc
18:38 < ncb000gt> is that expected?
18:38 < ncb000gt> erm, g++ rather
18:38 < TooTallNate> ncb000gt: they only get passed to the final command
18:38 < TooTallNate> the "linking" stage
18:39 < ncb000gt> i assume that would be SOLINK_MODULE?
18:39 < pyrotechnick> substack: ping
18:39 < TooTallNate> ncb000gt: yes
18:40 < mscdex> the adventures of link!
18:42 < ncb000gt> haha
18:48 < fatshotty> TooTallNate, I still have errors while installing modules on raspberry
18:48 < fatshotty> here is the log, http://pastie.org/private/equbwz30fktjofu49hlfdg
18:48 < TooTallNate> fatshotty: well does "/home/pi/.nvm/v0.8.8pi/bin/node/tools/gyp/gyp" exist?
18:49 < TooTallNate> fatshotty: what's the invocation?
18:50 < fatshotty> uhmm…. TooTallNate nope! folder desn't exist,
18:50 < fatshotty> becasue /home/pi/.nvm/v0.8.8pi/bin/node <- this is not a directory
18:50 < hackable> hi
18:50 < TooTallNate> fatshotty: show me what you are passing for --nodedir
18:50 < tjmehta> If I have some custom modules I have created that aren't in npm that are in a /lib. Is there a way to automatically run npm install for each module, when executing npm install in the / (root) directory. Or should I put those modules in the node_modules folder even though they weren't install via npm?
18:50 < pyrotechnick> substack: i need you
18:50 < TooTallNate> it looks like it should be just "/home/pi/.nvm/v0.8.8pi"
18:50 < pyrotechnick> in my life
18:50 < pyrotechnick> now and until the end
18:52 < fatshotty> ok I'm trying again, maybe the folder I passed was wrong :P
18:52 < fatshotty> sorry for boring
18:52 < fatshotty> I'm trying
18:52 < hackable> looking for best approach to build a huge javascript based app any suggestions
18:58 < pyrotechnick> hackable: what are your major concerns
18:58 < fatshotty> TooTallNate, the same error: python: can't open file '/home/pi/.nvm/v0.8.8pi/tools/gyp/gyp': [Errno 2] No such file or directory
18:58 < pyrotechnick> obviously it's the scale, but more specifically, are you afraid it'll be unorganised, untestable, what
18:58 < fatshotty> npm install --nodedir=/home/pi/.nvm/v0.8.8pi
18:59 < TooTallNate> fatshotty: it sounds like maybe nvm deletes those files or something?
18:59 < TooTallNate> fatshotty: i guess you're gonna have to download the node source manually
18:59 < TooTallNate> and point to that dir
18:59 < fatshotty> on my mac it works fine! i've installed all dependencies… only on raspberry I've this error :(
18:59 < TooTallNate> fatshotty: it's cause of the "-pre" version
19:00 < fatshotty> do you mean the source code? or download source code and compile it?
19:00 < TooTallNate> fatshotty: you don't need to compile it
19:00 < fatshotty> uhm, I've the source code…should I point to that folder?
19:00 < TooTallNate> node-gyp just needs access to the gyp python files
19:00 < TooTallNate> yes
19:05 < grange|blubb> hi. I am trying to redirect the user to an external URL if a check fails. I just tried to response.redirect('https://www.facebook.com/...') but that does not do anything. Am I missing something? Might be a stupid question but I can't find the solution :( thank you
19:05 < fatshotty> It seems to be compiling now… hope it works!
19:07 < fatshotty> thanks TooTallNate it works fine now!!!
19:07 < fatshotty> thanks a lot ;)
19:08 < TooTallNate> fatshotty: :)
19:08 < TooTallNate> ya i've been using "ref" on my pi too
19:08 < TooTallNate> it's been working great
19:08 < TooTallNate> to power http://n8.io
19:11 < maxogden> TooTallNate: do you know any java websocket implementations that support wss:// ? 
19:12 < TooTallNate> maxogden: apparently java-websocket supports it preliminarily, you should bug the David guy
19:12 < TooTallNate> maxogden: he might be in #java-websocket
19:12 < maxogden> oh sweet
19:12 < maxogden> TooTallNate: im tryin to make socket.io work reliably on mobile browsers
19:13 < maxogden> TooTallNate: including phonegap apps
19:13 < TooTallNate> maxogden: and android i'm guessing?
19:13 < maxogden> yep
19:13 < TooTallNate> i know a lot of people who were using Java-websocket were using it on android
19:15 < maxogden> wss:// is mandatory on mobile networks because of proxies that dont read ws:// headers correclty
19:15 < CIA-116> libuv: Bert Belder master * r032c041 / (6 files): windows: use UV_HANDLE_READABLE and UV_HANDLE_WRITABLE - http://git.io/05afRw
19:18 < tjmehta> Hello Everyone, npm n00b here that needs some help::
19:18 < tjmehta> Hello Everyone, npm n00b here that needs some help::
19:18 < tjmehta> If I have some custom modules I have created that aren't in npm that are in a /lib. Is there a way to automatically run npm install for each module, when executing npm install in the / (root) directory. Or should I put those modules in the node_modules folder even though they weren't install via npm?
19:27 < nathan7> tjmehta: it's node_modules, not npm_modules
19:28 < tjmehta> nathan7 npm_modules?
19:29 < nathan7> tjmehta: "should I put those modules in the node_modules folder even though they weren't install via npm?"
19:29  * jsdev is looking for a telecommute job
19:30 <@konobi> tjmehta: you can just pass the folder to npm install, iirc
19:31 <@konobi> or a git repo or a tarball, etc.
19:34 < ncb000gt> TooTallNate: that worked...tho now instead of the errors i was getting before i get others (the GM specific ones) thanks
19:34 < ncb000gt> :)
19:34 < tjmehta> konobi, oh okay yah that'll work
19:34 < tjmehta> so just put the directory location as the source in npm
19:35 < tjmehta> sorry in the package.json
19:35 < tjmehta> ?
19:35 < TooTallNate> ncb000gt: nice! 
19:36 < ncb000gt> haha yea, just gotta figure these ones out!
20:00 < vrlogrs> hey guys
20:00 < pyrotechnick> hi vrlogrs
20:00 < vrlogrs> having an issue with socket.io ... keep getting a "Origin http://www.funnode.com is not allowed by Access-Control-Allow-Origin"
20:00 < pyrotechnick> how can we help you?
20:01 < vrlogrs> it's bugging the hell out of me
20:01 < pyrotechnick> you running off file://?
20:01 < vrlogrs> what do you mean? :S
20:01 < pyrotechnick> show me your io.connect line
20:02 < vrlogrs> var socket = new io.Socket('www.funnode.com',{
20:02 < vrlogrs>   port: 1336
20:02 < vrlogrs> });
20:02 < vrlogrs> socket.connect(); 
20:02 < vrlogrs> sorry
20:02 < vrlogrs> shoud've used pastebin
20:02 < vrlogrs> http://pastebin.com/kmRQ7VSB
20:03 < vrlogrs> and the server keeps complaining too: "unknown transport: "undefined"
20:03 -!- mode/#Node.js [+o piscisaureus_] by ChanServ
20:03 < vrlogrs> unhandled socket.io url
20:04 < kenny11> which library should I use to generate the same hash value as the microsoft?
20:04 < vrlogrs> any ideas pyrotechnick?
20:04 < kenny11> I have the password and the secret key but the value generate using node.js is not the same as the one microsoft use?
20:05 < pyrotechnick> vrlogrs: is that on the client or server?
20:05 < vrlogrs> that pastebin code is on client
20:05 < pyrotechnick> i have never seen that kind of code
20:05 < pyrotechnick> just call
20:05 < pyrotechnick> io.connect()
20:05 < pyrotechnick> where did you find that way?
20:05 < vrlogrs> http://davidwalsh.name/websocket
20:05 < vrlogrs> io.connect doesnt work :S
20:06 < vrlogrs> where do i get the client-side socket.io script?
20:06 < pyrotechnick> OH you actually want to connect cross-site?
20:06 < pyrotechnick> you'll have to use CORS
20:06 < vrlogrs> no .. funnode.com
20:06 < vrlogrs> no cross-site
20:06 < pyrotechnick> what does io.connect say
20:07 < vrlogrs> undefined is not a function
20:07 < vrlogrs> so, connect() is not found
20:07 < filleokus> what's the best node hosting site for just small hobby/dev-projects?
20:07 < vrlogrs> maybe im using the wrong script: <script src="http://cdn.socket.io/stable/socket.io.js"></script>
20:08 < pyrotechnick> thats old
20:08 < pyrotechnick> way old
20:08 < pyrotechnick> way way old
20:08 < pyrotechnick> why so old
20:08 < grange|blubb> vrlogrs, just install it using npm and call io.connect()
20:09 < pyrotechnick> it's on the client
20:09 < pyrotechnick> you can't even use browserify yet
20:09 < vrlogrs> lol .. ok ..
20:09 < vrlogrs> so, i already installed using npm
20:09 < vrlogrs> but, what client'side scripts do i use?
20:10 < Franz__> vrlogrs the page you sent
20:10 < pyrotechnick>  /socket.io/socket.io.js
20:10 < Franz__> i think is old
20:10 < Franz__> 2010
20:10 < pyrotechnick> did you read the docs?
20:10 < pyrotechnick> socket.io server
20:10 < Franz__> i think this article is deprecated
20:10 < pyrotechnick> sets up a route for the client
20:10 < pyrotechnick> just include
20:10 < pyrotechnick> <script src="/socket.io/socket.io.js"></script>
20:10 < pyrotechnick> it's all here
20:10 < pyrotechnick> https://github.com/LearnBoost/socket.io
20:10 < grange|blubb> yeah, if you installed it via npm, it is automagically available on the client (if you require it first)
20:10 < vrlogrs> i read this ..
20:11 < vrlogrs> wait, it's "magically" there for the client?
20:11 < grange|blubb> sio = require('socket.io')
20:11 < grange|blubb> that's all I needed 
20:11 < grange|blubb> and clearly the <script></script> include on client side
20:12 < grange|blubb> just include /socket.io/socket.io.js on the client side
20:12 < vrlogrs> 404 (Not Found) 
20:12 < vrlogrs> <script type="text/javascript" src="/socket.io/socket.io.js"></script>
20:12 < grange|blubb> for which path?
20:12 < pyrotechnick> vrlogrs: show me ur server
20:12 < poorman> Yes, it has been staring me in the face this whole time. For some reason I thought ajax would not send the cookies.
20:13 < pyrotechnick> pm if it's sensitive or watever
20:13 < vrlogrs> ahh .. ok ..
20:13 < poorman> wrong window ^
20:13 < nXqd> I need help with this question :( http://stackoverflow.com/questions/12242323/nodejs-need-explanation
20:14 < bingomanatee> is this IRC channel still being archived?
20:15 < grange|blubb> pyrotechnick, could you maybe help me out with a redirect to an external domain? Can't get it working :(
20:15 < pyrotechnick> yep
20:15 < pyrotechnick> hey dave
20:15 < bingomanatee> hey pyro
20:15 < bingomanatee> rebuilding noogle with elastic - where to I get the archive?
20:17 < pyrotechnick> socket.io wont setup a route unless it's express aye?
20:17 < pyrotechnick> like listen() with a HTTPServer won't work right?
20:17 < bingomanatee> Last time I checked socket.io wasn't even tied to node in general much less express.
20:18 < pyrotechnick> no on the server for mounting the client
20:18 < pyrotechnick> pretty sure it only works with express let me check
20:21 < bingomanatee> okay sorry
20:21 < bingomanatee> can anyone tell me the URL to the backups of this channel?
20:23 < bingomanatee> nm found it
20:23 < grange|blubb> http://irclogger.com/.Node.js/2012-09-03
20:23 < pyrotechnick> dude sorry i was gunna link you
20:23 < grange|blubb> oh, you got it ;)
20:23 < pyrotechnick> yeah theres that
20:23 < pyrotechnick> and another
20:23 < pyrotechnick> debuggable or something
20:24 < pyrotechnick> oh they stopped in margh
20:24 < pyrotechnick> march
20:24 < pyrotechnick> strange
20:25 < TooTallNate> there's also http://static.izs.me/irclogs/node.js
20:28 < bingomanatee> cool. 
20:28 < grange|blubb> it's driving me crazy... 
20:29 < astropirate> there should be a node.cs
20:29 < astropirate> so we can keep node.js  you know... js
20:30 < dominictarr> it's only really a thin difference. most of the important schematics are the same.
20:30 < dominictarr> we need to allow the cs people so that the can come to realize that JS is okay.
20:30 < pyrotechnick> astropirate: ALL semantics are the same
20:31 < pyrotechnick> it's a transpilar
20:31 < astropirate> pyrotechnick, i wasn't under the impression that it was a green ponnie you know
20:31 < dominictarr> the syntax is different.
20:31 < pyrotechnick> that's syntax
20:31 < dominictarr> but schemantics is > syntax.
20:31 < pyrotechnick> syntax is orthogonal to semantics
20:32 < dominictarr> exactly.
20:32 < sentientwaffle> when building native modules for Node.js (in C++) how can I convert a misc. struct to a Handle<Value>?
20:33 < sentientwaffle> is it even possible?
20:34 < pyrotechnick> sentientwaffle: sec
20:36 < pyrotechnick> sentientwaffle: what are you trying to do
20:36 < sentientwaffle> im writing a bridge to a C library in Node.js
20:36 < pyrotechnick> yeah i realise that but like
20:36 < mattrobenolt> Any way to trigger a rebuild of the README on npmjs.org? isaacs ?
20:36 < pyrotechnick> specifically
20:37 < sentientwaffle> pyrotechnick: well, I'd like every field on the struct to be a property on the new object
20:37 < sentientwaffle> they are mostly floats
20:38 < sentientwaffle> some char's
20:38 < pyrotechnick> so you make a template
20:38 < pyrotechnick> for your object
20:38 < pyrotechnick> then assign values
20:39 < pyrotechnick> i have never returned an object but i read the docs once lol
20:39 < sentientwaffle> hm, ok.
20:39 < sentientwaffle> so then theres a way to convert the template to an Object?
20:39 < pyrotechnick> well a template is the object yeah
20:39 < pyrotechnick> not a c++ template
20:39 < pyrotechnick> a v8 template
20:40 < pyrotechnick> different
20:40 < sentientwaffle> oh, I didnt realize there was such a thing!
20:40 < sentientwaffle> 1 sec
20:40 < dominictarr> mattrobenolt, you have to push o new version to update the README.
20:41 < mattrobenolt> dominictarr: I'd assume so, but my README hasn't been updated for many versions.
20:41 < dominictarr> sentientwaffle, you need to hardcode it, I'm afraid. the meta/type information is not available to C at runtime.
20:41 < dominictarr> mattrobenolt, you may need to update your npm
20:41 < pyrotechnick> sentientwaffle: yeah templates are like
20:41 < pyrotechnick> 50% of v8
20:42 < sentientwaffle> pyrotechnick: hm, not sure. Ruby has Data_Wrap_Struct
20:42 < dominictarr> there was a bug it didn't detect readme.markdown until recently.
20:42 < sentientwaffle> ah, but I guess you do pass the "class" thing
20:42 < pyrotechnick> we dont say the r word here
20:42 < mattrobenolt> dominictarr: Update npm? What is it doing different to trigger a build of that file?
20:42 < mattrobenolt> dominictarr: orly? I'd assumed that was purely done on isaacs's side. Nothing to do with the npm client.
20:43 < dominictarr> mattrobenolt, the client does the post. like it does multiple pushes.
20:44 < dominictarr> the registry is just a couchdb. most of the smarts is in the client.
20:44 < mattrobenolt> dominictarr: Right. I just didn't think the client did *that* part.
20:44 < mattrobenolt> dominictarr: Good point about CouchDB purely storing the data. I forgot about that.
20:44 < pyrotechnick> zpareser compiles so sloooooooowly
20:44 < mattrobenolt> I was imaging a post-commit-ish hook on their end to render.
20:45 < mattrobenolt> imagining*
20:47 < vrlogrs> http://pastebin.com/2LWHPvW2 and http://pastebin.com/T0Ly9FxG
20:48 < vrlogrs> can somebody figure this out
20:48 < vrlogrs> i get a 404 error on the client-side
20:48 < vrlogrs> for not being able to find the socket.io.js script
20:50 < pyrotechnick> on windows ^
20:50 < pyrotechnick> works on osx
20:51 < vrlogrs> actually, im hosting on debian
20:54 < pyrotechnick> scrap that
21:01 < Hoverbear> Hey guys, basic javascript/coffeescrip question here. Trying to get https://github.com/Hoverbear/Gathering-Our-Voices-Testing/blob/master/config/routes.coffee#L13 to not give errors when ultimately called by https://github.com/Hoverbear/Gathering-Our-Voices-Testing/blob/master/server.coffee#L48 (Which has the definition for Groups)
21:04 < pyrotechnick> Hoverbear: what's the question
21:05 < Hoverbear> Why do I get "ReferenceError: Groups is not defined"?
21:05 < pyrotechnick> because Groups isn't defined
21:05 < Hoverbear> How could I point it to the groups in https://github.com/Hoverbear/Gathering-Our-Voices-Testing/blob/master/server.coffee#L65 ?
21:05 < pyrotechnick> require it in routes
21:05 < pyrotechnick> or export a function which accepts it
21:06 < pyrotechnick> and pass it in from server
21:06 < Hoverbear> So I'd require server.coffee? Even though it's getting called from it?
21:06 < pyrotechnick> no you'd require wherever groups is
21:06 < Hoverbear> Ohhh that's a good idea
21:07 < pyrotechnick> better to inject it
21:07 < pyrotechnick> decouples routes from where your groups is
21:07 < pyrotechnick> and what your groups is really
21:07 < Hoverbear> Inject it?
21:07 < pyrotechnick> export a function from routes which accepts it
21:07 < Hoverbear> Hmm ok
21:07 < pyrotechnick> dependency injection
21:08 < Hoverbear> So instead of (req, res) use (req,res,groups) type idea?
21:09 < pyrotechnick> yes
21:09 < pyrotechnick> well
21:09 < pyrotechnick> no
21:09 < pyrotechnick> let me code it
21:09 < Hoverbear> pyrotechnick: You'll have to forgive me, I'm still learning my way around this stuff.
21:10 < pyrotechnick> sokay
21:11 < pyrotechnick> https://github.com/pyrotechnick/Gathering-Our-Voices-Testing/commit/bebfe54dca4f5306c3b3b3c546a04d98774160e8
21:12 < Hoverbear> pyrotechnick: Ohhhh, whoa.
21:12 < pyrotechnick> honestly i think all modules should be like this
21:12 < Hoverbear> pyrotechnick: I think I get it. Way cool! THank you I'll try that!
21:12 < pyrotechnick> no worries
21:12 < pyrotechnick> see how it decouples it all?
21:17 < alexkwolfe> I've got a long running node app that periodically exits with an "Abort Trap 6"
21:17 < alexkwolfe> There aren't any preceding error messages that indicate a cause.  Any suggestions how to debug?
21:20 < pyrotechnick> alexkwolfe: gdb
21:23 < alexkwolfe> Let me see what I can learn about gdb.  I've never used it before.  Thanks.
21:36 < CIA-116> node: Ben Noordhuis v0.8 * rd1eff9a / (src/node_crypto.cc test/simple/test-domain-crypto.js): crypto: make randomBytes() compatible with domains - http://git.io/bWMAwQ
21:36 < CIA-116> node: Ben Noordhuis v0.8 * r7d0543c / (src/node_crypto.cc test/simple/test-domain-crypto.js): crypto: make pbkdf2() compatible with domains - http://git.io/Erx-oA
21:36 < CIA-116> node: Ben Noordhuis v0.8 * r7dfa587 / (src/node_crypto.cc src/node_crypto.h): crypto, tls: make setSNICallback() compatible with domains - http://git.io/_OKR4w
21:44 < Hoverbear> pyrotechnick: Yes
21:47 < Sly> La de da.
21:49 < pyrotechnick> Nexxy: ban sly for spam plz
21:49 < Sly> lol
21:49 < Hoverbear> pyrotechnick: Ah, new error. https://github.com/Hoverbear/Gathering-Our-Voices-Testing/blob/master/config/routes.coffee#L13 "TypeError: undefined is not a function". Yay.
21:49 < pyrotechnick> u dont have
21:49 < pyrotechnick> the
21:49 < pyrotechnick> you havent changed it
21:49 < Hoverbear> Oh you're right
21:49 < Hoverbear> Hah
21:50 < Hoverbear> Forgot to push
21:50 < pyrotechnick> you been trying to work that out for an hour lol?
21:50 < pyrotechnick> oh ok
21:50 < Hoverbear> pyrotechnick: I had to go do something else.
21:50 < pyrotechnick> no you suck at node bro now we all know
21:51 < pyrotechnick> SPREAD THE WORD
21:51 < pyrotechnick> HOVERBEAR SUCKS AT NODE
21:51 < Hoverbear> Yes, I also have beans to pick.
21:51 < pyrotechnick> yeah i have to finish sanding and paint a panel of my car today sometime
21:51 < Hoverbear> And I do, in fact, suck at Javascript.
21:51 < pyrotechnick> i CBF
21:51 < pyrotechnick> MY NAME IS DONNY AND YOU SUCK AT JAVASCRIPT
21:52 < Hoverbear> lol
21:52 < Hoverbear> Pushed now xD
21:52 < pyrotechnick> sik lad
21:52 < pyrotechnick> mmmkai
21:52 < pyrotechnick> and where are you calling it
21:53 < pyrotechnick> good good
21:53 < pyrotechnick> now here
21:53 < pyrotechnick> routes		= (require './config/routes') Groups: Groups
21:53 < pyrotechnick> you should be getting a Groups is not defined
21:53 < pyrotechnick> i think
21:53 < Ramone> hey all... any dnode users in here?  I'm wondering how to stream from the client to the server as the client's response to a server request...
21:53 < pyrotechnick> yeah you should
21:53 < Hoverbear> The error arrow points to 'new'
21:54 < jesusabdullah> Ramone: as far as dnode is concerned they're peers (I believe)
21:54 < pyrotechnick> thats weird
21:54 < pyrotechnick> it must be coffee doin something weird
21:54 < pyrotechnick> sec
21:54 < Hoverbear> Oh shit probably
21:54 < pyrotechnick> well i know the problem
21:54 < Ramone> jesusabdullah: can I just have the server send a writable stream to the client for the client to stream to?
21:54 < pyrotechnick> it's that Groups isn't defined where you're passing it in from server
21:54 < pyrotechnick> you have to require it or watever
21:54 < pyrotechnick> but that should be erroring on line 16 of server not in routes
21:54 < Hoverbear> pyrotechnick: Shouldn't they be hoisted? They're below on the page.
21:55 < jesusabdullah> Ramone: naw, your req and res objects are the streams
21:55 < pyrotechnick> oh are they
21:55 < jesusabdullah> Ramone: or, use shoe for socket.io style streams
21:55 < pyrotechnick> ahhh
21:55 < pyrotechnick> nah
21:55 < pyrotechnick> only function Name() {}
21:55 < Hoverbear> pyrotechnick: https://github.com/Hoverbear/Gathering-Our-Voices-Testing/blob/master/server.coffee#L65
21:55 < pyrotechnick> is hoisted in js
21:55 < pyrotechnick> theres no hoisting in coffee ;)
21:55 < Ramone> jesusabdullah: doesn't it work with plain TCP?
21:55 < pyrotechnick> it's a good thing
21:55 < Hoverbear> pyrotechnick: Oh ok
21:55 < pyrotechnick> well there is in constructors but only because IE sucks
21:55 < jesusabdullah> Ramone: you can do that too. the "socket" in the examples is a stream
21:56 < pyrotechnick> that's the only place you'll find hoisting
21:56 < pyrotechnick> so yeah rearrange that file
21:56 < pyrotechnick> and you should be good to go
21:56 < pyrotechnick> if you do need to hoist you have to escape to JS ``
21:56 < jesusabdullah> weak
21:56 < pyrotechnick> but i'd avoid it, it's a shitty feature of JS anyway
21:56 < jesusabdullah> hoisting is a very important part of life
21:56 < Ramone> jesusabdullah: yeah I don't have any browsers involved in this scenario
21:57 < jesusabdullah> Ramone: Yeah, create a net connection, get your sockets on both sides and pipe it up
21:57 < pyrotechnick> and on that note hoverbear
21:57 < pyrotechnick> if you ever need to name a function make it a class
21:57 < pyrotechnick> then it will be named and hoisted and shit
21:57 < Ramone> jesusabdullah: how does one side get a reference to the other's stream though?  can I send the stream as a param?
21:58 < pyrotechnick> stuff*
21:58 < Ramone> dnode doesn't seem to expose the innerworkings of the raw socket
21:58 < pyrotechnick> it's like
21:58 < pyrotechnick> it's there
21:58 < pyrotechnick> it's like remote.stream or something
21:59 < pyrotechnick> self.stream = stream;
22:00 < Ramone> pyrotechnick:  talking to me?
22:00 < pyrotechnick> yes
22:01 < pyrotechnick> you can get at the socket.io
22:01 < pyrotechnick> and then from there at the stream
22:01 < dominictarr> thats not the best way to use streams to the browser.
22:01 < dominictarr> you'll loose the write() return value etc.
22:01 < dominictarr> use mux-demux & shoe
22:02 < Hoverbear> pyrotechnick: THanks, that hoisting thing was screwed me
22:02 < Ramone> there's no browser in this scenario
22:02 < pyrotechnick> you're welcome
22:02 < Ramone> not doing web stuff
22:02 < pyrotechnick> i'd say it still stands
22:03 < Ramone> it's a binary format too
22:03 < Ramone> stil look at mux-demux?
22:03 < pyrotechnick> dominictarr why the random IDs
22:04 < EuroNerd> I'm hearing one shouldn't use Node as the sole server, but put it behind Nginx or Apache.  Is there any reason why I shouldn't use Apache?  (At least, while I'm still learning - so it's not a big production server, just a VM, and soon a tiny VPS.)
22:04 < dominictarr> because either side can create streams, but mux-demux it self doesn't actually know whether it's server or client.
22:04 < pyrotechnick> EuroNerd: apache cant do websocket
22:05 < dominictarr> EuroNerd, basicall, you just don't need to.
22:05 < pyrotechnick> that's kinda just a precaution though unless you doing banking or watever i wouldnt bother
22:05 <@konobi> EuroNerd: until you're deploying to production, it doesn't matter
22:05 < pyrotechnick> it's more of an extension of node being < 1.0.0
22:05 < Ramone> dominictarr: seems like mux-demux is for text only... am I wrong?
22:05 < pyrotechnick> BUT
22:05 < pyrotechnick> you will want to offload your static assets in production
22:05 < pyrotechnick> to nginx or cdn or watever
22:06 < pyrotechnick> they'll kill your node
22:06 < pyrotechnick> very quickly
22:06 < dominictarr> Ramone, right now, it's JSONs everything
22:06 <@konobi> shouldn't do
22:06 < Ramone> yeah...that's no good... I'm doing file xfer
22:06 < dominictarr> you could also use msg-pack
22:07 <@konobi> nssocket?
22:07 < Ramone> I just want to stream bits :)  not messages
22:07 < dominictarr> Ramone, maybe you just want to open a separate stream then, or use HTTP?
22:07 < pyrotechnick> Ramone: file xfer thru websocket is a waste of time
22:07 < EuroNerd> pyrotechnick, actually, i do want websockets. What about serving .htm and .jpg files from Apache and then accessing dynamic stuff thru :8080 from node?
22:07 < pyrotechnick> if you want it to be performant in any sense
22:07 < Ramone> I don't want to use websockets at all
22:07 < dominictarr> websockets is for reatime full duplex stuff.
22:07 < pyrotechnick> well you're using dnode
22:08 < pyrotechnick> which uses socket.io
22:08 < pyrotechnick> which uses the websocket protocol
22:08 < dominictarr> pyrotechnick, dnode doesn't depend on socket.io anymore.
22:08 < Ramone> ahh okay... I thought it used a plain tcpsocket
22:08 < pyrotechnick> wat
22:08 < dominictarr> it just works with a regular stream.
22:08 < pyrotechnick> since when
22:08 < Ramone> any recommendation on rpc over tcp?
22:08 < dominictarr> few months
22:08 < pyrotechnick> srs?
22:08 < dominictarr> yup
22:08 < pyrotechnick> you know that might explain some things
22:09 < pyrotechnick> wb dave
22:09 < EuroNerd> pyrotechnick, I'm building a very dynamic, one-page web app.  I was initially going to comm thru ajax, but websockets is probably a better idea.
22:09 < bingomanatee> yar
22:09 < substack> pyrotechnick: var d = dnode(); d.on('remote', fn); d.pipe(stream).pipe(d)
22:09 < dominictarr> pyrotechnick,  https://github.com/substack/dnode#streaming 
22:09 < bingomanatee> my iMac is throwing sparks.
22:10 < Sly> pyrotechnick, Sandbox updated a bit. (devel branch)
22:10 < pyrotechnick> bingomanatee: it's a wizard?
22:10 < bingomanatee> funny you should say that - I am working on a project to create wizards for my crm.
22:10 < bingomanatee> A wizard wizard so to speek.
22:10 < Ramone> substack: can the client pipe to the server though?
22:11 < EvilPacket> anybody know of a file read line library that will give me lines when I ask for them not just emit lines as events when they are encountered? Asking before I go build something for my use case.
22:11 < pyrotechnick> there's no client or server is there
22:11 < substack> Ramone: what do you mean by that?
22:11 < pyrotechnick> why is everyone messaging me lol
22:11 < substack> Ramone: calling remote functions with streams as arguments?
22:11 < pyrotechnick> it's Ramone
22:11 < Ramone> wellllll... basically I want one end to make an rpc call to the other for a file, and the second stream the file back somehow... 
22:12 < dominictarr> EvilPacket, use event-stream.split then pipe to readable-stream
22:12 < dominictarr> that has a .read() function that works like that.
22:12 < Ramone> substack: streams as args would be perfect... that's possible?
22:12 < EvilPacket> dominictarr: thanks, I'll check it out.
22:12 < Ramone> I should've just tried that
22:12 < substack> Ramone: no, you should use other libs and a separate bulk transfer stream
22:12 < substack> check out mux-demux
22:12 < Ramone> mux-demux seems to be text-only
22:12 < vrlogrs> hey guys
22:12 < substack> you can do the same trick that weather satelites or ftp servers do
22:13 < substack> you've got a control stream and a bulk data stream
22:13 < vrlogrs> finally got socket.io to work :)
22:13 < vrlogrs> thanks for all the help
22:13 < Sly> substack, pyrotechnick mentioned something earlier about you perhaps knowing something about a module that virtualizes the fs module of Node.
22:13 < EuroNerd> pyrotechnick, I don't really understand WebSockets yet. Will my client page be able to communicate with node.js on :8080 with WebSockets? (while Apache serves files on :80)
22:13 < Sly> Working on a sandbox, and it'd be helpful.. so I can be lazy and not have to code it again.
22:13 < vrlogrs> here's the site if anyone wants to check it out: www.funnode.com
22:13 < Ramone> substack: I'm currently just http-POSTing the file back, but I thought I might be able to do it without the extra connection/server
22:13 < vrlogrs> thanks again -- especially pyrotechnick
22:13 < pyrotechnick> yeah substack i remember someone starting it for browserify
22:14 < pyrotechnick> the force is strong with this one
22:14 < substack> Ramone: you can pack multiple streams into a single stream with https://github.com/dominictarr/mux-demux
22:14 < Ramone> substack: that page seems to suggest it's text-only
22:14 < pyrotechnick> EuroNerd: yes but you can also proxy it all through 80 and fanout to node for dynamic stuff
22:15 < dominictarr> Ramone, the actual serialization scheme is pluggable, you can use msg-pack or 
22:15 < hdon_> hi all :) i've seen http middleware including things like websockets server implementations that take an instance of an httpServer as its basis. i notice, for instance with ws module's websockets server, that my request handler does not see the http request that gets upgraded to a websockets connection. is there documentation anywhere of the preferred pattern to implement this sort of behavior?
22:15 < substack> Sly: https://github.com/CrabDude/fs-browserify
22:15 < Sly> Thanks.
22:15 < Ramone> msg-pack is message-oriented though... I just have a stream...sometimes 80 MB
22:15 < Sly> I'll look into it.
22:16 < EuroNerd> pyrotechnick, but isn't it easier to do node on :8080?  Or is it a potential security flaw?
22:16 < dominictarr> you just need a thing with a serialization stream, and a deserialization stream.
22:16 < pyrotechnick> thanks substack
22:16 < Sly> Oh. I see. That's just a FS module for the browser.
22:16 < Sly> That would already work for you, pyrotechnick.
22:16 < Sly> At least, with the update I just pushed.
22:16 < dominictarr> Ramone, you couldn't make a multiplexer without dividing the stream into parts and giving them ids.
22:16 < Sly> Sandbox.forcePath('fs', './browserify-fs.js')
22:17 < Sly> Then Sandbox.run('require("fs")')
22:17 < pyrotechnick> yeah this is what i want
22:17 < dominictarr> being forced into messages wont break a regular stream.
22:17 < Sly> You can already do it.
22:17 < Sly> I just pushed forcePath to devel.
22:17 < pyrotechnick> sik lad
22:17 < Ramone> dominictarr:  I'd like to stream the file on elsewhere without requiring the entire message-passing first
22:17 < Sly> ;)
22:17 < Sly> I'm trying to make it as minimal as possible, but able to be extended as people need.
22:18 < dominictarr> Ramone, then you need a separate tcp connection. i.e. an http post.
22:18 < Ramone> I have this working over http just fine... but I was hoping to just use the same TCP socket I make the request on
22:19 < Ramone> yeah maybe what I have is good enough
22:19 < dominictarr> Ramone, in http 1.1 requests are pipelined behind the scenes
22:19 < Ramone> I was hoping for a faster turn-around time on the file
22:19 < dominictarr> so that should just happen
22:20 < dominictarr> Ramone, sounds like network round trips.
22:20 < dominictarr> like, send the file with out asking.
22:20 < dominictarr> just put the request information in the header.
22:20 < dominictarr> or something.
22:21 < Ramone> yeah I've already got it http posting up to a secondary server that runs in the same process as dnode file-requester...
22:21 < Ramone> maybe I can't do better than that
22:22 < dominictarr> Ramone, what sort of thing are you sending?
22:22 < Ramone> dominictarr: mp3s
22:23 < dominictarr> oh right.
22:23 < Ramone> of course!
22:23 < Ramone> heh
22:23 < dominictarr> Ramone, probably the biggest thing, once the speed is reasonable, is an user that informs you of progress well
22:24 < dominictarr> and doesn't make you wait
22:24 < Ramone> is a what?
22:24 < dominictarr> like you can queue up multiple files at once.
22:24 < dominictarr> Ramone, sorry, a good user interface-.
22:24 < dominictarr> that doesn't make you wait.
22:25 < Ramone> yeah it's a <10s wait on the first song ... which seems bad, but I guess not compared to youtube
22:25 < dominictarr> the facebook image upload is a good example.
22:25 < cnd> does anyone know the difference between the jquery and jQuery packages?
22:25 < Ramone> after that I just have to fetch 10s before the current song is done
22:25 < cnd> they have the same maintainers and docs
22:25 < cnd> but they are slightly different in version and dependencies
22:26 < dominictarr> 10 seconds is a slow response!
22:26 < Ramone> yeah I'm irritated by it
22:26 < dominictarr> how long does a simple request take?
22:26 < Ramone> dunno... I'd have to experiment to see the diff
22:27 < dominictarr> Ramone, I'm guessing it's gotta be something slow on the server end. like what does it do with the file?
22:27 < KiNgMaR> I have a spare monitor that I want to use to display some server's load and similar stats, preferably with highcharts or similar - does anybody know of something like that? google disappoints me and I believe there has to be a node.js based solution around somewhere?
22:27 < Ramone> just pipes it right on through to the browser's waiting http request
22:27 < Ramone> no buffering or anything
22:28 < Ramone> works like a charm... but I've got to optimize it
22:28 < dominictarr> KiNgMaR, I made a really simple thing the other day. http://npm.im/hud
22:28 < pyrotechnick> .im?
22:28 < dominictarr> pyrotechnick, npm has it's own url shortener.
22:28 <@konobi> cctld
22:29 < pyrotechnick> lolwut
22:29 < Ramone> dominictarr: needs screenshots :)
22:29 < dominictarr> *best thing ever*
22:29 < dominictarr> Ramone, make a PR
22:29 <@konobi> isle of mann
22:30 < Ramone> I mean... I want to see what the display looks like
22:30 < pyrotechnick> when you look
22:30 < pyrotechnick> capture it
22:30 < pyrotechnick> and PR it
22:30 < Ramone> haha
22:31 < Ramone> so I can get my jpg into the repo?
22:31 < KiNgMaR> dominictarr: some dependency fails to build :-)
22:31 < dominictarr> KiNgMaR, can you gist the output?
22:32 < dominictarr> or fails to compile?
22:32 < amacleod> Is Ubuntu 12.04's nodejs package reasonably up to date, or should I install straight from the source?
22:32 < dominictarr> amacleod, source
22:32 < amacleod> dominictarr, I thought that might be the case :)
22:33 < dominictarr> amacleod, it's still on 0.6 very old.
22:33 < KiNgMaR> dominictarr: looks like it fails to find $(whereis node) essentially. http://dpaste.de/OwEHc/ - most probably not your fault, I'm looking into it
22:34 < dominictarr> KiNgMaR, right, that is a part of sockjs.
22:35 < dominictarr> you should post an issue on sockjs
22:35 < dominictarr> hmm, no, it's a dependency of sockjs.
22:36 < KiNgMaR> cba, honestly :) still looking for a nice node.js-based system resources monitor, preferably something mature :>
22:38 < Ramone> KiNgMaR: like cpu, memory, etc?
22:38 < KiNgMaR> yeah
22:39 < Ramone> zenoss is probably your best bet for that
22:39 < Ramone> any reason you need something written in node?
22:40 < KiNgMaR> no particular reason, just figured it would have the best chances to look trendy and stuff
22:40 < KiNgMaR> plus it would be easy to extend (big wishlist, I know)
22:41 < Ramone> if you're doing app monitoring statsd + some graphing lib are pretty nice
22:41 < Ramone> statsd is node at least
22:42 < Ramone> I use librato for graphing but graphite is free, or you can build your own with d3 or something
22:42 < CIA-116> node: Atsuya Takagi v0.8 * r9f57e42 / doc/api/cluster.markdown : doc: fix typo in api/cluster - http://git.io/WkseQQ
22:47 < KiNgMaR> yeah... doesn't look like there's a complete package of what I'm after just yet... thanks for the hints though :-)
23:01 < filleokus> What do you guys use for just small project hosting / temp. development space. Any recommended providers?
23:06 < AntelopeSalad> filleokus: someone once recommended dotcloud.com to me, they have a free plan and a pretty good selection of services for node development
23:06 < photofroggy> anyone here use nodejitsu?
23:07 < rvagg> photofroggy: see #nodejitsu
23:07 < photofroggy> thanks
23:08 < filleokus> AntelopeSalad: thanks, gonna check it out
23:08 < Ramone> filleokus: heroku's pretty good if you're not using websockets
23:09 < filleokus> I am not, that might be an alternative, do they have small plans?
23:09 < Ramone> they're free for small stuff
23:09 < AntelopeSalad> amazon seems to give you a free micro aws instance too for a year
23:09 < AntelopeSalad> but you need a valid CC to sign up
23:09 < filleokus> I don't mind paying, but I only need the most basic plan, so paying more like 5-10 USD seems a bit stupid just for not having to manage the hosting 
23:10 < Ramone> heroku's no good if you need shell access either
23:10 < maxogden> anyone know how to set up a wss:// server for testing? 
23:10 < Ramone> otherwise it's pretty great
23:10 < filleokus> Yeah I saw that, and I have like a server with a friend at a co-lo, but it would be sweet just for testing/devlopment without needing to manage the system etc
23:10 < filleokus> but AWS is def an alternative
23:10 < AntelopeSalad> does dotcloud have enough services to meet your needs for a mess-around server?
23:11 < Ramone> I use linode when I'm doing stuff heroku can't handle
23:11 < Ramone> it's $30/mo at its cheapest though I think
23:12 < filleokus> AntelopeSalad: it seems it would work
23:12 < Ramone> errr $19.95
23:13 < Hoppertje> is it possible to get a timestamp-send/recieved from a tcp packet?
23:13 < filleokus> It's not that is hard or anything to manage node instaces, but if you have a solid development environment at work, and just need something to fiddle around with for side projects 
23:18 < Hoppertje> anyone?
23:20 < filleokus> Hoppertje: have no deeper knowledge on the subject, but http://en.wikipedia.org/wiki/Transmission_Control_Protocol#TCP_timestamps
23:20 < nkuttler> Hoppertje: sounds like a ##networking question
23:21 < Hoppertje> alright, thanks
23:21 < filleokus> Hoppertje: only thing i know is that they are random, so you must have a few of them and than you calculate the uptime i think
23:21 < filleokus> but not the actual time
23:21 < marktraceur> Hey, so I was in here yesterday asking for a web framework, someone pointed me to express which is great. However, it uses EJS....I'm used to the Jinja2 template engine, which allows "extending" templates into other templates. Does EJS do this, or is there some other system that does?
23:21 < filleokus> the uptime of the system that sent them that is
23:21 < Hoppertje> yah, that was what i afraid of
23:21 < tjholowaychuk> marktraceur you can use any template engine you want
23:22 < tjholowaychuk> you *can* use EJS but you don't *have* to use EJS
23:22 < marktraceur> tjholowaychuk: Well, the jinja2 is Python. I'd prefer to use something node-y
23:22 < tjholowaychuk> there are django-style template engines for node
23:22 < tjholowaychuk> swig / jazz / dust
23:22 < tjholowaychuk> stuff like that
23:22 < marktraceur> I will check each, thanks
23:22 < Hoppertje> yah
23:23 < marktraceur> tjholowaychuk: Swig looks like exactly what I need, thanks.
23:24 < CIA-116> libuv: Ben Noordhuis master * rb101a53 / src/unix/tcp.c : sunos: don't set TCP_KEEPALIVE - http://git.io/0ad1sQ
23:24 < CIA-116> libuv: Ben Noordhuis master * r3bbe8f9 / src/unix/tcp.c : Merge branch 'v0.8' - http://git.io/T1BLHg
23:24 < CIA-116> libuv: Ben Noordhuis v0.8 * rb101a53 / src/unix/tcp.c : sunos: don't set TCP_KEEPALIVE - http://git.io/0ad1sQ
23:25 <@konobi> argh... why does recursion always fry my brane
23:26 < BennyLava> I'm sorry, your what now?
23:26 < pyrotechnick> his brane man
23:27 < pyrotechnick> don't you know M-theory?
23:28 <@konobi> pyrotechnick: i leave that to ryah to explain =0)
23:30 < pyrotechnick> here we go
23:30 < pyrotechnick> http://noelwelsh.com/programming/2012/09/03/sex-lies-and-javascript/
23:32 < pyrotechnick> it must be strange for non-noders having node around to use less and coffeescript and that
23:33 < pyrotechnick> seems like a waste
23:33 < nkuttler> why would a non-coder need coffeescript?
23:33 < pyrotechnick> non-*N*oder
23:34 < nkuttler> oh
23:34 < nkuttler> right :)
23:34 < nkuttler> i recently recommended node just because of jslint
23:35 < pyrotechnick> i guess it will just seem like a package manager once npm is merged into node
23:35 < nkuttler> it is, isn't it?
23:35 < nkuttler> already is
23:36 < pyrotechnick> https://twitter.com/ryahhttps://twitter.com/ryahhttps://twitter.com/ryah
23:36 < pyrotechnick> https://twitter.com/mikeal yep - npm will be renamed "node install [package]" at some point
23:37 < pyrotechnick> that^
23:37 < nkuttler> i see. odd
23:37 < bnoordhuis> what does that ryah guy know?
23:37 < pyrotechnick> yeah who's that fool
23:38 < pyrotechnick> probs some rubyist
23:38 < pyrotechnick> trollin noders on the tweets
23:41 < pyrotechnick> nodeconf is on?
23:41 < pyrotechnick> is that why it's quiet?
23:50 < octane--> what's the best way to get node to use different versions of files depending on env in the client side? eg min on production and debug on development?
23:51 < chilts> octane--: I would probably have an env var called $VERSION which you set to either '.min' or '', and then use that in your string which includes the JS
23:51 < chilts> e.g. jquery-1.8.1$VERSION.js
23:51 < chilts> ok, maybe use $MIN instead of $VERSION :)
23:52 < chilts> jquery-1.8.1$MIN.js
23:52 < chilts> which uses jquery-1.8.1.js and jquery-1.8.1.min.js
23:52 < chilts> or words to that effect
23:52 < octane--> chilts: okay thanks... a little trickier for us since we call js files via index.html in a static manner
23:53 < chilts> if ( $MIN ) include this.js else include this.min.js
23:53 < chilts> etc
23:53 < chilts> I'm sure you can figure it out from here :)
23:53 < chilts> ok, if index.html is static, then yeah, you have problems
23:53 < chilts> however, there are other ways around it
23:55 < rvagg> octane--: what server? one of my sites uses server-side-includes (Apache) to achieve a similar effect, in my case I keep script & CSS files versioned with long expiry times and update SSI included script and CSS tags
23:56 < rvagg> I imagine other web servers can do similar things with static files
23:56 < octane--> rvagg:  yah nginx
23:56 < octane--> im sure i can... we probably need to move toward a more fluid index.* solution so that it takes into account env
23:57 < rvagg> mmm... unfortunately I'm not hip enough to know much about configuring nginx
23:57 < octane--> lol
23:58 < octane--> configuring it for ssi should be simple
23:58 < octane--> like my days of shtml lol
23:58 <@konobi> rvagg: varnish and edge-side-includes are pretty sweet too
--- Log closed Tue Sep 04 00:00:17 2012
